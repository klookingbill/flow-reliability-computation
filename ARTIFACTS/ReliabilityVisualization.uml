<?xml version="1.0" encoding="UTF-8"?>
<xmi:XMI xmi:version="20131001" xmlns:xmi="http://www.omg.org/spec/XMI/20131001" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:UMLLabProfile="http:///schemas/UMLLabProfile/NS/0" xmlns:ecore="http://www.eclipse.org/emf/2002/Ecore" xmlns:uml="http://www.eclipse.org/uml2/5.0.0/UML" xsi:schemaLocation="http:///schemas/UMLLabProfile/NS/0 pathmap://UMLLAB_PROFILES/UMLLab.profile.uml#UMLLabProfile-Annotation_2-UMLLabProfile">
  <uml:Model xmi:id="_XcyhEKgmEe-9tYVtpMatrg" name="ReliabilityVisualization">
    <eAnnotations xmi:id="_Xhpy8KgmEe-9tYVtpMatrg" source="http://ns.yatta.de/umllab">
      <contents xmi:type="ecore:EAnnotation" xmi:id="_Xhpy8agmEe-9tYVtpMatrg" source="codegen">
        <details xmi:id="_Xhpy8qgmEe-9tYVtpMatrg" key="codegenDirectory" value="/cs2820-fall24/src"/>
        <details xmi:id="_ad6IsKgmEe-9tYVtpMatrg" key="AssociatedSourceCode" value="/cs2820-fall24/src/edu/uiowa/cs/warp/AbstractMap.java;2633489473/1;/cs2820-fall24/src/edu/uiowa/cs/warp/Activation.java;3634548837/1;/cs2820-fall24/src/edu/uiowa/cs/warp/Activations.java;2300806511/1;/cs2820-fall24/src/edu/uiowa/cs/warp/BasicPoset.java;268475576/1;/cs2820-fall24/src/edu/uiowa/cs/warp/ChannelAnalysis.java;1217720653/1;/cs2820-fall24/src/edu/uiowa/cs/warp/ChannelVisualization.java;2873127052/1;/cs2820-fall24/src/edu/uiowa/cs/warp/Channels.java;3701064188/1;/cs2820-fall24/src/edu/uiowa/cs/warp/CodeFragment.java;2722026516/1;/cs2820-fall24/src/edu/uiowa/cs/warp/CombinedActivation.java;3978818808/1;/cs2820-fall24/src/edu/uiowa/cs/warp/CommunicationGraph.java;724670632/1;/cs2820-fall24/src/edu/uiowa/cs/warp/ConnectivityPoset.java;2099482678/1;/cs2820-fall24/src/edu/uiowa/cs/warp/DeadlineComparator.java;492899634/1;/cs2820-fall24/src/edu/uiowa/cs/warp/Description.java;2596849957/1;/cs2820-fall24/src/edu/uiowa/cs/warp/Edge.java;1242144003/1;/cs2820-fall24/src/edu/uiowa/cs/warp/FileManager.java;1791012323/1;/cs2820-fall24/src/edu/uiowa/cs/warp/Flow.java;3107512261/1;/cs2820-fall24/src/edu/uiowa/cs/warp/FlowMap.java;3735737588/1;/cs2820-fall24/src/edu/uiowa/cs/warp/FlowNodeToActivationMap.java;4234899521/1;/cs2820-fall24/src/edu/uiowa/cs/warp/GraphViz.java;1071888484/1;/cs2820-fall24/src/edu/uiowa/cs/warp/GraphVizListener.java;2126849807/1;/cs2820-fall24/src/edu/uiowa/cs/warp/GuiVisualization.java;654882569/1;/cs2820-fall24/src/edu/uiowa/cs/warp/InputGraphFile.java;937049578/1;/cs2820-fall24/src/edu/uiowa/cs/warp/InstructionTimeSlot.java;3408505142/1;/cs2820-fall24/src/edu/uiowa/cs/warp/LatencyAnalysis.java;2064230864/1;/cs2820-fall24/src/edu/uiowa/cs/warp/LatencyVisualization.java;2426998793/1;/cs2820-fall24/src/edu/uiowa/cs/warp/LatestReleaseTimeComparator.java;1106993157/1;/cs2820-fall24/src/edu/uiowa/cs/warp/MaxPhaseComparator.java;1745026972/1;/cs2820-fall24/src/edu/uiowa/cs/warp/Node.java;1243472081/1;/cs2820-fall24/src/edu/uiowa/cs/warp/NodeMap.java;2177811796/1;/cs2820-fall24/src/edu/uiowa/cs/warp/NonPreemptiveSchedule.java;387408079/1;/cs2820-fall24/src/edu/uiowa/cs/warp/NotImplentedVisualization.java;3646556153/1;/cs2820-fall24/src/edu/uiowa/cs/warp/PeriodComparator.java;3057078727/1;/cs2820-fall24/src/edu/uiowa/cs/warp/Poset.java;4263200805/1;/cs2820-fall24/src/edu/uiowa/cs/warp/PreemptiveSchedule.java;3080876127/1;/cs2820-fall24/src/edu/uiowa/cs/warp/PriorityComparator.java;349151360/1;/cs2820-fall24/src/edu/uiowa/cs/warp/Program.java;3432907115/1;/cs2820-fall24/src/edu/uiowa/cs/warp/ProgramSchedule.java;1770485609/1;/cs2820-fall24/src/edu/uiowa/cs/warp/ProgramVisualization.java;2898426153/1;/cs2820-fall24/src/edu/uiowa/cs/warp/ReleaseTimeComparator.java;2065273961/1;/cs2820-fall24/src/edu/uiowa/cs/warp/ReleaseTimeQueue.java;1776494724/1;/cs2820-fall24/src/edu/uiowa/cs/warp/ReliabilityAnalysis.java;3226899471/1;/cs2820-fall24/src/edu/uiowa/cs/warp/ReliabilityParameters.java;2925534695/1;/cs2820-fall24/src/edu/uiowa/cs/warp/ReliabilityRow.java;3195166460/1;/cs2820-fall24/src/edu/uiowa/cs/warp/ReliabilityTable.java;2918095589/1;/cs2820-fall24/src/edu/uiowa/cs/warp/ReliabilityVisualization.java;3316971108/1;/cs2820-fall24/src/edu/uiowa/cs/warp/ReportVisualization.java;2571131140/1;/cs2820-fall24/src/edu/uiowa/cs/warp/Row.java;3413533457/1;/cs2820-fall24/src/edu/uiowa/cs/warp/SchedulableObject.java;2451757979/1;/cs2820-fall24/src/edu/uiowa/cs/warp/SchedulableObjectQueue.java;3263525257/1;/cs2820-fall24/src/edu/uiowa/cs/warp/Schedule.java;3152618411/1;/cs2820-fall24/src/edu/uiowa/cs/warp/ScheduleTable.java;970860350/1;/cs2820-fall24/src/edu/uiowa/cs/warp/ScheduleTime.java;2579980776/1;/cs2820-fall24/src/edu/uiowa/cs/warp/SimulatorInput.java;3699590899/1;/cs2820-fall24/src/edu/uiowa/cs/warp/SortedPeriodQueue.java;3537725478/1;/cs2820-fall24/src/edu/uiowa/cs/warp/SystemAttributes.java;876440066/1;/cs2820-fall24/src/edu/uiowa/cs/warp/SystemFactory.java;4134708055/1;/cs2820-fall24/src/edu/uiowa/cs/warp/Table.java;2577872269/1;/cs2820-fall24/src/edu/uiowa/cs/warp/Visualization.java;2548788944/1;/cs2820-fall24/src/edu/uiowa/cs/warp/VisualizationFactory.java;3425614056/1;/cs2820-fall24/src/edu/uiowa/cs/warp/VisualizationImplementation.java;1230127619/1;/cs2820-fall24/src/edu/uiowa/cs/warp/VisualizationObject.java;1022989847/1;/cs2820-fall24/src/edu/uiowa/cs/warp/Warp.java;2989994810/1;/cs2820-fall24/src/edu/uiowa/cs/warp/WarpDSL.java;1986156920/1;/cs2820-fall24/src/edu/uiowa/cs/warp/WarpInterface.java;2926400465/1;/cs2820-fall24/src/edu/uiowa/cs/warp/WarpPoset.java;4000167019/1;/cs2820-fall24/src/edu/uiowa/cs/warp/WarpSystem.java;1603794739/1;/cs2820-fall24/test/edu/uiowa/cs/warp/WarpSystemTest.java;3696583149/1;/cs2820-fall24/src/edu/uiowa/cs/warp/WorkLoadDescription.java;756529537/1;/cs2820-fall24/src/edu/uiowa/cs/warp/WorkLoadListener.java;195958787/1;/cs2820-fall24/test/edu/uiowa/cs/warp/ReliabilityVisualizationTest.java;482028517/1;/cs2820-fall24/src/edu/uiowa/cs/warp/WorkLoad.java;3899137012/1;/cs2820-fall24/test/edu/uiowa/cs/warp/WorkLoadTest.java;3954342433/1;"/>
      </contents>
    </eAnnotations>
    <elementImport xmi:id="_ZVaPkKgmEe-9tYVtpMatrg">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
    </elementImport>
    <elementImport xmi:id="_ZVa2oKgmEe-9tYVtpMatrg">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#byte"/>
    </elementImport>
    <elementImport xmi:id="_ZVa2oagmEe-9tYVtpMatrg">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#char"/>
    </elementImport>
    <elementImport xmi:id="_ZVa2oqgmEe-9tYVtpMatrg">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
    </elementImport>
    <elementImport xmi:id="_ZVa2o6gmEe-9tYVtpMatrg">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#float"/>
    </elementImport>
    <elementImport xmi:id="_ZVa2pKgmEe-9tYVtpMatrg">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
    </elementImport>
    <elementImport xmi:id="_ZVa2pagmEe-9tYVtpMatrg">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
    </elementImport>
    <elementImport xmi:id="_ZVa2pqgmEe-9tYVtpMatrg">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#short"/>
    </elementImport>
    <elementImport xmi:id="_ZVa2p6gmEe-9tYVtpMatrg">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
    </elementImport>
    <packagedElement xmi:type="uml:Package" xmi:id="_ZUuTEKgmEe-9tYVtpMatrg" name="edu">
      <packagedElement xmi:type="uml:Package" xmi:id="_ZUu6IKgmEe-9tYVtpMatrg" name="uiowa">
        <packagedElement xmi:type="uml:Package" xmi:id="_ZUvhMKgmEe-9tYVtpMatrg" name="cs">
          <packagedElement xmi:type="uml:Package" xmi:id="_ZUxWYKgmEe-9tYVtpMatrg" name="warp">
            <packagedElement xmi:type="uml:Package" xmi:id="_ZVjZgKgmEe-9tYVtpMatrg" name="WarpDSL">
              <packagedElement xmi:type="uml:Class" xmi:id="_ZqlOUqgmEe-9tYVtpMatrg" name="InstructionParameters"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Package" xmi:id="_ZWaVIKgmEe-9tYVtpMatrg" name="SystemAttributes">
              <packagedElement xmi:type="uml:Enumeration" xmi:id="_ZrGywagmEe-9tYVtpMatrg" name="ScheduleChoices"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Package" xmi:id="_ZWemkKgmEe-9tYVtpMatrg" name="Visualization">
              <packagedElement xmi:type="uml:Enumeration" xmi:id="_ZrHZ0agmEe-9tYVtpMatrg" name="SystemChoices"/>
              <packagedElement xmi:type="uml:Enumeration" xmi:id="_ZrIA4agmEe-9tYVtpMatrg" name="WorkLoadChoices"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_ZYh1AKgmEe-9tYVtpMatrg" name="AbstractMap" isAbstract="true">
              <generalization xmi:id="_Zrvr8KgmEe-9tYVtpMatrg" general="_Zp_YcKgmEe-9tYVtpMatrg"/>
              <ownedAttribute xmi:id="_Zs14IKgmEe-9tYVtpMatrg" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_Zs2fMKgmEe-9tYVtpMatrg" value="1L"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Zt_usKgmEe-9tYVtpMatrg" name="AbstractMap" specification="_ZYmtgKgmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_Zt_usagmEe-9tYVtpMatrg" type="_ZYh1AKgmEe-9tYVtpMatrg" direction="return"/>
                <language>java</language>
                <body>super();&#xD;
		</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_ZYmtgKgmEe-9tYVtpMatrg" name="AbstractMap" method="_Zt_usKgmEe-9tYVtpMatrg">
                <eAnnotations xmi:id="_ZYnUkKgmEe-9tYVtpMatrg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_ZYnUkagmEe-9tYVtpMatrg" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_ZYnUkqgmEe-9tYVtpMatrg" type="_ZYh1AKgmEe-9tYVtpMatrg" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_ZYoisKgmEe-9tYVtpMatrg" name="Activation">
              <generalization xmi:id="_ZqE4AqgmEe-9tYVtpMatrg" general="_ZakcZKgmEe-9tYVtpMatrg"/>
              <ownedAttribute xmi:id="_Zs2fMagmEe-9tYVtpMatrg" name="coordinators" type="_Zp__gKgmEe-9tYVtpMatrg" isReadOnly="true" association="_ZvPr4KgmEe-9tYVtpMatrg"/>
              <ownedAttribute xmi:id="_Zs3GQagmEe-9tYVtpMatrg" name="edges" type="_Zp__gKgmEe-9tYVtpMatrg" isReadOnly="true" association="_ZvQS8KgmEe-9tYVtpMatrg"/>
              <ownedAttribute xmi:id="_Zs4UYKgmEe-9tYVtpMatrg" name="additionalScheduleTimes" type="_Zp__gKgmEe-9tYVtpMatrg" isReadOnly="true" association="_ZvQS86gmEe-9tYVtpMatrg"/>
              <ownedAttribute xmi:id="_Zs47cagmEe-9tYVtpMatrg" name="conflicts">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Zs47cqgmEe-9tYVtpMatrg" value="*"/>
              </ownedAttribute>
              <interfaceRealization xmi:id="_Zrw6E6gmEe-9tYVtpMatrg" client="_ZYoisKgmEe-9tYVtpMatrg" supplier="_Zrw6EagmEe-9tYVtpMatrg" contract="_Zrw6EagmEe-9tYVtpMatrg"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ZuAVwKgmEe-9tYVtpMatrg" name="Activation" specification="_ZYpw0KgmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_ZuAVwagmEe-9tYVtpMatrg" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ZuAVwqgmEe-9tYVtpMatrg" type="_ZYoisKgmEe-9tYVtpMatrg" direction="return"/>
                <language>java</language>
                <body>super();&#xD;
		setName(name);&#xD;
		this.edges = new ArrayList&lt;Edge>();&#xD;
		this.coordinators = new ArrayList&lt;String>();&#xD;
		this.conflicts = new HashSet&lt;String>();&#xD;
		this.additionalScheduleTimes = new ArrayList&lt;ScheduleTime>();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ZuAVw6gmEe-9tYVtpMatrg" name="Activation" specification="_ZqB0sKgmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_ZuAVxKgmEe-9tYVtpMatrg" name="elem" type="_ZYoisKgmEe-9tYVtpMatrg"/>
                <ownedParameter xmi:id="_ZuAVxagmEe-9tYVtpMatrg" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ZuAVxqgmEe-9tYVtpMatrg" type="_ZYoisKgmEe-9tYVtpMatrg" direction="return"/>
                <language>java</language>
                <body>super(elem, time);&#xD;
		this.edges = new ArrayList&lt;Edge>();&#xD;
		this.edges.addAll(elem.getEdges());&#xD;
		this.coordinators = new ArrayList&lt;String>();&#xD;
		this.coordinators.addAll(elem.getCoordinators());&#xD;
		// conflicts = new Set&lt;String>();&#xD;
		this.conflicts = new HashSet&lt;String>();&#xD;
		this.conflicts.addAll(elem.getConflicts());&#xD;
		this.additionalScheduleTimes = new ArrayList&lt;ScheduleTime>();&#xD;
		this.additionalScheduleTimes.addAll(elem.getAdditionalScheduleTimes());&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ZuAVx6gmEe-9tYVtpMatrg" name="clone" specification="_ZYqX4KgmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_ZuAVyKgmEe-9tYVtpMatrg" type="_ZYoisKgmEe-9tYVtpMatrg" direction="return"/>
                <language>java</language>
                <body>var time = getLastUpdateTime();&#xD;
		var clone = new Activation(this, time);&#xD;
		return clone;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ZuAVyagmEe-9tYVtpMatrg" name="getEdgesByReleaseTime" specification="_ZYrmAKgmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_ZuAVyqgmEe-9tYVtpMatrg" type="_ZaVL0KgmEe-9tYVtpMatrg" direction="return"/>
                <language>java</language>
                <body>return new &#xD;
		SchedulableObjectQueue&lt;Edge>(new ReleaseTimeComparator&lt;Edge>(),this.edges);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ZuA80KgmEe-9tYVtpMatrg" name="getEdgesByLatestReleaseTime" specification="_ZYsNEagmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_ZuA80agmEe-9tYVtpMatrg" type="_ZaVL0KgmEe-9tYVtpMatrg" direction="return"/>
                <language>java</language>
                <body>return new &#xD;
		SchedulableObjectQueue&lt;Edge>(new LatestReleaseTimeComparator&lt;Edge>(),this.edges);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ZuA80qgmEe-9tYVtpMatrg" name="getEdgesByPeriod" specification="_ZYs0IagmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_ZuA806gmEe-9tYVtpMatrg" type="_ZaVL0KgmEe-9tYVtpMatrg" direction="return"/>
                <language>java</language>
                <body>return new &#xD;
		SchedulableObjectQueue&lt;Edge>(new PeriodComparator&lt;Edge>(),this.edges);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ZuA81KgmEe-9tYVtpMatrg" name="getEdgesByDeadline" specification="_ZYtbMagmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_ZuA81agmEe-9tYVtpMatrg" type="_ZaVL0KgmEe-9tYVtpMatrg" direction="return"/>
                <language>java</language>
                <body>return new &#xD;
		SchedulableObjectQueue&lt;Edge>(new DeadlineComparator&lt;Edge>(),this.edges);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ZuA81qgmEe-9tYVtpMatrg" name="getEdgesByPriority" specification="_ZYuCQagmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_ZuA816gmEe-9tYVtpMatrg" type="_ZaVL0KgmEe-9tYVtpMatrg" direction="return"/>
                <language>java</language>
                <body>return new &#xD;
			SchedulableObjectQueue&lt;Edge>(new PriorityComparator&lt;Edge>(),this.edges);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ZuA82KgmEe-9tYVtpMatrg" name="addEdges" specification="_ZryIMKgmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_ZuA82agmEe-9tYVtpMatrg" name="edges" type="_Zp__gKgmEe-9tYVtpMatrg"/>
                <language>java</language>
                <body>this.edges.addAll(edges);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ZuA82qgmEe-9tYVtpMatrg" name="addEdge" specification="_ZqDC0agmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_ZuA826gmEe-9tYVtpMatrg" name="edge" type="_ZZMjY6gmEe-9tYVtpMatrg"/>
                <language>java</language>
                <body>this.edges.add(edge);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ZuA83KgmEe-9tYVtpMatrg" name="increaseEdgePhases" specification="_ZYupUagmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_ZuA83agmEe-9tYVtpMatrg" name="additionalOffset">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>if (additionalOffset > 0) { // make sure increase is needed&#xD;
			for (Edge edge: this.edges) {&#xD;
				var oldPhase = edge.getPhase();&#xD;
				edge.setPhase(oldPhase+additionalOffset);&#xD;
			}&#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ZuA83qgmEe-9tYVtpMatrg" name="updatePriorityAndRelease" specification="_ZYupU6gmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_ZuA836gmEe-9tYVtpMatrg" name="currentTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var lastUpdateTime = getLastUpdateTime();&#xD;
		if (currentTime >= lastUpdateTime) {&#xD;
			for(Edge edge: edges) {&#xD;
				edge.setNextReleaseTime(currentTime);&#xD;
			}&#xD;
			&#xD;
			/* get the edges with earliest release time and &#xD;
			 * highest priority ==> get head of the queue just built&#xD;
			 */&#xD;
			var edgesByReleaseTime = getEdgesByReleaseTime();&#xD;
			var firstEdge = edgesByReleaseTime.element();&#xD;
			setPhase(firstEdge.getPhase()); &#xD;
			var edgesByPeriod = getEdgesByPeriod();&#xD;
			firstEdge = edgesByPeriod.element();&#xD;
			setPeriod(firstEdge.getPeriod()); // shortest period &#xD;
			var edgesByDeadline = getEdgesByDeadline();&#xD;
			firstEdge = edgesByDeadline.element();&#xD;
			setDeadline(firstEdge.getDeadline()); // earliest deadline&#xD;
			var edgesByPrioriy = getEdgesByPriority();&#xD;
			firstEdge = edgesByPrioriy.element();&#xD;
			setPriority(firstEdge.getPriority());&#xD;
			&#xD;
			/* With the partition scheduling parameters set to match  &#xD;
			 * the highest priority edge with respect to the parameter, &#xD;
			 * we can now set the next release time based on the&#xD;
			 * current time.&#xD;
			 * */&#xD;
			setNextReleaseTime(currentTime);&#xD;
			&#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ZuBj4KgmEe-9tYVtpMatrg" name="addConflict" specification="_ZYvQYKgmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_ZuBj4agmEe-9tYVtpMatrg" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>conflicts.add(name);&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ZuBj4qgmEe-9tYVtpMatrg" name="addConflicts" specification="_ZryvQKgmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_ZuBj46gmEe-9tYVtpMatrg" name="conflicts" type="_ZqBNo6gmEe-9tYVtpMatrg"/>
                <language>java</language>
                <body>this.conflicts.addAll(conflicts);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ZuBj5KgmEe-9tYVtpMatrg" name="addCoordinator" specification="_ZYvQYqgmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_ZuBj5agmEe-9tYVtpMatrg" name="coordinator">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>coordinators.add(coordinator);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ZuBj5qgmEe-9tYVtpMatrg" name="addCoordinators" specification="_ZrzWUKgmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_ZuBj56gmEe-9tYVtpMatrg" name="coordinators" type="_Zp__gKgmEe-9tYVtpMatrg"/>
                <language>java</language>
                <body>this.coordinators.addAll(coordinators);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ZuBj6KgmEe-9tYVtpMatrg" name="addScheduleTimes" specification="_Zrz9YKgmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_ZuBj6agmEe-9tYVtpMatrg" name="scheduleTime" type="_Zp__gKgmEe-9tYVtpMatrg"/>
                <language>java</language>
                <body>this.additionalScheduleTimes.addAll(scheduleTime);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ZuBj6qgmEe-9tYVtpMatrg" name="getNextScheduleTime" specification="_ZYv3cKgmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_ZuBj66gmEe-9tYVtpMatrg" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ZuBj7KgmEe-9tYVtpMatrg" type="_Za6apqgmEe-9tYVtpMatrg" direction="return"/>
                <language>java</language>
                <body>var result = new ScheduleTime(Integer.MAX_VALUE, Integer.MAX_VALUE);&#xD;
		var moreScheduleTimes = getAdditionalScheduleTimes();&#xD;
		Iterator&lt;ScheduleTime> iter = moreScheduleTimes.iterator();&#xD;
		while (iter.hasNext() ) {&#xD;
			var next = iter.next();&#xD;
			if (next.getStartTime() > time) {&#xD;
				result = next;&#xD;
				break;&#xD;
			}&#xD;
		}&#xD;
		return result;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ZuBj7agmEe-9tYVtpMatrg" name="getMatchingEndTime" specification="_ZYv3cqgmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_ZuBj7qgmEe-9tYVtpMatrg" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ZuBj76gmEe-9tYVtpMatrg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var result = Integer.MAX_VALUE;&#xD;
		var moreScheduleTimes = getAdditionalScheduleTimes();&#xD;
		Iterator&lt;ScheduleTime> iter = moreScheduleTimes.iterator();&#xD;
		// var nextEndTime = time;&#xD;
		while (iter.hasNext()) { //  &amp;&amp; nextEndTime &lt;= time  ) {&#xD;
			// nextEndTime = iter.next().getEndTime();&#xD;
			var scheduleTime = iter.next();&#xD;
			if (time == scheduleTime.getStartTime()) {&#xD;
				result = scheduleTime.getEndTime();&#xD;
				break;&#xD;
			}&#xD;
		}&#xD;
		&#xD;
		return result;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ZuBj8KgmEe-9tYVtpMatrg" name="getNextStartTime" specification="_ZYv3dagmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_ZuBj8agmEe-9tYVtpMatrg" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ZuBj8qgmEe-9tYVtpMatrg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var moreScheduleTimes = getAdditionalScheduleTimes();&#xD;
		Iterator&lt;ScheduleTime> iter = moreScheduleTimes.iterator();&#xD;
		var nextStartTime = time;&#xD;
		while (iter.hasNext() &amp;&amp; nextStartTime &lt;= time  ) {&#xD;
			nextStartTime = iter.next().getStartTime();&#xD;
		}&#xD;
		if (nextStartTime == time) {&#xD;
			/* no next StartTime found &#xD;
			 * could be an error &#xD;
			 */&#xD;
			nextStartTime = Integer.MAX_VALUE;&#xD;
			&#xD;
		}&#xD;
		return nextStartTime;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ZuCK8KgmEe-9tYVtpMatrg" name="getNextEndTime" specification="_ZYwegqgmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_ZuCK8agmEe-9tYVtpMatrg" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ZuCK8qgmEe-9tYVtpMatrg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var moreScheduleTimes = getAdditionalScheduleTimes();&#xD;
		Iterator&lt;ScheduleTime> iter = moreScheduleTimes.iterator();&#xD;
		var nextEndTime = time;&#xD;
		while (iter.hasNext() &amp;&amp; nextEndTime &lt;= time  ) {&#xD;
			nextEndTime = iter.next().getEndTime();&#xD;
		}&#xD;
		if (nextEndTime == time) {&#xD;
			/* no next StartTime found &#xD;
			 * could be an error &#xD;
			 */&#xD;
			nextEndTime = Integer.MAX_VALUE;&#xD;
			&#xD;
		}&#xD;
		return nextEndTime;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ZuCK86gmEe-9tYVtpMatrg" name="getNumEdges" specification="_ZYwehagmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_ZuCK9KgmEe-9tYVtpMatrg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>return edges.size();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ZuCK9agmEe-9tYVtpMatrg" name="compareTo" specification="_ZqDC1KgmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_ZuCK9qgmEe-9tYVtpMatrg" name="obj" type="_ZYoisKgmEe-9tYVtpMatrg"/>
                <ownedParameter xmi:id="_ZuCK96gmEe-9tYVtpMatrg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>return priorityComparison(obj);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ZuCK-KgmEe-9tYVtpMatrg" name="conflictExists" specification="_ZqDp5KgmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_ZuCK-agmEe-9tYVtpMatrg" name="obj" type="_ZYoisKgmEe-9tYVtpMatrg"/>
                <ownedParameter xmi:id="_ZuCK-qgmEe-9tYVtpMatrg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>Boolean result = false;&#xD;
		/* create a copy of this.conflicts and obj.conflicts&#xD;
		 * and then check the intersection of the two &#xD;
		 * sets. &#xD;
		 * Conflicts exists if |intersection| > 0&#xD;
		 */&#xD;
		var conflicts = new HashSet&lt;String>();&#xD;
		conflicts.addAll(getConflicts());&#xD;
		var objConflicts = new HashSet&lt;String>();&#xD;
		objConflicts.addAll(obj.getConflicts());&#xD;
		conflicts.retainAll(objConflicts); // get the intersection&#xD;
		if (conflicts.size() > 0) {&#xD;
			result = true; // |intersection| > 0 => conflict&#xD;
		}&#xD;
		return result;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ZuCK-6gmEe-9tYVtpMatrg" name="canCombine" specification="_ZqDp56gmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_ZuCK_KgmEe-9tYVtpMatrg" name="a2" type="_ZYoisKgmEe-9tYVtpMatrg"/>
                <ownedParameter xmi:id="_ZuCK_agmEe-9tYVtpMatrg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>Boolean result = false;&#xD;
		/* make sure a2 is not null */&#xD;
		if (a2 != null) {&#xD;
			var newEntryCoordinator = a2.getCoordinators().get(0);&#xD;
			if (getCoordinators().contains(newEntryCoordinator)) {&#xD;
				/* The (first) coordinator of the newEntry&#xD;
				 * is in the list of coordinators of the prior entry.&#xD;
				 * Thus, these two can be combined for efficiency.&#xD;
				 */&#xD;
				result = true;&#xD;
			}&#xD;
		}&#xD;
		return result;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ZuCK_qgmEe-9tYVtpMatrg" name="getDelta" specification="_ZYxFkKgmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_ZuCK_6gmEe-9tYVtpMatrg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>Integer maxTxPerLink = 0;&#xD;
		for (Edge edge: getEdges()) {&#xD;
			maxTxPerLink = Math.max(maxTxPerLink, edge.getNumTx());&#xD;
		}&#xD;
		return maxTxPerLink;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ZuCLAKgmEe-9tYVtpMatrg" name="getExecutionDuration" specification="_ZYxFkqgmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_ZuCLAagmEe-9tYVtpMatrg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>/* Each edge requires delta time units. However, assuming &#xD;
		 * the WARP pipeline scheduling approach, the activation only&#xD;
		 * executes for Delta + (numEdges - 1) time units, because&#xD;
		 * a new edge will be added to the pipeline every time unit&#xD;
		 * it executes.&#xD;
		 */&#xD;
		return getDelta() + (getNumEdges() - 1);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ZuCLAqgmEe-9tYVtpMatrg" name="getCombinedExecutionDuration" specification="_ZqEQ8KgmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_ZuCLA6gmEe-9tYVtpMatrg" name="a2" type="_ZYoisKgmEe-9tYVtpMatrg"/>
                <ownedParameter xmi:id="_ZuCLBKgmEe-9tYVtpMatrg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>/* Each edge requires delta time units. However, assuming &#xD;
		 * the WARP pipeline scheduling approach, the activation only&#xD;
		 * executes for Delta + (numEdges - 1) time units, because&#xD;
		 * a new edge will be added to the pipeline every time unit&#xD;
		 * it executes.&#xD;
		 * So, if combined, we consider edges in both activations&#xD;
		 */&#xD;
		var result = 0;&#xD;
		if (a2 != null) {&#xD;
			result = Math.max(getDelta(), a2.getDelta()) + (getNumEdges() + a2.getNumEdges() - 1);&#xD;
		}&#xD;
		return result;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ZuCyAKgmEe-9tYVtpMatrg" name="printAll" specification="_ZYxFlKgmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_ZuCyAagmEe-9tYVtpMatrg" name="headerMsg">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>System.out.printf(&quot;\n%s&quot;,headerMsg);&#xD;
		this.printAll();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ZuCyAqgmEe-9tYVtpMatrg" name="printAll" specification="_ZYxsoKgmEe-9tYVtpMatrg">
                <language>java</language>
                <body>super.print();&#xD;
		printEdges(&quot;Parition &quot;+getName(),new ReleaseTimeQueue&lt;Edge>(edges));&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ZuCyA6gmEe-9tYVtpMatrg" name="printEdges" specification="_ZqEQ86gmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_ZuCyBKgmEe-9tYVtpMatrg" name="header">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ZuCyBagmEe-9tYVtpMatrg" name="edges" type="_ZaT9sKgmEe-9tYVtpMatrg"/>
                <language>java</language>
                <body>System.out.printf(&quot;\n%s\nEdges in edge list:&quot;, header);&#xD;
		printEdges(edges);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ZuCyBqgmEe-9tYVtpMatrg" name="printEdges" specification="_ZqEQ96gmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_ZuCyB6gmEe-9tYVtpMatrg" name="edges" type="_ZaT9sKgmEe-9tYVtpMatrg"/>
                <language>java</language>
                <body>var q = new ReleaseTimeQueue&lt;Edge>();&#xD;
 		q.addAll(edges);&#xD;
 		Iterator&lt;Edge> qValue = q.iterator();&#xD;
         while (qValue.hasNext()) {&#xD;
         	var next = q.poll();&#xD;
         	next.print();&#xD;
         }&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_ZYpw0KgmEe-9tYVtpMatrg" name="Activation" visibility="package" method="_ZuAVwKgmEe-9tYVtpMatrg">
                <eAnnotations xmi:id="_ZYpw0qgmEe-9tYVtpMatrg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_ZYpw06gmEe-9tYVtpMatrg" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_ZYpw0agmEe-9tYVtpMatrg" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ZYpw1KgmEe-9tYVtpMatrg" type="_ZYoisKgmEe-9tYVtpMatrg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_ZYqX4KgmEe-9tYVtpMatrg" name="clone" method="_ZuAVx6gmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_ZqCbxagmEe-9tYVtpMatrg" type="_ZYoisKgmEe-9tYVtpMatrg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_ZYrmAKgmEe-9tYVtpMatrg" name="getEdgesByReleaseTime" method="_ZuAVyagmEe-9tYVtpMatrg">
                <ownedComment xmi:id="_ZumysKgmEe-9tYVtpMatrg">
                  <body>@return the edgesByReleaseTime</body>
                </ownedComment>
                <ownedParameter xmi:id="_ZqCbxqgmEe-9tYVtpMatrg" type="_ZaVL0KgmEe-9tYVtpMatrg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_ZYsNEagmEe-9tYVtpMatrg" name="getEdgesByLatestReleaseTime" method="_ZuA80KgmEe-9tYVtpMatrg">
                <ownedComment xmi:id="_ZunZwKgmEe-9tYVtpMatrg">
                  <body>@return the edgesByReleaseTime</body>
                </ownedComment>
                <ownedParameter xmi:id="_ZqCbx6gmEe-9tYVtpMatrg" type="_ZaVL0KgmEe-9tYVtpMatrg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_ZYs0IagmEe-9tYVtpMatrg" name="getEdgesByPeriod" method="_ZuA80qgmEe-9tYVtpMatrg">
                <ownedComment xmi:id="_ZunZwagmEe-9tYVtpMatrg">
                  <body>@return the edgesByPeriod</body>
                </ownedComment>
                <ownedParameter xmi:id="_ZqCbyKgmEe-9tYVtpMatrg" type="_ZaVL0KgmEe-9tYVtpMatrg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_ZYtbMagmEe-9tYVtpMatrg" name="getEdgesByDeadline" method="_ZuA81KgmEe-9tYVtpMatrg">
                <ownedComment xmi:id="_ZunZwqgmEe-9tYVtpMatrg">
                  <body>@return the edgesByDeadline</body>
                </ownedComment>
                <ownedParameter xmi:id="_ZqCbyagmEe-9tYVtpMatrg" type="_ZaVL0KgmEe-9tYVtpMatrg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_ZYuCQagmEe-9tYVtpMatrg" name="getEdgesByPriority" method="_ZuA81qgmEe-9tYVtpMatrg">
                <ownedComment xmi:id="_ZunZw6gmEe-9tYVtpMatrg">
                  <body>@return the edgesByPriority</body>
                </ownedComment>
                <ownedParameter xmi:id="_ZqDC0KgmEe-9tYVtpMatrg" type="_ZaVL0KgmEe-9tYVtpMatrg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_ZYupUagmEe-9tYVtpMatrg" name="increaseEdgePhases" method="_ZuA83KgmEe-9tYVtpMatrg">
                <ownedComment xmi:id="_ZunZxKgmEe-9tYVtpMatrg">
                  <body>Increase the phase of each edge by the input parameter.&#xD;
	 * &#xD;
	 * @param additionalOffset</body>
                </ownedComment>
                <ownedParameter xmi:id="_ZYupUqgmEe-9tYVtpMatrg" name="additionalOffset">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_ZYupU6gmEe-9tYVtpMatrg" name="updatePriorityAndRelease" method="_ZuA83qgmEe-9tYVtpMatrg">
                <ownedComment xmi:id="_ZunZxagmEe-9tYVtpMatrg">
                  <body>Updates priority and release time of &#xD;
	 * this activation.&lt;br>&#xD;
	 * &#xD;
	 * The priority of the element is equal to the&#xD;
	 * edge priority with the earliest release time.&#xD;
	 * Thus, it can change dynamically. &lt;br>&#xD;
	 *&#xD;
	 * The release time of the element is equal to the&#xD;
	 * edge priority with the earliest release time.&#xD;
	 * Thus, it can change dynamically. &lt;br></body>
                </ownedComment>
                <ownedParameter xmi:id="_ZYupVKgmEe-9tYVtpMatrg" name="currentTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_ZYvQYKgmEe-9tYVtpMatrg" name="addConflict" method="_ZuBj4KgmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_ZYvQYagmEe-9tYVtpMatrg" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_ZYvQYqgmEe-9tYVtpMatrg" name="addCoordinator" method="_ZuBj5KgmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_ZYvQY6gmEe-9tYVtpMatrg" name="coordinator">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_ZYv3cKgmEe-9tYVtpMatrg" name="getNextScheduleTime" method="_ZuBj6qgmEe-9tYVtpMatrg">
                <ownedComment xmi:id="_ZunZx6gmEe-9tYVtpMatrg">
                  <body>getNextScheduleTime returns the next entry in the additional&#xD;
	 * schedule time array list whose start time is greater than the input&#xD;
	 * parameter time. MAX_INT is returned if such a time&#xD;
	 * is not found&#xD;
	 * @param next&#xD;
	 * @param time&#xD;
	 * @return next schedule time or MAX_VALUEs if not found</body>
                </ownedComment>
                <ownedParameter xmi:id="_ZYv3cagmEe-9tYVtpMatrg" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ZqDC06gmEe-9tYVtpMatrg" type="_Za6apqgmEe-9tYVtpMatrg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_ZYv3cqgmEe-9tYVtpMatrg" name="getMatchingEndTime" method="_ZuBj7agmEe-9tYVtpMatrg">
                <ownedComment xmi:id="_ZunZyKgmEe-9tYVtpMatrg">
                  <body>getMatchingEndTime returns the next end time in the additional&#xD;
	 * schedule time array list that is greater than the input&#xD;
	 * parameter time. MAX_INT is returned if such a time&#xD;
	 * is not found&#xD;
	 * @param next&#xD;
	 * @param time&#xD;
	 * @return next start time or MAX_VALUE if not found</body>
                </ownedComment>
                <ownedParameter xmi:id="_ZYv3c6gmEe-9tYVtpMatrg" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ZYv3dKgmEe-9tYVtpMatrg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_ZYv3dagmEe-9tYVtpMatrg" name="getNextStartTime" method="_ZuBj8KgmEe-9tYVtpMatrg">
                <ownedComment xmi:id="_ZunZyagmEe-9tYVtpMatrg">
                  <body>getNextStartTime returns the next start time in the additional&#xD;
	 * schedule time array list that is greater than the input&#xD;
	 * parameter time. MAX_INT is returned if such a time&#xD;
	 * is not found&#xD;
	 * @param next&#xD;
	 * @param time&#xD;
	 * @return next start time or MAX_VALUE if not found</body>
                </ownedComment>
                <ownedParameter xmi:id="_ZYwegKgmEe-9tYVtpMatrg" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ZYwegagmEe-9tYVtpMatrg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_ZYwegqgmEe-9tYVtpMatrg" name="getNextEndTime" method="_ZuCK8KgmEe-9tYVtpMatrg">
                <ownedComment xmi:id="_ZunZyqgmEe-9tYVtpMatrg">
                  <body>getNextEndTime returns the next end time in the additional&#xD;
	 * schedule time array list that is greater than the input&#xD;
	 * parameter time. MAX_INT is returned if such a time&#xD;
	 * is not found&#xD;
	 * @param next&#xD;
	 * @param time&#xD;
	 * @return next start time or MAX_VALUE if not found</body>
                </ownedComment>
                <ownedParameter xmi:id="_ZYweg6gmEe-9tYVtpMatrg" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ZYwehKgmEe-9tYVtpMatrg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_ZYwehagmEe-9tYVtpMatrg" name="getNumEdges" method="_ZuCK86gmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_ZYwehqgmEe-9tYVtpMatrg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_ZYxFkKgmEe-9tYVtpMatrg" name="getDelta" method="_ZuCK_qgmEe-9tYVtpMatrg">
                <ownedComment xmi:id="_ZunZy6gmEe-9tYVtpMatrg">
                  <body>Returns the maximum number of transmissions&#xD;
	 * needed on any link in activation to ensure e2e &#xD;
	 * reliability is met.</body>
                </ownedComment>
                <ownedParameter xmi:id="_ZYxFkagmEe-9tYVtpMatrg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_ZYxFkqgmEe-9tYVtpMatrg" name="getExecutionDuration" method="_ZuCLAKgmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_ZYxFk6gmEe-9tYVtpMatrg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_ZYxFlKgmEe-9tYVtpMatrg" name="printAll" method="_ZuCyAKgmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_ZYxFlagmEe-9tYVtpMatrg" name="headerMsg">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_ZYxsoKgmEe-9tYVtpMatrg" name="printAll" method="_ZuCyAqgmEe-9tYVtpMatrg"/>
              <ownedOperation xmi:id="_ZqB0sKgmEe-9tYVtpMatrg" name="Activation" visibility="package" method="_ZuAVw6gmEe-9tYVtpMatrg">
                <eAnnotations xmi:id="_ZqCbwqgmEe-9tYVtpMatrg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_ZqCbw6gmEe-9tYVtpMatrg" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_ZqCbwKgmEe-9tYVtpMatrg" name="elem" type="_ZYoisKgmEe-9tYVtpMatrg"/>
                <ownedParameter xmi:id="_ZqCbwagmEe-9tYVtpMatrg" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ZqCbxKgmEe-9tYVtpMatrg" type="_ZYoisKgmEe-9tYVtpMatrg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_ZqDC0agmEe-9tYVtpMatrg" name="addEdge" method="_ZuA82qgmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_ZqDC0qgmEe-9tYVtpMatrg" name="edge" type="_ZZMjY6gmEe-9tYVtpMatrg"/>
              </ownedOperation>
              <ownedOperation xmi:id="_ZqDC1KgmEe-9tYVtpMatrg" name="compareTo" method="_ZuCK9agmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_ZqDC1agmEe-9tYVtpMatrg" name="obj" type="_ZYoisKgmEe-9tYVtpMatrg"/>
                <ownedParameter xmi:id="_ZqDp4KgmEe-9tYVtpMatrg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_ZqDp5KgmEe-9tYVtpMatrg" name="conflictExists" method="_ZuCK-KgmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_ZqDp5agmEe-9tYVtpMatrg" name="obj" type="_ZYoisKgmEe-9tYVtpMatrg"/>
                <ownedParameter xmi:id="_ZqDp5qgmEe-9tYVtpMatrg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_ZqDp56gmEe-9tYVtpMatrg" name="canCombine" method="_ZuCK-6gmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_ZqDp6KgmEe-9tYVtpMatrg" name="a2" type="_ZYoisKgmEe-9tYVtpMatrg"/>
                <ownedParameter xmi:id="_ZqDp6agmEe-9tYVtpMatrg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_ZqEQ8KgmEe-9tYVtpMatrg" name="getCombinedExecutionDuration" method="_ZuCLAqgmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_ZqEQ8agmEe-9tYVtpMatrg" name="a2" type="_ZYoisKgmEe-9tYVtpMatrg"/>
                <ownedParameter xmi:id="_ZqEQ8qgmEe-9tYVtpMatrg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_ZqEQ86gmEe-9tYVtpMatrg" name="printEdges" visibility="private" method="_ZuCyA6gmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_ZqEQ9KgmEe-9tYVtpMatrg" name="header">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ZqEQ9agmEe-9tYVtpMatrg" name="edges" type="_ZaT9sKgmEe-9tYVtpMatrg"/>
              </ownedOperation>
              <ownedOperation xmi:id="_ZqEQ96gmEe-9tYVtpMatrg" name="printEdges" visibility="private" method="_ZuCyBqgmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_ZqE4AKgmEe-9tYVtpMatrg" name="edges" type="_ZaT9sKgmEe-9tYVtpMatrg"/>
              </ownedOperation>
              <ownedOperation xmi:id="_ZryIMKgmEe-9tYVtpMatrg" name="addEdges" method="_ZuA82KgmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_ZryIMagmEe-9tYVtpMatrg" name="edges" type="_Zp__gKgmEe-9tYVtpMatrg"/>
              </ownedOperation>
              <ownedOperation xmi:id="_ZryvQKgmEe-9tYVtpMatrg" name="addConflicts" method="_ZuBj4qgmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_ZryvQagmEe-9tYVtpMatrg" name="conflicts" type="_ZqBNo6gmEe-9tYVtpMatrg"/>
              </ownedOperation>
              <ownedOperation xmi:id="_ZrzWUKgmEe-9tYVtpMatrg" name="addCoordinators" method="_ZuBj5qgmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_ZrzWUagmEe-9tYVtpMatrg" name="coordinators" type="_Zp__gKgmEe-9tYVtpMatrg"/>
              </ownedOperation>
              <ownedOperation xmi:id="_Zrz9YKgmEe-9tYVtpMatrg" name="addScheduleTimes" method="_ZuBj6KgmEe-9tYVtpMatrg">
                <ownedComment xmi:id="_ZunZxqgmEe-9tYVtpMatrg">
                  <body>@param additionalScheduleTimes</body>
                </ownedComment>
                <ownedParameter xmi:id="_Zrz9YagmEe-9tYVtpMatrg" name="scheduleTime" type="_Zp__gKgmEe-9tYVtpMatrg"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_ZY1-EKgmEe-9tYVtpMatrg" name="Activations">
              <generalization xmi:id="_ZqGGIKgmEe-9tYVtpMatrg" general="_ZYh1AKgmEe-9tYVtpMatrg"/>
              <ownedAttribute xmi:id="_Zs-bAKgmEe-9tYVtpMatrg" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_Zs_CEKgmEe-9tYVtpMatrg" value="1L"/>
              </ownedAttribute>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_ZY2lIKgmEe-9tYVtpMatrg" name="BasicPoset">
              <ownedComment xmi:id="_ZunZzKgmEe-9tYVtpMatrg">
                <body>ConnectivityPoset extends Poset by selecting&#xD;
primary coordinator in the flow based on highest&#xD;
local connectivity.&#xD;
&#xD;
@author sgoddard</body>
              </ownedComment>
              <generalization xmi:id="_ZqGtNagmEe-9tYVtpMatrg" general="_ZZ4f4KgmEe-9tYVtpMatrg"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ZuCyCKgmEe-9tYVtpMatrg" name="BasicPoset" specification="_ZqGtMKgmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_ZuCyCagmEe-9tYVtpMatrg" name="workload" type="_Zbu6AqgmEe-9tYVtpMatrg"/>
                <ownedParameter xmi:id="_ZuCyCqgmEe-9tYVtpMatrg" type="_ZY2lIKgmEe-9tYVtpMatrg" direction="return"/>
                <language>java</language>
                <body>super(workload);&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_ZqGtMKgmEe-9tYVtpMatrg" name="BasicPoset" visibility="package" method="_ZuCyCKgmEe-9tYVtpMatrg">
                <eAnnotations xmi:id="_ZqGtMqgmEe-9tYVtpMatrg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_ZqGtM6gmEe-9tYVtpMatrg" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_ZqGtMagmEe-9tYVtpMatrg" name="workload" type="_Zbu6AqgmEe-9tYVtpMatrg"/>
                <ownedParameter xmi:id="_ZqGtNKgmEe-9tYVtpMatrg" type="_ZY2lIKgmEe-9tYVtpMatrg" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_ZY3MMKgmEe-9tYVtpMatrg" name="ChannelAnalysis">
              <ownedComment xmi:id="_ZunZzagmEe-9tYVtpMatrg">
                <body>@author sgoddard&#xD;
@version 1.4&#xD;
 *</body>
              </ownedComment>
              <ownedAttribute xmi:id="_Zs_CEagmEe-9tYVtpMatrg" name="program" visibility="private" type="_ZaCQ4KgmEe-9tYVtpMatrg" association="_ZvQS9qgmEe-9tYVtpMatrg"/>
              <ownedAttribute xmi:id="_Zs_pIKgmEe-9tYVtpMatrg" name="programTable" visibility="private" type="_ZaOeIKgmEe-9tYVtpMatrg" association="_ZvQ6AagmEe-9tYVtpMatrg"/>
              <ownedAttribute xmi:id="_Zs_pIqgmEe-9tYVtpMatrg" name="conflictExists" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ZuCyC6gmEe-9tYVtpMatrg" name="ChannelAnalysis" specification="_ZqHUQKgmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_ZuCyDKgmEe-9tYVtpMatrg" name="warp" type="_ZbdNMKgmEe-9tYVtpMatrg"/>
                <ownedParameter xmi:id="_ZuCyDagmEe-9tYVtpMatrg" type="_ZY3MMKgmEe-9tYVtpMatrg" direction="return"/>
                <language>java</language>
                <body>this.program = warp.toProgram();&#xD;
 this.programTable = program.getSchedule();&#xD;
 conflictExists = false;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ZuCyDqgmEe-9tYVtpMatrg" name="ChannelAnalysis" specification="_ZqHURagmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_ZuCyD6gmEe-9tYVtpMatrg" name="program" type="_ZaCQ4KgmEe-9tYVtpMatrg"/>
                <ownedParameter xmi:id="_ZuCyEKgmEe-9tYVtpMatrg" type="_ZY3MMKgmEe-9tYVtpMatrg" direction="return"/>
                <language>java</language>
                <body>this.program = program;&#xD;
 this.programTable = program.getSchedule();&#xD;
 conflictExists = false;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ZuDZEKgmEe-9tYVtpMatrg" name="isChannelConflict" specification="_ZY4aUKgmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_ZuDZEagmEe-9tYVtpMatrg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>return conflictExists;&#xD;
  </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_ZY4aUKgmEe-9tYVtpMatrg" name="isChannelConflict" method="_ZuDZEKgmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_ZY5BYKgmEe-9tYVtpMatrg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_ZqHUQKgmEe-9tYVtpMatrg" name="ChannelAnalysis" visibility="package" method="_ZuCyC6gmEe-9tYVtpMatrg">
                <eAnnotations xmi:id="_ZqHUQqgmEe-9tYVtpMatrg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_ZqHUQ6gmEe-9tYVtpMatrg" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_ZqHUQagmEe-9tYVtpMatrg" name="warp" type="_ZbdNMKgmEe-9tYVtpMatrg"/>
                <ownedParameter xmi:id="_ZqHURKgmEe-9tYVtpMatrg" type="_ZY3MMKgmEe-9tYVtpMatrg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_ZqHURagmEe-9tYVtpMatrg" name="ChannelAnalysis" visibility="package" method="_ZuCyDqgmEe-9tYVtpMatrg">
                <eAnnotations xmi:id="_ZqHUR6gmEe-9tYVtpMatrg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_ZqHUSKgmEe-9tYVtpMatrg" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_ZqHURqgmEe-9tYVtpMatrg" name="program" type="_ZaCQ4KgmEe-9tYVtpMatrg"/>
                <ownedParameter xmi:id="_ZqHUSagmEe-9tYVtpMatrg" type="_ZY3MMKgmEe-9tYVtpMatrg" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_ZY5ocKgmEe-9tYVtpMatrg" name="ChannelVisualization">
              <ownedComment xmi:id="_ZunZzqgmEe-9tYVtpMatrg">
                <body>ChannelVisualization creates the visualizations for the channel analysis of the WARP program.&#xD;
&lt;p>&#xD;
&#xD;
CS2820 Fall 2022 Project: Implement this class to create the file visualization that is requested&#xD;
in Warp.&#xD;
&#xD;
@author sgoddard&#xD;
@version 1.4&#xD;
 *</body>
              </ownedComment>
              <generalization xmi:id="_ZqH7VKgmEe-9tYVtpMatrg" general="_ZbJEIKgmEe-9tYVtpMatrg"/>
              <ownedAttribute xmi:id="_ZtAQMKgmEe-9tYVtpMatrg" name="SOURCE_SUFFIX" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_ZtAQMagmEe-9tYVtpMatrg" value="&quot;.ch&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_ZtAQMqgmEe-9tYVtpMatrg" name="OBJECT_NAME" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_ZtAQM6gmEe-9tYVtpMatrg" value="&quot;Channel Analysis&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_ZtA3QKgmEe-9tYVtpMatrg" name="warp" visibility="private" type="_ZbdNMKgmEe-9tYVtpMatrg" association="_ZvQ6BKgmEe-9tYVtpMatrg"/>
              <ownedAttribute xmi:id="_ZtA3QqgmEe-9tYVtpMatrg" name="ca" visibility="private" type="_ZY3MMKgmEe-9tYVtpMatrg" association="_ZvRhEagmEe-9tYVtpMatrg"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ZuDZEqgmEe-9tYVtpMatrg" name="ChannelVisualization" specification="_ZqHUSqgmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_ZuDZE6gmEe-9tYVtpMatrg" name="warp" type="_ZbdNMKgmEe-9tYVtpMatrg"/>
                <ownedParameter xmi:id="_ZuDZFKgmEe-9tYVtpMatrg" type="_ZY5ocKgmEe-9tYVtpMatrg" direction="return"/>
                <language>java</language>
                <body>super(new FileManager(), warp, SOURCE_SUFFIX);&#xD;
 this.warp = warp;&#xD;
 this.ca = warp.toChannelAnalysis();&#xD;
  </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_ZqHUSqgmEe-9tYVtpMatrg" name="ChannelVisualization" visibility="package" method="_ZuDZEqgmEe-9tYVtpMatrg">
                <eAnnotations xmi:id="_ZqH7UagmEe-9tYVtpMatrg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_ZqH7UqgmEe-9tYVtpMatrg" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_ZqH7UKgmEe-9tYVtpMatrg" name="warp" type="_ZbdNMKgmEe-9tYVtpMatrg"/>
                <ownedParameter xmi:id="_ZqH7U6gmEe-9tYVtpMatrg" type="_ZY5ocKgmEe-9tYVtpMatrg" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_ZY6PgKgmEe-9tYVtpMatrg" name="Channels">
              <ownedComment xmi:id="_ZunZz6gmEe-9tYVtpMatrg">
                <body>@author sgoddard&#xD;
@version 1.4&#xD;
 *</body>
              </ownedComment>
              <ownedAttribute xmi:id="_ZtBeUagmEe-9tYVtpMatrg" name="nChannels" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_ZtBeU6gmEe-9tYVtpMatrg" name="verbose" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_ZtBeVagmEe-9tYVtpMatrg" name="channelsAvailable" visibility="package" type="_Zp__gKgmEe-9tYVtpMatrg" association="_ZvRhFKgmEe-9tYVtpMatrg"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ZuDZGqgmEe-9tYVtpMatrg" name="Channels" specification="_ZY8Es6gmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_ZuDZG6gmEe-9tYVtpMatrg" name="nChannels">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ZuDZHKgmEe-9tYVtpMatrg" name="verbose">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ZuDZHagmEe-9tYVtpMatrg" type="_ZY6PgKgmEe-9tYVtpMatrg" direction="return"/>
                <language>java</language>
                <body>this.nChannels = nChannels;&#xD;
 this.verbose = verbose;&#xD;
 this.channelsAvailable = new ArrayList&lt;ChannelSet>();&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ZuDZHqgmEe-9tYVtpMatrg" name="getChannelSet" specification="_ZY8rwKgmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_ZuDZH6gmEe-9tYVtpMatrg" name="timeSlot">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ZuDZIKgmEe-9tYVtpMatrg" type="_ZqAmkagmEe-9tYVtpMatrg" direction="return"/>
                <language>java</language>
                <body>/* get the channel set for this timeSlot */&#xD;
 HashSet&lt;String> channelSet = new HashSet&lt;String>(channelsAvailable.get(timeSlot));&#xD;
 return channelSet;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ZuDZIagmEe-9tYVtpMatrg" name="addNewChannelSet" specification="_ZY9S0KgmEe-9tYVtpMatrg">
                <language>java</language>
                <body>var channels = new ChannelSet(nChannels);&#xD;
 channelsAvailable.add(channels);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ZuDZIqgmEe-9tYVtpMatrg" name="isEmpty" specification="_ZY9S0agmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_ZuDZI6gmEe-9tYVtpMatrg" name="timeSlot">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ZuDZJKgmEe-9tYVtpMatrg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>ChannelSet channelSet = channelsAvailable.get(timeSlot); // get the channel set for this&#xD;
                                                          // timeSlot&#xD;
 return channelSet.isEmpty(); // returns true channel set is empty and false if not&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ZuDZJagmEe-9tYVtpMatrg" name="removeChannel" specification="_ZY9S1KgmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_ZuDZJqgmEe-9tYVtpMatrg" name="timeSlot">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ZuDZJ6gmEe-9tYVtpMatrg" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ZuDZKKgmEe-9tYVtpMatrg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>Boolean result;&#xD;
 ChannelSet channels = channelsAvailable.get(timeSlot);&#xD;
 result = channels.remove(channel);&#xD;
 return result;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ZuDZKagmEe-9tYVtpMatrg" name="addChannel" specification="_ZY9S2KgmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_ZuDZKqgmEe-9tYVtpMatrg" name="timeSlot">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ZuDZK6gmEe-9tYVtpMatrg" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ZuDZLKgmEe-9tYVtpMatrg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>Boolean result;&#xD;
 ChannelSet channels = channelsAvailable.get(timeSlot); // get a pointer to the channel set&#xD;
 result = channels.add(channel); // remove the channel, returning the result&#xD;
 return result;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ZuEAIKgmEe-9tYVtpMatrg" name="getNumChannels" specification="_ZY-g8KgmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_ZuEAIagmEe-9tYVtpMatrg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>return nChannels;&#xD;
  </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_ZY8Es6gmEe-9tYVtpMatrg" name="Channels" visibility="package" method="_ZuDZGqgmEe-9tYVtpMatrg">
                <eAnnotations xmi:id="_ZY8EtqgmEe-9tYVtpMatrg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_ZY8Et6gmEe-9tYVtpMatrg" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_ZY8EtKgmEe-9tYVtpMatrg" name="nChannels">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ZY8EtagmEe-9tYVtpMatrg" name="verbose">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ZY8EuKgmEe-9tYVtpMatrg" type="_ZY6PgKgmEe-9tYVtpMatrg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_ZY8rwKgmEe-9tYVtpMatrg" name="getChannelSet" method="_ZuDZHqgmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_ZY8rwagmEe-9tYVtpMatrg" name="timeSlot">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Zr1ykKgmEe-9tYVtpMatrg" type="_ZqAmkagmEe-9tYVtpMatrg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_ZY9S0KgmEe-9tYVtpMatrg" name="addNewChannelSet" method="_ZuDZIagmEe-9tYVtpMatrg"/>
              <ownedOperation xmi:id="_ZY9S0agmEe-9tYVtpMatrg" name="isEmpty" method="_ZuDZIqgmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_ZY9S0qgmEe-9tYVtpMatrg" name="timeSlot">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ZY9S06gmEe-9tYVtpMatrg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_ZY9S1KgmEe-9tYVtpMatrg" name="removeChannel" method="_ZuDZJagmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_ZY9S1agmEe-9tYVtpMatrg" name="timeSlot">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ZY9S1qgmEe-9tYVtpMatrg" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ZY9S16gmEe-9tYVtpMatrg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_ZY9S2KgmEe-9tYVtpMatrg" name="addChannel" method="_ZuDZKagmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_ZY9S2agmEe-9tYVtpMatrg" name="timeSlot">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ZY9S2qgmEe-9tYVtpMatrg" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ZY9S26gmEe-9tYVtpMatrg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_ZY-g8KgmEe-9tYVtpMatrg" name="getNumChannels" method="_ZuEAIKgmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_ZY-g8agmEe-9tYVtpMatrg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <nestedClassifier xmi:type="uml:Class" xmi:id="_ZY62kKgmEe-9tYVtpMatrg" name="ChannelSet" visibility="private">
                <generalization xmi:id="_Zr1LgKgmEe-9tYVtpMatrg" general="_ZqAmkagmEe-9tYVtpMatrg"/>
                <ownedAttribute xmi:id="_ZtA3RKgmEe-9tYVtpMatrg" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                  <defaultValue xmi:type="uml:LiteralString" xmi:id="_ZtBeUKgmEe-9tYVtpMatrg" value="6725256944325470867L"/>
                </ownedAttribute>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ZuDZFagmEe-9tYVtpMatrg" name="ChannelSet" specification="_ZY7doKgmEe-9tYVtpMatrg">
                  <ownedParameter xmi:id="_ZuDZFqgmEe-9tYVtpMatrg" type="_ZY62kKgmEe-9tYVtpMatrg" direction="return"/>
                  <language>java</language>
                  <body>super();&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ZuDZF6gmEe-9tYVtpMatrg" name="ChannelSet" specification="_ZY7dpKgmEe-9tYVtpMatrg">
                  <ownedParameter xmi:id="_ZuDZGKgmEe-9tYVtpMatrg" name="nChannels">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_ZuDZGagmEe-9tYVtpMatrg" type="_ZY62kKgmEe-9tYVtpMatrg" direction="return"/>
                  <language>java</language>
                  <body>super();&#xD;
   for (int i = 0; i &lt; nChannels; i++) { // ASSUMES channels range from 0 to nChannels-1&#xD;
     this.add(String.valueOf(i));&#xD;
   }&#xD;
 </body>
                </ownedBehavior>
                <ownedOperation xmi:id="_ZY7doKgmEe-9tYVtpMatrg" name="ChannelSet" visibility="private" method="_ZuDZFagmEe-9tYVtpMatrg">
                  <eAnnotations xmi:id="_ZY7doagmEe-9tYVtpMatrg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                    <details xmi:id="_ZY7doqgmEe-9tYVtpMatrg" key="create"/>
                  </eAnnotations>
                  <ownedParameter xmi:id="_ZY7do6gmEe-9tYVtpMatrg" type="_ZY62kKgmEe-9tYVtpMatrg" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_ZY7dpKgmEe-9tYVtpMatrg" name="ChannelSet" visibility="private" method="_ZuDZF6gmEe-9tYVtpMatrg">
                  <eAnnotations xmi:id="_ZY8EsKgmEe-9tYVtpMatrg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                    <details xmi:id="_ZY8EsagmEe-9tYVtpMatrg" key="create"/>
                  </eAnnotations>
                  <ownedParameter xmi:id="_ZY7dpagmEe-9tYVtpMatrg" name="nChannels">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_ZY8EsqgmEe-9tYVtpMatrg" type="_ZY62kKgmEe-9tYVtpMatrg" direction="return"/>
                </ownedOperation>
              </nestedClassifier>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_ZY_IAKgmEe-9tYVtpMatrg" name="CodeFragment">
              <ownedAttribute xmi:id="_ZtCscKgmEe-9tYVtpMatrg" name="SLEEP" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_ZtCscagmEe-9tYVtpMatrg" value="&quot;sleep&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_ZtCscqgmEe-9tYVtpMatrg" name="edges" visibility="package" type="_Zp__gKgmEe-9tYVtpMatrg" association="_ZvRhF6gmEe-9tYVtpMatrg"/>
              <ownedAttribute xmi:id="_ZtDTgqgmEe-9tYVtpMatrg" name="coordinator" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_ZtDThKgmEe-9tYVtpMatrg" name="codeFragment" visibility="package" type="_Zp__gKgmEe-9tYVtpMatrg" association="_ZvSIIagmEe-9tYVtpMatrg"/>
              <ownedAttribute xmi:id="_ZtEhoagmEe-9tYVtpMatrg" name="delta" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_ZtGW0KgmEe-9tYVtpMatrg" name="channel" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ZuEAIqgmEe-9tYVtpMatrg" name="CodeFragment" specification="_ZY_vEKgmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_ZuEAI6gmEe-9tYVtpMatrg" type="_ZY_IAKgmEe-9tYVtpMatrg" direction="return"/>
                <language>java</language>
                <body>this.delta = 0;&#xD;
		this.channel = 0;&#xD;
		this.edges = null;&#xD;
		this.coordinator = null;&#xD;
		this.codeFragment = new ArrayList&lt;String>();&#xD;
		this.codeFragment.add(SLEEP);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ZuEAJKgmEe-9tYVtpMatrg" name="CodeFragment" specification="_Zr2ZoKgmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_ZuEAJagmEe-9tYVtpMatrg" name="delta">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ZuEAJqgmEe-9tYVtpMatrg" name="edges" type="_Zp__gKgmEe-9tYVtpMatrg"/>
                <ownedParameter xmi:id="_ZuEAJ6gmEe-9tYVtpMatrg" name="coordinators" type="_Zp__gKgmEe-9tYVtpMatrg"/>
                <ownedParameter xmi:id="_ZuEAKKgmEe-9tYVtpMatrg" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ZuEAKagmEe-9tYVtpMatrg" type="_ZY_IAKgmEe-9tYVtpMatrg" direction="return"/>
                <language>java</language>
                <body>this.delta = delta;&#xD;
		this.channel = channel;&#xD;
		this.edges = edges;&#xD;
		this.coordinator = coordinators.get(0);&#xD;
		this.codeFragment = new ArrayList&lt;String>();&#xD;
		if (multipleCoordinators(coordinators)) {&#xD;
			reportIfDifferentCoordinators(coordinators);&#xD;
		}	&#xD;
		generateCodeFragment();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ZuEAKqgmEe-9tYVtpMatrg" name="getCoordinator" specification="_ZZAWIKgmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_ZuEAK6gmEe-9tYVtpMatrg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return coordinator;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ZuEALKgmEe-9tYVtpMatrg" name="instructions" specification="_ZZAWIqgmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_ZuEALagmEe-9tYVtpMatrg" type="_Zp__gKgmEe-9tYVtpMatrg" direction="return"/>
                <language>java</language>
                <body>return codeFragment;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ZuEALqgmEe-9tYVtpMatrg" name="size" specification="_ZZA9MagmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_ZuEAL6gmEe-9tYVtpMatrg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>return codeFragment.size();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ZuEAMKgmEe-9tYVtpMatrg" name="generateCodeFragment" specification="_ZZA9M6gmEe-9tYVtpMatrg">
                <language>java</language>
                <body>var edgeQueue = new SchedulableObjectQueue&lt;Edge>(new &#xD;
				PriorityComparator&lt;Edge>(),this.edges);&#xD;
		Iterator&lt;Edge> q = edgeQueue.iterator();&#xD;
		var size = edgeQueue.size();&#xD;
		/* the code length will be equal to &#xD;
		 * delta + #edges -1&#xD;
		 */&#xD;
		var codeLength = delta + size -1;&#xD;
		var basicInstructions = new ArrayList&lt;String>();&#xD;
		/* create basic instructions for each edge &#xD;
		 * and initial receiver set for each instruction&#xD;
		 * */&#xD;
		while(q.hasNext()) {&#xD;
			var edge = edgeQueue.poll();&#xD;
			var src = edge.getSrc();&#xD;
			var snk = edge.getSnk();&#xD;
			var flow = edge.getFlow();&#xD;
			var instr = getBaseInstruction(flow,src,snk);&#xD;
			basicInstructions.add(instr);&#xD;
		}&#xD;
		/* start building code fragments */&#xD;
		&#xD;
		codeFragment.add(basicInstructions.get(0));&#xD;
		&#xD;
		/* when size &lt; delta, we need to repeat the&#xD;
		 * middle stage delta - size times&#xD;
		 */&#xD;
		var numRepeatStages = Math.max(0, delta - size);&#xD;
		if (size &lt; delta) {&#xD;
			numRepeatStages = delta - size;&#xD;
		}&#xD;
		&#xD;
		/* build the initial code fragment */&#xD;
		Integer localDelta = Math.min(size, delta);&#xD;
		var instr = new String();&#xD;
		var dropInstr = new String();&#xD;
		var priorInstr = new String();&#xD;
		for (int i = 1; i &lt; localDelta ; i++) { &#xD;
			instr = codeFragment.get(i-1) +&#xD;
					&quot; else &quot; + basicInstructions.get(i);&#xD;
			codeFragment.add(instr);&#xD;
		}&#xD;
		/* now repeat middle stage if size &lt; delta &#xD;
		 * otherwise, this for loop will be skipped&#xD;
		 */&#xD;
		for (int i = localDelta; (i &lt; localDelta + numRepeatStages) &amp;&amp; i &lt; codeLength ; i++) { &#xD;
			instr = codeFragment.get(i-1);&#xD;
			codeFragment.add(instr);&#xD;
		}&#xD;
		/* The first Instruction has been repeated&#xD;
		 * delta times. Now it gets removed from&#xD;
		 * the pipeline. E.g., with delta = 3 and&#xD;
		 * size = 3&#xD;
		 *  a &lt;-- dropInstr&#xD;
		 *  ab&#xD;
		 *  abc &lt;-- priorInstr&#xD;
		 *  bc &lt;-- instr&#xD;
		 */&#xD;
&#xD;
		/* Now loop through dropping old instructions&#xD;
		 * and adding new ones for size - localDelta times.&#xD;
		 * This loop will be skipped if size = localDelta.&#xD;
		 */&#xD;
		for (int i = localDelta + numRepeatStages; (i &lt; numRepeatStages + size)  &amp;&amp; i &lt; codeLength ; i++) { &#xD;
			priorInstr = codeFragment.get(i-1);&#xD;
			dropInstr =  basicInstructions.get(i-(localDelta + numRepeatStages)) + &quot; else &quot;;&#xD;
			instr = priorInstr.replaceFirst(Pattern.quote(dropInstr),&quot;&quot;);&#xD;
			instr += &quot; else &quot; + basicInstructions.get(i-numRepeatStages);&#xD;
			codeFragment.add(instr);&#xD;
		}&#xD;
		/* Now loop through dropping old instructions, draining&#xD;
		 * the pipleline.&#xD;
		 */&#xD;
		for (int i = numRepeatStages + size; i &lt; codeLength ; i++) { &#xD;
			priorInstr = codeFragment.get(i-1);&#xD;
			dropInstr =  basicInstructions.get(i-delta)  + &quot; else &quot;;&#xD;
			instr = priorInstr.replaceFirst(Pattern.quote(dropInstr),&quot;&quot;);&#xD;
			codeFragment.add(instr);&#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ZuEAMagmEe-9tYVtpMatrg" name="getBaseInstruction" specification="_ZZA9NKgmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_ZuEAMqgmEe-9tYVtpMatrg" name="flow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ZuEAM6gmEe-9tYVtpMatrg" name="src">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ZuEANKgmEe-9tYVtpMatrg" name="snk">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ZuEANagmEe-9tYVtpMatrg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>var instr = new String();&#xD;
		if (coordinator.equals(src)) {&#xD;
			/* push instruction */&#xD;
			instr += ifHas(flow,src,snk) + push(flow,src,snk);&#xD;
		} else {&#xD;
			/* pull instruction */&#xD;
			instr += ifNotHas(flow,src,snk) + pull(flow,src,snk);&#xD;
		}&#xD;
		return instr;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ZuEANqgmEe-9tYVtpMatrg" name="push" specification="_ZZBkQagmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_ZuEAN6gmEe-9tYVtpMatrg" name="flow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ZuEAOKgmEe-9tYVtpMatrg" name="src">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ZuEAOagmEe-9tYVtpMatrg" name="snk">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ZuEAOqgmEe-9tYVtpMatrg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>var instruction = String.format(&quot;push(%s: %s -> %s, #%d)&quot;, flow, src, snk, channel);&#xD;
		return instruction;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ZuEAO6gmEe-9tYVtpMatrg" name="pull" specification="_ZZBkRqgmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_ZuEAPKgmEe-9tYVtpMatrg" name="flow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ZuEAPagmEe-9tYVtpMatrg" name="src">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ZuEAPqgmEe-9tYVtpMatrg" name="snk">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ZuEAP6gmEe-9tYVtpMatrg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>var instruction = String.format(&quot;pull(%s: %s -> %s, #%d)&quot;, flow, src, snk, channel);&#xD;
		return instruction;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ZuEAQKgmEe-9tYVtpMatrg" name="ifHas" specification="_ZZCLUKgmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_ZuEAQagmEe-9tYVtpMatrg" name="flow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ZuEAQqgmEe-9tYVtpMatrg" name="src">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ZuEAQ6gmEe-9tYVtpMatrg" name="snk">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ZuEARKgmEe-9tYVtpMatrg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>var instruction = String.format(&quot;if has(%s: %s -> %s) &quot;, flow, src, snk);&#xD;
		return instruction;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ZuEnMKgmEe-9tYVtpMatrg" name="ifNotHas" specification="_ZZCLVagmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_ZuEnMagmEe-9tYVtpMatrg" name="flow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ZuEnMqgmEe-9tYVtpMatrg" name="src">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ZuEnM6gmEe-9tYVtpMatrg" name="snk">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ZuEnNKgmEe-9tYVtpMatrg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>var instruction = String.format(&quot;if !has(%s: %s -> %s) &quot;, flow, src, snk);&#xD;
		return instruction;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ZuEnNagmEe-9tYVtpMatrg" name="wait" specification="_ZZCyYKgmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_ZuEnNqgmEe-9tYVtpMatrg" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ZuEnN6gmEe-9tYVtpMatrg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>var instruction = String.format(&quot;wait(#%d)&quot;, channel);&#xD;
		return instruction;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ZuEnOKgmEe-9tYVtpMatrg" name="sleep" specification="_ZZCyY6gmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_ZuEnOagmEe-9tYVtpMatrg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>var instruction = SLEEP;&#xD;
		return instruction;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ZuEnOqgmEe-9tYVtpMatrg" name="reportIfDifferentCoordinators" specification="_Zr3nwKgmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_ZuEnO6gmEe-9tYVtpMatrg" name="coordinators" type="_Zp__gKgmEe-9tYVtpMatrg"/>
                <language>java</language>
                <body>var numUniqueCoordinators = 1;&#xD;
		var coordinatorNames = this.coordinator;&#xD;
		if (coordinators.size() > 1) {&#xD;
			for (int i = 1 ; i &lt; coordinators.size(); i++) {&#xD;
				if (!this.coordinator.equals(coordinators.get(i))) {&#xD;
					coordinatorNames += &quot;, &quot; + coordinators.get(i);&#xD;
					numUniqueCoordinators++;&#xD;
				}&#xD;
			}&#xD;
			if (numUniqueCoordinators > 1) {&#xD;
				System.err.printf(&quot;\n%d Coordinators: %s\n&quot;, &#xD;
						numUniqueCoordinators, this.coordinator, coordinatorNames);&#xD;
			}&#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ZuEnPKgmEe-9tYVtpMatrg" name="multipleCoordinators" specification="_Zr3nw6gmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_ZuEnPagmEe-9tYVtpMatrg" name="coordinators" type="_Zp__gKgmEe-9tYVtpMatrg"/>
                <ownedParameter xmi:id="_ZuEnPqgmEe-9tYVtpMatrg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>var result = false;&#xD;
		if (coordinators.size() > 1) {&#xD;
			for (int i = 1 ; i &lt; coordinators.size(); i++) {&#xD;
				if (!this.coordinator.equals(coordinators.get(i))) {&#xD;
					result = true;&#xD;
				}&#xD;
			}&#xD;
		}&#xD;
		return result;&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_ZY_vEKgmEe-9tYVtpMatrg" name="CodeFragment" visibility="package" method="_ZuEAIqgmEe-9tYVtpMatrg">
                <eAnnotations xmi:id="_ZY_vEagmEe-9tYVtpMatrg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_ZY_vEqgmEe-9tYVtpMatrg" key="create"/>
                </eAnnotations>
                <ownedComment xmi:id="_ZunZ0KgmEe-9tYVtpMatrg">
                  <body>Constructor generates a SLEEP instruction for the&#xD;
	 * code fragment.</body>
                </ownedComment>
                <ownedParameter xmi:id="_ZY_vE6gmEe-9tYVtpMatrg" type="_ZY_IAKgmEe-9tYVtpMatrg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_ZZAWIKgmEe-9tYVtpMatrg" name="getCoordinator" method="_ZuEAKqgmEe-9tYVtpMatrg">
                <ownedComment xmi:id="_ZuoA0agmEe-9tYVtpMatrg">
                  <body>@return the coordinator</body>
                </ownedComment>
                <ownedParameter xmi:id="_ZZAWIagmEe-9tYVtpMatrg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_ZZAWIqgmEe-9tYVtpMatrg" name="instructions" method="_ZuEALKgmEe-9tYVtpMatrg">
                <ownedComment xmi:id="_ZuoA0qgmEe-9tYVtpMatrg">
                  <body>@return the codeFragment</body>
                </ownedComment>
                <ownedParameter xmi:id="_Zr3AsqgmEe-9tYVtpMatrg" type="_Zp__gKgmEe-9tYVtpMatrg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_ZZA9MagmEe-9tYVtpMatrg" name="size" method="_ZuEALqgmEe-9tYVtpMatrg">
                <ownedComment xmi:id="_ZuoA06gmEe-9tYVtpMatrg">
                  <body>@return the size</body>
                </ownedComment>
                <ownedParameter xmi:id="_ZZA9MqgmEe-9tYVtpMatrg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_ZZA9M6gmEe-9tYVtpMatrg" name="generateCodeFragment" visibility="private" method="_ZuEAMKgmEe-9tYVtpMatrg"/>
              <ownedOperation xmi:id="_ZZA9NKgmEe-9tYVtpMatrg" name="getBaseInstruction" visibility="private" method="_ZuEAMagmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_ZZA9NagmEe-9tYVtpMatrg" name="flow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ZZA9NqgmEe-9tYVtpMatrg" name="src">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ZZA9N6gmEe-9tYVtpMatrg" name="snk">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ZZBkQKgmEe-9tYVtpMatrg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_ZZBkQagmEe-9tYVtpMatrg" name="push" visibility="private" method="_ZuEANqgmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_ZZBkQqgmEe-9tYVtpMatrg" name="flow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ZZBkQ6gmEe-9tYVtpMatrg" name="src">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ZZBkRKgmEe-9tYVtpMatrg" name="snk">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ZZBkRagmEe-9tYVtpMatrg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_ZZBkRqgmEe-9tYVtpMatrg" name="pull" visibility="private" method="_ZuEAO6gmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_ZZBkR6gmEe-9tYVtpMatrg" name="flow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ZZBkSKgmEe-9tYVtpMatrg" name="src">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ZZBkSagmEe-9tYVtpMatrg" name="snk">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ZZBkSqgmEe-9tYVtpMatrg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_ZZCLUKgmEe-9tYVtpMatrg" name="ifHas" visibility="private" method="_ZuEAQKgmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_ZZCLUagmEe-9tYVtpMatrg" name="flow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ZZCLUqgmEe-9tYVtpMatrg" name="src">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ZZCLU6gmEe-9tYVtpMatrg" name="snk">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ZZCLVKgmEe-9tYVtpMatrg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_ZZCLVagmEe-9tYVtpMatrg" name="ifNotHas" visibility="private" method="_ZuEnMKgmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_ZZCLVqgmEe-9tYVtpMatrg" name="flow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ZZCLV6gmEe-9tYVtpMatrg" name="src">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ZZCLWKgmEe-9tYVtpMatrg" name="snk">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ZZCLWagmEe-9tYVtpMatrg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_ZZCyYKgmEe-9tYVtpMatrg" name="wait" method="_ZuEnNagmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_ZZCyYagmEe-9tYVtpMatrg" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ZZCyYqgmEe-9tYVtpMatrg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_ZZCyY6gmEe-9tYVtpMatrg" name="sleep" isStatic="true" method="_ZuEnOKgmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_ZZCyZKgmEe-9tYVtpMatrg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_Zr2ZoKgmEe-9tYVtpMatrg" name="CodeFragment" visibility="package" method="_ZuEAJKgmEe-9tYVtpMatrg">
                <eAnnotations xmi:id="_Zr2ZpagmEe-9tYVtpMatrg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_Zr2ZpqgmEe-9tYVtpMatrg" key="create"/>
                </eAnnotations>
                <ownedComment xmi:id="_ZuoA0KgmEe-9tYVtpMatrg">
                  <body>Constructor generates DSL instructions to transmit&#xD;
	 * the data over edges using the coordinator and channel&#xD;
	 * to determine the type of instruction and delta to &#xD;
	 * determine the number of times each instructions must&#xD;
	 * be attempted.&#xD;
	 * &#xD;
	 * @param delta&#xD;
	 * @param edges&#xD;
	 * @param coordinators&#xD;
	 * @param channel</body>
                </ownedComment>
                <ownedParameter xmi:id="_Zr2ZoagmEe-9tYVtpMatrg" name="delta">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Zr2ZoqgmEe-9tYVtpMatrg" name="edges" type="_Zp__gKgmEe-9tYVtpMatrg"/>
                <ownedParameter xmi:id="_Zr2Zo6gmEe-9tYVtpMatrg" name="coordinators" type="_Zp__gKgmEe-9tYVtpMatrg"/>
                <ownedParameter xmi:id="_Zr2ZpKgmEe-9tYVtpMatrg" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Zr2Zp6gmEe-9tYVtpMatrg" type="_ZY_IAKgmEe-9tYVtpMatrg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_Zr3nwKgmEe-9tYVtpMatrg" name="reportIfDifferentCoordinators" visibility="private" method="_ZuEnOqgmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_Zr3nwagmEe-9tYVtpMatrg" name="coordinators" type="_Zp__gKgmEe-9tYVtpMatrg"/>
              </ownedOperation>
              <ownedOperation xmi:id="_Zr3nw6gmEe-9tYVtpMatrg" name="multipleCoordinators" visibility="private" method="_ZuEnPKgmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_Zr3nxKgmEe-9tYVtpMatrg" name="coordinators" type="_Zp__gKgmEe-9tYVtpMatrg"/>
                <ownedParameter xmi:id="_Zr4O0KgmEe-9tYVtpMatrg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_ZZEAgKgmEe-9tYVtpMatrg" name="CombinedActivation">
              <generalization xmi:id="_ZqMz0qgmEe-9tYVtpMatrg" general="_ZYoisKgmEe-9tYVtpMatrg"/>
              <interfaceRealization xmi:id="_Zr414KgmEe-9tYVtpMatrg" client="_ZZEAgKgmEe-9tYVtpMatrg" supplier="_Zrw6EagmEe-9tYVtpMatrg" contract="_Zrw6EagmEe-9tYVtpMatrg"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ZuEnP6gmEe-9tYVtpMatrg" name="CombinedActivation" specification="_ZZEnkKgmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_ZuEnQKgmEe-9tYVtpMatrg" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ZuEnQagmEe-9tYVtpMatrg" type="_ZZEAgKgmEe-9tYVtpMatrg" direction="return"/>
                <language>java</language>
                <body>super(name);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ZuEnQqgmEe-9tYVtpMatrg" name="CombinedActivation" specification="_ZqJwgKgmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_ZuEnQ6gmEe-9tYVtpMatrg" name="elem" type="_ZYoisKgmEe-9tYVtpMatrg"/>
                <ownedParameter xmi:id="_ZuEnRKgmEe-9tYVtpMatrg" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ZuEnRagmEe-9tYVtpMatrg" type="_ZZEAgKgmEe-9tYVtpMatrg" direction="return"/>
                <language>java</language>
                <body>super(elem, time);	&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ZuEnRqgmEe-9tYVtpMatrg" name="CombinedActivation" specification="_ZqMMwKgmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_ZuEnR6gmEe-9tYVtpMatrg" name="priorEntry" type="_ZYoisKgmEe-9tYVtpMatrg"/>
                <ownedParameter xmi:id="_ZuEnSKgmEe-9tYVtpMatrg" name="next" type="_ZYoisKgmEe-9tYVtpMatrg"/>
                <ownedParameter xmi:id="_ZuEnSagmEe-9tYVtpMatrg" type="_ZZEAgKgmEe-9tYVtpMatrg" direction="return"/>
                <language>java</language>
                <body>/* create a new this and add priorEntry &#xD;
		 * and next as subObjects. The new name is &#xD;
		 * &quot;PriorName + NextName&quot;. &#xD;
		 */&#xD;
		super(priorEntry,next.getLastUpdateTime());&#xD;
		String combinedName = &#xD;
				priorEntry.getName() + &quot;+&quot; + next.getName();&#xD;
		/* initially, this will be a clone of priorEntry */;&#xD;
		/* now update its name and add relevant attributes from next */&#xD;
		this.setName(combinedName);&#xD;
		this.addSubObject(priorEntry);&#xD;
		this.addSubObject(next);&#xD;
		var endTime = Math.max(priorEntry.getEndTime(), next.getEndTime());&#xD;
		this.setEndTime(endTime);&#xD;
		var startTime = Math.min(priorEntry.getStartTime(), next.getStartTime());&#xD;
		this.setStartTime(startTime);&#xD;
		this.addEdges(next.getEdges());&#xD;
		this.addCoordinators(next.getCoordinators());&#xD;
		this.addConflicts(next.getConflicts());&#xD;
		&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ZuEnSqgmEe-9tYVtpMatrg" name="canCombine" specification="_ZqMMxqgmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_ZuEnS6gmEe-9tYVtpMatrg" name="a2" type="_ZYoisKgmEe-9tYVtpMatrg"/>
                <ownedParameter xmi:id="_ZuEnTKgmEe-9tYVtpMatrg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>Boolean result = false;&#xD;
		/* make sure a2 is not null */&#xD;
		if (a2 != null) {&#xD;
			var newEntryCoordinator = a2.getCoordinators().get(0);&#xD;
			if (getCoordinators().contains(newEntryCoordinator)) {&#xD;
				/* The (first) coordinator of the newEntry&#xD;
				 * is in the list of coordinators of the prior entry.&#xD;
				 * Thus, these two can be combined for efficiency &#xD;
				 */&#xD;
&#xD;
				result = true;&#xD;
			}&#xD;
		}&#xD;
		return result;&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_ZZEnkKgmEe-9tYVtpMatrg" name="CombinedActivation" visibility="package" method="_ZuEnP6gmEe-9tYVtpMatrg">
                <eAnnotations xmi:id="_ZZEnkqgmEe-9tYVtpMatrg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_ZZEnk6gmEe-9tYVtpMatrg" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_ZZEnkagmEe-9tYVtpMatrg" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ZZEnlKgmEe-9tYVtpMatrg" type="_ZZEAgKgmEe-9tYVtpMatrg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_ZqJwgKgmEe-9tYVtpMatrg" name="CombinedActivation" visibility="package" method="_ZuEnQqgmEe-9tYVtpMatrg">
                <eAnnotations xmi:id="_ZqLlsKgmEe-9tYVtpMatrg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_ZqLlsagmEe-9tYVtpMatrg" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_ZqKXkKgmEe-9tYVtpMatrg" name="elem" type="_ZYoisKgmEe-9tYVtpMatrg"/>
                <ownedParameter xmi:id="_ZqKXkagmEe-9tYVtpMatrg" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ZqLlsqgmEe-9tYVtpMatrg" type="_ZZEAgKgmEe-9tYVtpMatrg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_ZqMMwKgmEe-9tYVtpMatrg" name="CombinedActivation" visibility="package" method="_ZuEnRqgmEe-9tYVtpMatrg">
                <eAnnotations xmi:id="_ZqMMw6gmEe-9tYVtpMatrg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_ZqMMxKgmEe-9tYVtpMatrg" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_ZqMMwagmEe-9tYVtpMatrg" name="priorEntry" type="_ZYoisKgmEe-9tYVtpMatrg"/>
                <ownedParameter xmi:id="_ZqMMwqgmEe-9tYVtpMatrg" name="next" type="_ZYoisKgmEe-9tYVtpMatrg"/>
                <ownedParameter xmi:id="_ZqMMxagmEe-9tYVtpMatrg" type="_ZZEAgKgmEe-9tYVtpMatrg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_ZqMMxqgmEe-9tYVtpMatrg" name="canCombine" method="_ZuEnSqgmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_ZqMMx6gmEe-9tYVtpMatrg" name="a2" type="_ZYoisKgmEe-9tYVtpMatrg"/>
                <ownedParameter xmi:id="_ZqMMyKgmEe-9tYVtpMatrg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_ZZFOoKgmEe-9tYVtpMatrg" name="CommunicationGraph">
              <ownedComment xmi:id="_ZuoA1KgmEe-9tYVtpMatrg">
                <body>@author sgoddard2&#xD;
 *</body>
              </ownedComment>
              <generalization xmi:id="_ZqNa6qgmEe-9tYVtpMatrg" general="_ZbJEIKgmEe-9tYVtpMatrg"/>
              <ownedAttribute xmi:id="_ZtHk8KgmEe-9tYVtpMatrg" name="wfm" visibility="package" type="_ZZSC8KgmEe-9tYVtpMatrg" association="_ZvSIJKgmEe-9tYVtpMatrg"/>
              <ownedAttribute xmi:id="_ZtIMAKgmEe-9tYVtpMatrg" name="graphFileName" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_ZtIMAqgmEe-9tYVtpMatrg" name="verbose" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_ZtIMBKgmEe-9tYVtpMatrg" name="workLoad" visibility="package" type="_Zbu6AqgmEe-9tYVtpMatrg" association="_ZvSvMagmEe-9tYVtpMatrg"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ZuFOQKgmEe-9tYVtpMatrg" name="CommunicationGraph" specification="_ZqMz06gmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_ZuFOQagmEe-9tYVtpMatrg" name="fm" type="_ZZSC8KgmEe-9tYVtpMatrg"/>
                <ownedParameter xmi:id="_ZuFOQqgmEe-9tYVtpMatrg" name="workLoad" type="_Zbu6AqgmEe-9tYVtpMatrg"/>
                <ownedParameter xmi:id="_ZuFOQ6gmEe-9tYVtpMatrg" type="_ZZFOoKgmEe-9tYVtpMatrg" direction="return"/>
                <language>java</language>
                <body>// constructor for GraphFile class&#xD;
		super(fm, workLoad, &quot;.wf&quot;);&#xD;
		this.wfm = fm;&#xD;
		this.workLoad = workLoad;&#xD;
		verbose = false; // initialize verbose to false&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ZuFORKgmEe-9tYVtpMatrg" name="CommunicationGraph" specification="_ZqNa4KgmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_ZuFORagmEe-9tYVtpMatrg" name="fm" type="_ZZSC8KgmEe-9tYVtpMatrg"/>
                <ownedParameter xmi:id="_ZuFORqgmEe-9tYVtpMatrg" name="workLoad" type="_Zbu6AqgmEe-9tYVtpMatrg"/>
                <ownedParameter xmi:id="_ZuFOR6gmEe-9tYVtpMatrg" name="verbose">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ZuFOSKgmEe-9tYVtpMatrg" type="_ZZFOoKgmEe-9tYVtpMatrg" direction="return"/>
                <language>java</language>
                <body>// constructor for GraphFile class&#xD;
		super(fm, workLoad, &quot;.wf&quot;);&#xD;
		this.wfm = fm;&#xD;
		this.workLoad = workLoad;&#xD;
		this.verbose = verbose; // initialize verbose to false&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ZuFOSagmEe-9tYVtpMatrg" name="createHeader" specification="_ZZGcwKgmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_ZuFOSqgmEe-9tYVtpMatrg" type="_ZZLVQKgmEe-9tYVtpMatrg" direction="return"/>
                <language>java</language>
                <body>Description header = new Description();&#xD;
		header.add(String.format(&quot;WARP_%s{\n&quot;,workLoad.getName()));&#xD;
		return header;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ZuFOS6gmEe-9tYVtpMatrg" name="createFooter" specification="_ZZGcxKgmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_ZuFOTKgmEe-9tYVtpMatrg" type="_ZZLVQKgmEe-9tYVtpMatrg" direction="return"/>
                <language>java</language>
                <body>Description footer = new Description();&#xD;
		footer.add(&quot;}\n&quot;);&#xD;
		return footer;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ZuFOTagmEe-9tYVtpMatrg" name="visualization" specification="_ZZHD06gmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_ZuFOTqgmEe-9tYVtpMatrg" type="_ZZLVQKgmEe-9tYVtpMatrg" direction="return"/>
                <language>java</language>
                <body>Description content = new Description();&#xD;
     String line = String.format(&#xD;
     	&quot;// M = %s and End-to-End reliability = %s\n&quot;,&#xD;
     	String.valueOf(workLoad.getMinPacketReceptionRate()),&#xD;
     	String.valueOf(workLoad.getE2e()));&#xD;
     content.add(line);&#xD;
     var flowNames = workLoad.getFlowNames();&#xD;
     for (int flowIndex = 0; flowIndex &lt; flowNames.length; flowIndex++) {&#xD;
         var flowName = flowNames[flowIndex];&#xD;
         var nodesInFlow = workLoad.getNodesInFlow(flowName);&#xD;
         var nNodesInFlow = (nodesInFlow.length);&#xD;
         /* array of communications costs per link */&#xD;
         var linkCostArray = workLoad.getNumTxAttemptsPerLink(flowName); &#xD;
         var totalCost = workLoad.getTotalTxAttemptsInFlow(flowName);&#xD;
         var minCost = nNodesInFlow - 1 ;&#xD;
         /*&#xD;
          * nEdges in the flow is the minimum communication cost, &#xD;
          * i.e., min nTx to go E2E with no errors&#xD;
          */&#xD;
         line = String.format(&#xD;
         		&quot;// Flow %s has a minimum communication cost of %d &quot;&#xD;
         		+ &quot;and a worst-case communication cost of %d\n&quot;, &#xD;
         		flowName, minCost, totalCost);&#xD;
         content.add(line);&#xD;
         line = String.format(&#xD;
         		&quot; %s (%d,%d,%d,%d) : &quot;, flowName, &#xD;
         		workLoad.getFlowPriority(flowName), workLoad.getFlowPeriod(flowName), &#xD;
         		workLoad.getFlowDeadline(flowName), workLoad.getFlowPhase(flowName)); &#xD;
         String nodeName;&#xD;
         for (int i = 0; i &lt; nNodesInFlow-1; i++) {  &#xD;
             nodeName = nodesInFlow[i];&#xD;
             var nTx = linkCostArray[i];&#xD;
             line = String.format(line + &quot;%s -%d-> &quot;,nodeName,nTx); &#xD;
             /* This version of the file has nTx in the edges of the flow */&#xD;
         }&#xD;
         nodeName = nodesInFlow[nNodesInFlow-1];&#xD;
         line = String.format(line + &quot;%s\n&quot;,nodeName); // add last node on the flow&#xD;
         content.add(line);&#xD;
     }&#xD;
     return content;&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ZuFOT6gmEe-9tYVtpMatrg" name="createWarpFileContent" specification="_ZZHD16gmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_ZuFOUKgmEe-9tYVtpMatrg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>String wfFileContents = fileVisualization().toString();&#xD;
     if (verbose) {&#xD;
     	System.out.println(&quot;************************************&quot;);&#xD;
     	System.out.println(&quot;Warp File Contents:&quot;);&#xD;
     	System.out.println(wfFileContents);&#xD;
     	System.out.println(&quot;************************************\n&quot;);&#xD;
     }&#xD;
     return wfFileContents;&#xD;
 </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_ZZGcwKgmEe-9tYVtpMatrg" name="createHeader" method="_ZuFOSagmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_ZqNa56gmEe-9tYVtpMatrg" type="_ZZLVQKgmEe-9tYVtpMatrg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_ZZGcxKgmEe-9tYVtpMatrg" name="createFooter" method="_ZuFOS6gmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_ZqNa6KgmEe-9tYVtpMatrg" type="_ZZLVQKgmEe-9tYVtpMatrg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_ZZHD06gmEe-9tYVtpMatrg" name="visualization" method="_ZuFOTagmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_ZqNa6agmEe-9tYVtpMatrg" type="_ZZLVQKgmEe-9tYVtpMatrg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_ZZHD16gmEe-9tYVtpMatrg" name="createWarpFileContent" method="_ZuFOT6gmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_ZZHq4KgmEe-9tYVtpMatrg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_ZqMz06gmEe-9tYVtpMatrg" name="CommunicationGraph" method="_ZuFOQKgmEe-9tYVtpMatrg">
                <eAnnotations xmi:id="_ZqMz1qgmEe-9tYVtpMatrg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_ZqMz16gmEe-9tYVtpMatrg" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_ZqMz1KgmEe-9tYVtpMatrg" name="fm" type="_ZZSC8KgmEe-9tYVtpMatrg"/>
                <ownedParameter xmi:id="_ZqMz1agmEe-9tYVtpMatrg" name="workLoad" type="_Zbu6AqgmEe-9tYVtpMatrg"/>
                <ownedParameter xmi:id="_ZqMz2KgmEe-9tYVtpMatrg" type="_ZZFOoKgmEe-9tYVtpMatrg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_ZqNa4KgmEe-9tYVtpMatrg" name="CommunicationGraph" method="_ZuFORKgmEe-9tYVtpMatrg">
                <eAnnotations xmi:id="_ZqNa5KgmEe-9tYVtpMatrg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_ZqNa5agmEe-9tYVtpMatrg" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_ZqNa4agmEe-9tYVtpMatrg" name="fm" type="_ZZSC8KgmEe-9tYVtpMatrg"/>
                <ownedParameter xmi:id="_ZqNa4qgmEe-9tYVtpMatrg" name="workLoad" type="_Zbu6AqgmEe-9tYVtpMatrg"/>
                <ownedParameter xmi:id="_ZqNa46gmEe-9tYVtpMatrg" name="verbose">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ZqNa5qgmEe-9tYVtpMatrg" type="_ZZFOoKgmEe-9tYVtpMatrg" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_ZZI5AKgmEe-9tYVtpMatrg" name="ConnectivityPoset">
              <ownedComment xmi:id="_ZuoA1agmEe-9tYVtpMatrg">
                <body>ConnectivityPoset extends Poset by selecting&#xD;
primary coordinator in the flow based on highest&#xD;
global connectivity.&#xD;
&#xD;
@author sgoddard</body>
              </ownedComment>
              <generalization xmi:id="_ZqOB9agmEe-9tYVtpMatrg" general="_ZZ4f4KgmEe-9tYVtpMatrg"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ZuFOUagmEe-9tYVtpMatrg" name="ConnectivityPoset" specification="_ZqOB8KgmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_ZuFOUqgmEe-9tYVtpMatrg" name="workload" type="_Zbu6AqgmEe-9tYVtpMatrg"/>
                <ownedParameter xmi:id="_ZuFOU6gmEe-9tYVtpMatrg" type="_ZZI5AKgmEe-9tYVtpMatrg" direction="return"/>
                <language>java</language>
                <body>super(workload);&#xD;
		&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ZuFOVKgmEe-9tYVtpMatrg" name="findCoordinator" specification="_Zr5c8KgmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_ZuFOVagmEe-9tYVtpMatrg" name="nodesInFlow" type="_Zp__gKgmEe-9tYVtpMatrg"/>
                <ownedParameter xmi:id="_ZuFOVqgmEe-9tYVtpMatrg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var coordinatorIndex = 0;&#xD;
		var maxConnections = 0;&#xD;
		var size = nodesInFlow.size();&#xD;
		for (Integer i = 0; i &lt; size; i++) {&#xD;
			/* get the #connections for this node from the&#xD;
			 * connectivity Map and see if it is the max so far&#xD;
			 * if so, store its index in the flow&#xD;
			 */&#xD;
			var node = nodesInFlow.get(i);&#xD;
			var numConnections = nodeConnectivityMap.get(node.getName());&#xD;
			if (numConnections > maxConnections) {&#xD;
				maxConnections = numConnections;&#xD;
				coordinatorIndex = i;&#xD;
			}&#xD;
		}	&#xD;
		/* return the index with the largest connectivity */&#xD;
		return coordinatorIndex;&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_ZqOB8KgmEe-9tYVtpMatrg" name="ConnectivityPoset" visibility="package" method="_ZuFOUagmEe-9tYVtpMatrg">
                <eAnnotations xmi:id="_ZqOB8qgmEe-9tYVtpMatrg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_ZqOB86gmEe-9tYVtpMatrg" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_ZqOB8agmEe-9tYVtpMatrg" name="workload" type="_Zbu6AqgmEe-9tYVtpMatrg"/>
                <ownedParameter xmi:id="_ZqOB9KgmEe-9tYVtpMatrg" type="_ZZI5AKgmEe-9tYVtpMatrg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_Zr5c8KgmEe-9tYVtpMatrg" name="findCoordinator" visibility="protected" method="_ZuFOVKgmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_Zr5c8agmEe-9tYVtpMatrg" name="nodesInFlow" type="_Zp__gKgmEe-9tYVtpMatrg"/>
                <ownedParameter xmi:id="_Zr5c8qgmEe-9tYVtpMatrg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_ZZKHIKgmEe-9tYVtpMatrg" name="DeadlineComparator">
              <interfaceRealization xmi:id="_Zr8gQKgmEe-9tYVtpMatrg" client="_ZZKHIKgmEe-9tYVtpMatrg" supplier="_ZqOB9qgmEe-9tYVtpMatrg" contract="_ZqOB9qgmEe-9tYVtpMatrg"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ZuFOV6gmEe-9tYVtpMatrg" name="compare" specification="_Zr9uYKgmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_ZuFOWKgmEe-9tYVtpMatrg" name="obj1" type="_Zr9HUKgmEe-9tYVtpMatrg"/>
                <ownedParameter xmi:id="_ZuFOWagmEe-9tYVtpMatrg" name="obj2" type="_Zr9HUKgmEe-9tYVtpMatrg"/>
                <ownedParameter xmi:id="_ZuFOWqgmEe-9tYVtpMatrg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>return obj1.deadlineComparison(obj2); &#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_Zr9uYKgmEe-9tYVtpMatrg" name="compare" method="_ZuFOV6gmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_Zr9uYagmEe-9tYVtpMatrg" name="obj1" type="_Zr9HUKgmEe-9tYVtpMatrg"/>
                <ownedParameter xmi:id="_Zr9uYqgmEe-9tYVtpMatrg" name="obj2" type="_Zr9HUKgmEe-9tYVtpMatrg"/>
                <ownedParameter xmi:id="_Zr9uY6gmEe-9tYVtpMatrg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_ZZLVQKgmEe-9tYVtpMatrg" name="Description">
              <ownedComment xmi:id="_ZuoA1qgmEe-9tYVtpMatrg">
                <body>@author sgoddard&#xD;
 *</body>
              </ownedComment>
              <generalization xmi:id="_Zr-VcKgmEe-9tYVtpMatrg" general="_Zp__gKgmEe-9tYVtpMatrg"/>
              <ownedAttribute xmi:id="_ZtIzEKgmEe-9tYVtpMatrg" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_ZtIzEagmEe-9tYVtpMatrg" value="1L"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ZuF1UKgmEe-9tYVtpMatrg" name="Description" specification="_ZZLVQagmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_ZuF1UagmEe-9tYVtpMatrg" type="_ZZLVQKgmEe-9tYVtpMatrg" direction="return"/>
                <language>java</language>
                <body>super();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ZuF1UqgmEe-9tYVtpMatrg" name="Description" specification="_ZZL8UKgmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_ZuF1U6gmEe-9tYVtpMatrg" name="descriptionString">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ZuF1VKgmEe-9tYVtpMatrg" type="_ZZLVQKgmEe-9tYVtpMatrg" direction="return"/>
                <language>java</language>
                <body>super();&#xD;
		String[] lines = descriptionString.split(&quot;\\r?\\n&quot;);&#xD;
		for (String line : lines) {&#xD;
			this.add(line+&quot;\n&quot;);&#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ZuF1VagmEe-9tYVtpMatrg" name="toString" specification="_ZZL8VagmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_ZuF1VqgmEe-9tYVtpMatrg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>StringBuffer sb = new StringBuffer();&#xD;
		for (String row: this) { &#xD;
			sb.append(row);&#xD;
		}&#xD;
		return sb.toString();&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_ZZLVQagmEe-9tYVtpMatrg" name="Description" method="_ZuF1UKgmEe-9tYVtpMatrg">
                <eAnnotations xmi:id="_ZZLVQqgmEe-9tYVtpMatrg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_ZZLVQ6gmEe-9tYVtpMatrg" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_ZZLVRKgmEe-9tYVtpMatrg" type="_ZZLVQKgmEe-9tYVtpMatrg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_ZZL8UKgmEe-9tYVtpMatrg" name="Description" method="_ZuF1UqgmEe-9tYVtpMatrg">
                <eAnnotations xmi:id="_ZZL8UqgmEe-9tYVtpMatrg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_ZZL8U6gmEe-9tYVtpMatrg" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_ZZL8UagmEe-9tYVtpMatrg" name="descriptionString">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ZZL8VKgmEe-9tYVtpMatrg" type="_ZZLVQKgmEe-9tYVtpMatrg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_ZZL8VagmEe-9tYVtpMatrg" name="toString" method="_ZuF1VagmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_ZZL8VqgmEe-9tYVtpMatrg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_ZZMjY6gmEe-9tYVtpMatrg" name="Edge">
              <generalization xmi:id="_ZqP3JKgmEe-9tYVtpMatrg" general="_ZakcZKgmEe-9tYVtpMatrg"/>
              <ownedAttribute xmi:id="_ZtIzEqgmEe-9tYVtpMatrg" name="UNKNOWN" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_ZtIzE6gmEe-9tYVtpMatrg" value="&quot;Unknown&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_ZtIzFKgmEe-9tYVtpMatrg" name="flow">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_ZtIzFagmEe-9tYVtpMatrg" name="src">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_ZtJaIKgmEe-9tYVtpMatrg" name="snk">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_ZtJaIagmEe-9tYVtpMatrg" name="instance">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_ZtJaIqgmEe-9tYVtpMatrg" name="coordinator">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_ZtJaI6gmEe-9tYVtpMatrg" name="state" type="_ZZNxgKgmEe-9tYVtpMatrg" association="_ZuoA16gmEe-9tYVtpMatrg"/>
              <ownedAttribute xmi:id="_ZtJaJKgmEe-9tYVtpMatrg" name="numTx" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <interfaceRealization xmi:id="_Zr-8gKgmEe-9tYVtpMatrg" client="_ZZMjY6gmEe-9tYVtpMatrg" supplier="_Zrw6EagmEe-9tYVtpMatrg" contract="_Zrw6EagmEe-9tYVtpMatrg"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ZuF1V6gmEe-9tYVtpMatrg" name="Edge" specification="_ZZOYk6gmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_ZuF1WKgmEe-9tYVtpMatrg" type="_ZZMjY6gmEe-9tYVtpMatrg" direction="return"/>
                <language>java</language>
                <body>super();&#xD;
		this.flow = UNKNOWN;&#xD;
		this.src = UNKNOWN;&#xD;
		this.snk = UNKNOWN;&#xD;
		this.instance = 0;&#xD;
		this.coordinator = UNKNOWN;&#xD;
		this.state = EdgeState.NOT_READY;&#xD;
		this.numTx = 0;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ZuF1WagmEe-9tYVtpMatrg" name="Edge" specification="_ZZO_oagmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_ZuF1WqgmEe-9tYVtpMatrg" name="flow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ZuF1W6gmEe-9tYVtpMatrg" name="src">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ZuF1XKgmEe-9tYVtpMatrg" name="snk">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ZuF1XagmEe-9tYVtpMatrg" name="priority">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ZuF1XqgmEe-9tYVtpMatrg" name="period">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ZuF1X6gmEe-9tYVtpMatrg" name="deadline">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ZuF1YKgmEe-9tYVtpMatrg" name="phase">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ZuF1YagmEe-9tYVtpMatrg" name="numTx">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ZuF1YqgmEe-9tYVtpMatrg" type="_ZZMjY6gmEe-9tYVtpMatrg" direction="return"/>
                <language>java</language>
                <body>super(priority, period, deadline, phase);&#xD;
		this.flow = flow;&#xD;
		this.src =src;&#xD;
		this.snk = snk;&#xD;
		this.instance = 0;&#xD;
		this.coordinator = UNKNOWN;&#xD;
		this.state = EdgeState.NOT_READY;	&#xD;
		this.numTx = numTx;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ZuF1Y6gmEe-9tYVtpMatrg" name="compareTo" specification="_ZqPQEKgmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_ZuF1ZKgmEe-9tYVtpMatrg" name="edge" type="_ZZMjY6gmEe-9tYVtpMatrg"/>
                <ownedParameter xmi:id="_ZuF1ZagmEe-9tYVtpMatrg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>return edge.getPriority() > this.getPriority() ? 1 : -1;&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ZuF1ZqgmEe-9tYVtpMatrg" name="toString" specification="_ZZPmsqgmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_ZuF1Z6gmEe-9tYVtpMatrg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>String result = String.format(&quot;%s:(%s,%s)&quot;, &#xD;
 			this.flow, this.src, this.snk);&#xD;
     return result;&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ZuF1aKgmEe-9tYVtpMatrg" name="print" specification="_ZZQNw6gmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_ZuF1aagmEe-9tYVtpMatrg" name="headerMsg">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>System.out.printf(&quot;\n%s&quot;,headerMsg);&#xD;
		this.print();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ZuF1aqgmEe-9tYVtpMatrg" name="print" specification="_ZZQ00qgmEe-9tYVtpMatrg">
                <language>java</language>
                <body>super.print();&#xD;
		System.out.printf(&quot;\tFlow:%s\n&quot;, this.flow);&#xD;
		System.out.printf(&quot;\tSrc:%s\n&quot;, this.src);&#xD;
		System.out.printf(&quot;\tSnk:%s\n&quot;, this.snk);&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_ZZOYk6gmEe-9tYVtpMatrg" name="Edge" visibility="package" method="_ZuF1V6gmEe-9tYVtpMatrg">
                <eAnnotations xmi:id="_ZZOYlKgmEe-9tYVtpMatrg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_ZZOYlagmEe-9tYVtpMatrg" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_ZZO_oKgmEe-9tYVtpMatrg" type="_ZZMjY6gmEe-9tYVtpMatrg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_ZZO_oagmEe-9tYVtpMatrg" name="Edge" visibility="package" method="_ZuF1WagmEe-9tYVtpMatrg">
                <eAnnotations xmi:id="_ZZO_qqgmEe-9tYVtpMatrg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_ZZPmsKgmEe-9tYVtpMatrg" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_ZZO_oqgmEe-9tYVtpMatrg" name="flow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ZZO_o6gmEe-9tYVtpMatrg" name="src">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ZZO_pKgmEe-9tYVtpMatrg" name="snk">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ZZO_pagmEe-9tYVtpMatrg" name="priority">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ZZO_pqgmEe-9tYVtpMatrg" name="period">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ZZO_p6gmEe-9tYVtpMatrg" name="deadline">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ZZO_qKgmEe-9tYVtpMatrg" name="phase">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ZZO_qagmEe-9tYVtpMatrg" name="numTx">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ZZPmsagmEe-9tYVtpMatrg" type="_ZZMjY6gmEe-9tYVtpMatrg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_ZZPmsqgmEe-9tYVtpMatrg" name="toString" method="_ZuF1ZqgmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_ZZPms6gmEe-9tYVtpMatrg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_ZZQNw6gmEe-9tYVtpMatrg" name="print" method="_ZuF1aKgmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_ZZQNxKgmEe-9tYVtpMatrg" name="headerMsg">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_ZZQ00qgmEe-9tYVtpMatrg" name="print" method="_ZuF1aqgmEe-9tYVtpMatrg"/>
              <ownedOperation xmi:id="_ZqPQEKgmEe-9tYVtpMatrg" name="compareTo" method="_ZuF1Y6gmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_ZqPQEagmEe-9tYVtpMatrg" name="edge" type="_ZZMjY6gmEe-9tYVtpMatrg"/>
                <ownedParameter xmi:id="_ZqP3IKgmEe-9tYVtpMatrg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <nestedClassifier xmi:type="uml:Enumeration" xmi:id="_ZZNxgKgmEe-9tYVtpMatrg" name="EdgeState" visibility="private">
                <ownedLiteral xmi:id="_ZZOYkKgmEe-9tYVtpMatrg" name="RELEASED"/>
                <ownedLiteral xmi:id="_ZZOYkagmEe-9tYVtpMatrg" name="EXECUTING"/>
                <ownedLiteral xmi:id="_ZZOYkqgmEe-9tYVtpMatrg" name="NOT_READY"/>
              </nestedClassifier>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_ZZSC8KgmEe-9tYVtpMatrg" name="FileManager">
              <ownedComment xmi:id="_Zuon4agmEe-9tYVtpMatrg">
                <body>@author sgoddard&#xD;
@version 1.5&#xD;
 *</body>
              </ownedComment>
              <ownedAttribute xmi:id="_ZtJaJagmEe-9tYVtpMatrg" name="baseDirectory">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_ZtKBMKgmEe-9tYVtpMatrg" name="verbose" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ZuGcYKgmEe-9tYVtpMatrg" name="FileManager" specification="_ZZSqAKgmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_ZuGcYagmEe-9tYVtpMatrg" type="_ZZSC8KgmEe-9tYVtpMatrg" direction="return"/>
                <language>java</language>
                <body>baseDirectory = System.getProperty(&quot;user.dir&quot;); // Get current directory path and set to the&#xD;
                                                 // base directory&#xD;
 // constructor for this class&#xD;
 verbose = false; // initialize verbose to false&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ZuGcYqgmEe-9tYVtpMatrg" name="FileManager" specification="_ZZTRE6gmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_ZuGcY6gmEe-9tYVtpMatrg" name="verbose">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ZuGcZKgmEe-9tYVtpMatrg" type="_ZZSC8KgmEe-9tYVtpMatrg" direction="return"/>
                <language>java</language>
                <body>baseDirectory = System.getProperty(&quot;user.dir&quot;); // Get current directory path and set to the&#xD;
                                                 // base directory&#xD;
 // constructor for this class&#xD;
 this.verbose = verbose; // initialize verbose as specified&#xD;
&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ZuGcZagmEe-9tYVtpMatrg" name="getDocumentsDirectory" specification="_ZZTRGKgmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_ZuGcZqgmEe-9tYVtpMatrg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>// return the 'Documents Directory' for the appropriate OS&#xD;
 String documentsDirectory;&#xD;
 if (OSValidator.isWindows()) {&#xD;
   documentsDirectory = new JFileChooser().getFileSystemView().getDefaultDirectory().toString();&#xD;
 } else if (OSValidator.isMac()) {&#xD;
   documentsDirectory = System.getProperty(&quot;user.home&quot;) + File.separator + &quot;Documents&quot;;&#xD;
 } else { // for all other Unix systems&#xD;
   documentsDirectory = System.getProperty(&quot;user.home&quot;); // assume $HOME for Unix systems (not&#xD;
                                                         // MACOS)&#xD;
 }&#xD;
 return documentsDirectory;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ZuGcZ6gmEe-9tYVtpMatrg" name="getCurrentDirectory" specification="_ZZT4IKgmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_ZuGcaKgmEe-9tYVtpMatrg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return System.getProperty(&quot;user.dir&quot;);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ZuHDcKgmEe-9tYVtpMatrg" name="createFile" specification="_ZZT4IqgmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_ZuHDcagmEe-9tYVtpMatrg" name="file">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ZuHDcqgmEe-9tYVtpMatrg" name="nameExtension">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ZuHDc6gmEe-9tYVtpMatrg" name="suffix">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ZuHDdKgmEe-9tYVtpMatrg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>/*&#xD;
  * we don't actually create the file...it will be created when written to this routine really&#xD;
  * just creates the file name ;-)&#xD;
  */&#xD;
 Integer suffixIndex = file.lastIndexOf('.');&#xD;
 String fileString = file;&#xD;
 if (suffixIndex > 0) { // if a suffix exists, index will be > 0&#xD;
   fileString = file.substring(0, suffixIndex); // get the file string sans the suffix&#xD;
 }&#xD;
 /*&#xD;
  * fileString has no suffix at this point (removed if it existed) Now add file name extension&#xD;
  * and suffix&#xD;
  */&#xD;
 fileString = fileString + nameExtension + suffix;&#xD;
&#xD;
 if (verbose) {&#xD;
   System.out.println(&quot;File &quot; + fileString + &quot; is created!&quot;);&#xD;
 }&#xD;
 return fileString;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ZuHDdagmEe-9tYVtpMatrg" name="createFile" specification="_ZZUfMKgmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_ZuHDdqgmEe-9tYVtpMatrg" name="file">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ZuHDd6gmEe-9tYVtpMatrg" name="suffix">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ZuHDeKgmEe-9tYVtpMatrg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>Integer suffixIndex = file.lastIndexOf('.');&#xD;
 String fileString = file;&#xD;
 if (suffixIndex > 0) { // if a suffix exists, index will be > 0&#xD;
   fileString = file.substring(0, suffixIndex - 1); // get the file string sans the suffix&#xD;
 }&#xD;
 // fileString has no suffix at this point (removed if it existed)&#xD;
 // Now add file name extension and suffix&#xD;
 fileString = fileString + suffix;&#xD;
 // we don't actually create the file...it will be created when written to&#xD;
 // this routine really just creates the file name ;-)&#xD;
 if (verbose) {&#xD;
   System.out.println(&quot;File &quot; + fileString + &quot; is created!&quot;);&#xD;
 }&#xD;
 return fileString;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ZuHDeagmEe-9tYVtpMatrg" name="createDirectory" specification="_ZZUfNKgmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_ZuHDeqgmEe-9tYVtpMatrg" name="directory">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ZuHDe6gmEe-9tYVtpMatrg" name="subDirectory">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ZuHDfKgmEe-9tYVtpMatrg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>String newDirectory;&#xD;
 if (subDirectory.startsWith(&quot;/&quot;)) { // check if full path provided&#xD;
   newDirectory = subDirectory; // if subDirectory is a full path, use it.&#xD;
 } else { // subDirectory has relative path, so just append&#xD;
   newDirectory = directory + File.separator + subDirectory;&#xD;
 }&#xD;
 try {&#xD;
   Path path = Paths.get(newDirectory);&#xD;
   Files.createDirectories(path);&#xD;
   if (verbose) {&#xD;
     System.out.println(&quot;Directory &quot; + newDirectory + &quot; is created!&quot;);&#xD;
   }&#xD;
 } catch (IOException e) {&#xD;
   System.err.println(&quot;Failed to create directory!&quot; + e.getMessage());&#xD;
   newDirectory = directory; // in case of error, just use the initial directory&#xD;
 }&#xD;
 return newDirectory;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ZuHDfagmEe-9tYVtpMatrg" name="writeFile" specification="_ZZVGQKgmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_ZuHDfqgmEe-9tYVtpMatrg" name="file">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ZuHDf6gmEe-9tYVtpMatrg" name="fileContents">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>// Authentication tag = new Authentication(COURSE_TAG);&#xD;
 Path fileName = Path.of(file);&#xD;
 try {&#xD;
   // Files.writeString(fileName, tag.sign(fileContents)); // uncomment to tag course file&#xD;
   Files.writeString(fileName, fileContents); // comment out if tag is being used (line above)&#xD;
 } catch (IOException e) {&#xD;
   // handle error&#xD;
   System.err.println(&quot;Error on writing file contents to file&quot; + file + &quot;: &quot; + e.getMessage());&#xD;
 } // the file will be closed automatically upon exit of this try block&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ZuHDgKgmEe-9tYVtpMatrg" name="readFile" specification="_ZZVGQ6gmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_ZuHDgagmEe-9tYVtpMatrg" name="file">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ZuHDgqgmEe-9tYVtpMatrg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>// String contents = null;&#xD;
 Path fileName = Path.of(file);&#xD;
 String contents = null;&#xD;
 try {&#xD;
   contents = Files.readString(fileName);&#xD;
 } catch (IOException e) {&#xD;
   // handle error&#xD;
   System.err.println(&quot;Error on reading file&quot; + file + &quot;: &quot; + e.getMessage());&#xD;
 } // the file will be closed automatically upon exit of this try block&#xD;
 return contents;&#xD;
  </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_ZZSqAKgmEe-9tYVtpMatrg" name="FileManager" method="_ZuGcYKgmEe-9tYVtpMatrg">
                <eAnnotations xmi:id="_ZZTREKgmEe-9tYVtpMatrg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_ZZTREagmEe-9tYVtpMatrg" key="create"/>
                </eAnnotations>
                <ownedComment xmi:id="_Zuon4qgmEe-9tYVtpMatrg">
                  <body>@param args</body>
                </ownedComment>
                <ownedParameter xmi:id="_ZZTREqgmEe-9tYVtpMatrg" type="_ZZSC8KgmEe-9tYVtpMatrg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_ZZTRE6gmEe-9tYVtpMatrg" name="FileManager" method="_ZuGcYqgmEe-9tYVtpMatrg">
                <eAnnotations xmi:id="_ZZTRFagmEe-9tYVtpMatrg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_ZZTRFqgmEe-9tYVtpMatrg" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_ZZTRFKgmEe-9tYVtpMatrg" name="verbose">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ZZTRF6gmEe-9tYVtpMatrg" type="_ZZSC8KgmEe-9tYVtpMatrg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_ZZTRGKgmEe-9tYVtpMatrg" name="getDocumentsDirectory" method="_ZuGcZagmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_ZZTRGagmEe-9tYVtpMatrg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_ZZT4IKgmEe-9tYVtpMatrg" name="getCurrentDirectory" method="_ZuGcZ6gmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_ZZT4IagmEe-9tYVtpMatrg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_ZZT4IqgmEe-9tYVtpMatrg" name="createFile" method="_ZuHDcKgmEe-9tYVtpMatrg">
                <ownedComment xmi:id="_Zuon46gmEe-9tYVtpMatrg">
                  <body>Build the name extension used for all files created by this tool. The nameExtension will be&#xD;
   * added to the base input file name so that all of the output files can be associated with the&#xD;
   * input file The file naming pattern is: baseFileNameFileType-NonDefaultParameterList where&#xD;
   * FileType is Schedule, SimInput, ReliabilityMatrix, or ReliabilityArray Default parameters are&#xD;
   * not identified in the NameExtension All parameters used to create the file, should be listed&#xD;
   * near the top of the file in the Parameter Section, followed by the file contents.&#xD;
   *</body>
                </ownedComment>
                <ownedParameter xmi:id="_ZZT4I6gmEe-9tYVtpMatrg" name="file">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ZZT4JKgmEe-9tYVtpMatrg" name="nameExtension">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ZZT4JagmEe-9tYVtpMatrg" name="suffix">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ZZT4JqgmEe-9tYVtpMatrg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_ZZUfMKgmEe-9tYVtpMatrg" name="createFile" method="_ZuHDdagmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_ZZUfMagmEe-9tYVtpMatrg" name="file">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ZZUfMqgmEe-9tYVtpMatrg" name="suffix">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ZZUfM6gmEe-9tYVtpMatrg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_ZZUfNKgmEe-9tYVtpMatrg" name="createDirectory" method="_ZuHDeagmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_ZZUfNagmEe-9tYVtpMatrg" name="directory">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ZZUfNqgmEe-9tYVtpMatrg" name="subDirectory">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ZZUfN6gmEe-9tYVtpMatrg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_ZZVGQKgmEe-9tYVtpMatrg" name="writeFile" method="_ZuHDfagmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_ZZVGQagmEe-9tYVtpMatrg" name="file">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ZZVGQqgmEe-9tYVtpMatrg" name="fileContents">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_ZZVGQ6gmEe-9tYVtpMatrg" name="readFile" method="_ZuHDgKgmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_ZZVGRKgmEe-9tYVtpMatrg" name="file">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ZZVGRagmEe-9tYVtpMatrg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_ZZWUYKgmEe-9tYVtpMatrg" name="Flow">
              <ownedComment xmi:id="_Zuon5KgmEe-9tYVtpMatrg">
                <body>@author sgoddard&#xD;
@author jcbates&#xD;
Allows for Schedulable Objects to be compared to flow charataristics and tracks faults  &#xD;
 *</body>
              </ownedComment>
              <generalization xmi:id="_ZqUvpqgmEe-9tYVtpMatrg" general="_ZakcZKgmEe-9tYVtpMatrg"/>
              <ownedAttribute xmi:id="_ZtKBMqgmEe-9tYVtpMatrg" name="UNDEFINED" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_ZtKBM6gmEe-9tYVtpMatrg" value="-1"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_ZtKBNKgmEe-9tYVtpMatrg" name="DEFAULT_FAULTS_TOLERATED" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_ZtKBNagmEe-9tYVtpMatrg" value="0"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_ZtKBNqgmEe-9tYVtpMatrg" name="DEFAULT_INDEX" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_ZtKoQKgmEe-9tYVtpMatrg" value="0"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_ZtKoQagmEe-9tYVtpMatrg" name="DEFAULT_PERIOD" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_ZtKoQqgmEe-9tYVtpMatrg" value="100"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_ZtKoQ6gmEe-9tYVtpMatrg" name="DEFAULT_DEADLINE" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_ZtKoRKgmEe-9tYVtpMatrg" value="100"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_ZtKoRagmEe-9tYVtpMatrg" name="DEFAULT_PHASE" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_ZtKoRqgmEe-9tYVtpMatrg" value="0"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_ZtKoR6gmEe-9tYVtpMatrg" name="initialPriority" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_ZtKoSKgmEe-9tYVtpMatrg" value="UNDEFINED"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_ZtKoSqgmEe-9tYVtpMatrg" name="index" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_ZtKoTKgmEe-9tYVtpMatrg" name="numTxPerLink" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_ZtLPUagmEe-9tYVtpMatrg" name="nodes" visibility="package" type="_Zp__gKgmEe-9tYVtpMatrg" association="_ZvSvNKgmEe-9tYVtpMatrg"/>
              <ownedAttribute xmi:id="_ZtLPVKgmEe-9tYVtpMatrg" name="linkTxAndTotalCost" visibility="package" type="_Zp__gKgmEe-9tYVtpMatrg" association="_ZvSvN6gmEe-9tYVtpMatrg"/>
              <ownedAttribute xmi:id="_ZtL2YqgmEe-9tYVtpMatrg" name="edges" visibility="package" type="_Zp__gKgmEe-9tYVtpMatrg" association="_ZvTWQagmEe-9tYVtpMatrg"/>
              <ownedAttribute xmi:id="_ZtL2ZagmEe-9tYVtpMatrg" name="nodePredecessor" visibility="package" type="_ZZxLIKgmEe-9tYVtpMatrg" association="_ZvTWRKgmEe-9tYVtpMatrg"/>
              <ownedAttribute xmi:id="_ZtMdcagmEe-9tYVtpMatrg" name="edgePredecessor" visibility="package" type="_ZZMjY6gmEe-9tYVtpMatrg" association="_ZvT9UagmEe-9tYVtpMatrg"/>
              <interfaceRealization xmi:id="_Zr_jkKgmEe-9tYVtpMatrg" client="_ZZWUYKgmEe-9tYVtpMatrg" supplier="_Zrw6EagmEe-9tYVtpMatrg" contract="_Zrw6EagmEe-9tYVtpMatrg"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ZuHqgKgmEe-9tYVtpMatrg" name="Flow" specification="_ZZXigKgmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_ZuHqgagmEe-9tYVtpMatrg" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ZuHqgqgmEe-9tYVtpMatrg" name="priority">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ZuHqg6gmEe-9tYVtpMatrg" name="index">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ZuHqhKgmEe-9tYVtpMatrg" type="_ZZWUYKgmEe-9tYVtpMatrg" direction="return"/>
                <language>java</language>
                <body>super(name, priority, DEFAULT_PERIOD, DEFAULT_DEADLINE, DEFAULT_PHASE);&#xD;
 	this.index = index;&#xD;
     /*&#xD;
      *  Default numTxPerLink is 1 transmission per link. Will be updated based&#xD;
      *  on flow updated based on flow length and reliability parameters&#xD;
      */&#xD;
     this.numTxPerLink = DEFAULT_FAULTS_TOLERATED + 1; &#xD;
     this.nodes = new ArrayList&lt;>();&#xD;
     this.edges  = new ArrayList&lt;>();&#xD;
     this.linkTxAndTotalCost = new ArrayList&lt;>();&#xD;
     this.edges = new ArrayList&lt;>();	&#xD;
     this.nodePredecessor = null;&#xD;
     this.edgePredecessor = null;&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ZuHqhagmEe-9tYVtpMatrg" name="Flow" specification="_ZZXih6gmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_ZuHqhqgmEe-9tYVtpMatrg" type="_ZZWUYKgmEe-9tYVtpMatrg" direction="return"/>
                <language>java</language>
                <body>super();&#xD;
 	this.index = DEFAULT_INDEX;&#xD;
 	/*&#xD;
 	 *  Default numTxPerLink is 1 transmission per link. Will be updated based&#xD;
 	 *  on flow updated based on flow length and reliability parameters&#xD;
 	 */&#xD;
 	this.numTxPerLink = DEFAULT_FAULTS_TOLERATED + 1; &#xD;
 	this.nodes = new ArrayList&lt;>();&#xD;
 	this.linkTxAndTotalCost = new ArrayList&lt;>();&#xD;
 	this.edges = new ArrayList&lt;>();&#xD;
 	this.nodePredecessor = null;&#xD;
     this.edgePredecessor = null;&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ZuHqh6gmEe-9tYVtpMatrg" name="getInitialPriority" specification="_ZZYJkqgmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_ZuHqiKgmEe-9tYVtpMatrg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>return initialPriority;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ZuHqiagmEe-9tYVtpMatrg" name="getIndex" specification="_ZZYJlKgmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_ZuHqiqgmEe-9tYVtpMatrg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>return index;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ZuHqi6gmEe-9tYVtpMatrg" name="getNumTxPerLink" specification="_ZZYJlqgmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_ZuHqjKgmEe-9tYVtpMatrg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>return numTxPerLink;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ZuHqjagmEe-9tYVtpMatrg" name="getNodes" specification="_ZZYJmKgmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_ZuHqjqgmEe-9tYVtpMatrg" type="_Zp__gKgmEe-9tYVtpMatrg" direction="return"/>
                <language>java</language>
                <body>return nodes;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ZuHqj6gmEe-9tYVtpMatrg" name="getEdges" specification="_ZZYwoagmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_ZuHqkKgmEe-9tYVtpMatrg" type="_Zp__gKgmEe-9tYVtpMatrg" direction="return"/>
                <language>java</language>
                <body>return edges;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ZuIRkKgmEe-9tYVtpMatrg" name="addEdge" specification="_ZqUIkKgmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_ZuIRkagmEe-9tYVtpMatrg" name="edge" type="_ZZMjY6gmEe-9tYVtpMatrg"/>
                <language>java</language>
                <body>/* set predecessor and add edge to flow */&#xD;
		edge.setPredecessor(edgePredecessor);&#xD;
		edges.add(edge);&#xD;
		/* update predecessor for next edge added */&#xD;
		edgePredecessor = edge;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ZuIRkqgmEe-9tYVtpMatrg" name="addNode" specification="_ZqUIkqgmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_ZuIRk6gmEe-9tYVtpMatrg" name="node" type="_ZZxLIKgmEe-9tYVtpMatrg"/>
                <language>java</language>
                <body>/* set predecessor and add edge to flow */&#xD;
		node.setPredecessor(nodePredecessor);&#xD;
		nodes.add(node);&#xD;
		/* update predecessor for next edge added */&#xD;
		nodePredecessor = node;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ZuIRlKgmEe-9tYVtpMatrg" name="getLinkTxAndTotalCost" specification="_ZZZXsagmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_ZuIRlagmEe-9tYVtpMatrg" type="_Zp__gKgmEe-9tYVtpMatrg" direction="return"/>
                <language>java</language>
                <body>return linkTxAndTotalCost;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ZuIRlqgmEe-9tYVtpMatrg" name="setInitialPriority" specification="_ZZZ-wKgmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_ZuIRl6gmEe-9tYVtpMatrg" name="initialPriority">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>this.initialPriority = initialPriority;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ZuIRmKgmEe-9tYVtpMatrg" name="setIndex" specification="_ZZZ-wqgmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_ZuIRmagmEe-9tYVtpMatrg" name="index">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>this.index = index;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ZuIRmqgmEe-9tYVtpMatrg" name="setNumTxPerLink" specification="_ZZZ-xKgmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_ZuIRm6gmEe-9tYVtpMatrg" name="numTxPerLink">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>this.numTxPerLink = numTxPerLink;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ZuI4oKgmEe-9tYVtpMatrg" name="setNodes" specification="_ZsBYwagmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_ZuI4oagmEe-9tYVtpMatrg" name="nodes" type="_Zp__gKgmEe-9tYVtpMatrg"/>
                <language>java</language>
                <body>this.nodes = nodes;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ZuI4oqgmEe-9tYVtpMatrg" name="setLinkTxAndTotalCost" specification="_ZsBYxKgmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_ZuI4o6gmEe-9tYVtpMatrg" name="linkTxAndTotalCost" type="_Zp__gKgmEe-9tYVtpMatrg"/>
                <language>java</language>
                <body>this.linkTxAndTotalCost = linkTxAndTotalCost;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ZuI4pKgmEe-9tYVtpMatrg" name="compareTo" specification="_ZqUvoKgmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_ZuI4pagmEe-9tYVtpMatrg" name="flow" type="_ZZWUYKgmEe-9tYVtpMatrg"/>
                <ownedParameter xmi:id="_ZuI4pqgmEe-9tYVtpMatrg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>return flow.getPriority() > this.getPriority() ? -1 : 1;&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ZuI4p6gmEe-9tYVtpMatrg" name="toString" specification="_ZZal0KgmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_ZuI4qKgmEe-9tYVtpMatrg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return getName();&#xD;
 </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_ZZXigKgmEe-9tYVtpMatrg" name="Flow" visibility="package" method="_ZuHqgKgmEe-9tYVtpMatrg">
                <eAnnotations xmi:id="_ZZXihKgmEe-9tYVtpMatrg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_ZZXihagmEe-9tYVtpMatrg" key="create"/>
                </eAnnotations>
                <ownedComment xmi:id="_ZupO8KgmEe-9tYVtpMatrg">
                  <body>Constructor that sets name, priority, and index</body>
                </ownedComment>
                <ownedParameter xmi:id="_ZZXigagmEe-9tYVtpMatrg" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ZZXigqgmEe-9tYVtpMatrg" name="priority">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ZZXig6gmEe-9tYVtpMatrg" name="index">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ZZXihqgmEe-9tYVtpMatrg" type="_ZZWUYKgmEe-9tYVtpMatrg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_ZZXih6gmEe-9tYVtpMatrg" name="Flow" visibility="package" method="_ZuHqhagmEe-9tYVtpMatrg">
                <eAnnotations xmi:id="_ZZXiiKgmEe-9tYVtpMatrg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_ZZYJkKgmEe-9tYVtpMatrg" key="create"/>
                </eAnnotations>
                <ownedComment xmi:id="_ZupO8agmEe-9tYVtpMatrg">
                  <body>Constructor</body>
                </ownedComment>
                <ownedParameter xmi:id="_ZZYJkagmEe-9tYVtpMatrg" type="_ZZWUYKgmEe-9tYVtpMatrg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_ZZYJkqgmEe-9tYVtpMatrg" name="getInitialPriority" method="_ZuHqh6gmEe-9tYVtpMatrg">
                <ownedComment xmi:id="_ZupO8qgmEe-9tYVtpMatrg">
                  <body>@return the initialPriority</body>
                </ownedComment>
                <ownedParameter xmi:id="_ZZYJk6gmEe-9tYVtpMatrg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_ZZYJlKgmEe-9tYVtpMatrg" name="getIndex" method="_ZuHqiagmEe-9tYVtpMatrg">
                <ownedComment xmi:id="_ZupO86gmEe-9tYVtpMatrg">
                  <body>@return the index</body>
                </ownedComment>
                <ownedParameter xmi:id="_ZZYJlagmEe-9tYVtpMatrg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_ZZYJlqgmEe-9tYVtpMatrg" name="getNumTxPerLink" method="_ZuHqi6gmEe-9tYVtpMatrg">
                <ownedComment xmi:id="_ZupO9KgmEe-9tYVtpMatrg">
                  <body>@return the numTxPerLink</body>
                </ownedComment>
                <ownedParameter xmi:id="_ZZYJl6gmEe-9tYVtpMatrg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_ZZYJmKgmEe-9tYVtpMatrg" name="getNodes" method="_ZuHqjagmEe-9tYVtpMatrg">
                <ownedComment xmi:id="_ZupO9agmEe-9tYVtpMatrg">
                  <body>@return the nodes</body>
                </ownedComment>
                <ownedParameter xmi:id="_ZsAxsKgmEe-9tYVtpMatrg" type="_Zp__gKgmEe-9tYVtpMatrg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_ZZYwoagmEe-9tYVtpMatrg" name="getEdges" method="_ZuHqj6gmEe-9tYVtpMatrg">
                <ownedComment xmi:id="_ZupO9qgmEe-9tYVtpMatrg">
                  <body>@return the nodes</body>
                </ownedComment>
                <ownedParameter xmi:id="_ZsAxsagmEe-9tYVtpMatrg" type="_Zp__gKgmEe-9tYVtpMatrg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_ZZZXsagmEe-9tYVtpMatrg" name="getLinkTxAndTotalCost" method="_ZuIRlKgmEe-9tYVtpMatrg">
                <ownedComment xmi:id="_ZupO-agmEe-9tYVtpMatrg">
                  <body>@return the linkTxAndTotalCost</body>
                </ownedComment>
                <ownedParameter xmi:id="_ZsBYwKgmEe-9tYVtpMatrg" type="_Zp__gKgmEe-9tYVtpMatrg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_ZZZ-wKgmEe-9tYVtpMatrg" name="setInitialPriority" method="_ZuIRlqgmEe-9tYVtpMatrg">
                <ownedComment xmi:id="_ZupO-qgmEe-9tYVtpMatrg">
                  <body>@param initialPriority the initialPriority to set</body>
                </ownedComment>
                <ownedParameter xmi:id="_ZZZ-wagmEe-9tYVtpMatrg" name="initialPriority">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_ZZZ-wqgmEe-9tYVtpMatrg" name="setIndex" method="_ZuIRmKgmEe-9tYVtpMatrg">
                <ownedComment xmi:id="_ZupO-6gmEe-9tYVtpMatrg">
                  <body>@param index the index to set</body>
                </ownedComment>
                <ownedParameter xmi:id="_ZZZ-w6gmEe-9tYVtpMatrg" name="index">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_ZZZ-xKgmEe-9tYVtpMatrg" name="setNumTxPerLink" method="_ZuIRmqgmEe-9tYVtpMatrg">
                <ownedComment xmi:id="_ZupO_KgmEe-9tYVtpMatrg">
                  <body>@param numTxPerLink the numTxPerLink to set</body>
                </ownedComment>
                <ownedParameter xmi:id="_ZZZ-xagmEe-9tYVtpMatrg" name="numTxPerLink">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_ZZal0KgmEe-9tYVtpMatrg" name="toString" method="_ZuI4p6gmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_ZZal0agmEe-9tYVtpMatrg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_ZqUIkKgmEe-9tYVtpMatrg" name="addEdge" method="_ZuIRkKgmEe-9tYVtpMatrg">
                <ownedComment xmi:id="_ZupO96gmEe-9tYVtpMatrg">
                  <body>@param takes in an edge &#xD;
	 * Add and edge to the flow.</body>
                </ownedComment>
                <ownedParameter xmi:id="_ZqUIkagmEe-9tYVtpMatrg" name="edge" type="_ZZMjY6gmEe-9tYVtpMatrg"/>
              </ownedOperation>
              <ownedOperation xmi:id="_ZqUIkqgmEe-9tYVtpMatrg" name="addNode" method="_ZuIRkqgmEe-9tYVtpMatrg">
                <ownedComment xmi:id="_ZupO-KgmEe-9tYVtpMatrg">
                  <body>@param takes in a node&#xD;
	 * Add and edge to the flow.</body>
                </ownedComment>
                <ownedParameter xmi:id="_ZqUIk6gmEe-9tYVtpMatrg" name="node" type="_ZZxLIKgmEe-9tYVtpMatrg"/>
              </ownedOperation>
              <ownedOperation xmi:id="_ZqUvoKgmEe-9tYVtpMatrg" name="compareTo" method="_ZuI4pKgmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_ZqUvoagmEe-9tYVtpMatrg" name="flow" type="_ZZWUYKgmEe-9tYVtpMatrg"/>
                <ownedParameter xmi:id="_ZqUvoqgmEe-9tYVtpMatrg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_ZsBYwagmEe-9tYVtpMatrg" name="setNodes" method="_ZuI4oKgmEe-9tYVtpMatrg">
                <ownedComment xmi:id="_ZupO_agmEe-9tYVtpMatrg">
                  <body>@param nodes the nodes to set</body>
                </ownedComment>
                <ownedParameter xmi:id="_ZsBYwqgmEe-9tYVtpMatrg" name="nodes" type="_Zp__gKgmEe-9tYVtpMatrg"/>
              </ownedOperation>
              <ownedOperation xmi:id="_ZsBYxKgmEe-9tYVtpMatrg" name="setLinkTxAndTotalCost" method="_ZuI4oqgmEe-9tYVtpMatrg">
                <ownedComment xmi:id="_ZupO_qgmEe-9tYVtpMatrg">
                  <body>@param linkTxAndTotalCost the linkTxAndTotalCost to set</body>
                </ownedComment>
                <ownedParameter xmi:id="_ZsBYxagmEe-9tYVtpMatrg" name="linkTxAndTotalCost" type="_Zp__gKgmEe-9tYVtpMatrg"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_ZZdpIKgmEe-9tYVtpMatrg" name="FlowMap">
              <ownedComment xmi:id="_ZupO_6gmEe-9tYVtpMatrg">
                <body>FlowMap creates a mapping from flow name to &#xD;
flow object (&lt;name, Flow>).&#xD;
&#xD;
@author sgoddard2&#xD;
 *</body>
              </ownedComment>
              <generalization xmi:id="_ZqV9wKgmEe-9tYVtpMatrg" general="_ZYh1AKgmEe-9tYVtpMatrg"/>
              <ownedAttribute xmi:id="_ZtMdc6gmEe-9tYVtpMatrg" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_ZtNEgKgmEe-9tYVtpMatrg" value="1L"/>
              </ownedAttribute>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_ZZeQMKgmEe-9tYVtpMatrg" name="FlowNodeToActivationMap">
              <ownedComment xmi:id="_ZupPAKgmEe-9tYVtpMatrg">
                <body>FlowNodeToActivationMap creates a mapping from flow node  &#xD;
to an activation (&lt;Node, Activation>).&#xD;
&#xD;
@author sgoddard2&#xD;
 *</body>
              </ownedComment>
              <generalization xmi:id="_ZqWk0agmEe-9tYVtpMatrg" general="_ZYh1AKgmEe-9tYVtpMatrg"/>
              <ownedAttribute xmi:id="_ZtNEgagmEe-9tYVtpMatrg" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_ZtNEgqgmEe-9tYVtpMatrg" value="1L"/>
              </ownedAttribute>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_ZZe3QKgmEe-9tYVtpMatrg" name="GraphViz">
              <ownedComment xmi:id="_ZupPAagmEe-9tYVtpMatrg">
                <body>@author sgoddard2&#xD;
Copyright © 2020 Steve Goddard. All rights reserved.&#xD;
 *</body>
              </ownedComment>
              <generalization xmi:id="_ZqXy-KgmEe-9tYVtpMatrg" general="_ZbJEIKgmEe-9tYVtpMatrg"/>
              <ownedAttribute xmi:id="_ZtNEg6gmEe-9tYVtpMatrg" name="EMPTY" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_ZtNEhKgmEe-9tYVtpMatrg" value="&quot;&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_ZtNEhagmEe-9tYVtpMatrg" name="GRAPH_VIZ_SUFFIX" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_ZtNEhqgmEe-9tYVtpMatrg" value="&quot;.gv&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_ZtNEh6gmEe-9tYVtpMatrg" name="gvFileContents" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_ZtNEiagmEe-9tYVtpMatrg" name="gvTitleCaption" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_ZtNrkagmEe-9tYVtpMatrg" name="wfm" visibility="package" type="_ZZSC8KgmEe-9tYVtpMatrg" association="_ZvT9VKgmEe-9tYVtpMatrg"/>
              <ownedAttribute xmi:id="_ZtNrk6gmEe-9tYVtpMatrg" name="graphFile" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_ZtNrlagmEe-9tYVtpMatrg" name="verbose" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_ZtNrl6gmEe-9tYVtpMatrg" name="gv" visibility="package" type="_ZZe3QKgmEe-9tYVtpMatrg" association="_ZvT9V6gmEe-9tYVtpMatrg"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ZuI4qagmEe-9tYVtpMatrg" name="GraphViz" specification="_ZqXL4agmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_ZuI4qqgmEe-9tYVtpMatrg" name="wfm" type="_ZZSC8KgmEe-9tYVtpMatrg"/>
                <ownedParameter xmi:id="_ZuI4q6gmEe-9tYVtpMatrg" name="graphFile">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ZuI4rKgmEe-9tYVtpMatrg" type="_ZZe3QKgmEe-9tYVtpMatrg" direction="return"/>
                <language>java</language>
                <body>super(wfm, EMPTY, GRAPH_VIZ_SUFFIX); // VisualizationObject constructor&#xD;
     this.wfm = wfm; // used to access the basic WARP file management functions&#xD;
     this.graphFile = graphFile;&#xD;
     this.gv = this;&#xD;
     verbose = false;&#xD;
     createGraphVizContent();&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ZuI4ragmEe-9tYVtpMatrg" name="GraphViz" specification="_ZqXy8KgmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_ZuI4rqgmEe-9tYVtpMatrg" name="wfm" type="_ZZSC8KgmEe-9tYVtpMatrg"/>
                <ownedParameter xmi:id="_ZuI4r6gmEe-9tYVtpMatrg" name="graphFile">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ZuI4sKgmEe-9tYVtpMatrg" name="verbose">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ZuI4sagmEe-9tYVtpMatrg" type="_ZZe3QKgmEe-9tYVtpMatrg" direction="return"/>
                <language>java</language>
                <body>super(wfm, EMPTY, GRAPH_VIZ_SUFFIX); // VisualizationObject constructor&#xD;
     this.wfm = wfm; // used to access the basic WARP file management functions&#xD;
     this.graphFile = graphFile;&#xD;
     this.gv = this;&#xD;
     this.verbose = verbose;&#xD;
     createGraphVizContent();&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ZuI4sqgmEe-9tYVtpMatrg" name="visualization" specification="_ZZfeUKgmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_ZuI4s6gmEe-9tYVtpMatrg" type="_ZZLVQKgmEe-9tYVtpMatrg" direction="return"/>
                <language>java</language>
                <body>return new Description(getGraphVizContent());&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ZuJfsKgmEe-9tYVtpMatrg" name="initializeGraphVizContent" specification="_ZZgscKgmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_ZuJfsagmEe-9tYVtpMatrg" name="graphName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>/*start the gv file by adding the 1st line to the contents string */&#xD;
     gvFileContents = String.format(&quot;strict digraph %s {\n&quot;,graphName);&#xD;
     /* remove 'strict' if multiple edges in the same direction are to be shown */&#xD;
     gvTitleCaption = &quot;labelloc  =  \&quot;t\&quot; \n&quot;; // Place the rentered graph's title on top.&#xD;
     /* &#xD;
      * create a title caption for the rendered graph in the .gv file&#xD;
      * label string is in html format, so need an end delimeter after adding flows&#xD;
      */&#xD;
     gvTitleCaption = String.format(gvTitleCaption + &quot;label = &lt;Graph %s &lt;br/>\n&quot;,graphName);&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ZuJfsqgmEe-9tYVtpMatrg" name="finalizeGraphVizContent" specification="_ZZh6kKgmEe-9tYVtpMatrg">
                <language>java</language>
                <body>/* &#xD;
      * wrap up the gv file content by finalizing title caption&#xD;
      * then add it to the file contents and terminate the graph viz structure&#xD;
      */&#xD;
     gvTitleCaption += &quot;>\n&quot;;&#xD;
     /* &#xD;
      * end the gv file by adding the caption for rendering and the last line &#xD;
      * to the contents string&#xD;
      */&#xD;
     gvFileContents = gvFileContents + gvTitleCaption + &quot;} \n&quot;;  &#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ZuJfs6gmEe-9tYVtpMatrg" name="getGraphVizContent" specification="_ZZh6kagmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_ZuJftKgmEe-9tYVtpMatrg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return gvFileContents;&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ZuKGwKgmEe-9tYVtpMatrg" name="createGraphVizContent" specification="_ZZh6k6gmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_ZuKGwagmEe-9tYVtpMatrg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>/*&#xD;
 	 * GraphVizListener reads the graphFile string and calls the functions&#xD;
 	 * in this class, as it walks the input graphFile structure to build&#xD;
 	 * the GraphViz contents.&#xD;
 	 */&#xD;
     GraphVizListener.buildGraphViz(gv); &#xD;
     if (verbose) {&#xD;
     	System.out.println(&quot;************************************&quot;);&#xD;
     	System.out.println(&quot;GraphViz File Contents:&quot;);&#xD;
     	System.out.println(getGraphVizContent());&#xD;
     	System.out.println(&quot;************************************\n&quot;);&#xD;
     }&#xD;
     return getGraphVizContent();&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ZuKGwqgmEe-9tYVtpMatrg" name="addFlowToGraphViz" specification="_ZZh6lagmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_ZuKGw6gmEe-9tYVtpMatrg" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>/* add a 3 spaces before the start of the chain defining this flow to the gv contents string */&#xD;
     gvFileContents = gvFileContents + &quot;   &quot;;  &#xD;
     gvTitleCaption = String.format(gvTitleCaption + &quot;Flow %s: &quot;, flowName);&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ZuKGxKgmEe-9tYVtpMatrg" name="addSrcNodeToGraphViz" specification="_ZZihoKgmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_ZuKGxagmEe-9tYVtpMatrg" name="nodeName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>String fileContents = String.format(&quot; %s  ->&quot;,nodeName);&#xD;
 	String titleCaption = String.format(&quot;%s -&amp;#62; &quot;,nodeName);&#xD;
 	addNodeName(fileContents,titleCaption);&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ZuKt0KgmEe-9tYVtpMatrg" name="addSnkNodeToGraphViz" specification="_ZZihoqgmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_ZuKt0agmEe-9tYVtpMatrg" name="nodeName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>String fileContents = String.format(&quot; %s&quot;,nodeName);&#xD;
 	String titleCaption = String.format(&quot;%s&quot;,nodeName);&#xD;
 	addNodeName(fileContents,titleCaption);&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ZuKt0qgmEe-9tYVtpMatrg" name="finalizeCurrentFlowInGraphViz" specification="_ZZihpKgmEe-9tYVtpMatrg">
                <language>java</language>
                <body>/* add the ';' and '\n' to end this line of the chain defined in this flow */&#xD;
     gvFileContents = gvFileContents + &quot;; \n&quot; ;&#xD;
     gvTitleCaption += &quot;&lt;br/>\n&quot;; // terminate this line of the rendered graph caption&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ZuKt06gmEe-9tYVtpMatrg" name="addNodeName" specification="_ZZihpagmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_ZuKt1KgmEe-9tYVtpMatrg" name="fileContents">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ZuKt1agmEe-9tYVtpMatrg" name="titleCaption">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>/* add the node name to the gv file contents string */&#xD;
     gvFileContents += fileContents;  &#xD;
     /* add the node name and edge to this line of the rendered graph caption */&#xD;
     gvTitleCaption += titleCaption;&#xD;
 </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_ZZfeUKgmEe-9tYVtpMatrg" name="visualization" method="_ZuI4sqgmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_ZqXy96gmEe-9tYVtpMatrg" type="_ZZLVQKgmEe-9tYVtpMatrg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_ZZgscKgmEe-9tYVtpMatrg" name="initializeGraphVizContent" method="_ZuJfsKgmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_ZZgscagmEe-9tYVtpMatrg" name="graphName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_ZZh6kKgmEe-9tYVtpMatrg" name="finalizeGraphVizContent" method="_ZuJfsqgmEe-9tYVtpMatrg"/>
              <ownedOperation xmi:id="_ZZh6kagmEe-9tYVtpMatrg" name="getGraphVizContent" method="_ZuJfs6gmEe-9tYVtpMatrg">
                <ownedComment xmi:id="_ZupPAqgmEe-9tYVtpMatrg">
                  <body>public function to return the string gvFileContents.&#xD;
     * designed to be called after finalizeGraphVizContent() is called by the listener&#xD;
     * but will return the current state of the contents string anytime it is called</body>
                </ownedComment>
                <ownedParameter xmi:id="_ZZh6kqgmEe-9tYVtpMatrg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_ZZh6k6gmEe-9tYVtpMatrg" name="createGraphVizContent" method="_ZuKGwKgmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_ZZh6lKgmEe-9tYVtpMatrg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_ZZh6lagmEe-9tYVtpMatrg" name="addFlowToGraphViz" method="_ZuKGwqgmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_ZZh6lqgmEe-9tYVtpMatrg" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_ZZihoKgmEe-9tYVtpMatrg" name="addSrcNodeToGraphViz" method="_ZuKGxKgmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_ZZihoagmEe-9tYVtpMatrg" name="nodeName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_ZZihoqgmEe-9tYVtpMatrg" name="addSnkNodeToGraphViz" method="_ZuKt0KgmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_ZZiho6gmEe-9tYVtpMatrg" name="nodeName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_ZZihpKgmEe-9tYVtpMatrg" name="finalizeCurrentFlowInGraphViz" method="_ZuKt0qgmEe-9tYVtpMatrg"/>
              <ownedOperation xmi:id="_ZZihpagmEe-9tYVtpMatrg" name="addNodeName" visibility="private" method="_ZuKt06gmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_ZZihpqgmEe-9tYVtpMatrg" name="fileContents">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ZZihp6gmEe-9tYVtpMatrg" name="titleCaption">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_ZqXL4agmEe-9tYVtpMatrg" name="GraphViz" visibility="package" method="_ZuI4qagmEe-9tYVtpMatrg">
                <eAnnotations xmi:id="_ZqXL5KgmEe-9tYVtpMatrg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_ZqXL5agmEe-9tYVtpMatrg" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_ZqXL4qgmEe-9tYVtpMatrg" name="wfm" type="_ZZSC8KgmEe-9tYVtpMatrg"/>
                <ownedParameter xmi:id="_ZqXL46gmEe-9tYVtpMatrg" name="graphFile">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ZqXL5qgmEe-9tYVtpMatrg" type="_ZZe3QKgmEe-9tYVtpMatrg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_ZqXy8KgmEe-9tYVtpMatrg" name="GraphViz" visibility="package" method="_ZuI4ragmEe-9tYVtpMatrg">
                <eAnnotations xmi:id="_ZqXy9KgmEe-9tYVtpMatrg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_ZqXy9agmEe-9tYVtpMatrg" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_ZqXy8agmEe-9tYVtpMatrg" name="wfm" type="_ZZSC8KgmEe-9tYVtpMatrg"/>
                <ownedParameter xmi:id="_ZqXy8qgmEe-9tYVtpMatrg" name="graphFile">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ZqXy86gmEe-9tYVtpMatrg" name="verbose">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ZqXy9qgmEe-9tYVtpMatrg" type="_ZZe3QKgmEe-9tYVtpMatrg" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_ZZjvwKgmEe-9tYVtpMatrg" name="GraphVizListener" isLeaf="true">
              <ownedComment xmi:id="_ZupPA6gmEe-9tYVtpMatrg">
                <body>Extend WARP Base Listener Class to extract info for Graph Viz file.&#xD;
GraphVizListener reads the graphFile string and calls the functions&#xD;
in this class, as it walks the input graphFile structure to build&#xD;
the GraphViz contents.</body>
              </ownedComment>
              <generalization xmi:id="_ZsDN8KgmEe-9tYVtpMatrg" general="_ZqaPM6gmEe-9tYVtpMatrg"/>
              <ownedAttribute xmi:id="_ZtOSoagmEe-9tYVtpMatrg" name="gv" visibility="package" type="_ZZe3QKgmEe-9tYVtpMatrg" association="_ZvUkYagmEe-9tYVtpMatrg"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ZuLU4KgmEe-9tYVtpMatrg" name="GraphVizListener" specification="_ZqbdUagmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_ZuLU4agmEe-9tYVtpMatrg" name="gv" type="_ZZe3QKgmEe-9tYVtpMatrg"/>
                <ownedParameter xmi:id="_ZuLU4qgmEe-9tYVtpMatrg" type="_ZZjvwKgmEe-9tYVtpMatrg" direction="return"/>
                <language>java</language>
                <body>this.gv = gv; // use GraphViz object passed to this object&#xD;
  // Read input file and build AST of graphFile&#xD;
     try {&#xD;
     	CharStream inputGraph = CharStreams.fromString(gv.graphFile);&#xD;
     	var lexer = new WARPLexer(inputGraph);&#xD;
     	var tokens = new CommonTokenStream(lexer);&#xD;
     	var parser = new WARPParser(tokens);&#xD;
     	ParseTree warpTree = parser.warp(); // begin parsing at rule 'warp'&#xD;
     	var warp = new ParseTreeWalker();&#xD;
     	 // Now populate build the Graph Viz file content by walking the input Graph tokens&#xD;
     	warp.walk(this, warpTree);&#xD;
     } catch (Exception e) {&#xD;
     	e.printStackTrace();&#xD;
     	System.err.println(&quot;ERROR: Unable to parse graphFile&quot; + e.getMessage());&#xD;
     }&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ZuLU46gmEe-9tYVtpMatrg" name="buildGraphViz" specification="_ZqbdVqgmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_ZuLU5KgmEe-9tYVtpMatrg" name="gv" type="_ZZe3QKgmEe-9tYVtpMatrg"/>
                <language>java</language>
                <body>/*&#xD;
 	 * Create the listener object, which will read the workLoad &#xD;
 	 * description and then buid the node and flow objects that&#xD;
 	 * instantiates the workLoad. This object is not needed&#xD;
 	 * after that.&#xD;
 	 */&#xD;
 	new GraphVizListener(gv); &#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ZuLU5agmEe-9tYVtpMatrg" name="enterWarpName" specification="_ZqcEY6gmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_ZuLU5qgmEe-9tYVtpMatrg" name="ctx" type="_ZqcEYagmEe-9tYVtpMatrg"/>
                <language>java</language>
                <body>var graphName = ctx.getText();  // get the name of the graph from name&#xD;
     gv.initializeGraphVizContent(graphName); // start creating the gv file content&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ZuLU56gmEe-9tYVtpMatrg" name="exitWarp" specification="_ZqdSgagmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_ZuLU6KgmEe-9tYVtpMatrg" name="ctx" type="_Zqcrc6gmEe-9tYVtpMatrg"/>
                <language>java</language>
                <body>gv.finalizeGraphVizContent();&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ZuL78KgmEe-9tYVtpMatrg" name="enterFlowName" specification="_Zqd5kagmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_ZuL78agmEe-9tYVtpMatrg" name="ctx" type="_ZqdShqgmEe-9tYVtpMatrg"/>
                <language>java</language>
                <body>var currentFlow = ctx.getText();&#xD;
     gv.addFlowToGraphViz(currentFlow);&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ZuL78qgmEe-9tYVtpMatrg" name="exitSrcNode" specification="_ZqegoagmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_ZuL786gmEe-9tYVtpMatrg" name="ctx" type="_Zqd5lqgmEe-9tYVtpMatrg"/>
                <language>java</language>
                <body>var nodeName = ctx.getText(); // get the src node name&#xD;
     gv.addSrcNodeToGraphViz(nodeName);&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ZuL79KgmEe-9tYVtpMatrg" name="exitSnkNode" specification="_ZqfHtKgmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_ZuL79agmEe-9tYVtpMatrg" name="ctx" type="_ZqfHsqgmEe-9tYVtpMatrg"/>
                <language>java</language>
                <body>var nodeName = ctx.getText(); // get the snk node name&#xD;
     gv.addSnkNodeToGraphViz(nodeName);&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ZuL79qgmEe-9tYVtpMatrg" name="exitFlow" specification="_ZqfuxKgmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_ZuL796gmEe-9tYVtpMatrg" name="ctx" type="_ZqfuwqgmEe-9tYVtpMatrg"/>
                <language>java</language>
                <body>gv.finalizeCurrentFlowInGraphViz();&#xD;
 </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_ZqbdUagmEe-9tYVtpMatrg" name="GraphVizListener" visibility="private" method="_ZuLU4KgmEe-9tYVtpMatrg">
                <eAnnotations xmi:id="_ZqbdU6gmEe-9tYVtpMatrg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_ZqbdVKgmEe-9tYVtpMatrg" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_ZqbdUqgmEe-9tYVtpMatrg" name="gv" type="_ZZe3QKgmEe-9tYVtpMatrg"/>
                <ownedParameter xmi:id="_ZqbdVagmEe-9tYVtpMatrg" type="_ZZjvwKgmEe-9tYVtpMatrg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_ZqbdVqgmEe-9tYVtpMatrg" name="buildGraphViz" isStatic="true" method="_ZuLU46gmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_ZqcEYKgmEe-9tYVtpMatrg" name="gv" type="_ZZe3QKgmEe-9tYVtpMatrg"/>
              </ownedOperation>
              <ownedOperation xmi:id="_ZqcEY6gmEe-9tYVtpMatrg" name="enterWarpName" method="_ZuLU5agmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_ZqcEZKgmEe-9tYVtpMatrg" name="ctx" type="_ZqcEYagmEe-9tYVtpMatrg"/>
              </ownedOperation>
              <ownedOperation xmi:id="_ZqdSgagmEe-9tYVtpMatrg" name="exitWarp" method="_ZuLU56gmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_ZqdSgqgmEe-9tYVtpMatrg" name="ctx" type="_Zqcrc6gmEe-9tYVtpMatrg"/>
              </ownedOperation>
              <ownedOperation xmi:id="_Zqd5kagmEe-9tYVtpMatrg" name="enterFlowName" method="_ZuL78KgmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_Zqd5kqgmEe-9tYVtpMatrg" name="ctx" type="_ZqdShqgmEe-9tYVtpMatrg"/>
              </ownedOperation>
              <ownedOperation xmi:id="_ZqegoagmEe-9tYVtpMatrg" name="exitSrcNode" method="_ZuL78qgmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_ZqegoqgmEe-9tYVtpMatrg" name="ctx" type="_Zqd5lqgmEe-9tYVtpMatrg"/>
              </ownedOperation>
              <ownedOperation xmi:id="_ZqfHtKgmEe-9tYVtpMatrg" name="exitSnkNode" method="_ZuL79KgmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_ZqfHtagmEe-9tYVtpMatrg" name="ctx" type="_ZqfHsqgmEe-9tYVtpMatrg"/>
              </ownedOperation>
              <ownedOperation xmi:id="_ZqfuxKgmEe-9tYVtpMatrg" name="exitFlow" method="_ZuL79qgmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_ZqgV0KgmEe-9tYVtpMatrg" name="ctx" type="_ZqfuwqgmEe-9tYVtpMatrg"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_ZZlk8KgmEe-9tYVtpMatrg" name="GuiVisualization">
              <ownedComment xmi:id="_ZupPBKgmEe-9tYVtpMatrg">
                <body>GuiVisualization Class to create a Java Swing window that displays a table of data with column&#xD;
headings.&#xD;
&#xD;
@author sgoddard&#xD;
@version 1.5&#xD;
 *</body>
              </ownedComment>
              <ownedAttribute xmi:id="_ZtOSo6gmEe-9tYVtpMatrg" name="frame" visibility="package" type="_Zqg84qgmEe-9tYVtpMatrg" association="_ZvUkZKgmEe-9tYVtpMatrg"/>
              <ownedAttribute xmi:id="_ZtO5sagmEe-9tYVtpMatrg" name="jtable" visibility="package" type="_Zqhj86gmEe-9tYVtpMatrg" association="_ZvVLcagmEe-9tYVtpMatrg"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ZuL7-KgmEe-9tYVtpMatrg" name="GuiVisualization" specification="_ZZmMAKgmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_ZuL7-agmEe-9tYVtpMatrg" name="title">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ZuL7-qgmEe-9tYVtpMatrg" name="columnNames">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZuL7-6gmEe-9tYVtpMatrg" value="*"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ZuL7_KgmEe-9tYVtpMatrg" name="table">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZuL7_agmEe-9tYVtpMatrg" value="*"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ZuL7_qgmEe-9tYVtpMatrg" type="_ZZlk8KgmEe-9tYVtpMatrg" direction="return"/>
                <language>java</language>
                <body>// Frame initialization&#xD;
 frame = new JFrame();&#xD;
&#xD;
 // Frame Title&#xD;
 frame.setTitle(title);&#xD;
&#xD;
 // Initializing the JTable with input parameters&#xD;
 jtable = new JTable(table, columnNames);&#xD;
 jtable.setBounds(30, 40, 200, 300); // default size&#xD;
 // resizeColumnWidth(jtable); // uncomment to auto size column widths&#xD;
&#xD;
 // attached the table to a JScrollPane and then add both to the frame&#xD;
 JScrollPane sp = new JScrollPane(jtable); // gives table a vertical scrollbar&#xD;
 frame.add(sp);&#xD;
 // Frame Size&#xD;
 frame.setSize(500, 200);&#xD;
 jtable.setAutoResizeMode(JTable.AUTO_RESIZE_OFF); // creates horizontal scrollbar&#xD;
 frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);&#xD;
 // Frame Visible = false&#xD;
 frame.setVisible(false);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ZuL7_6gmEe-9tYVtpMatrg" name="setVisible" specification="_ZZmzEqgmEe-9tYVtpMatrg">
                <language>java</language>
                <body>frame.setVisible(true);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ZuL8AKgmEe-9tYVtpMatrg" name="resizeColumnWidth" specification="_ZsD1AKgmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_ZuL8AagmEe-9tYVtpMatrg" name="table" type="_Zqhj86gmEe-9tYVtpMatrg"/>
                <language>java</language>
                <body>final TableColumnModel columnModel = table.getColumnModel();&#xD;
 for (int column = 0; column &lt; table.getColumnCount(); column++) {&#xD;
   int width = 70; // Min width&#xD;
   for (int row = 0; row &lt; table.getRowCount(); row++) {&#xD;
     TableCellRenderer renderer = table.getCellRenderer(row, column);&#xD;
     Component comp = table.prepareRenderer(renderer, row, column);&#xD;
     width = Math.max(comp.getPreferredSize().width + 5, width);&#xD;
   }&#xD;
   if (width > 300)&#xD;
     width = 300;&#xD;
   columnModel.getColumn(column).setPreferredWidth(width);&#xD;
 }&#xD;
  </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_ZZmMAKgmEe-9tYVtpMatrg" name="GuiVisualization" method="_ZuL7-KgmEe-9tYVtpMatrg">
                <eAnnotations xmi:id="_ZZmMBKgmEe-9tYVtpMatrg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_ZZmMBagmEe-9tYVtpMatrg" key="create"/>
                </eAnnotations>
                <ownedComment xmi:id="_Zup2AKgmEe-9tYVtpMatrg">
                  <body>Constructor to create a Java Swing Window for a table of data with column headings. The window&#xD;
   * is initially not visible, and is made visible by a call to setVisible().&#xD;
   * &#xD;
   * @param title Window title&#xD;
   * @param columnNames Column heading names&#xD;
   * @param table table of strings representing the data</body>
                </ownedComment>
                <ownedParameter xmi:id="_ZZmMAagmEe-9tYVtpMatrg" name="title">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ZZmMAqgmEe-9tYVtpMatrg" name="columnNames">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZZmMB6gmEe-9tYVtpMatrg" value="*"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ZZmMA6gmEe-9tYVtpMatrg" name="table">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZZmzEKgmEe-9tYVtpMatrg" value="*"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ZZmMBqgmEe-9tYVtpMatrg" type="_ZZlk8KgmEe-9tYVtpMatrg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_ZZmzEqgmEe-9tYVtpMatrg" name="setVisible" method="_ZuL7_6gmEe-9tYVtpMatrg">
                <ownedComment xmi:id="_Zup2AagmEe-9tYVtpMatrg">
                  <body>Make the table visible.</body>
                </ownedComment>
              </ownedOperation>
              <ownedOperation xmi:id="_ZsD1AKgmEe-9tYVtpMatrg" name="resizeColumnWidth" visibility="private" method="_ZuL8AKgmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_ZsD1AagmEe-9tYVtpMatrg" name="table" type="_Zqhj86gmEe-9tYVtpMatrg"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_ZZnaIKgmEe-9tYVtpMatrg" name="InputGraphFile">
              <ownedComment xmi:id="_Zup2AqgmEe-9tYVtpMatrg">
                <body>@author sgoddard&#xD;
 *</body>
              </ownedComment>
              <ownedAttribute xmi:id="_ZtO5s6gmEe-9tYVtpMatrg" name="UNKNOWN" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_ZtO5tKgmEe-9tYVtpMatrg" value="&quot;Unknown&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_ZtO5tagmEe-9tYVtpMatrg" name="wfm" visibility="private" type="_ZZSC8KgmEe-9tYVtpMatrg" association="_ZvVLdKgmEe-9tYVtpMatrg"/>
              <ownedAttribute xmi:id="_ZtO5t6gmEe-9tYVtpMatrg" name="graphFileName" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_ZtPgwKgmEe-9tYVtpMatrg" name="verbose" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_ZtPgwqgmEe-9tYVtpMatrg" name="graphFileContents" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_ZtPgw6gmEe-9tYVtpMatrg" value="UNKNOWN"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ZuMjAKgmEe-9tYVtpMatrg" name="InputGraphFile" specification="_ZqkAMagmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_ZuMjAagmEe-9tYVtpMatrg" name="fm" type="_ZZSC8KgmEe-9tYVtpMatrg"/>
                <ownedParameter xmi:id="_ZuMjAqgmEe-9tYVtpMatrg" type="_ZZnaIKgmEe-9tYVtpMatrg" direction="return"/>
                <language>java</language>
                <body>wfm = fm;&#xD;
		graphFileName = wfm.getBaseDirectory();  // input graph file name, accessible only within this class&#xD;
		verbose = false; // initialize verbose to false&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ZuMjA6gmEe-9tYVtpMatrg" name="InputGraphFile" specification="_ZqknQKgmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_ZuMjBKgmEe-9tYVtpMatrg" name="fm" type="_ZZSC8KgmEe-9tYVtpMatrg"/>
                <ownedParameter xmi:id="_ZuMjBagmEe-9tYVtpMatrg" name="verbose">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ZuMjBqgmEe-9tYVtpMatrg" type="_ZZnaIKgmEe-9tYVtpMatrg" direction="return"/>
                <language>java</language>
                <body>wfm = fm;&#xD;
		graphFileName = wfm.getBaseDirectory();  // input graph file name, accessible only within this class&#xD;
		this.verbose = verbose; // initialize verbose as specified&#xD;
&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ZuMjB6gmEe-9tYVtpMatrg" name="setGraphFileName" specification="_ZZooQKgmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_ZuMjCKgmEe-9tYVtpMatrg" name="inputFile">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>graphFileName = inputFile;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ZuMjCagmEe-9tYVtpMatrg" name="verifyGraphFileName" specification="_ZZooQqgmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_ZuMjCqgmEe-9tYVtpMatrg" name="inputFile">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>/* Read the graph input text file and handle all errors, returning its contents */&#xD;
		try {&#xD;
			getInputGraphFileName(inputFile);&#xD;
		} catch (Exception e) {&#xD;
			// e.printStackTrace();&#xD;
			System.err.println(&quot;Failed get an input file.&quot;);&#xD;
			System.exit(-1);&#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ZuMjC6gmEe-9tYVtpMatrg" name="readGraphFile" specification="_ZZpPUKgmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_ZuMjDKgmEe-9tYVtpMatrg" name="inputFile">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ZuMjDagmEe-9tYVtpMatrg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>/* Read the graph input text file and return its contents */&#xD;
		verifyGraphFileName(inputFile); // catches exception if a valid file can't be found and exits&#xD;
		String inputFileName = getGraphFileName();&#xD;
		graphFileContents = readGraphFileContents(inputFileName);&#xD;
		return graphFileContents;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ZuMjDqgmEe-9tYVtpMatrg" name="getInputGraphFileName" specification="_ZZp2YqgmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_ZuMjD6gmEe-9tYVtpMatrg" name="inputFile">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ZuMjEKgmEe-9tYVtpMatrg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>String workingDirectory;&#xD;
		String fileName = UNKNOWN;&#xD;
		workingDirectory = wfm.getBaseDirectory();&#xD;
		if (inputFile == null) { // if fileName is nil, then prompt for input file&#xD;
			System.out.printf(&quot;Working directory is %s\n&quot;, workingDirectory);&#xD;
			System.out.print(&quot;Enter input file: &quot;);&#xD;
			BufferedReader bufferRead = new BufferedReader(new InputStreamReader(System.in));&#xD;
			try {&#xD;
				fileName = bufferRead.readLine();&#xD;
			} catch (IOException e) {&#xD;
				// e.printStackTrace();&#xD;
				System.err.println(&quot;Failed to read input line from console&quot; + e.getMessage());&#xD;
			}&#xD;
		} else {&#xD;
			fileName = inputFile;&#xD;
		}&#xD;
		setGraphFileName(fileName);&#xD;
		File tempFile = new File(getGraphFileName()); // create a temp File object with graphName&#xD;
		if (tempFile.exists()) {  // see if the file exists&#xD;
			if (verbose) {&#xD;
				printVerboseMessage(workingDirectory, fileName, getGraphFileName());&#xD;
			}&#xD;
		} else { // try the working directory&#xD;
			setGraphFileName(workingDirectory + File.separator + fileName);&#xD;
			tempFile = new File(getGraphFileName()); // create a temp File object with graphName&#xD;
			if (tempFile.exists()) {  // see if the file exists&#xD;
				if (verbose) {&#xD;
					printVerboseMessage(workingDirectory, fileName, getGraphFileName());&#xD;
				}&#xD;
			} else {&#xD;
				if (verbose) {&#xD;
					printVerboseMessage(workingDirectory, fileName, getGraphFileName());&#xD;
				}&#xD;
				System.err.printf(&quot;\n\tERROR: input file %s doesn't exist!!\n&quot;, fileName);&#xD;
				throw new RuntimeException();&#xD;
			}&#xD;
		}&#xD;
		return fileName;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ZuMjEagmEe-9tYVtpMatrg" name="readGraphFileContents" specification="_ZZqdcKgmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_ZuMjEqgmEe-9tYVtpMatrg" name="inputFile">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ZuMjE6gmEe-9tYVtpMatrg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>String graphFileContents = wfm.readFile(inputFile);&#xD;
		if (verbose) {&#xD;
			System.out.println(&quot;************************************&quot;);&#xD;
			System.out.println(&quot;Graph File Read:&quot;);&#xD;
			System.out.println(graphFileContents);&#xD;
			System.out.println(&quot;************************************\n&quot;);&#xD;
		}&#xD;
		return graphFileContents;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ZuMjFKgmEe-9tYVtpMatrg" name="printVerboseMessage" specification="_ZZqdc6gmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_ZuMjFagmEe-9tYVtpMatrg" name="workingDirectory">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ZuMjFqgmEe-9tYVtpMatrg" name="fileName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ZuMjF6gmEe-9tYVtpMatrg" name="graphFileName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>System.out.printf(&quot;Working directory is %s\n&quot;, workingDirectory);&#xD;
		System.out.printf(&quot;Input file name is %s\n&quot;, fileName);&#xD;
		System.out.printf(&quot;Graph file %s doesn't exist\n&quot;, graphFileName);&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_ZZooQKgmEe-9tYVtpMatrg" name="setGraphFileName" visibility="private" method="_ZuMjB6gmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_ZZooQagmEe-9tYVtpMatrg" name="inputFile">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_ZZooQqgmEe-9tYVtpMatrg" name="verifyGraphFileName" visibility="private" method="_ZuMjCagmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_ZZooQ6gmEe-9tYVtpMatrg" name="inputFile">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_ZZpPUKgmEe-9tYVtpMatrg" name="readGraphFile" method="_ZuMjC6gmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_ZZp2YKgmEe-9tYVtpMatrg" name="inputFile">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ZZp2YagmEe-9tYVtpMatrg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_ZZp2YqgmEe-9tYVtpMatrg" name="getInputGraphFileName" visibility="private" method="_ZuMjDqgmEe-9tYVtpMatrg" raisedException="_ZsEcEKgmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_ZZp2Y6gmEe-9tYVtpMatrg" name="inputFile">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ZZp2ZKgmEe-9tYVtpMatrg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_ZZqdcKgmEe-9tYVtpMatrg" name="readGraphFileContents" visibility="private" method="_ZuMjEagmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_ZZqdcagmEe-9tYVtpMatrg" name="inputFile">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ZZqdcqgmEe-9tYVtpMatrg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_ZZqdc6gmEe-9tYVtpMatrg" name="printVerboseMessage" visibility="private" method="_ZuMjFKgmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_ZZqddKgmEe-9tYVtpMatrg" name="workingDirectory">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ZZqddagmEe-9tYVtpMatrg" name="fileName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ZZqddqgmEe-9tYVtpMatrg" name="graphFileName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_ZqkAMagmEe-9tYVtpMatrg" name="InputGraphFile" method="_ZuMjAKgmEe-9tYVtpMatrg">
                <eAnnotations xmi:id="_ZqkAM6gmEe-9tYVtpMatrg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_ZqkANKgmEe-9tYVtpMatrg" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_ZqkAMqgmEe-9tYVtpMatrg" name="fm" type="_ZZSC8KgmEe-9tYVtpMatrg"/>
                <ownedParameter xmi:id="_ZqkANagmEe-9tYVtpMatrg" type="_ZZnaIKgmEe-9tYVtpMatrg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_ZqknQKgmEe-9tYVtpMatrg" name="InputGraphFile" method="_ZuMjA6gmEe-9tYVtpMatrg">
                <eAnnotations xmi:id="_ZqknQ6gmEe-9tYVtpMatrg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_ZqknRKgmEe-9tYVtpMatrg" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_ZqknQagmEe-9tYVtpMatrg" name="fm" type="_ZZSC8KgmEe-9tYVtpMatrg"/>
                <ownedParameter xmi:id="_ZqknQqgmEe-9tYVtpMatrg" name="verbose">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ZqknRagmEe-9tYVtpMatrg" type="_ZZnaIKgmEe-9tYVtpMatrg" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_ZZrEgKgmEe-9tYVtpMatrg" name="InstructionTimeSlot">
              <generalization xmi:id="_ZqlOUKgmEe-9tYVtpMatrg" general="_ZajOQKgmEe-9tYVtpMatrg"/>
              <ownedAttribute xmi:id="_ZtPgxagmEe-9tYVtpMatrg" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_ZtPgxqgmEe-9tYVtpMatrg" value="1L"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ZuMjGKgmEe-9tYVtpMatrg" name="InstructionTimeSlot" specification="_ZZrrkKgmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_ZuMjGagmEe-9tYVtpMatrg" type="_ZZrEgKgmEe-9tYVtpMatrg" direction="return"/>
                <language>java</language>
                <body>super();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ZuNKEKgmEe-9tYVtpMatrg" name="InstructionTimeSlot" specification="_ZZrrlKgmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_ZuNKEagmEe-9tYVtpMatrg" name="numNodes">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ZuNKEqgmEe-9tYVtpMatrg" name="element">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ZuNKE6gmEe-9tYVtpMatrg" type="_ZZrEgKgmEe-9tYVtpMatrg" direction="return"/>
                <language>java</language>
                <body>super(numNodes, element);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ZuNKFKgmEe-9tYVtpMatrg" name="InstructionTimeSlot" specification="_ZZsSo6gmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_ZuNKFagmEe-9tYVtpMatrg" name="rowArray">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZuNKFqgmEe-9tYVtpMatrg" value="*"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ZuNKF6gmEe-9tYVtpMatrg" type="_ZZrEgKgmEe-9tYVtpMatrg" direction="return"/>
                <language>java</language>
                <body>super(rowArray);&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_ZZrrkKgmEe-9tYVtpMatrg" name="InstructionTimeSlot" method="_ZuMjGKgmEe-9tYVtpMatrg">
                <eAnnotations xmi:id="_ZZrrkagmEe-9tYVtpMatrg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_ZZrrkqgmEe-9tYVtpMatrg" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_ZZrrk6gmEe-9tYVtpMatrg" type="_ZZrEgKgmEe-9tYVtpMatrg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_ZZrrlKgmEe-9tYVtpMatrg" name="InstructionTimeSlot" visibility="package" method="_ZuNKEKgmEe-9tYVtpMatrg">
                <eAnnotations xmi:id="_ZZsSoKgmEe-9tYVtpMatrg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_ZZsSoagmEe-9tYVtpMatrg" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_ZZrrlagmEe-9tYVtpMatrg" name="numNodes">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ZZrrlqgmEe-9tYVtpMatrg" name="element">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ZZsSoqgmEe-9tYVtpMatrg" type="_ZZrEgKgmEe-9tYVtpMatrg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_ZZsSo6gmEe-9tYVtpMatrg" name="InstructionTimeSlot" visibility="package" method="_ZuNKFKgmEe-9tYVtpMatrg">
                <eAnnotations xmi:id="_ZZsSpagmEe-9tYVtpMatrg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_ZZsSpqgmEe-9tYVtpMatrg" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_ZZsSpKgmEe-9tYVtpMatrg" name="rowArray">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZZsSqKgmEe-9tYVtpMatrg" value="*"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ZZsSp6gmEe-9tYVtpMatrg" type="_ZZrEgKgmEe-9tYVtpMatrg" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_ZZsSqagmEe-9tYVtpMatrg" name="LatencyAnalysis">
              <ownedComment xmi:id="_Zup2A6gmEe-9tYVtpMatrg">
                <body>@author sgoddard2&#xD;
@version 1.3</body>
              </ownedComment>
              <ownedAttribute xmi:id="_ZtQH0KgmEe-9tYVtpMatrg" name="DEADLINE_MISS" visibility="private" isStatic="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_ZtQH0agmEe-9tYVtpMatrg" value="&quot; => DEADLINE MISS&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_ZtQH06gmEe-9tYVtpMatrg" name="FLOW_SEPARATOR" isStatic="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_ZtQH1agmEe-9tYVtpMatrg" value="&quot;******************************\n&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_ZtQu4KgmEe-9tYVtpMatrg" name="latencyReport" visibility="private" type="_ZZLVQKgmEe-9tYVtpMatrg" association="_ZvVLd6gmEe-9tYVtpMatrg"/>
              <ownedAttribute xmi:id="_ZtQu4qgmEe-9tYVtpMatrg" name="program" visibility="private" type="_ZaCQ4KgmEe-9tYVtpMatrg" association="_ZvVygagmEe-9tYVtpMatrg"/>
              <ownedAttribute xmi:id="_ZtQu5KgmEe-9tYVtpMatrg" name="workload" visibility="private" type="_Zbu6AqgmEe-9tYVtpMatrg" association="_ZvVyhKgmEe-9tYVtpMatrg"/>
              <ownedAttribute xmi:id="_ZtQu5qgmEe-9tYVtpMatrg" name="programTable" visibility="private" type="_ZaOeIKgmEe-9tYVtpMatrg" association="_ZvWZkKgmEe-9tYVtpMatrg"/>
              <ownedAttribute xmi:id="_ZtRV8KgmEe-9tYVtpMatrg" name="nodeIndex" visibility="private" type="_Zp_YcKgmEe-9tYVtpMatrg" association="_ZvWZk6gmEe-9tYVtpMatrg"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ZuNKGKgmEe-9tYVtpMatrg" name="LatencyAnalysis" specification="_Zql1YagmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_ZuNKGagmEe-9tYVtpMatrg" name="warp" type="_ZbdNMKgmEe-9tYVtpMatrg"/>
                <ownedParameter xmi:id="_ZuNKGqgmEe-9tYVtpMatrg" type="_ZZsSqagmEe-9tYVtpMatrg" direction="return"/>
                <language>java</language>
                <body>this.latencyReport = new Description();&#xD;
 this.program = warp.toProgram();&#xD;
 this.workload = warp.toWorkload();&#xD;
 this.programTable = program.getSchedule();&#xD;
 this.nodeIndex = program.getNodeMapIndex();&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ZuNKG6gmEe-9tYVtpMatrg" name="LatencyAnalysis" specification="_ZqmccKgmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_ZuNKHKgmEe-9tYVtpMatrg" name="program" type="_ZaCQ4KgmEe-9tYVtpMatrg"/>
                <ownedParameter xmi:id="_ZuNKHagmEe-9tYVtpMatrg" type="_ZZsSqagmEe-9tYVtpMatrg" direction="return"/>
                <language>java</language>
                <body>this.latencyReport = new Description();&#xD;
 this.program = program;&#xD;
 this.workload = program.toWorkLoad();&#xD;
 this.programTable = program.getSchedule();&#xD;
 this.nodeIndex = program.getNodeMapIndex();&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ZuNKHqgmEe-9tYVtpMatrg" name="latencyReport" specification="_ZZs5sKgmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_ZuNKH6gmEe-9tYVtpMatrg" type="_ZZLVQKgmEe-9tYVtpMatrg" direction="return"/>
                <language>java</language>
                <body>/*&#xD;
  * Build a latency report. Flows are output in priority order (based on the priority used to&#xD;
  * build the program. The latency for each instance of the flow is reported as follows&#xD;
  * &quot;Maximum latency for FlowName:Instance is Latency&quot;&#xD;
  * &#xD;
  * For flow instances that have latency > deadline, then the latency message is appended with&#xD;
  * the string &quot; => DEADLINE MISS&quot;&#xD;
  * &#xD;
  * A line of 30 '*' characters separates each group of flow instance reports.&#xD;
  * &#xD;
  * When there are not enough transmissions attempted between the release and the next release of&#xD;
  * an instance, then the latency is not computed (as we assume deadline &lt;= period. Thus, the&#xD;
  * report is: &quot;UNKNOWN latency for FlowName:Instance; Not enough transmissions attempted&quot;&#xD;
  * &#xD;
  */&#xD;
&#xD;
 var flows = workload.getFlowNamesInPriorityOrder();&#xD;
 for (String flowName : flows) {&#xD;
   var time = 0;&#xD;
&#xD;
   var nodes = workload.getNodesInFlow(flowName); // names of nodes in flow&#xD;
   var flowSnkIndex = nodes.length - 1;&#xD;
   /* get snk of last link in the flow, which is also the Flow snk node */&#xD;
   String snk = nodes[flowSnkIndex];&#xD;
   /* get the src of last link in the flow */&#xD;
   String src = nodes[flowSnkIndex - 1];&#xD;
   /* get (column) indexes into programTable of these nodes */&#xD;
   var snkIndex = nodeIndex.get(snk);&#xD;
   var srcIndex = nodeIndex.get(src);&#xD;
   /* get the array containing the number of transmissions required for each link in the flow */&#xD;
   var numTxAttemptsPerLink = workload.getNumTxAttemptsPerLink(flowName);&#xD;
   /* get the number of transmission required for the last link in the flow */&#xD;
   var numTxRequired = numTxAttemptsPerLink[numTxAttemptsPerLink.length - 1];&#xD;
   var numTxProcessed = 0; // num of Tx seen in the program schedule so far&#xD;
   var instance = 0;&#xD;
   while (time &lt; workload.getHyperPeriod()) {&#xD;
     /* get next release time and absolute deadline of the flow */&#xD;
     var releaseTime = workload.nextReleaseTime(flowName, time);&#xD;
     var deadline = workload.nextAbsoluteDeadline(flowName, releaseTime);&#xD;
     var nextReleaseTime = workload.nextReleaseTime(flowName, deadline);&#xD;
     // var latency = 0;&#xD;
     time = releaseTime;&#xD;
     numTxProcessed = 0; // num of Tx seen in the program schedule so far&#xD;
     while (time &lt; nextReleaseTime) {&#xD;
       /* get instruction strings at these to locations */&#xD;
       String instr1 = programTable.get(time, srcIndex);&#xD;
       String instr2 = programTable.get(time, snkIndex);&#xD;
       numTxProcessed += numMatchingTx(flowName, src, snk, instr1);&#xD;
       numTxProcessed += numMatchingTx(flowName, src, snk, instr2);&#xD;
       if (numTxProcessed == numTxRequired) {&#xD;
         /*&#xD;
          * all required Tx attempts have been made compute and record latency&#xD;
          */&#xD;
         var latency = time - releaseTime + 1;&#xD;
         // report latency&#xD;
         String latencyMsg =&#xD;
             String.format(&quot;Maximum latency for %s:%d is %d&quot;, flowName, instance, latency);&#xD;
         if (latency > deadline) {&#xD;
           /* deadline missed, so color the text red */&#xD;
           latencyMsg += DEADLINE_MISS;&#xD;
         }&#xD;
         latencyMsg += &quot;\n&quot;;&#xD;
         latencyReport.add(latencyMsg);&#xD;
         time = nextReleaseTime;&#xD;
       } else {&#xD;
         time++;&#xD;
       }&#xD;
&#xD;
     }&#xD;
     if (numTxProcessed &lt; numTxRequired) {&#xD;
       /*&#xD;
        * This flow missed its deadline with required number of Tx!! This message should not be&#xD;
        * printed with the schedulers built&#xD;
        */&#xD;
       String latencyMsg =&#xD;
           String.format(&quot;UNKNOWN latency for %s:%d; Not enough transmissions attempted\n&quot;,&#xD;
               flowName, instance);&#xD;
       latencyReport.add(latencyMsg);&#xD;
     }&#xD;
     instance++;&#xD;
   }&#xD;
   String flowSeparator = FLOW_SEPARATOR;&#xD;
   latencyReport.add(flowSeparator);&#xD;
 }&#xD;
 return latencyReport;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ZuNKIKgmEe-9tYVtpMatrg" name="numMatchingTx" specification="_ZZtgwKgmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_ZuNKIagmEe-9tYVtpMatrg" name="flow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ZuNKIqgmEe-9tYVtpMatrg" name="src">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ZuNKI6gmEe-9tYVtpMatrg" name="snk">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ZuNKJKgmEe-9tYVtpMatrg" name="instr">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ZuNKJagmEe-9tYVtpMatrg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var numTx = 0;&#xD;
&#xD;
 if (flow == null || src == null || snk == null || instr == null) {&#xD;
   /* make sure all parameters are valid */&#xD;
   return numTx;&#xD;
 }&#xD;
 /*&#xD;
  * get a Warp instruction parser object and then get the instruction parameters from the&#xD;
  * instruction string.&#xD;
  */&#xD;
 var dsl = new WarpDSL();&#xD;
 var instructionParametersArray = dsl.getInstructionParameters(instr);&#xD;
&#xD;
 for (InstructionParameters entry : instructionParametersArray) {&#xD;
   String flowName = entry.getFlow();&#xD;
   if (flowName.equals(flow)) {&#xD;
     /*&#xD;
      * This instruction is for the flow we want. (flow name is set for push/pull instructions,&#xD;
      * which are all we want. If not push/pull, then we skip this instruction.) If flow, src,&#xD;
      * and snk names in instruction match input parameters, then we have a Tx attempt.&#xD;
      */&#xD;
     if (src.equals(entry.getSrc()) &amp;&amp; snk.equals(entry.getSnk())) {&#xD;
       /* flow, src, and snk match, so increment Tx attempts */&#xD;
       numTx++;&#xD;
     }&#xD;
   }&#xD;
 }&#xD;
 return numTx;&#xD;
  </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_ZZs5sKgmEe-9tYVtpMatrg" name="latencyReport" method="_ZuNKHqgmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_ZqmcdagmEe-9tYVtpMatrg" type="_ZZLVQKgmEe-9tYVtpMatrg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_ZZtgwKgmEe-9tYVtpMatrg" name="numMatchingTx" method="_ZuNKIKgmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_ZZtgwagmEe-9tYVtpMatrg" name="flow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ZZtgwqgmEe-9tYVtpMatrg" name="src">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ZZtgw6gmEe-9tYVtpMatrg" name="snk">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ZZtgxKgmEe-9tYVtpMatrg" name="instr">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ZZtgxagmEe-9tYVtpMatrg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_Zql1YagmEe-9tYVtpMatrg" name="LatencyAnalysis" visibility="package" method="_ZuNKGKgmEe-9tYVtpMatrg">
                <eAnnotations xmi:id="_Zql1Y6gmEe-9tYVtpMatrg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_Zql1ZKgmEe-9tYVtpMatrg" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_Zql1YqgmEe-9tYVtpMatrg" name="warp" type="_ZbdNMKgmEe-9tYVtpMatrg"/>
                <ownedParameter xmi:id="_Zql1ZagmEe-9tYVtpMatrg" type="_ZZsSqagmEe-9tYVtpMatrg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_ZqmccKgmEe-9tYVtpMatrg" name="LatencyAnalysis" visibility="package" method="_ZuNKG6gmEe-9tYVtpMatrg">
                <eAnnotations xmi:id="_ZqmccqgmEe-9tYVtpMatrg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_Zqmcc6gmEe-9tYVtpMatrg" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_ZqmccagmEe-9tYVtpMatrg" name="program" type="_ZaCQ4KgmEe-9tYVtpMatrg"/>
                <ownedParameter xmi:id="_ZqmcdKgmEe-9tYVtpMatrg" type="_ZZsSqagmEe-9tYVtpMatrg" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_ZZuu4KgmEe-9tYVtpMatrg" name="LatencyVisualization">
              <ownedComment xmi:id="_ZuqdEKgmEe-9tYVtpMatrg">
                <body>LatencyVisualization creates the visualizations for the liability analysis of the WARP program.&#xD;
&lt;p>&#xD;
&#xD;
CS2820 Spring 2022 Project: Implement this class to create the file visualization that is&#xD;
requested in Warp.&#xD;
&#xD;
@author sgoddard&#xD;
@version 1.3&#xD;
 *</body>
              </ownedComment>
              <generalization xmi:id="_ZqnDhagmEe-9tYVtpMatrg" general="_ZbJEIKgmEe-9tYVtpMatrg"/>
              <ownedAttribute xmi:id="_ZtRV86gmEe-9tYVtpMatrg" name="SOURCE_SUFFIX" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_ZtRV9KgmEe-9tYVtpMatrg" value="&quot;.la&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_ZtR9AKgmEe-9tYVtpMatrg" name="OBJECT_NAME" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_ZtR9AagmEe-9tYVtpMatrg" value="&quot;Latency Analysis&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_ZtR9AqgmEe-9tYVtpMatrg" name="warp" visibility="private" type="_ZbdNMKgmEe-9tYVtpMatrg" association="_ZvXAoKgmEe-9tYVtpMatrg"/>
              <ownedAttribute xmi:id="_ZtR9BKgmEe-9tYVtpMatrg" name="la" visibility="private" type="_ZZsSqagmEe-9tYVtpMatrg" association="_ZvXAo6gmEe-9tYVtpMatrg"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ZuNKJqgmEe-9tYVtpMatrg" name="LatencyVisualization" specification="_ZqnDgKgmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_ZuNKJ6gmEe-9tYVtpMatrg" name="warp" type="_ZbdNMKgmEe-9tYVtpMatrg"/>
                <ownedParameter xmi:id="_ZuNKKKgmEe-9tYVtpMatrg" type="_ZZuu4KgmEe-9tYVtpMatrg" direction="return"/>
                <language>java</language>
                <body>super(new FileManager(), warp, SOURCE_SUFFIX);&#xD;
 this.warp = warp;&#xD;
 this.la = warp.toLatencyAnalysis();&#xD;
  </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_ZqnDgKgmEe-9tYVtpMatrg" name="LatencyVisualization" visibility="package" method="_ZuNKJqgmEe-9tYVtpMatrg">
                <eAnnotations xmi:id="_ZqnDgqgmEe-9tYVtpMatrg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_ZqnDg6gmEe-9tYVtpMatrg" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_ZqnDgagmEe-9tYVtpMatrg" name="warp" type="_ZbdNMKgmEe-9tYVtpMatrg"/>
                <ownedParameter xmi:id="_ZqnDhKgmEe-9tYVtpMatrg" type="_ZZuu4KgmEe-9tYVtpMatrg" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_ZZvV8KgmEe-9tYVtpMatrg" name="LatestReleaseTimeComparator">
              <interfaceRealization xmi:id="_ZsFqMKgmEe-9tYVtpMatrg" client="_ZZvV8KgmEe-9tYVtpMatrg" supplier="_ZqOB9qgmEe-9tYVtpMatrg" contract="_ZqOB9qgmEe-9tYVtpMatrg"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ZuNKKagmEe-9tYVtpMatrg" name="compare" specification="_ZsGRQagmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_ZuNKKqgmEe-9tYVtpMatrg" name="obj1" type="_Zr9HUKgmEe-9tYVtpMatrg"/>
                <ownedParameter xmi:id="_ZuNKK6gmEe-9tYVtpMatrg" name="obj2" type="_Zr9HUKgmEe-9tYVtpMatrg"/>
                <ownedParameter xmi:id="_ZuNKLKgmEe-9tYVtpMatrg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>var result = obj1.LatestReleaseTimeComparison(obj2);&#xD;
		return result; // 0 => tie on release time&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_ZsGRQagmEe-9tYVtpMatrg" name="compare" method="_ZuNKKagmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_ZsGRQqgmEe-9tYVtpMatrg" name="obj1" type="_Zr9HUKgmEe-9tYVtpMatrg"/>
                <ownedParameter xmi:id="_ZsGRQ6gmEe-9tYVtpMatrg" name="obj2" type="_Zr9HUKgmEe-9tYVtpMatrg"/>
                <ownedParameter xmi:id="_ZsGRRKgmEe-9tYVtpMatrg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_ZZwkEKgmEe-9tYVtpMatrg" name="MaxPhaseComparator">
              <interfaceRealization xmi:id="_ZsG4UqgmEe-9tYVtpMatrg" client="_ZZwkEKgmEe-9tYVtpMatrg" supplier="_ZqOB9qgmEe-9tYVtpMatrg" contract="_ZqOB9qgmEe-9tYVtpMatrg"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ZuNxIKgmEe-9tYVtpMatrg" name="compare" specification="_ZsG4VKgmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_ZuNxIagmEe-9tYVtpMatrg" name="obj1" type="_Zr9HUKgmEe-9tYVtpMatrg"/>
                <ownedParameter xmi:id="_ZuNxIqgmEe-9tYVtpMatrg" name="obj2" type="_Zr9HUKgmEe-9tYVtpMatrg"/>
                <ownedParameter xmi:id="_ZuNxI6gmEe-9tYVtpMatrg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>return obj1.maxPhaseComparison(obj2); &#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_ZsG4VKgmEe-9tYVtpMatrg" name="compare" method="_ZuNxIKgmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_ZsHfYKgmEe-9tYVtpMatrg" name="obj1" type="_Zr9HUKgmEe-9tYVtpMatrg"/>
                <ownedParameter xmi:id="_ZsHfYagmEe-9tYVtpMatrg" name="obj2" type="_Zr9HUKgmEe-9tYVtpMatrg"/>
                <ownedParameter xmi:id="_ZsHfYqgmEe-9tYVtpMatrg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_ZZxLIKgmEe-9tYVtpMatrg" name="Node">
              <generalization xmi:id="_ZqoRpagmEe-9tYVtpMatrg" general="_ZakcZKgmEe-9tYVtpMatrg"/>
              <ownedAttribute xmi:id="_ZtR9BqgmEe-9tYVtpMatrg" name="DEFAULT_CHANNEL" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_ZtR9B6gmEe-9tYVtpMatrg" value="0"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_ZtSkEKgmEe-9tYVtpMatrg" name="channel">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_ZtSkEagmEe-9tYVtpMatrg" name="index">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_ZtSkEqgmEe-9tYVtpMatrg" name="edges" type="_Zp__gKgmEe-9tYVtpMatrg" isReadOnly="true" association="_ZvXApqgmEe-9tYVtpMatrg"/>
              <ownedAttribute xmi:id="_ZtSkFKgmEe-9tYVtpMatrg" name="conflicts" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZtSkFagmEe-9tYVtpMatrg" value="*"/>
              </ownedAttribute>
              <interfaceRealization xmi:id="_ZsHfZqgmEe-9tYVtpMatrg" client="_ZZxLIKgmEe-9tYVtpMatrg" supplier="_Zrw6EagmEe-9tYVtpMatrg" contract="_Zrw6EagmEe-9tYVtpMatrg"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ZuNxJKgmEe-9tYVtpMatrg" name="Node" specification="_ZZxyMKgmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_ZuNxJagmEe-9tYVtpMatrg" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ZuNxJqgmEe-9tYVtpMatrg" name="priority">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ZuNxJ6gmEe-9tYVtpMatrg" name="index">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ZuNxKKgmEe-9tYVtpMatrg" type="_ZZxLIKgmEe-9tYVtpMatrg" direction="return"/>
                <language>java</language>
                <body>super();&#xD;
 	setName(name);&#xD;
 	setPriority(priority);&#xD;
 	this.index = index;&#xD;
 	this.channel = DEFAULT_CHANNEL;&#xD;
 	this.edges = new ArrayList&lt;Edge>();&#xD;
 	this.conflicts = new HashSet&lt;String>();&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ZuNxKagmEe-9tYVtpMatrg" name="compareTo" specification="_ZqnqkKgmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_ZuNxKqgmEe-9tYVtpMatrg" name="node" type="_ZZxLIKgmEe-9tYVtpMatrg"/>
                <ownedParameter xmi:id="_ZuNxK6gmEe-9tYVtpMatrg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>return node.getPriority() > this.getPriority() ? -1 : 1;&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ZuNxLKgmEe-9tYVtpMatrg" name="toString" specification="_ZZyZQKgmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_ZuNxLagmEe-9tYVtpMatrg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return getName();&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ZuNxLqgmEe-9tYVtpMatrg" name="addEdge" specification="_ZqoRo6gmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_ZuNxL6gmEe-9tYVtpMatrg" name="edge" type="_ZZMjY6gmEe-9tYVtpMatrg"/>
                <language>java</language>
                <body>edges.add(edge);&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ZuNxMKgmEe-9tYVtpMatrg" name="addConflict" specification="_ZZzAUqgmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_ZuNxMagmEe-9tYVtpMatrg" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>conflicts.add(name);&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ZuNxMqgmEe-9tYVtpMatrg" name="numEdges" specification="_ZZzAVKgmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_ZuNxM6gmEe-9tYVtpMatrg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>return edges.size();&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ZuNxNKgmEe-9tYVtpMatrg" name="print" specification="_ZZzAVqgmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_ZuNxNagmEe-9tYVtpMatrg" name="headerMsg">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>System.out.printf(&quot;\n%s&quot;,headerMsg);&#xD;
		this.print();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ZuNxNqgmEe-9tYVtpMatrg" name="print" specification="_ZZznY6gmEe-9tYVtpMatrg">
                <language>java</language>
                <body>super.print();&#xD;
		System.out.print(&quot;Edge info for this partiion\n&quot;);&#xD;
		for (Edge edge: edges) {&#xD;
			edge.print();&#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_ZZxyMKgmEe-9tYVtpMatrg" name="Node" visibility="package" method="_ZuNxJKgmEe-9tYVtpMatrg">
                <eAnnotations xmi:id="_ZZxyNKgmEe-9tYVtpMatrg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_ZZxyNagmEe-9tYVtpMatrg" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_ZZxyMagmEe-9tYVtpMatrg" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ZZxyMqgmEe-9tYVtpMatrg" name="priority">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ZZxyM6gmEe-9tYVtpMatrg" name="index">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ZZxyNqgmEe-9tYVtpMatrg" type="_ZZxLIKgmEe-9tYVtpMatrg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_ZZyZQKgmEe-9tYVtpMatrg" name="toString" method="_ZuNxLKgmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_ZZyZQagmEe-9tYVtpMatrg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_ZZzAUqgmEe-9tYVtpMatrg" name="addConflict" method="_ZuNxMKgmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_ZZzAU6gmEe-9tYVtpMatrg" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_ZZzAVKgmEe-9tYVtpMatrg" name="numEdges" method="_ZuNxMqgmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_ZZzAVagmEe-9tYVtpMatrg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_ZZzAVqgmEe-9tYVtpMatrg" name="print" method="_ZuNxNKgmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_ZZzAV6gmEe-9tYVtpMatrg" name="headerMsg">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_ZZznY6gmEe-9tYVtpMatrg" name="print" method="_ZuNxNqgmEe-9tYVtpMatrg"/>
              <ownedOperation xmi:id="_ZqnqkKgmEe-9tYVtpMatrg" name="compareTo" method="_ZuNxKagmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_ZqnqkagmEe-9tYVtpMatrg" name="node" type="_ZZxLIKgmEe-9tYVtpMatrg"/>
                <ownedParameter xmi:id="_ZqnqkqgmEe-9tYVtpMatrg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_ZqoRo6gmEe-9tYVtpMatrg" name="addEdge" method="_ZuNxLqgmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_ZqoRpKgmEe-9tYVtpMatrg" name="edge" type="_ZZMjY6gmEe-9tYVtpMatrg"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_ZZ01gKgmEe-9tYVtpMatrg" name="NodeMap">
              <ownedComment xmi:id="_ZuqdEagmEe-9tYVtpMatrg">
                <body>NodeMap creates a mapping from graph node name to &#xD;
node object (&lt;name, Node>).&#xD;
&#xD;
@author sgoddard2&#xD;
 *</body>
              </ownedComment>
              <generalization xmi:id="_Zqo4sKgmEe-9tYVtpMatrg" general="_ZYh1AKgmEe-9tYVtpMatrg"/>
              <ownedAttribute xmi:id="_ZtTLIKgmEe-9tYVtpMatrg" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_ZtTLIagmEe-9tYVtpMatrg" value="1L"/>
              </ownedAttribute>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_ZZ1ckKgmEe-9tYVtpMatrg" name="NonPreemptiveSchedule">
              <ownedComment xmi:id="_ZuqdEqgmEe-9tYVtpMatrg">
                <body>PreemptiveSchedule is an instance of the abstract class Schedule.&#xD;
&#xD;
@author sgoddard2&#xD;
 *</body>
              </ownedComment>
              <generalization xmi:id="_ZqqG0KgmEe-9tYVtpMatrg" general="_Zax3wagmEe-9tYVtpMatrg"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ZuNxN6gmEe-9tYVtpMatrg" name="NonPreemptiveSchedule" specification="_ZqpfwagmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_ZuNxOKgmEe-9tYVtpMatrg" name="poset" type="_ZZ4f4KgmEe-9tYVtpMatrg"/>
                <ownedParameter xmi:id="_ZuNxOagmEe-9tYVtpMatrg" name="numChannels">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ZuNxOqgmEe-9tYVtpMatrg" type="_ZZ1ckKgmEe-9tYVtpMatrg" direction="return"/>
                <language>java</language>
                <body>super(poset, numChannels);&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_ZqpfwagmEe-9tYVtpMatrg" name="NonPreemptiveSchedule" visibility="package" method="_ZuNxN6gmEe-9tYVtpMatrg">
                <eAnnotations xmi:id="_ZqpfxKgmEe-9tYVtpMatrg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_ZqpfxagmEe-9tYVtpMatrg" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_ZqpfwqgmEe-9tYVtpMatrg" name="poset" type="_ZZ4f4KgmEe-9tYVtpMatrg"/>
                <ownedParameter xmi:id="_Zqpfw6gmEe-9tYVtpMatrg" name="numChannels">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ZqpfxqgmEe-9tYVtpMatrg" type="_ZZ1ckKgmEe-9tYVtpMatrg" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_ZZ2DoKgmEe-9tYVtpMatrg" name="NotImplentedVisualization">
              <generalization xmi:id="_ZqqG0qgmEe-9tYVtpMatrg" general="_ZbJEIKgmEe-9tYVtpMatrg"/>
              <ownedAttribute xmi:id="_ZtTLIqgmEe-9tYVtpMatrg" name="SUFFIX" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_ZtTLI6gmEe-9tYVtpMatrg" value="&quot;.txt&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_ZtTLJKgmEe-9tYVtpMatrg" name="NAME_EXTENSTION" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_ZtTLJagmEe-9tYVtpMatrg" value="&quot;NotImplementedFeature&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_ZtTLJqgmEe-9tYVtpMatrg" name="CONTENT" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_ZtTLJ6gmEe-9tYVtpMatrg" value="&quot;Not Implemented&quot;"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ZuOYMKgmEe-9tYVtpMatrg" name="NotImplentedVisualization" specification="_ZZ2qsKgmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_ZuOYMagmEe-9tYVtpMatrg" type="_ZZ2DoKgmEe-9tYVtpMatrg" direction="return"/>
                <language>java</language>
                <body>super(new FileManager(), NAME_EXTENSTION, SUFFIX);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ZuOYMqgmEe-9tYVtpMatrg" name="NotImplentedVisualization" specification="_ZZ2qtKgmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_ZuOYM6gmEe-9tYVtpMatrg" name="extension">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ZuOYNKgmEe-9tYVtpMatrg" type="_ZZ2DoKgmEe-9tYVtpMatrg" direction="return"/>
                <language>java</language>
                <body>super(new FileManager(), extension, SUFFIX);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ZuOYNagmEe-9tYVtpMatrg" name="visualization" specification="_ZZ2quagmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_ZuOYNqgmEe-9tYVtpMatrg" type="_ZZLVQKgmEe-9tYVtpMatrg" direction="return"/>
                <language>java</language>
                <body>return new Description(CONTENT);&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_ZZ2qsKgmEe-9tYVtpMatrg" name="NotImplentedVisualization" visibility="package" method="_ZuOYMKgmEe-9tYVtpMatrg">
                <eAnnotations xmi:id="_ZZ2qsagmEe-9tYVtpMatrg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_ZZ2qsqgmEe-9tYVtpMatrg" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_ZZ2qs6gmEe-9tYVtpMatrg" type="_ZZ2DoKgmEe-9tYVtpMatrg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_ZZ2qtKgmEe-9tYVtpMatrg" name="NotImplentedVisualization" visibility="package" method="_ZuOYMqgmEe-9tYVtpMatrg">
                <eAnnotations xmi:id="_ZZ2qtqgmEe-9tYVtpMatrg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_ZZ2qt6gmEe-9tYVtpMatrg" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_ZZ2qtagmEe-9tYVtpMatrg" name="extension">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ZZ2quKgmEe-9tYVtpMatrg" type="_ZZ2DoKgmEe-9tYVtpMatrg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_ZZ2quagmEe-9tYVtpMatrg" name="visualization" method="_ZuOYNagmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_ZqqG0agmEe-9tYVtpMatrg" type="_ZZLVQKgmEe-9tYVtpMatrg" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_ZZ3RwKgmEe-9tYVtpMatrg" name="PeriodComparator">
              <interfaceRealization xmi:id="_ZsItgKgmEe-9tYVtpMatrg" client="_ZZ3RwKgmEe-9tYVtpMatrg" supplier="_ZqOB9qgmEe-9tYVtpMatrg" contract="_ZqOB9qgmEe-9tYVtpMatrg"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ZuOYN6gmEe-9tYVtpMatrg" name="compare" specification="_ZsJUkKgmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_ZuOYOKgmEe-9tYVtpMatrg" name="obj1" type="_Zr9HUKgmEe-9tYVtpMatrg"/>
                <ownedParameter xmi:id="_ZuOYOagmEe-9tYVtpMatrg" name="obj2" type="_Zr9HUKgmEe-9tYVtpMatrg"/>
                <ownedParameter xmi:id="_ZuOYOqgmEe-9tYVtpMatrg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>return obj1.periodComparison(obj2); &#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_ZsJUkKgmEe-9tYVtpMatrg" name="compare" method="_ZuOYN6gmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_ZsJUkagmEe-9tYVtpMatrg" name="obj1" type="_Zr9HUKgmEe-9tYVtpMatrg"/>
                <ownedParameter xmi:id="_ZsJUkqgmEe-9tYVtpMatrg" name="obj2" type="_Zr9HUKgmEe-9tYVtpMatrg"/>
                <ownedParameter xmi:id="_ZsJUk6gmEe-9tYVtpMatrg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_ZZ4f4KgmEe-9tYVtpMatrg" name="Poset" isAbstract="true">
              <ownedComment xmi:id="_ZuqdE6gmEe-9tYVtpMatrg">
                <body>Poset is a partially ordered set of activations&#xD;
that are partitions of the workload to be scheduled.&#xD;
This version assumes each activation is a node&#xD;
and each node has a list of edges associated with it.&#xD;
Each node/activation in an edge is identified as either &#xD;
a transmitter or sender for that edge.&#xD;
&#xD;
@author sgoddard</body>
              </ownedComment>
              <ownedAttribute xmi:id="_ZtTyMKgmEe-9tYVtpMatrg" name="activations" visibility="private" type="_ZY1-EKgmEe-9tYVtpMatrg" association="_ZvXnsagmEe-9tYVtpMatrg"/>
              <ownedAttribute xmi:id="_ZtTyMqgmEe-9tYVtpMatrg" name="workload" visibility="private" type="_Zbu6AqgmEe-9tYVtpMatrg" association="_ZvXntKgmEe-9tYVtpMatrg"/>
              <ownedAttribute xmi:id="_ZtTyNKgmEe-9tYVtpMatrg" name="flows" visibility="protected" type="_ZZWUYKgmEe-9tYVtpMatrg" association="_ZvYOwagmEe-9tYVtpMatrg">
                <eAnnotations xmi:id="_ZtTyNqgmEe-9tYVtpMatrg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_ZtTyN6gmEe-9tYVtpMatrg" key="generic_container"/>
                </eAnnotations>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZtTyNagmEe-9tYVtpMatrg" value="*"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_ZtUZQagmEe-9tYVtpMatrg" name="nodes" visibility="private" type="_ZZxLIKgmEe-9tYVtpMatrg" association="_ZvYOxKgmEe-9tYVtpMatrg">
                <eAnnotations xmi:id="_ZtVAUKgmEe-9tYVtpMatrg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_ZtVAUagmEe-9tYVtpMatrg" key="generic_container"/>
                </eAnnotations>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZtUZQqgmEe-9tYVtpMatrg" value="*"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_ZtVAU6gmEe-9tYVtpMatrg" name="nodeMap" visibility="private" type="_ZZ01gKgmEe-9tYVtpMatrg" association="_ZvY10agmEe-9tYVtpMatrg"/>
              <ownedAttribute xmi:id="_ZtVAVagmEe-9tYVtpMatrg" name="priorityQueue" visibility="private" type="_ZaVL0KgmEe-9tYVtpMatrg" association="_ZvY11KgmEe-9tYVtpMatrg"/>
              <ownedAttribute xmi:id="_ZtVnYqgmEe-9tYVtpMatrg" name="nodeConnectivityMap" visibility="protected" type="_Zp_YcKgmEe-9tYVtpMatrg" association="_ZvZc4agmEe-9tYVtpMatrg"/>
              <ownedAttribute xmi:id="_ZtWOcKgmEe-9tYVtpMatrg" name="activationMap" visibility="package" type="_ZZeQMKgmEe-9tYVtpMatrg" association="_ZvZc5KgmEe-9tYVtpMatrg"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ZuOYO6gmEe-9tYVtpMatrg" name="Poset" specification="_ZqrU8agmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_ZuOYPKgmEe-9tYVtpMatrg" name="workload" type="_Zbu6AqgmEe-9tYVtpMatrg"/>
                <ownedParameter xmi:id="_ZuOYPagmEe-9tYVtpMatrg" type="_ZZ4f4KgmEe-9tYVtpMatrg" direction="return"/>
                <language>java</language>
                <body>this.workload = workload;&#xD;
		this.activations = new Activations();&#xD;
		this.activationMap = new FlowNodeToActivationMap();&#xD;
		/* init map to return a null activation if null key intered */&#xD;
		this.activationMap.put(null, null);&#xD;
		flows = workload.getFlows().values();&#xD;
		nodeMap = workload.getNodes();&#xD;
		nodes = nodeMap.values();&#xD;
		priorityQueue = new &#xD;
				SchedulableObjectQueue&lt;Activation>(new &#xD;
						PriorityComparator&lt;Activation>());&#xD;
		/* get global node connectivity */&#xD;
		nodeConnectivityMap = getNodeConnectivity();&#xD;
		buildPosetOfActivations();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ZuOYPqgmEe-9tYVtpMatrg" name="getNodeConnectivity" specification="_ZZ5G8KgmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_ZuOYP6gmEe-9tYVtpMatrg" type="_Zp_YcKgmEe-9tYVtpMatrg" direction="return"/>
                <language>java</language>
                <body>HashMap&lt;String, Integer> map = new HashMap&lt;>();&#xD;
		&#xD;
		for (Flow flow: flows) {&#xD;
			var nodesInFlow = flow.getNodes();&#xD;
			var size = nodesInFlow.size();&#xD;
			for (Integer i =0 ; i &lt; size; i++) {&#xD;
				var nodeName = nodesInFlow.get(i).getName();&#xD;
				var connectivity = map.get(nodeName);&#xD;
				var connections = 2; // default # of connections&#xD;
				if (i == 0 || i == size-1) {&#xD;
					/* src or snk => connections = 1 */&#xD;
					connections = 1;&#xD;
				}&#xD;
				if (connectivity != null) {&#xD;
					connectivity += connections;&#xD;
					map.put(nodeName,connectivity);&#xD;
				} else {&#xD;
					map.put(nodeName,connections); // initial connection&#xD;
				}&#xD;
			}&#xD;
		}&#xD;
		return map;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ZuOYQKgmEe-9tYVtpMatrg" name="getNodeNames" specification="_ZZ5G8qgmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_ZuOYQagmEe-9tYVtpMatrg" type="_Zp__gKgmEe-9tYVtpMatrg" direction="return"/>
                <language>java</language>
                <body>var keys = nodeMap.keySet();&#xD;
		var nodeNames = new ArrayList&lt;String>(keys.size());&#xD;
		nodeNames.addAll(keys);&#xD;
		return nodeNames;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ZuOYQqgmEe-9tYVtpMatrg" name="getNodesNamesOrderedAlphabetically" specification="_ZZ5uAagmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_ZuOYQ6gmEe-9tYVtpMatrg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZuOYRKgmEe-9tYVtpMatrg" value="*"/>
                </ownedParameter>
                <language>java</language>
                <body>var nodeNames = workload.getNodeNamesOrderedAlphabetically();&#xD;
		return nodeNames;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ZuOYRagmEe-9tYVtpMatrg" name="buildPosetOfActivations" specification="_ZZ5uBagmEe-9tYVtpMatrg">
                <language>java</language>
                <body>/* assumes flow priorities have already been set */&#xD;
&#xD;
		/*&#xD;
		 * (1) Create edges, setting priority and release time&#xD;
		 * 		add edges to node respective node lists as edge is created&#xD;
		 * (2) Create conflict set for each node (adjacent nodes)&#xD;
		 * (3) Create activations by selecting coordinators within &#xD;
		 * 		each flow and adding that coordinator's edges and&#xD;
		 * 		release times to an activation with the coordinator's name&#xD;
		 * 		(each activation will have one coordinator and the&#xD;
		 * 			number of activations &lt;= number nodes)&#xD;
		 * (4) Order the activations&#xD;
		 */&#xD;
&#xD;
		createEdgeLists(); // (1)&#xD;
		createConflictLists(); // (2)&#xD;
		createInitialActivations(); // (3)&#xD;
		orderActivations(); // (4)&#xD;
		/* At this point, each flow has been partitioned &#xD;
		 */&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ZuOYRqgmEe-9tYVtpMatrg" name="createEdgeLists" specification="_ZZ5uBqgmEe-9tYVtpMatrg">
                <language>java</language>
                <body>/* assumes flow priorities have already been set */&#xD;
		var maxFlowLength = workload.maxFlowLength();&#xD;
		for (Flow flow: flows) {&#xD;
			var flowNodes = flow.getNodes();&#xD;
			var numTxArray = workload.getNumTxAttemptsPerLink(flow.getName());&#xD;
			var flowPhase = flow.getPhase();&#xD;
			var flowPriority = flow.getPriority();&#xD;
			var period = flow.getPeriod();&#xD;
			var deadline = flow.getDeadline();&#xD;
			Edge edge = null;&#xD;
			for (Integer i = 0; i &lt; flowNodes.size() -1 ; i++) {&#xD;
				/* Create edges, setting priority and release time */&#xD;
				/* This version adds edges to the main node in NodeMap.&#xD;
				 * This allows creation of large partitions, with at most one per node.&#xD;
				 * An alternative, we can have a lot of small partitions that can be&#xD;
				 * combined later, which may create more parallelism.&#xD;
				 * So, both the global NodeMap nodes and the nodes in the&#xD;
				 * flows are updated with the same edge information. &#xD;
				 * This let's us play with partition creation options later.&#xD;
				 */&#xD;
				var srcNode = nodeMap.get(flowNodes.get(i).getName()); &#xD;
				var snkNode = nodeMap.get(flowNodes.get(i+1).getName());&#xD;
				var flowSrc = flowNodes.get(i);  // node in the flow&#xD;
				var flowSnk = flowNodes.get(i+1);&#xD;
				var src = srcNode.getName();&#xD;
				var snk = snkNode.getName();&#xD;
&#xD;
				/*&#xD;
				 * Edge priority within a flow is based on position&#xD;
				 * in flow. Each Flow has its own priority. This &#xD;
				 * creates a 2-dimensional priority. Thus, we&#xD;
				 * can keep a total ordering of edges if we fold the&#xD;
				 * table into a single row where we assume each new flow&#xD;
				 * starts maxFlowSize away from the previous flow nodes:&#xD;
				 * edgePriority = flowPriority*maxFlowLength + edgePosition&#xD;
				 */&#xD;
				// var flowPriority = flow.getPriority();&#xD;
				var priority = (flowPriority * maxFlowLength) + i;&#xD;
				//var period = flow.getPeriod();&#xD;
				// var deadline = flow.getDeadline();&#xD;
				/* edge phase = flow phase + edge position in flow */&#xD;
				var phase = flowPhase + i; &#xD;
				var numTx = numTxArray[i];&#xD;
				edge = new Edge(flow.getName(),src,snk,priority, &#xD;
						period, deadline, phase, numTx);&#xD;
				/* Add edge to the nodes in the NodeMap */&#xD;
				srcNode.addEdge(edge);&#xD;
				snkNode.addEdge(edge);&#xD;
				/* Add edge to the nodes in the flow */&#xD;
				flowSrc.addEdge(edge);&#xD;
				flowSnk.addEdge(edge);&#xD;
				/* Add the edege to the flow */&#xD;
				flow.addEdge(edge);&#xD;
&#xD;
			}&#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ZuOYR6gmEe-9tYVtpMatrg" name="createConflictLists" specification="_ZZ6VEKgmEe-9tYVtpMatrg">
                <language>java</language>
                <body>/* create conflict lists at global and&#xD;
		 * local levels (i.e., NodeMap and Flow)&#xD;
		 */&#xD;
		createGlobalConflictLists();&#xD;
		createLocalConflictLists();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ZuOYSKgmEe-9tYVtpMatrg" name="createGlobalConflictLists" specification="_ZZ6VEagmEe-9tYVtpMatrg">
                <language>java</language>
                <body>for (Node node: nodes) {&#xD;
			for (Edge edge: node.getEdges()) {&#xD;
				/* get src and snk nodes and names */&#xD;
				var src = edge.getSrc();&#xD;
				var snk = edge.getSnk();&#xD;
				var srcNode = nodeMap.get(src);&#xD;
				var snkNode = nodeMap.get(snk);&#xD;
				/* &#xD;
				 * conflict list is a set, so just add&#xD;
				 * don't need to worry about duplicates&#xD;
				 * as Set ensures that doesn't happen.&#xD;
				 */&#xD;
				srcNode.addConflict(snk);&#xD;
				snkNode.addConflict(src);&#xD;
			}&#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ZuOYSagmEe-9tYVtpMatrg" name="createLocalConflictLists" specification="_ZZ6VEqgmEe-9tYVtpMatrg">
                <language>java</language>
                <body>for (Flow flow: flows) {&#xD;
			var flowNodes = flow.getNodes();&#xD;
			for (Integer i = 0; i &lt; flowNodes.size() -1 ; i++) {&#xD;
				var srcNode = flowNodes.get(i); &#xD;
				var snkNode = flowNodes.get(i+1);&#xD;
				var src = srcNode.getName();&#xD;
				var snk = snkNode.getName();&#xD;
				/* &#xD;
				 * conflict list is a set, so just add&#xD;
				 * don't need to worry about duplicates&#xD;
				 * as Set ensures that doesn't happen.&#xD;
				 */&#xD;
				srcNode.addConflict(snk);&#xD;
				snkNode.addConflict(src);&#xD;
			}&#xD;
		}&#xD;
&#xD;
&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ZuO_QKgmEe-9tYVtpMatrg" name="findCoordinator" specification="_ZsKisagmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_ZuO_QagmEe-9tYVtpMatrg" name="nodesInFlow" type="_Zp__gKgmEe-9tYVtpMatrg"/>
                <ownedParameter xmi:id="_ZuO_QqgmEe-9tYVtpMatrg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var size = nodesInFlow.size();&#xD;
		var coordinatorIndex = 0;&#xD;
		var maxEdges = 0;&#xD;
		for (Integer i = 0; i &lt; size; i++) {&#xD;
			var node = nodesInFlow.get(i);&#xD;
			var numEdges = node.numEdges();&#xD;
			if (numEdges > maxEdges) {&#xD;
				maxEdges = numEdges;&#xD;
				coordinatorIndex = i;&#xD;
			}&#xD;
		}&#xD;
		return coordinatorIndex;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ZuO_Q6gmEe-9tYVtpMatrg" name="buildTxArray" specification="_ZsLJwKgmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_ZuO_RKgmEe-9tYVtpMatrg" name="nodesInFlow" type="_Zp__gKgmEe-9tYVtpMatrg"/>
                <ownedParameter xmi:id="_ZuO_RagmEe-9tYVtpMatrg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZuO_RqgmEe-9tYVtpMatrg" value="*"/>
                </ownedParameter>
                <language>java</language>
                <body>var size = nodesInFlow.size();&#xD;
		var txArray = new Integer[size];&#xD;
		for (Integer i = 0; i &lt; size; i++) {&#xD;
			var node = nodesInFlow.get(i);&#xD;
			txArray[i] = getMaxTx(node);&#xD;
		}&#xD;
		return txArray;&#xD;
		&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ZuO_R6gmEe-9tYVtpMatrg" name="createInitialActivations" specification="_ZZ6VE6gmEe-9tYVtpMatrg">
                <language>java</language>
                <body>for (Flow flow: flows) {&#xD;
			var nodesInFlow = flow.getNodes();&#xD;
			Integer coordinatorIndex = 0;&#xD;
			/* Find the node with max edges connected.&#xD;
			 * This will be the first coordinator selected&#xD;
			 * for this flow.&#xD;
			 */&#xD;
			coordinatorIndex = findCoordinator(nodesInFlow);&#xD;
			var txArray = buildTxArray(nodesInFlow);&#xD;
			/* if coordinatorIndex is odd, then other coordinators&#xD;
			 * are also odd numbers, even otherwise. &#xD;
			 * */&#xD;
			Integer startIndex = 0; // for even coordinatorIndex&#xD;
			if ((coordinatorIndex % 2) == 1) {&#xD;
				/* coordinatorIndex is odd, so start at 1 */&#xD;
				startIndex = 1;&#xD;
			}&#xD;
			if (startIndex >= nodesInFlow.size()) {&#xD;
				/* create a partition the single partition */&#xD;
			}&#xD;
			var activationPhaseOffset = 0;&#xD;
			for (Integer i = startIndex; i &lt; nodesInFlow.size(); i+=2) {&#xD;
				var node = nodesInFlow.get(i);&#xD;
				/* create a partition consisting of node i */&#xD;
				String name = flow.getName() + &quot;:&quot; + node.getName();&#xD;
				Activation partition = getActivation(name, node);&#xD;
				/* Update phase for each edge in new partition based on &#xD;
				 * the current offset, which increases after each&#xD;
				 * partition created.&#xD;
				 * */&#xD;
				partition.increaseEdgePhases(activationPhaseOffset);&#xD;
				activations.put(name,partition);&#xD;
				/* increase offset for next partition based on the &#xD;
				 * max numTx in this partition/node &#xD;
				 * But need to account for phase already assumes&#xD;
				 * 1 Tx already&#xD;
				 * */&#xD;
				activationPhaseOffset += txArray[i]-1;  // adjust by one&#xD;
			} &#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ZuO_SKgmEe-9tYVtpMatrg" name="getMaxTx" specification="_Zqr8AqgmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_ZuO_SagmEe-9tYVtpMatrg" name="node" type="_ZZxLIKgmEe-9tYVtpMatrg"/>
                <ownedParameter xmi:id="_ZuO_SqgmEe-9tYVtpMatrg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var result = 0;&#xD;
		for (Edge edge: node.getEdges()) {&#xD;
			result = Math.max(result, edge.getNumTx());&#xD;
		}&#xD;
		return result;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ZuO_S6gmEe-9tYVtpMatrg" name="getActivation" specification="_Zqr8BagmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_ZuO_TKgmEe-9tYVtpMatrg" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ZuO_TagmEe-9tYVtpMatrg" name="node" type="_ZZxLIKgmEe-9tYVtpMatrg"/>
                <ownedParameter xmi:id="_ZuO_TqgmEe-9tYVtpMatrg" type="_ZYoisKgmEe-9tYVtpMatrg" direction="return"/>
                <language>java</language>
                <body>Activation newPartition = activations.get(name);&#xD;
		if (newPartition == null) {&#xD;
			// no partition by that name exists, so create one&#xD;
			newPartition = new Activation(name);&#xD;
			activationMap.put(node,newPartition);&#xD;
		}&#xD;
		/* add the node as the coordinator */&#xD;
		newPartition.addCoordinator(node.getName());&#xD;
		/* set the conflicts */&#xD;
		newPartition.setConflicts(node.getConflicts());&#xD;
		/* add the edges associated with this coordinator */&#xD;
		newPartition.addEdges(node.getEdges());&#xD;
		/* set the predecessor as the node's predecessor */&#xD;
		var nodePred = node.getPredecessor();&#xD;
		var pred = activationMap.get(nodePred);&#xD;
		if (nodePred != null &amp;&amp; pred == null) {&#xD;
			/* try next node up the flow */&#xD;
			nodePred = nodePred.getPredecessor();&#xD;
			pred = activationMap.get(nodePred);&#xD;
		}&#xD;
		newPartition.setPredecessor(pred);&#xD;
		return newPartition;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ZuO_T6gmEe-9tYVtpMatrg" name="getHyperPeriod" specification="_ZZ68IKgmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_ZuO_UKgmEe-9tYVtpMatrg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>return workload.getHyperPeriod();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ZuO_UagmEe-9tYVtpMatrg" name="getMaxPhase" specification="_ZZ68IqgmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_ZuO_UqgmEe-9tYVtpMatrg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>return workload.getMaxPhase();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ZuO_U6gmEe-9tYVtpMatrg" name="orderActivations" specification="_ZZ68JKgmEe-9tYVtpMatrg">
                <language>java</language>
                <body>var currentTime = 0; // set initial time for building queue&#xD;
		/* Update the release time and priority of each partition activation */&#xD;
		for (Activation activation: activations.values()) {&#xD;
			activation.updatePriorityAndRelease(currentTime);&#xD;
		}&#xD;
		/* create a queue sorted first by release times and then priorities */&#xD;
		priorityQueue = new &#xD;
				SchedulableObjectQueue&lt;Activation>(new &#xD;
						PriorityComparator&lt;Activation>(),activations.values());&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ZuO_VKgmEe-9tYVtpMatrg" name="getNextActivation" specification="_ZZ68JagmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_ZuO_VagmEe-9tYVtpMatrg" type="_ZYoisKgmEe-9tYVtpMatrg" direction="return"/>
                <language>java</language>
                <body>return priorityQueue.poll();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ZuO_VqgmEe-9tYVtpMatrg" name="addActivation" specification="_ZqsjEKgmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_ZuO_V6gmEe-9tYVtpMatrg" name="activation" type="_ZYoisKgmEe-9tYVtpMatrg"/>
                <language>java</language>
                <body>priorityQueue.add(activation);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ZuO_WKgmEe-9tYVtpMatrg" name="findBaseStation" specification="_ZZ7jMKgmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_ZuO_WagmEe-9tYVtpMatrg" type="_ZZxLIKgmEe-9tYVtpMatrg" direction="return"/>
                <language>java</language>
                <body>Node baseStation = null;&#xD;
		Iterator&lt;Flow> iterator = flows.iterator();&#xD;
		Flow flow = iterator.next();&#xD;
		var nodes = flow.getNodes();&#xD;
		var srcBaseStation = nodes.get(0);&#xD;
		var srcBaseStationName = srcBaseStation.getName();&#xD;
		var snkBaseStation = nodes.get(nodes.size()-1);&#xD;
		var snkBaseStationName = snkBaseStation.getName(); &#xD;
		var found = false;&#xD;
 &#xD;
     while (!found &amp;&amp; iterator.hasNext()) {&#xD;
     	flow = iterator.next();&#xD;
 		nodes = flow.getNodes();&#xD;
     	var src = nodes.get(0);&#xD;
			var srcName = src.getName();&#xD;
			var snk = nodes.get(nodes.size()-1);&#xD;
			var snkName = snk.getName();&#xD;
			if (!srcBaseStationName.equals(srcName) &amp;&amp; &#xD;
					snkBaseStationName.equals(snkName)) {&#xD;
				baseStation = snkBaseStation;&#xD;
				found = true;&#xD;
			} else if (srcBaseStationName.equals(srcName) &amp;&amp; &#xD;
					!snkBaseStationName.equals(snkName)) {&#xD;
				baseStation = srcBaseStation;&#xD;
				found = true;&#xD;
			} else if (!srcBaseStationName.equals(snkName) &amp;&amp;&#xD;
					snkBaseStationName.equals(srcName)) {&#xD;
				baseStation = snkBaseStation;&#xD;
				found = true;&#xD;
			} else if (srcBaseStationName.equals(snkName) &amp;&amp; &#xD;
					!snkBaseStationName.equals(srcName)) {&#xD;
				baseStation = srcBaseStation;&#xD;
				found = true;&#xD;
			}&#xD;
     }&#xD;
     if (!found) {&#xD;
     	/* initial snk and src tie for base station. That is&#xD;
     	 * each is always a flow src with the other a snk or&#xD;
     	 * vice versa. &#xD;
     	 * So pick initial snk as the base station */&#xD;
     	baseStation = snkBaseStation;&#xD;
     }&#xD;
		return baseStation;&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_ZZ5G8KgmEe-9tYVtpMatrg" name="getNodeConnectivity" visibility="private" method="_ZuOYPqgmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_ZsJ7oqgmEe-9tYVtpMatrg" type="_Zp_YcKgmEe-9tYVtpMatrg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_ZZ5G8qgmEe-9tYVtpMatrg" name="getNodeNames" method="_ZuOYQKgmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_ZsKisKgmEe-9tYVtpMatrg" type="_Zp__gKgmEe-9tYVtpMatrg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_ZZ5uAagmEe-9tYVtpMatrg" name="getNodesNamesOrderedAlphabetically" method="_ZuOYQqgmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_ZZ5uAqgmEe-9tYVtpMatrg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZZ5uA6gmEe-9tYVtpMatrg" value="*"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_ZZ5uBagmEe-9tYVtpMatrg" name="buildPosetOfActivations" method="_ZuOYRagmEe-9tYVtpMatrg"/>
              <ownedOperation xmi:id="_ZZ5uBqgmEe-9tYVtpMatrg" name="createEdgeLists" visibility="private" method="_ZuOYRqgmEe-9tYVtpMatrg"/>
              <ownedOperation xmi:id="_ZZ6VEKgmEe-9tYVtpMatrg" name="createConflictLists" visibility="private" method="_ZuOYR6gmEe-9tYVtpMatrg"/>
              <ownedOperation xmi:id="_ZZ6VEagmEe-9tYVtpMatrg" name="createGlobalConflictLists" visibility="private" method="_ZuOYSKgmEe-9tYVtpMatrg"/>
              <ownedOperation xmi:id="_ZZ6VEqgmEe-9tYVtpMatrg" name="createLocalConflictLists" visibility="private" method="_ZuOYSagmEe-9tYVtpMatrg"/>
              <ownedOperation xmi:id="_ZZ6VE6gmEe-9tYVtpMatrg" name="createInitialActivations" visibility="private" method="_ZuO_R6gmEe-9tYVtpMatrg"/>
              <ownedOperation xmi:id="_ZZ68IKgmEe-9tYVtpMatrg" name="getHyperPeriod" method="_ZuO_T6gmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_ZZ68IagmEe-9tYVtpMatrg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_ZZ68IqgmEe-9tYVtpMatrg" name="getMaxPhase" method="_ZuO_UagmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_ZZ68I6gmEe-9tYVtpMatrg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_ZZ68JKgmEe-9tYVtpMatrg" name="orderActivations" method="_ZuO_U6gmEe-9tYVtpMatrg"/>
              <ownedOperation xmi:id="_ZZ68JagmEe-9tYVtpMatrg" name="getNextActivation" method="_ZuO_VKgmEe-9tYVtpMatrg">
                <ownedComment xmi:id="_ZuqdFqgmEe-9tYVtpMatrg">
                  <body>getNextActivation returns the highest priority&#xD;
	 * partition that has been released at or before input&#xD;
	 * parameter time.&#xD;
	 * &#xD;
	 * @param time&#xD;
	 * @return</body>
                </ownedComment>
                <ownedParameter xmi:id="_Zqr8CagmEe-9tYVtpMatrg" type="_ZYoisKgmEe-9tYVtpMatrg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_ZZ7jMKgmEe-9tYVtpMatrg" name="findBaseStation" visibility="protected" method="_ZuO_WKgmEe-9tYVtpMatrg">
                <ownedComment xmi:id="_ZuqdGKgmEe-9tYVtpMatrg">
                  <body>findBaseStation is used by algorithms that generate the&#xD;
	 * partially ordered set of activations using a base station. &#xD;
	 * This method searches the set of flows to find the node that&#xD;
	 * is always one of the src or snk nodes. In the case of a tie&#xD;
	 * where there are two candidates the initial snk node is&#xD;
	 * returned. If there are multiple base stations, only the fist&#xD;
	 * one found is returned.&#xD;
	 * &#xD;
	 * @return baseStation for the workload</body>
                </ownedComment>
                <ownedParameter xmi:id="_ZqsjEqgmEe-9tYVtpMatrg" type="_ZZxLIKgmEe-9tYVtpMatrg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_ZqrU8agmEe-9tYVtpMatrg" name="Poset" visibility="package" method="_ZuOYO6gmEe-9tYVtpMatrg">
                <eAnnotations xmi:id="_ZqrU86gmEe-9tYVtpMatrg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_Zqr8AKgmEe-9tYVtpMatrg" key="create"/>
                </eAnnotations>
                <ownedComment xmi:id="_ZuqdFKgmEe-9tYVtpMatrg">
                  <body>Partition types:&#xD;
	 *  &#xD;
	 *  by node--each node is a partition using only one channel&#xD;
	 *  by channel&#xD;
	 *  	by node then identify when a coordinator and when not&#xD;
	 *  	by flow and coordinator in that flow&#xD;
	 *  	many others...</body>
                </ownedComment>
                <ownedParameter xmi:id="_ZqrU8qgmEe-9tYVtpMatrg" name="workload" type="_Zbu6AqgmEe-9tYVtpMatrg"/>
                <ownedParameter xmi:id="_Zqr8AagmEe-9tYVtpMatrg" type="_ZZ4f4KgmEe-9tYVtpMatrg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_Zqr8AqgmEe-9tYVtpMatrg" name="getMaxTx" visibility="private" method="_ZuO_SKgmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_Zqr8A6gmEe-9tYVtpMatrg" name="node" type="_ZZxLIKgmEe-9tYVtpMatrg"/>
                <ownedParameter xmi:id="_Zqr8BKgmEe-9tYVtpMatrg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_Zqr8BagmEe-9tYVtpMatrg" name="getActivation" visibility="private" method="_ZuO_S6gmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_Zqr8BqgmEe-9tYVtpMatrg" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Zqr8B6gmEe-9tYVtpMatrg" name="node" type="_ZZxLIKgmEe-9tYVtpMatrg"/>
                <ownedParameter xmi:id="_Zqr8CKgmEe-9tYVtpMatrg" type="_ZYoisKgmEe-9tYVtpMatrg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_ZqsjEKgmEe-9tYVtpMatrg" name="addActivation" method="_ZuO_VqgmEe-9tYVtpMatrg">
                <ownedComment xmi:id="_ZuqdF6gmEe-9tYVtpMatrg">
                  <body>addElemement adds the partitionElement to the priority queue&#xD;
	 * &#xD;
	 * @param activation</body>
                </ownedComment>
                <ownedParameter xmi:id="_ZqsjEagmEe-9tYVtpMatrg" name="activation" type="_ZYoisKgmEe-9tYVtpMatrg"/>
              </ownedOperation>
              <ownedOperation xmi:id="_ZsKisagmEe-9tYVtpMatrg" name="findCoordinator" visibility="protected" method="_ZuO_QKgmEe-9tYVtpMatrg">
                <ownedComment xmi:id="_ZuqdFagmEe-9tYVtpMatrg">
                  <body>*&#xD;
	 * @param nodesInFlow&#xD;
	 * @return the node in the flow with highest local connectivity.</body>
                </ownedComment>
                <ownedParameter xmi:id="_ZsKisqgmEe-9tYVtpMatrg" name="nodesInFlow" type="_Zp__gKgmEe-9tYVtpMatrg"/>
                <ownedParameter xmi:id="_ZsKis6gmEe-9tYVtpMatrg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_ZsLJwKgmEe-9tYVtpMatrg" name="buildTxArray" visibility="private" method="_ZuO_Q6gmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_ZsLJwagmEe-9tYVtpMatrg" name="nodesInFlow" type="_Zp__gKgmEe-9tYVtpMatrg"/>
                <ownedParameter xmi:id="_ZsLJwqgmEe-9tYVtpMatrg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZsLJw6gmEe-9tYVtpMatrg" value="*"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_ZZ9_cKgmEe-9tYVtpMatrg" name="PreemptiveSchedule">
              <ownedComment xmi:id="_ZuqdGagmEe-9tYVtpMatrg">
                <body>PreemptiveSchedule extends Schedule to build a preemptive, &#xD;
priority schedule for the Poset using numChannels. &#xD;
&#xD;
@author sgoddard2&#xD;
 *</body>
              </ownedComment>
              <generalization xmi:id="_ZqwNcqgmEe-9tYVtpMatrg" general="_Zax3wagmEe-9tYVtpMatrg"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ZuPmUKgmEe-9tYVtpMatrg" name="PreemptiveSchedule" specification="_ZqtKIKgmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_ZuPmUagmEe-9tYVtpMatrg" name="poset" type="_ZZ4f4KgmEe-9tYVtpMatrg"/>
                <ownedParameter xmi:id="_ZuPmUqgmEe-9tYVtpMatrg" name="numChannels">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ZuPmU6gmEe-9tYVtpMatrg" type="_ZZ9_cKgmEe-9tYVtpMatrg" direction="return"/>
                <language>java</language>
                <body>super(poset,numChannels);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ZuPmVKgmEe-9tYVtpMatrg" name="continueSearch" specification="_ZqtxMKgmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_ZuPmVagmEe-9tYVtpMatrg" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ZuPmVqgmEe-9tYVtpMatrg" name="activation" type="_ZYoisKgmEe-9tYVtpMatrg"/>
                <ownedParameter xmi:id="_ZuPmV6gmEe-9tYVtpMatrg" type="_ZsMX4KgmEe-9tYVtpMatrg" direction="return"/>
                <language>java</language>
                <body>return findPreeptiveChannelAndTime(time,activation);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ZuPmWKgmEe-9tYVtpMatrg" name="toProgram" specification="_ZZ-mgKgmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_ZuPmWagmEe-9tYVtpMatrg" type="_ZaOeIKgmEe-9tYVtpMatrg" direction="return"/>
                <language>java</language>
                <body>var program = new ProgramSchedule();	&#xD;
		&#xD;
//TODO write code to support preemption&#xD;
		&#xD;
		return program;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ZuPmWqgmEe-9tYVtpMatrg" name="findPreeptiveChannelAndTime" specification="_ZquYQ6gmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_ZuPmW6gmEe-9tYVtpMatrg" name="startTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ZuPmXKgmEe-9tYVtpMatrg" name="schedulableObject" type="_ZYoisKgmEe-9tYVtpMatrg"/>
                <ownedParameter xmi:id="_ZuPmXagmEe-9tYVtpMatrg" type="_ZsMX4KgmEe-9tYVtpMatrg" direction="return"/>
                <language>java</language>
                <body>var channel = numChannels;&#xD;
		var time = startTime;&#xD;
		var result = findMaxTimeAvailable(time, schedulableObject);&#xD;
		var channelConsidered = result.channel;&#xD;
		var timeAvailable = result.time;&#xD;
		&#xD;
		&#xD;
		if (channelConsidered == numChannels) {&#xD;
			/* no available time slots near this time, even for preemption */&#xD;
			return findChannelAndTime(time+1,schedulableObject);&#xD;
		} else {&#xD;
			/* can use timeAvailable.time here on timeAvailable.channel&#xD;
			 * then must find additional time on same channel until &#xD;
			 * done&#xD;
			 */&#xD;
			// return findAdditionalTime(timeAvailable.channel,time+1,schedulableObject);&#xD;
			var duration = schedulableObject.getExecutionDuration();&#xD;
			var timeRemaining = duration-timeAvailable;&#xD;
			var additionalScheduleTimes = findAdditionalTime(channelConsidered,time+timeAvailable,schedulableObject,timeRemaining);&#xD;
			var numStartTimes = additionalScheduleTimes.size();&#xD;
			var lastStartTime = endScheduleTime; &#xD;
			if (numStartTimes > 0 ) {&#xD;
				lastStartTime = additionalScheduleTimes.get(numStartTimes-1).getStartTime();&#xD;
			}&#xD;
			if (lastStartTime &lt; endScheduleTime) {&#xD;
				// schedulableObject.addAdditionalStartTime(nextStartTime);&#xD;
				channel = channelConsidered;&#xD;
				schedulableObject.addScheduleTimes(additionalScheduleTimes);&#xD;
			} else {&#xD;
				time = lastStartTime;&#xD;
			}&#xD;
		}&#xD;
		return new ScheduleLocation(channel, time);	&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ZuPmXqgmEe-9tYVtpMatrg" name="findAdditionalTime" specification="_ZquYRqgmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_ZuPmX6gmEe-9tYVtpMatrg" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ZuPmYKgmEe-9tYVtpMatrg" name="startTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ZuPmYagmEe-9tYVtpMatrg" name="a1" type="_ZYoisKgmEe-9tYVtpMatrg"/>
                <ownedParameter xmi:id="_ZuPmYqgmEe-9tYVtpMatrg" name="timeRemaining">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ZuPmY6gmEe-9tYVtpMatrg" type="_Zp__gKgmEe-9tYVtpMatrg" direction="return"/>
                <language>java</language>
                <body>var time = startTime;&#xD;
		var results = new ArrayList&lt;ScheduleTime>();&#xD;
		&#xD;
		// if (timeRemaining &lt;= )&#xD;
		while (time &lt; endScheduleTime &amp;&amp; conflictsExist(a1, time, timeRemaining )) {&#xD;
			time ++; &#xD;
		}&#xD;
		if (time >= endScheduleTime) {&#xD;
			/* no conflict time available */&#xD;
			results.add(new ScheduleTime(time,time));&#xD;
			return results;&#xD;
		} &#xD;
		&#xD;
		if (isAvailable(a1, channel, time, timeRemaining)) {&#xD;
			results.add(new ScheduleTime(time,time+timeRemaining-1));&#xD;
		} else {&#xD;
			var timeAvailable = availableTime(a1,  channel, time);&#xD;
			if (timeAvailable > 0) {&#xD;
				/* found at least one time slot available */&#xD;
//				a1.addAdditionalStartTime(time);&#xD;
				results.addAll(findAdditionalTime(channel,time+timeAvailable,a1,timeRemaining-timeAvailable));&#xD;
			} else {&#xD;
				/* look ahead in time by one unit */&#xD;
				results.addAll(findAdditionalTime(channel,time+1,a1,timeRemaining));&#xD;
			}&#xD;
			&#xD;
		}&#xD;
		&#xD;
		return results;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ZuPmZKgmEe-9tYVtpMatrg" name="findMaxTimeAvailable" specification="_Zqu_UagmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_ZuPmZagmEe-9tYVtpMatrg" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ZuPmZqgmEe-9tYVtpMatrg" name="schedulableObject" type="_ZYoisKgmEe-9tYVtpMatrg"/>
                <ownedParameter xmi:id="_ZuPmZ6gmEe-9tYVtpMatrg" type="_ZsMX4KgmEe-9tYVtpMatrg" direction="return"/>
                <language>java</language>
                <body>var maxTime = 0;&#xD;
		var bestChannel = numChannels;&#xD;
		&#xD;
		for (int channel = 0; channel &lt; numChannels ; channel++) {&#xD;
			var timeAvailable = availableTime(schedulableObject,channel,time);&#xD;
			if (timeAvailable > maxTime) {&#xD;
				maxTime = timeAvailable;&#xD;
				bestChannel = channel;&#xD;
			}&#xD;
		}&#xD;
// TEMP&#xD;
		if (maxTime > 0) {&#xD;
			System.err.printf(&quot;\n\t\tMaxTime is %d and bestChannel is %d\n&quot;, maxTime, bestChannel);&#xD;
		}&#xD;
// TEMP&#xD;
		return new ScheduleLocation(bestChannel,maxTime);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ZuPmaKgmEe-9tYVtpMatrg" name="availableTime" specification="_Zqu_VKgmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_ZuPmaagmEe-9tYVtpMatrg" name="a1" type="_ZYoisKgmEe-9tYVtpMatrg"/>
                <ownedParameter xmi:id="_ZuPmaqgmEe-9tYVtpMatrg" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ZuPma6gmEe-9tYVtpMatrg" name="start">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ZuPmbKgmEe-9tYVtpMatrg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>Integer result = 0;&#xD;
		&#xD;
		while (isAvailable(a1,channel,start+result,1)) {&#xD;
			result++;&#xD;
		}&#xD;
		return result;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ZuQNYKgmEe-9tYVtpMatrg" name="addToSchedule" specification="_ZqvmY6gmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_ZuQNYagmEe-9tYVtpMatrg" name="next" type="_ZYoisKgmEe-9tYVtpMatrg"/>
                <ownedParameter xmi:id="_ZuQNYqgmEe-9tYVtpMatrg" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ZuQNY6gmEe-9tYVtpMatrg" name="startTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ZuQNZKgmEe-9tYVtpMatrg" name="endTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ZuQNZagmEe-9tYVtpMatrg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>var success = true;&#xD;
		var combineTime = endScheduleTime;&#xD;
		&#xD;
		var nextScheduleTime = next.getNextScheduleTime(startTime);&#xD;
		var nextStartTime = nextScheduleTime.getStartTime();&#xD;
		var nextEndTime = nextScheduleTime.getEndTime();&#xD;
		&#xD;
		if (startTime >= endScheduleTime || endTime >= endScheduleTime) {&#xD;
			/* can't schedule this activation */&#xD;
			return false;&#xD;
		}&#xD;
		&#xD;
		if (nextStartTime &lt; Integer.MAX_VALUE &amp;&amp; nextEndTime &lt; Integer.MAX_VALUE) {&#xD;
			/* add the next slice of execution to the schedule */&#xD;
			success = addToSchedule(next,channel,nextStartTime, nextEndTime);&#xD;
		}&#xD;
		if (!success) {&#xD;
			return false;&#xD;
		}&#xD;
		&#xD;
		/* Successful adding next to later points in the schedule.&#xD;
		 * So, now we see if this is the last&#xD;
		 * &#xD;
		 */&#xD;
		if (nextStartTime == Integer.MAX_VALUE &amp;&amp; nextEndTime == Integer.MAX_VALUE) {&#xD;
			/* this is the last slice of execution, so wrap things up */&#xD;
			next.setEndTime(endTime);&#xD;
			var responseTime = endTime - next.getReleaseTime();&#xD;
			if (responseTime > next.getDeadline()) {&#xD;
				return false; // unable to schedule this entry&#xD;
			}&#xD;
			/* Add the endTime to the elements endTimes Q&#xD;
			 * so that we can track predecessor endTimes&#xD;
			 * and make sure successors don't start before &#xD;
			 * predecessors&#xD;
			 */&#xD;
			next.addToEndTimes(endTime); &#xD;
			/* remove predecessor end time that matches this start time */&#xD;
			var pred = next.getPredecessor();&#xD;
			if (pred != null) {&#xD;
				pred.pollEndTimes(); &#xD;
			}&#xD;
		}&#xD;
		/* Create a new entry, based on next, to be entered&#xD;
		 * into the scheduling tale&#xD;
		 */&#xD;
		var entry = new Activation(next, startTime);&#xD;
		/* Check to see we need to combine this activation with&#xD;
		 * an existing activation in any of the slots. If so,&#xD;
		 * save that time so we can update the actual start time&#xD;
		 */&#xD;
		Activation currentEntry = null;&#xD;
		for (int i = startTime; i &lt;= endTime; i++) {&#xD;
			currentEntry = schedule.get(channel,i);&#xD;
			if (currentEntry != null &amp;&amp; next.canCombine(currentEntry)) {&#xD;
				/* found an entry to combine, record the time,&#xD;
				 * update the combined duration and new&#xD;
				 * endTime, then exit the loop&#xD;
				 */&#xD;
				combineTime = i;&#xD;
				// currentEntry = entry;&#xD;
				break;&#xD;
			}&#xD;
		}&#xD;
		entry.setStartTime(startTime); // set start time for this entry&#xD;
		entry.setEndTime(endTime); // set end time for this entry&#xD;
		if (combineTime &lt; endScheduleTime) {&#xD;
			/* change entry to point to combinedActivation&#xD;
			 * and set startTime to the beginning of the &#xD;
			 * combined entries */&#xD;
			var combinedActivation = new CombinedActivation(currentEntry, entry);&#xD;
			entry = combinedActivation;&#xD;
			startTime = entry.getStartTime();&#xD;
		}&#xD;
		for (int i = startTime; i &lt;= endTime; i++) {&#xD;
			/* Add this object to the schedule for the&#xD;
			 * from startTime to endTime.&#xD;
			 */&#xD;
			schedule.set(channel, i, entry);&#xD;
		}&#xD;
		&#xD;
		return success;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ZuQNZqgmEe-9tYVtpMatrg" name="addToSchedule" specification="_ZqvmaagmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_ZuQNZ6gmEe-9tYVtpMatrg" name="next" type="_ZYoisKgmEe-9tYVtpMatrg"/>
                <ownedParameter xmi:id="_ZuQNaKgmEe-9tYVtpMatrg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>var channel = getChannelAndSetStartTime(next);&#xD;
		if (channel == numChannels) {&#xD;
			return false;&#xD;
		}&#xD;
		&#xD;
		/* found a time and channel  that are valid */&#xD;
		var startTime = next.getStartTime(); // set by getChannelAndSetStartTime()&#xD;
		var success = false; &#xD;
		&#xD;
// PREEMPT&#xD;
		var timeAvailable = availableTime(next, channel, startTime);&#xD;
		var duration = next.getExecutionDuration();&#xD;
		&#xD;
		if (timeAvailable == 0 ) {&#xD;
			/* then currentEntry at this location in the schedule&#xD;
			 * is not null and we can combine, but best to check&#xD;
			 */&#xD;
			var currentEntry = schedule.get(channel,startTime);&#xD;
			if (currentEntry != null &amp;&amp; currentEntry.canCombine(next)) {&#xD;
				/* no conflict with this entry, and can&#xD;
				 * combine so check for combined entry time&#xD;
				 *  to see if we can combine activations&#xD;
				 */&#xD;
				var combinedDuration = currentEntry.getCombinedExecutionDuration(next);&#xD;
				var combinedEntry = new CombinedActivation(currentEntry,next);&#xD;
				var searchTime = currentEntry.getEndTime()+1;&#xD;
				var searchLength = combinedDuration - duration;&#xD;
				if (isAvailable(combinedEntry, channel, searchTime, searchLength)) {&#xD;
					timeAvailable = combinedDuration;&#xD;
					duration = combinedDuration;&#xD;
				}&#xD;
			}&#xD;
		}&#xD;
			if (duration &lt;= timeAvailable) {&#xD;
				/* can execute without preemption */&#xD;
				var endTime = startTime+duration-1;&#xD;
				success = addToSchedule(next,channel,startTime,endTime);&#xD;
			} else {&#xD;
				/* Recursively add 'slices' to the schedule.&#xD;
				 * success == true => all slices added successfully&#xD;
				 * otherwise, none of the slices were added&#xD;
				 */&#xD;
				var endTime = startTime + timeAvailable-1;&#xD;
				success = addToSchedule(next,channel,startTime,endTime);&#xD;
			}&#xD;
		return success;&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_ZZ-mgKgmEe-9tYVtpMatrg" name="toProgram" method="_ZuPmWKgmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_ZquYQqgmEe-9tYVtpMatrg" type="_ZaOeIKgmEe-9tYVtpMatrg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_ZqtKIKgmEe-9tYVtpMatrg" name="PreemptiveSchedule" visibility="package" method="_ZuPmUKgmEe-9tYVtpMatrg">
                <eAnnotations xmi:id="_ZqtKI6gmEe-9tYVtpMatrg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_ZqtKJKgmEe-9tYVtpMatrg" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_ZqtKIagmEe-9tYVtpMatrg" name="poset" type="_ZZ4f4KgmEe-9tYVtpMatrg"/>
                <ownedParameter xmi:id="_ZqtKIqgmEe-9tYVtpMatrg" name="numChannels">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ZqtKJagmEe-9tYVtpMatrg" type="_ZZ9_cKgmEe-9tYVtpMatrg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_ZqtxMKgmEe-9tYVtpMatrg" name="continueSearch" visibility="protected" method="_ZuPmVKgmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_ZqtxMagmEe-9tYVtpMatrg" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ZqtxMqgmEe-9tYVtpMatrg" name="activation" type="_ZYoisKgmEe-9tYVtpMatrg"/>
                <ownedParameter xmi:id="_ZsMX4qgmEe-9tYVtpMatrg" type="_ZsMX4KgmEe-9tYVtpMatrg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_ZquYQ6gmEe-9tYVtpMatrg" name="findPreeptiveChannelAndTime" visibility="private" method="_ZuPmWqgmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_ZquYRKgmEe-9tYVtpMatrg" name="startTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ZquYRagmEe-9tYVtpMatrg" name="schedulableObject" type="_ZYoisKgmEe-9tYVtpMatrg"/>
                <ownedParameter xmi:id="_ZsM-8KgmEe-9tYVtpMatrg" type="_ZsMX4KgmEe-9tYVtpMatrg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_ZquYRqgmEe-9tYVtpMatrg" name="findAdditionalTime" visibility="private" method="_ZuPmXqgmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_ZquYR6gmEe-9tYVtpMatrg" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ZquYSKgmEe-9tYVtpMatrg" name="startTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ZquYSagmEe-9tYVtpMatrg" name="a1" type="_ZYoisKgmEe-9tYVtpMatrg"/>
                <ownedParameter xmi:id="_ZquYSqgmEe-9tYVtpMatrg" name="timeRemaining">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ZsM-8agmEe-9tYVtpMatrg" type="_Zp__gKgmEe-9tYVtpMatrg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_Zqu_UagmEe-9tYVtpMatrg" name="findMaxTimeAvailable" visibility="private" method="_ZuPmZKgmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_Zqu_UqgmEe-9tYVtpMatrg" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Zqu_U6gmEe-9tYVtpMatrg" name="schedulableObject" type="_ZYoisKgmEe-9tYVtpMatrg"/>
                <ownedParameter xmi:id="_ZsM-8qgmEe-9tYVtpMatrg" type="_ZsMX4KgmEe-9tYVtpMatrg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_Zqu_VKgmEe-9tYVtpMatrg" name="availableTime" visibility="private" method="_ZuPmaKgmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_Zqu_VagmEe-9tYVtpMatrg" name="a1" type="_ZYoisKgmEe-9tYVtpMatrg"/>
                <ownedParameter xmi:id="_ZqvmYKgmEe-9tYVtpMatrg" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ZqvmYagmEe-9tYVtpMatrg" name="start">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ZqvmYqgmEe-9tYVtpMatrg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_ZqvmY6gmEe-9tYVtpMatrg" name="addToSchedule" visibility="private" method="_ZuQNYKgmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_ZqvmZKgmEe-9tYVtpMatrg" name="next" type="_ZYoisKgmEe-9tYVtpMatrg"/>
                <ownedParameter xmi:id="_ZqvmZagmEe-9tYVtpMatrg" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ZqvmZqgmEe-9tYVtpMatrg" name="startTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ZqvmZ6gmEe-9tYVtpMatrg" name="endTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ZqvmaKgmEe-9tYVtpMatrg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_ZqvmaagmEe-9tYVtpMatrg" name="addToSchedule" visibility="protected" method="_ZuQNZqgmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_ZqvmaqgmEe-9tYVtpMatrg" name="next" type="_ZYoisKgmEe-9tYVtpMatrg"/>
                <ownedParameter xmi:id="_Zqvma6gmEe-9tYVtpMatrg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_ZaBCwKgmEe-9tYVtpMatrg" name="PriorityComparator">
              <interfaceRealization xmi:id="_ZsM-86gmEe-9tYVtpMatrg" client="_ZaBCwKgmEe-9tYVtpMatrg" supplier="_ZqOB9qgmEe-9tYVtpMatrg" contract="_ZqOB9qgmEe-9tYVtpMatrg"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ZuQNaagmEe-9tYVtpMatrg" name="compare" specification="_ZsNmAagmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_ZuQNaqgmEe-9tYVtpMatrg" name="obj1" type="_Zr9HUKgmEe-9tYVtpMatrg"/>
                <ownedParameter xmi:id="_ZuQNa6gmEe-9tYVtpMatrg" name="obj2" type="_Zr9HUKgmEe-9tYVtpMatrg"/>
                <ownedParameter xmi:id="_ZuQNbKgmEe-9tYVtpMatrg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>var result = obj1.priorityComparison(obj2);&#xD;
		if (result == 0) {&#xD;
			// tied for priority, so break tie on release time&#xD;
			result = obj1.releaseTimeComparison(obj2);&#xD;
		}&#xD;
		return result; // 0 => tie on priority and release time&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_ZsNmAagmEe-9tYVtpMatrg" name="compare" method="_ZuQNaagmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_ZsNmAqgmEe-9tYVtpMatrg" name="obj1" type="_Zr9HUKgmEe-9tYVtpMatrg"/>
                <ownedParameter xmi:id="_ZsNmA6gmEe-9tYVtpMatrg" name="obj2" type="_Zr9HUKgmEe-9tYVtpMatrg"/>
                <ownedParameter xmi:id="_ZsNmBKgmEe-9tYVtpMatrg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_ZaCQ4KgmEe-9tYVtpMatrg" name="Program">
              <ownedComment xmi:id="_ZurEIKgmEe-9tYVtpMatrg">
                <body>@author sgoddard&#xD;
 *</body>
              </ownedComment>
              <ownedAttribute xmi:id="_ZtW1gKgmEe-9tYVtpMatrg" name="UNKNOWN" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_ZtW1gagmEe-9tYVtpMatrg" value="&quot;Unknown&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_ZtW1gqgmEe-9tYVtpMatrg" name="SLEEP_INSTRUCTION" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_ZtW1g6gmEe-9tYVtpMatrg" value="&quot;sleep&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_ZtW1hKgmEe-9tYVtpMatrg" name="WAIT_FRAGMENT" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_ZtW1hagmEe-9tYVtpMatrg" value="&quot;wait(&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_ZtW1hqgmEe-9tYVtpMatrg" name="ELSE_PULL_FRAGMENT" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_ZtXckKgmEe-9tYVtpMatrg" value="&quot;else pull(&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_ZtXckagmEe-9tYVtpMatrg" name="workLoad" visibility="package" type="_Zbu6AqgmEe-9tYVtpMatrg" association="_ZvaD8agmEe-9tYVtpMatrg"/>
              <ownedAttribute xmi:id="_ZtXck6gmEe-9tYVtpMatrg" name="scheduleBuilt" visibility="package" type="_ZaOeIKgmEe-9tYVtpMatrg" association="_ZvaD9KgmEe-9tYVtpMatrg"/>
              <ownedAttribute xmi:id="_ZtXclagmEe-9tYVtpMatrg" name="SchedulerSelected" visibility="package" type="_ZsO0IKgmEe-9tYVtpMatrg" association="_ZvarAagmEe-9tYVtpMatrg"/>
              <ownedAttribute xmi:id="_ZtXcl6gmEe-9tYVtpMatrg" name="schChoice" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_ZtYDoKgmEe-9tYVtpMatrg" name="schedulerName" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_ZtYDoqgmEe-9tYVtpMatrg" name="nTransmissions" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_ZtYDpKgmEe-9tYVtpMatrg" name="realTimeHARTflag" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_ZtYDpqgmEe-9tYVtpMatrg" name="optimizationRequested" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_ZtYDqKgmEe-9tYVtpMatrg" name="channelsAvailable" visibility="package" type="_ZY6PgKgmEe-9tYVtpMatrg" association="_ZvarBKgmEe-9tYVtpMatrg"/>
              <ownedAttribute xmi:id="_ZtYqsagmEe-9tYVtpMatrg" name="nChannels" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_ZtYqs6gmEe-9tYVtpMatrg" name="verbose" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_ZtYqtagmEe-9tYVtpMatrg" name="reportLatency" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_ZtZRwagmEe-9tYVtpMatrg" name="deadlineMisses" visibility="private" type="_ZZLVQKgmEe-9tYVtpMatrg" association="_ZvarB6gmEe-9tYVtpMatrg"/>
              <interfaceRealization xmi:id="_ZqxbkagmEe-9tYVtpMatrg" client="_ZaCQ4KgmEe-9tYVtpMatrg" supplier="_Za9d8agmEe-9tYVtpMatrg" contract="_Za9d8agmEe-9tYVtpMatrg"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ZuQNbagmEe-9tYVtpMatrg" name="Program" specification="_ZsPbMKgmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_ZuQNbqgmEe-9tYVtpMatrg" name="workLoad" type="_Zbu6AqgmEe-9tYVtpMatrg"/>
                <ownedParameter xmi:id="_ZuQNb6gmEe-9tYVtpMatrg" name="nChannels">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ZuQNcKgmEe-9tYVtpMatrg" name="choice" type="_ZsO0IKgmEe-9tYVtpMatrg"/>
                <ownedParameter xmi:id="_ZuQNcagmEe-9tYVtpMatrg" name="verbose">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ZuQNcqgmEe-9tYVtpMatrg" name="reportLatency">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ZuQNc6gmEe-9tYVtpMatrg" type="_ZaCQ4KgmEe-9tYVtpMatrg" direction="return"/>
                <language>java</language>
                <body>setDefaultParameters(workLoad, nChannels, verbose, reportLatency);&#xD;
 buildProgram(choice);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ZuQNdKgmEe-9tYVtpMatrg" name="Program" specification="_ZsPbOagmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_ZuQNdagmEe-9tYVtpMatrg" name="workLoad" type="_Zbu6AqgmEe-9tYVtpMatrg"/>
                <ownedParameter xmi:id="_ZuQNdqgmEe-9tYVtpMatrg" name="nChannels">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ZuQNd6gmEe-9tYVtpMatrg" name="choice" type="_ZsO0IKgmEe-9tYVtpMatrg"/>
                <ownedParameter xmi:id="_ZuQNeKgmEe-9tYVtpMatrg" type="_ZaCQ4KgmEe-9tYVtpMatrg" direction="return"/>
                <language>java</language>
                <body>setDefaultParameters(workLoad, nChannels, false, false);&#xD;
 buildProgram(choice);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ZuQNeagmEe-9tYVtpMatrg" name="setDefaultParameters" specification="_ZqypsKgmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_ZuQNeqgmEe-9tYVtpMatrg" name="workLoad" type="_Zbu6AqgmEe-9tYVtpMatrg"/>
                <ownedParameter xmi:id="_ZuQNe6gmEe-9tYVtpMatrg" name="nChannels">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ZuQNfKgmEe-9tYVtpMatrg" name="verbose">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ZuQNfagmEe-9tYVtpMatrg" name="reportLatency">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>this.workLoad = workLoad; // flows for which schedules will be built&#xD;
 this.scheduleBuilt = new ProgramSchedule();&#xD;
 this.SchedulerSelected = ScheduleChoices.PRIORITY; // set the type of scheduler selected&#xD;
 workLoad.setFlowsInPriorityOrder();&#xD;
 this.schedulerName = &quot;Priority&quot;;&#xD;
 this.schChoice = &quot;Priority&quot;;&#xD;
 this.nTransmissions = 0;&#xD;
 this.realTimeHARTflag = false;&#xD;
 this.optimizationRequested = true;&#xD;
 this.nChannels = nChannels;&#xD;
 this.verbose = verbose;&#xD;
 this.channelsAvailable = new Channels(nChannels, verbose);&#xD;
 this.reportLatency = reportLatency;&#xD;
 this.deadlineMisses = new Description();&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ZuQNfqgmEe-9tYVtpMatrg" name="toWorkLoad" specification="_ZaDfAKgmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_ZuQNf6gmEe-9tYVtpMatrg" type="_Zbu6AqgmEe-9tYVtpMatrg" direction="return"/>
                <language>java</language>
                <body>return workLoad;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ZuQ0cKgmEe-9tYVtpMatrg" name="buildProgram" specification="_ZsQCRqgmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_ZuQ0cagmEe-9tYVtpMatrg" name="choice" type="_ZsO0IKgmEe-9tYVtpMatrg"/>
                <language>java</language>
                <body>/*&#xD;
  * Switch on the scheduler choice. If it is POSET-based scheduler, create the POSET that matches&#xD;
  * the name and then use the newer schedule object to convert the POSET to a program. If it is&#xD;
  * an original scheduler choice, build set the scheduler type and build the schedule and WARP&#xD;
  * program by calling buildOriginalProgram();&#xD;
  */&#xD;
 switch (choice) { // select the requested scheduler&#xD;
   case WARP_POSET_PRIORITY: // fall through&#xD;
   case WARP_POSET_RM: // fall through&#xD;
   case WARP_POSET_DM: // fall through&#xD;
     setScheduleSelected(choice);&#xD;
     var poset1 = new WarpPoset(workLoad);&#xD;
     var schedule1 = new NonPreemptiveSchedule(poset1, this.nChannels);&#xD;
     var newProgram = schedule1.toProgram();&#xD;
     setSchedule(newProgram); // store the schedule built&#xD;
     break;&#xD;
   case CONNECTIVITY_POSET_PRIORITY: // fall through&#xD;
   case CONNECTIVITY_POSET_RM: // fall through&#xD;
   case CONNECTIVITY_POSET_DM: // fall through&#xD;
   case POSET_PRIORITY: // fall through&#xD;
   case POSET_RM: // fall through&#xD;
   case POSET_DM:&#xD;
     setScheduleSelected(choice);&#xD;
     // var poset = new BasicPoset(workLoad);&#xD;
     var poset2 = new ConnectivityPoset(workLoad);&#xD;
     var schedule2 = new NonPreemptiveSchedule(poset2, this.nChannels);&#xD;
     newProgram = schedule2.toProgram();&#xD;
     setSchedule(newProgram); // store the schedule built&#xD;
     break;&#xD;
   //// case CONNECTIVITY_POSET_PREEMPTIVE_PRIORITY: // fall through&#xD;
   //// case CONNECTIVITY_POSET_PREEMPTIVE_RM: // fall through&#xD;
   //// case CONNECTIVITY_POSET_PREEMPTIVE_DM: // fall through&#xD;
   // var poset3 = new ConnectivityPoset(workLoad);&#xD;
   // var schedule3 = new PreemptiveSchedule(poset3, this.nChannels);&#xD;
   // newProgram = schedule3.toProgram();&#xD;
   // setSchedule(newProgram); // store the schedule built&#xD;
   // break;&#xD;
   case PRIORITY:&#xD;
     selectPriority();&#xD;
     buildOriginalProgram(); // build the requested schedule&#xD;
     break;&#xD;
   case RM:&#xD;
     selectRM();&#xD;
     buildOriginalProgram(); // build the requested schedule&#xD;
     break;&#xD;
   case DM:&#xD;
     selectDM();&#xD;
     buildOriginalProgram(); // build the requested schedule&#xD;
     break;&#xD;
   case RTHART:&#xD;
     selectRtHART();&#xD;
     buildOriginalProgram(); // build the requested schedule&#xD;
     break;&#xD;
   default:&#xD;
     selectPriority();&#xD;
     buildOriginalProgram(); // build the requested schedule&#xD;
     break; // break from switch&#xD;
 }&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ZuQ0cqgmEe-9tYVtpMatrg" name="buildOriginalProgram" specification="_ZaEGEKgmEe-9tYVtpMatrg">
                <language>java</language>
                <body>// builds a Priority schedule&#xD;
&#xD;
 if (verbose) {&#xD;
   var scheduleDetails =&#xD;
       String.format(&quot;\nSystem schedule for graph %s created with the following parameters:\n&quot;,&#xD;
           workLoad.getName());&#xD;
   scheduleDetails =&#xD;
       String.format(scheduleDetails + &quot;\tScheduler Name:\t%s\n&quot;, getSchedulerName());&#xD;
   scheduleDetails = String.format(scheduleDetails + &quot;\tM:\t%s\n&quot;,&#xD;
       String.valueOf(workLoad.getMinPacketReceptionRate()));&#xD;
   scheduleDetails =&#xD;
       String.format(scheduleDetails + &quot;\tE2E:\t%s\n&quot;, String.valueOf(workLoad.getE2e()));&#xD;
   scheduleDetails = String.format(scheduleDetails + &quot;\tnChannels:\t%d\n&quot;, getNumChannels());&#xD;
   // The following parameters are only output when special schedules are requested&#xD;
   if (getNumTransmissions() > 0) { // only specify when NumTransmissions is fixed&#xD;
     scheduleDetails =&#xD;
         String.format(scheduleDetails + &quot;\tnTransmissions:\t%d\n&quot;, getNumTransmissions());&#xD;
   }&#xD;
   if (getOptimizationFlag()) { // only specify when optimization not requested&#xD;
     scheduleDetails += &quot;\tOptimization Requested:\tFalse\n&quot;;&#xD;
   }&#xD;
   System.out.println(scheduleDetails);&#xD;
 }&#xD;
 var nTx = 0;// support nTx per transmission, which is set based on input parameter if&#xD;
             // nTransmissions == n 0 else flow.nTXperLink&#xD;
 var nTransmissions = getNumTransmissions();&#xD;
 Boolean realtimeHART = getRealTimeHartFlag();&#xD;
 var optimizationRequested = getOptimizationFlag();&#xD;
 var schedule = new ProgramSchedule(); // create an empty schedule&#xD;
 var newInstruction = SLEEP_INSTRUCTION; // initialize the new Instruction with a sleep&#xD;
 var prioritizedFlows = workLoad.getFlowNamesInPriorityOrder();&#xD;
 // var orderedNodes = workLoad.getNodeNamesOrderedAlphabetically(); // create an array of node&#xD;
 // names&#xD;
 // sorted alphabetically&#xD;
 var nodeIndex = getNodeMapIndex(); // get the mapping from node names to index in schedule&#xD;
 var nNodes = nodeIndex.size();&#xD;
 /*&#xD;
  * for (int index = 0; index &lt; nNodes; index++) { // set up the node to index mapping var name =&#xD;
  * orderedNodes[index]; nodeIndex.put(name, index); // add name, index mapping to NodeIndex map&#xD;
  * }&#xD;
  */&#xD;
 var hyperPeriod = workLoad.getHyperPeriod();&#xD;
 for (int i = 0; i &lt; hyperPeriod; i++) { // This loop makes sure the schedule is full up to the&#xD;
                                         // period and the channels entries are all initialized&#xD;
   var newInstructionTimeSlot = new InstructionTimeSlot(nNodes, SLEEP_INSTRUCTION); // create a&#xD;
                                                                                    // time slot&#xD;
                                                                                    // for&#xD;
                                                                                    // nNodes,&#xD;
                                                                                    // each&#xD;
                                                                                    // initialized&#xD;
                                                                                    // with a&#xD;
                                                                                    // SLEEP_INSTRUCTION&#xD;
   schedule.add(newInstructionTimeSlot);&#xD;
   channelsAvailable.addNewChannelSet();// initially, all channels are available in each time&#xD;
                                        // slot&#xD;
 }&#xD;
 // create an instance of the Warp DSL class for parsing instructions&#xD;
 var dsl = new WarpDSL();&#xD;
&#xD;
 for (String flowName : prioritizedFlows) { // loop through all of the nodes in priority order&#xD;
   var nodesInFlow = workLoad.getNodesInFlow(flowName);&#xD;
   var nNodesInFlow = nodesInFlow.length;&#xD;
   var e2eFlag = false; // default is to not use e2e to achieve E2E&#xD;
   if (nTransmissions == 0) { // use nTx from flow.nTXperLink for realtimeHart and the linkTX&#xD;
                              // array otherwise&#xD;
     e2eFlag = true; // need to meet e2e to hit E2E for flow&#xD;
     if (realtimeHART) {&#xD;
       nTx = workLoad.getFlowTxAttemptsPerLink(flowName);&#xD;
     } // else we will computer nTx from the linkTx array for the flow as we go&#xD;
&#xD;
   } else {&#xD;
     nTx = nTransmissions;&#xD;
   }&#xD;
   var snk = &quot;&quot;;&#xD;
   var linkTxCosts = workLoad.getNumTxAttemptsPerLink(flowName);&#xD;
   if (verbose) {&#xD;
     var totalCost = workLoad.getTotalTxAttemptsInFlow(flowName);&#xD;
     var minCost = nNodesInFlow - 1; // nEdges in the flow is the minimum communication cost,&#xD;
                                     // i.e., min nTx to go E2E with no errors&#xD;
     System.out.printf(&#xD;
         &quot;Flow %s has a minimum communication cost of %d and a worst-case communication cost of %d\n&quot;,&#xD;
         flowName, minCost, totalCost);&#xD;
   }&#xD;
   if (nTx == 0) { // this is true when !realtimeHART and nTransmssions wasn't specified => nTx&#xD;
                   // is dependent on reliability target&#xD;
     nTx = linkTxCosts[0]; // set nTx to the nTx for the first link in the flow&#xD;
   }&#xD;
   var previousNodeInstruction = new Integer[nTx]; // set instruction location in schedule for&#xD;
                                                   // previous slots to 0&#xD;
   Arrays.fill(previousNodeInstruction, 0); // initialize locations to 0&#xD;
   var flowPhase = workLoad.getFlowPhase(flowName); // used to compute latency after done&#xD;
                                                    // scheduling this flow&#xD;
   var flowLastInstruction = flowPhase; // used to compute latency after done scheduling this&#xD;
                                        // flow&#xD;
   var flowDeadline = workLoad.getFlowDeadline(flowName); // used to check schedulability for&#xD;
                                                          // this flow&#xD;
   var flowPeriod = workLoad.getFlowPeriod(flowName);&#xD;
   var FlowSrcInstructionTimeSlot = flowPhase; // initialize the time at which the flow's src&#xD;
                                               // node can first transmit&#xD;
   for (int instance = 0; instance &lt; hyperPeriod / flowPeriod; instance++) {&#xD;
     for (int flowNodeIndex = 0; flowNodeIndex &lt; nNodesInFlow - 1; flowNodeIndex++) { // don't&#xD;
                                                                                      // push for&#xD;
                                                                                      // last&#xD;
                                                                                      // node, so&#xD;
                                                                                      // stop at&#xD;
                                                                                      // node&#xD;
                                                                                      // n-1,&#xD;
                                                                                      // which is&#xD;
                                                                                      // 2 less&#xD;
                                                                                      // than&#xD;
                                                                                      // count&#xD;
       var currentNodeName = nodesInFlow[flowNodeIndex]; // get name of current node in the flow&#xD;
                                                         // (aka source of data)&#xD;
       if (e2eFlag) {&#xD;
         nTx = linkTxCosts[flowNodeIndex]; // set nTx for this link&#xD;
       }&#xD;
       var currentNodeInstruction = new Integer[nTx]; // store instruction location in schedule&#xD;
                                                      // for previous node&#xD;
       Arrays.fill(currentNodeInstruction, 0); // initialize the currentNondeInstruction&#xD;
       for (int index = 0; index &lt; nTx; index++) { // repeat instruction nTx times so that this&#xD;
                                                   // flow meets desired reliability&#xD;
         var instructionNodeName = currentNodeName; // name of node for which we write an&#xD;
                                                    // instruction in its program&#xD;
         var priorSrcInstruction = UNKNOWN; // variable used to store and possibly update the&#xD;
                                            // priorSrcInstruction during optimization&#xD;
         var priorSrcUpdated = false; // flag to indicate if priorSrcInstruction is updated or&#xD;
                                      // not&#xD;
         snk = nodesInFlow[flowNodeIndex + 1]; // should get a valid sink node, set name to&#xD;
                                               // UNKNOWN if we don't&#xD;
         // when not optimizing instructionNodeName is current node, but we might update a&#xD;
         // different node's instruction to optimize&#xD;
         var phase = instance * flowPeriod + flowPhase; // update phase for the instance of the&#xD;
                                                        // flow release, which happens once every&#xD;
                                                        // period in the hyperPeriod&#xD;
         var firstPossibleSlot = Math.max(phase, FlowSrcInstructionTimeSlot); // make sure&#xD;
                                                                              // precedence&#xD;
                                                                              // constraints on&#xD;
                                                                              // flow are&#xD;
                                                                              // preserved&#xD;
         Integer instructionIndex = findNextAvailableInstructionTimeSlot(schedule,&#xD;
             firstPossibleSlot, flowNodeIndex, index, nTx, previousNodeInstruction,&#xD;
             currentNodeInstruction, SLEEP_INSTRUCTION, realtimeHART, optimizationRequested,&#xD;
             nodeIndex.get(currentNodeName), nodeIndex.get(snk));&#xD;
         if (instructionIndex >= schedule.size()) { // instructionIndex is beyond current&#xD;
                                                    // schedule length. Increase schedule and&#xD;
                                                    // channelsAvailable tables&#xD;
           for (int i = schedule.size(); i &lt;= instructionIndex; i++) {&#xD;
             var newInstructionTimeSlot = new InstructionTimeSlot(nNodes, SLEEP_INSTRUCTION); // create&#xD;
                                                                                              // a&#xD;
                                                                                              // time&#xD;
                                                                                              // slot&#xD;
                                                                                              // for&#xD;
                                                                                              // nNodes,&#xD;
                                                                                              // each&#xD;
                                                                                              // initialized&#xD;
                                                                                              // with&#xD;
                                                                                              // a&#xD;
                                                                                              // SLEEP_INSTRUCTION&#xD;
             schedule.add(newInstructionTimeSlot);&#xD;
             channelsAvailable.addNewChannelSet(); // need make sure we have channels available&#xD;
                                                   // for all slots. instructionIndex may be >&#xD;
                                                   // initialized size of array because of&#xD;
                                                   // phases...&#xD;
           }&#xD;
         }&#xD;
         String channel = findNextAvailableChannel(schedule, instructionNodeName,&#xD;
             instructionIndex, nodeIndex.get(currentNodeName), nodeIndex.get(snk));&#xD;
&#xD;
         // Now check if we have a valid channel. If not we need to find a new time slot further&#xD;
         // down the schedule.&#xD;
         // So, initialize the search to start at the current slot and then increase by one each&#xD;
         // time we loop if the current slot&#xD;
         // Now check if we have a valid channel. If not we need to find a new time slot further&#xD;
         // down the schedule.&#xD;
         // So, initialize the search to start at the current slot and then increase by one each&#xD;
         // time we loop if the current slot&#xD;
         while (channel.equals(UNKNOWN)) { // findNextAvailableChannel will return UNKNOWN if no&#xD;
                                           // channel was available. In that case, we need to&#xD;
                                           // find a new slot for this instruction after the last&#xD;
                                           // index found&#xD;
           var startSearchIndex = instructionIndex + 1;&#xD;
           instructionIndex = findNextAvailableInstructionTimeSlot(schedule, startSearchIndex,&#xD;
               flowNodeIndex, index, nTx, previousNodeInstruction, currentNodeInstruction,&#xD;
               SLEEP_INSTRUCTION, realtimeHART, optimizationRequested,&#xD;
               nodeIndex.get(currentNodeName), nodeIndex.get(snk));&#xD;
           if (instructionIndex >= schedule.size()) { // instructionIndex is beyond current&#xD;
                                                      // schedule lenght. Increase schedule and&#xD;
                                                      // channelsAvailable tables&#xD;
             for (int i = schedule.size(); i &lt;= instructionIndex; i++) {&#xD;
               var newInstructionTimeSlot = new InstructionTimeSlot(nNodes, SLEEP_INSTRUCTION); // create&#xD;
                                                                                                // a&#xD;
                                                                                                // time&#xD;
                                                                                                // slot&#xD;
                                                                                                // for&#xD;
                                                                                                // nNodes,&#xD;
                                                                                                // each&#xD;
                                                                                                // initialized&#xD;
                                                                                                // with&#xD;
                                                                                                // a&#xD;
                                                                                                // SLEEP_INSTRUCTION&#xD;
               schedule.add(newInstructionTimeSlot);&#xD;
               channelsAvailable.addNewChannelSet(); // need make sure we have channels available&#xD;
                                                     // for all slots. instructionIndex may be >&#xD;
                                                     // initialized size of array because of&#xD;
                                                     // phases...&#xD;
             }&#xD;
           }&#xD;
           channel = findNextAvailableChannel(schedule, instructionNodeName, instructionIndex,&#xD;
               nodeIndex.get(currentNodeName), nodeIndex.get(snk));&#xD;
         }&#xD;
         workLoad.setNodeChannel(instructionNodeName, Integer.valueOf(channel));&#xD;
         if (realtimeHART) {&#xD;
           newInstruction = pushInstruction(flowName, currentNodeName, snk, channel);&#xD;
         } else {&#xD;
           newInstruction = hasPushInstruction(flowName, currentNodeName, snk, channel);&#xD;
         }&#xD;
&#xD;
         // if optimization flag is set, look to see if any optimizations are possible&#xD;
         if (optimizationRequested &amp;&amp; instructionIndex > 0) {&#xD;
           var priorInstructionTimeSlotArrayList = schedule.get(instructionIndex - 1);&#xD;
           var priorInstructionTimeSlot = priorInstructionTimeSlotArrayList&#xD;
               .toArray(new String[priorInstructionTimeSlotArrayList.size()]);&#xD;
           var priorInstruction = priorInstructionTimeSlot[nodeIndex.get(snk)]; // get&#xD;
                                                                                // instruction&#xD;
                                                                                // scheduled for&#xD;
                                                                                // snk to execute&#xD;
                                                                                // in the prior&#xD;
                                                                                // time slot&#xD;
           if (index == (nTx - 1)) {&#xD;
             String hasSubstring = String.format(&quot;if has(%s&quot;, flowName);&#xD;
             String elseSubString = &quot;else pull(&quot;;&#xD;
             if (priorInstruction.contains(hasSubstring)&#xD;
                 &amp;&amp; !priorInstruction.contains(elseSubString) &amp;&amp; !realtimeHART) {&#xD;
               // The sink node is not waiting, so add this instruction as an else to it&#xD;
               // Also need to make sure we haven't already combined a prior instruction by&#xD;
               // moving it to the else clause. May need a smater way to do this later...&#xD;
               // The combined instructions both use channels for their respective time slots!&#xD;
               // The else is being added to the prior time slot, so we need to&#xD;
               // get a new channel for that time slot and put back the channel we extraced from&#xD;
               // this time slot. And of course, clean up if any errors occur&#xD;
               // in the process&#xD;
               var instructionParametersArrayList =&#xD;
                   dsl.getInstructionParameters(priorInstruction);&#xD;
               var priorInstructionChannel = UNKNOWN;&#xD;
               if (instructionParametersArrayList.size() == 1) {&#xD;
                 var instructionParameters = instructionParametersArrayList.get(0); // get a copy&#xD;
                                                                                    // of the&#xD;
                                                                                    // parameters&#xD;
                 priorInstructionChannel = instructionParameters.getChannel();&#xD;
               } else { // we just checked above that the prior instruction did not have an else&#xD;
                        // pull, wait, or sleep. So, there should be only one instruction here&#xD;
                 String msg = String.format(&#xD;
                     &quot;ERROR: More than one instruction in prior instruction string: %s&quot;,&#xD;
                     priorInstruction);&#xD;
                 System.err.println(msg);&#xD;
               }&#xD;
               workLoad.setNodeChannel(instructionNodeName,&#xD;
                   Integer.valueOf(priorInstructionChannel));&#xD;
               channelsAvailable.addChannel(instructionIndex, channel); // return channel for&#xD;
                                                                        // this slot&#xD;
               channel = priorInstructionChannel; // update this so that the corresponding wait&#xD;
                                                  // uses this channel&#xD;
               newInstruction = priorInstruction + String.format(&quot;else pull(%s: %s -> %s, #%s)&quot;,&#xD;
                   flowName, currentNodeName, snk, priorInstructionChannel); // was channel&#xD;
               instructionIndex -= 1; // set instructionIndex to the priorInstruction index so we&#xD;
                                      // replace that slot with the new, optimized instruction&#xD;
               instructionNodeName = snk; // change currntNodeName to the snk node, which is the&#xD;
                                          // node name of the prior instruction&#xD;
             }&#xD;
           } else if ((flowNodeIndex == 0 &amp;&amp; index == 0 &amp;&amp; e2eFlag)&#xD;
               &amp;&amp; !(priorInstruction.contains(SLEEP_INSTRUCTION)&#xD;
                   || priorInstruction.contains(WAIT_FRAGMENT))) {&#xD;
             // We hit this case when combining the last push of one flow with the first push of&#xD;
             // a new flow--making an if has (Fi) push(Fi) else pull pull(Fi+1)&#xD;
             // print (&quot;Skipping optimization of combining \(priorInstruction) with&#xD;
             // \(newInstruction)\n&quot;)&#xD;
             // May want to add code here to combine when e2eFlag is true but need to compute new&#xD;
             // reliability values given less than 1 probablity that&#xD;
             // this first push/now pull will happen&#xD;
             // System.err.printf(&quot;New instruction is: %s\nPrior instruction is %s\n&quot;,&#xD;
             // newInstruction, priorInstruction);&#xD;
           } else { // not sure when we hit this when combining a sleep or wait() from prior flow&#xD;
                    // with a new instruction&#xD;
             // Anywhere else? :-) Probably better figure it out!!&#xD;
             if (!priorInstruction.contains(ELSE_PULL_FRAGMENT)&#xD;
                 &amp;&amp; !priorInstruction.contains(WAIT_FRAGMENT)&#xD;
                 &amp;&amp; !priorInstruction.contains(SLEEP_INSTRUCTION) &amp;&amp; !realtimeHART) { // The sink&#xD;
                                                                                      // node is&#xD;
                                                                                      // not&#xD;
                                                                                      // waiting,&#xD;
                                                                                      // so add&#xD;
                                                                                      // this&#xD;
                                                                                      // instruction&#xD;
                                                                                      // as an&#xD;
                                                                                      // else to&#xD;
                                                                                      // it&#xD;
               // Also need to make sure we haven't already combined a prior instruction by&#xD;
               // moving it to the else clause. May need a smarter way to do this later...&#xD;
               var instructionParametersArrayList =&#xD;
                   dsl.getInstructionParameters(priorInstruction);&#xD;
               var priorInstructionChannel = UNKNOWN;&#xD;
               var priorInstructionSnk = UNKNOWN;&#xD;
               if (instructionParametersArrayList.size() == 1) {&#xD;
                 var instructionParameters = instructionParametersArrayList.get(0); // get a copy&#xD;
                                                                                    // of the&#xD;
                                                                                    // parameters&#xD;
                 priorInstructionSnk = instructionParameters.getSnk();&#xD;
                 priorInstructionChannel = instructionParameters.getChannel();&#xD;
               } else { // we just checked above that the prior instruction did not have an else&#xD;
                        // pull, wait, or sleep. So, there should be only one instruction here&#xD;
                 String msg = String.format(&#xD;
                     &quot;ERROR: More than one instruction in prior instruction string: %s&quot;,&#xD;
                     priorInstruction);&#xD;
                 System.err.println(msg);&#xD;
               }&#xD;
               priorSrcInstruction = priorInstructionTimeSlot[nodeIndex.get(currentNodeName)]; // get&#xD;
                                                                                               // instruction&#xD;
                                                                                               // scheduled&#xD;
                                                                                               // for&#xD;
                                                                                               // snk/curentNodeName)&#xD;
                                                                                               // to&#xD;
                                                                                               // execute&#xD;
                                                                                               // in&#xD;
                                                                                               // the&#xD;
                                                                                               // prior&#xD;
                                                                                               // time&#xD;
               if (priorInstructionSnk.equals(currentNodeName)) { // will try to push and pull&#xD;
                                                                  // to/from the same node, so&#xD;
                                                                  // use the prior instruction&#xD;
                                                                  // channel&#xD;
                 newInstruction = priorInstruction&#xD;
                     + elsePullClause(flowName, currentNodeName, snk, priorInstructionChannel);&#xD;
                 instructionIndex -= 1; // set instructionIndex to the priorInstruction index so&#xD;
                                        // we replace that slot with the new, optimized&#xD;
                                        // instruction&#xD;
                 instructionNodeName = snk; // change currntNodeName to the snk node, which is&#xD;
                                            // the node name of the prior instruction&#xD;
               } else if (priorSrcInstruction.contains(SLEEP_INSTRUCTION)) { // was&#xD;
                                                                             // !priorSrcInstruction.contains(&quot;wait(&quot;);&#xD;
                                                                             // I think it needs&#xD;
                                                                             // to be a sleep and&#xD;
                                                                             // then we can add a&#xD;
                                                                             // wait there&#xD;
                 // Make sure the currentNodeName entry for this time slot has a sleep. If so,&#xD;
                 // then we combine instructions with new as an else push and add wait at&#xD;
                 // currentNodeName&#xD;
                 workLoad.setNodeChannel(instructionNodeName,&#xD;
                     Integer.valueOf(priorInstructionChannel));&#xD;
                 newInstruction = priorInstruction&#xD;
                     + elsePullClause(flowName, currentNodeName, snk, priorInstructionChannel); // was&#xD;
                                                                                                // channel&#xD;
                 // need to change priorSrcInstruction from sleep to wait on channel&#xD;
                 priorSrcInstruction = waitInstruction(priorInstructionChannel); // was channel&#xD;
                 priorSrcUpdated = true; // set flag so this instruction is updated when we&#xD;
                                         // insert currenInstruction into the&#xD;
                                         // currentInstructionTimeSlot&#xD;
                 instructionIndex -= 1; // set instructionIndex to the priorInstruction index so&#xD;
                                        // we replace that slot with the new, optimized&#xD;
                                        // instruction&#xD;
                 instructionNodeName = snk; // change currntNodeName to the snk node, which is&#xD;
                                            // the node name of the prior instruction&#xD;
               }&#xD;
             }&#xD;
           }&#xD;
         }&#xD;
         ArrayList&lt;String> currentInstructionTimeSlotArrayList; // =&#xD;
                                                                // schedule.get(instructionIndex);&#xD;
         String[] currentInstructionTimeSlot; // =&#xD;
                                              // currentInstructionTimeSlotArrayList.toArray(new&#xD;
                                              // String[currentInstructionTimeSlotArrayList.size()]);&#xD;
         currentNodeInstruction[index] = instructionIndex; // store the slot index for this&#xD;
                                                           // instruction&#xD;
         if (instructionIndex &lt; schedule.size()) {&#xD;
           currentInstructionTimeSlotArrayList = schedule.get(instructionIndex); // load current&#xD;
                                                                                 // instruction,&#xD;
                                                                                 // in case&#xD;
                                                                                 // another&#xD;
                                                                                 // instruction&#xD;
                                                                                 // is in this&#xD;
                                                                                 // time slot for&#xD;
                                                                                 // another node&#xD;
                                                                                 // that doesn't&#xD;
                                                                                 // conflict&#xD;
                                                                                 // channels&#xD;
           currentInstructionTimeSlot = currentInstructionTimeSlotArrayList&#xD;
               .toArray(new String[currentInstructionTimeSlotArrayList.size()]);&#xD;
         } else {&#xD;
           currentInstructionTimeSlotArrayList =&#xD;
               new InstructionTimeSlot(nNodes, SLEEP_INSTRUCTION);&#xD;
           currentInstructionTimeSlot = currentInstructionTimeSlotArrayList&#xD;
               .toArray(new String[currentInstructionTimeSlotArrayList.size()]);&#xD;
         }&#xD;
         currentInstructionTimeSlot[nodeIndex.get(instructionNodeName)] = newInstruction; // an&#xD;
                                                                                          // error&#xD;
                                                                                          // finding&#xD;
                                                                                          // the&#xD;
                                                                                          // right&#xD;
                                                                                          // location&#xD;
                                                                                          // will&#xD;
                                                                                          // result&#xD;
                                                                                          // in&#xD;
                                                                                          // location&#xD;
                                                                                          // of&#xD;
                                                                                          // snk&#xD;
                                                                                          // or 0&#xD;
         if (priorSrcUpdated) {&#xD;
           currentInstructionTimeSlot[nodeIndex.get(currentNodeName)] = priorSrcInstruction; // an&#xD;
                                                                                             // error&#xD;
                                                                                             // finding&#xD;
                                                                                             // the&#xD;
                                                                                             // right&#xD;
                                                                                             // location&#xD;
                                                                                             // will&#xD;
                                                                                             // result&#xD;
                                                                                             // in&#xD;
                                                                                             // location&#xD;
                                                                                             // of&#xD;
                                                                                             // snk&#xD;
                                                                                             // or&#xD;
                                                                                             // 0&#xD;
         }&#xD;
         // If this is a basic push() then the snk node will have the initial wait instruction in&#xD;
         // its time slot. Thus, need to add the channel # to that wait&#xD;
         var snkInstruction = currentInstructionTimeSlot[nodeIndex.get(snk)]; // get instruction&#xD;
                                                                              // scheduled for&#xD;
                                                                              // snk to execute&#xD;
                                                                              // in the current&#xD;
                                                                              // time slot&#xD;
         if (snkInstruction.equals(SLEEP_INSTRUCTION)) {&#xD;
           currentInstructionTimeSlot[nodeIndex.get(snk)] = waitInstruction(channel);&#xD;
         }&#xD;
         if (flowNodeIndex > 0) {&#xD;
           var priorNodeName = nodesInFlow[flowNodeIndex - 1];// get name of prior node in the&#xD;
                                                              // flow (aka predecessor)&#xD;
           var possibleCombineInstruction =&#xD;
               String.format(&quot;if has(%1$s) push(%1$s: %2$s -> %3$s, #&quot;, flowName, priorNodeName,&#xD;
                   currentNodeName);&#xD;
           if (optimizationRequested &amp;&amp; !realtimeHART &amp;&amp; nTx > 1) { // One more optimization&#xD;
                                                                    // possible: combine two&#xD;
                                                                    // conditional pushes at the&#xD;
                                                                    // same slot involving a&#xD;
                                                                    // common node&#xD;
             var upstreamNodeInstruction =&#xD;
                 currentInstructionTimeSlot[nodeIndex.get(priorNodeName)];&#xD;
             var instr = hasPushInstruction(flowName, currentNodeName, snk, channel);&#xD;
             if (newInstruction.equals(instr)&#xD;
                 &amp;&amp; upstreamNodeInstruction.contains(possibleCombineInstruction)&#xD;
                 &amp;&amp; !upstreamNodeInstruction.contains(&quot;else&quot;)) {&#xD;
               var instructionParametersArrayList =&#xD;
                   dsl.getInstructionParameters(upstreamNodeInstruction);&#xD;
               var upstreamNodeChannel = UNKNOWN;&#xD;
               if (instructionParametersArrayList.size() == 1) {&#xD;
                 var instructionParameters = instructionParametersArrayList.get(0); // get a copy&#xD;
                                                                                    // of the&#xD;
                                                                                    // paramaters&#xD;
                 upstreamNodeChannel = instructionParameters.getChannel();&#xD;
                 // return upstreamNodeChannel to the available channels for this time slot&#xD;
                 channelsAvailable.addChannel(instructionIndex, upstreamNodeChannel);&#xD;
               } else { // we just checked above that the prior instruction did not have an else&#xD;
                        // pull, wait, or sleep. So, there should be only one instruction here&#xD;
                 String msg = String.format(&#xD;
                     &quot;ERROR: More than one instruction in upstream node  instruction string: %s&quot;,&#xD;
                     upstreamNodeInstruction);&#xD;
                 System.err.println(msg);&#xD;
               }&#xD;
               // use the newInstruction channel in upstream instruction that is being combined&#xD;
               // and return the upstream channel to the available channel set&#xD;
               newInstruction = newInstruction&#xD;
                   + elsePullClause(flowName, priorNodeName, currentNodeName, channel); // was&#xD;
                                                                                        // upstreamNodeChannel&#xD;
               currentInstructionTimeSlot[nodeIndex.get(instructionNodeName)] = newInstruction; // an&#xD;
                                                                                                // error&#xD;
                                                                                                // finding&#xD;
                                                                                                // the&#xD;
                                                                                                // right&#xD;
                                                                                                // location&#xD;
                                                                                                // will&#xD;
                                                                                                // result&#xD;
                                                                                                // in&#xD;
                                                                                                // location&#xD;
                                                                                                // of&#xD;
                                                                                                // snk&#xD;
                                                                                                // or&#xD;
                                                                                                // 0&#xD;
               currentInstructionTimeSlot[nodeIndex.get(priorNodeName)] =&#xD;
                   waitInstruction(channel);; // an error finding the right location will result&#xD;
                                              // in location of snk or 0 // was&#xD;
                                              // upstreamNodeChannel&#xD;
             } else if (newInstruction&#xD;
                 .contains(elsePullClause(flowName, priorNodeName, currentNodeName, channel))&#xD;
                 &amp;&amp; currentInstructionTimeSlot[nodeIndex.get(priorNodeName)]&#xD;
                     .contains(possibleCombineInstruction)) {&#xD;
               currentInstructionTimeSlot[nodeIndex.get(priorNodeName)] =&#xD;
                   waitInstruction(channel); // Replace combined instruction in prior node&#xD;
                                             // program with wait()&#xD;
             }&#xD;
           }&#xD;
           if (!realtimeHART &amp;&amp; nTx > 1) { // WARP schedule with multiple tx per link requested,&#xD;
                                           // so add 'else wait()' for down upstream node when&#xD;
                                           // needed&#xD;
             var upstreamNodeInstruction =&#xD;
                 currentInstructionTimeSlot[nodeIndex.get(priorNodeName)];&#xD;
             if (newInstruction&#xD;
                 .equals(hasPushInstruction(flowName, currentNodeName, snk, channel))&#xD;
                 &amp;&amp; upstreamNodeInstruction.contains(possibleCombineInstruction)) {&#xD;
               String upstreamNodeChannel =&#xD;
                   getFirstChannelInInstruction(upstreamNodeInstruction);&#xD;
               newInstruction = newInstruction + elseWaitInstruction(upstreamNodeChannel); // this&#xD;
                                                                                           // node&#xD;
                                                                                           // needs&#xD;
                                                                                           // to&#xD;
                                                                                           // wait&#xD;
                                                                                           // for&#xD;
                                                                                           // upstream&#xD;
                                                                                           // node&#xD;
                                                                                           // if&#xD;
                                                                                           // message&#xD;
                                                                                           // hasn't&#xD;
                                                                                           // arrived&#xD;
               currentInstructionTimeSlot[nodeIndex.get(instructionNodeName)] = newInstruction; // an&#xD;
                                                                                                // error&#xD;
                                                                                                // finding&#xD;
                                                                                                // the&#xD;
                                                                                                // right&#xD;
                                                                                                // location&#xD;
                                                                                                // will&#xD;
                                                                                                // result&#xD;
                                                                                                // in&#xD;
                                                                                                // location&#xD;
                                                                                                // of&#xD;
                                                                                                // snk&#xD;
                                                                                                // or&#xD;
                                                                                                // 0&#xD;
               // Don't replace the push instruction in the upstream node in this case, because&#xD;
               // we added the else in this nodes time slot instead&#xD;
             }&#xD;
           }&#xD;
         }&#xD;
         var timeSlot = new InstructionTimeSlot(currentInstructionTimeSlot);&#xD;
         if (instructionIndex &lt; schedule.size()) { // This should always be the case, but check&#xD;
                                                   // anyway&#xD;
           schedule.set(instructionIndex, timeSlot);&#xD;
         } else {&#xD;
           schedule.add(timeSlot);&#xD;
           String msg = String.format(&#xD;
               &quot;ERROR: instructionIndex = %d > schedule length = %d. Appended instruction to avoid crash or throw...&quot;,&#xD;
               instructionIndex, schedule.size());&#xD;
           System.err.println(msg);&#xD;
           System.err.println(&#xD;
               &quot;\tProbably due to a flow having a phase > 0. Need to addjust schedule to have one hyperperiod as a startup period in this case&quot;);&#xD;
         }&#xD;
         flowLastInstruction = instructionIndex;&#xD;
         if (index == 0) {&#xD;
           FlowSrcInstructionTimeSlot = instructionIndex; // Store the time slot in which the&#xD;
                                                          // flow's src node first transmits&#xD;
         }&#xD;
       }&#xD;
       previousNodeInstruction = currentNodeInstruction; // copy current to previous node...don't&#xD;
                                                         // worry about clearing&#xD;
                                                         // currentNodeInstrucitons; will be set&#xD;
                                                         // in loop&#xD;
     }&#xD;
     Integer latency = flowLastInstruction - (flowPhase + (instance * flowPeriod)) + 1;&#xD;
     String latencyMsg =&#xD;
         String.format(&quot;Maximum latency for %s:%d is %d\n&quot;, flowName, instance, latency);&#xD;
     if (verbose) {&#xD;
       System.out.printf(latencyMsg);&#xD;
     }&#xD;
     if (latency > flowDeadline) {&#xD;
       String deadlineMsg = String.format(&#xD;
           &quot;WARNING: This workload is not schedulable: Flow %s:%d latency %d > deadline %d\n&quot;,&#xD;
           flowName, instance, latency, flowDeadline);&#xD;
       deadlineMisses.add(deadlineMsg);&#xD;
       // System.out.printf(deadlineMsg);&#xD;
     }&#xD;
   }&#xD;
 }&#xD;
 setSchedule(schedule); // store the schedule built&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ZuQ0c6gmEe-9tYVtpMatrg" name="waitInstruction" specification="_ZaEGEagmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_ZuQ0dKgmEe-9tYVtpMatrg" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ZuQ0dagmEe-9tYVtpMatrg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>var size = channel.length();&#xD;
 if (!Utilities.isInteger(channel)) {&#xD;
   System.out.println(&quot;channel length is &quot; + String.valueOf(size));&#xD;
   System.err.println(&quot;ERROR: channel is not an Integer: &quot; + channel);&#xD;
 }&#xD;
 return String.format(&quot;wait(#%s)&quot;, channel);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ZuQ0dqgmEe-9tYVtpMatrg" name="elseWaitInstruction" specification="_ZaEGFKgmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_ZuQ0d6gmEe-9tYVtpMatrg" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ZuQ0eKgmEe-9tYVtpMatrg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>var size = channel.length();&#xD;
 if (!Utilities.isInteger(channel)) {&#xD;
   System.err.println(&quot;ERROR: channel is not an Integer: &quot; + channel);&#xD;
   System.err.println(&quot;\t channel size is not an Integer: &quot; + String.valueOf(size));&#xD;
 }&#xD;
 return String.format(&quot; else wait(#%s)&quot;, channel);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ZuQ0eagmEe-9tYVtpMatrg" name="elsePullClause" specification="_ZaEtIKgmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_ZuQ0eqgmEe-9tYVtpMatrg" name="flow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ZuQ0e6gmEe-9tYVtpMatrg" name="src">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ZuQ0fKgmEe-9tYVtpMatrg" name="snk">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ZuQ0fagmEe-9tYVtpMatrg" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ZuQ0fqgmEe-9tYVtpMatrg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return String.format(&quot; else pull(%s: %s -> %s, #%s)&quot;, flow, src, snk, channel);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ZuQ0f6gmEe-9tYVtpMatrg" name="hasPushInstruction" specification="_ZaEtJqgmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_ZuQ0gKgmEe-9tYVtpMatrg" name="flow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ZuQ0gagmEe-9tYVtpMatrg" name="src">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ZuQ0gqgmEe-9tYVtpMatrg" name="snk">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ZuQ0g6gmEe-9tYVtpMatrg" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ZuQ0hKgmEe-9tYVtpMatrg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return String.format(&quot;if has(%1$s) push(%1$s: %2$s -> %3$s, #%4$s)&quot;, flow, src, snk, channel);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ZuQ0hagmEe-9tYVtpMatrg" name="pushInstruction" specification="_ZaFUMKgmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_ZuQ0hqgmEe-9tYVtpMatrg" name="flow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ZuQ0h6gmEe-9tYVtpMatrg" name="src">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ZuQ0iKgmEe-9tYVtpMatrg" name="snk">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ZuQ0iagmEe-9tYVtpMatrg" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ZuQ0iqgmEe-9tYVtpMatrg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return String.format(&quot;push(%1$s: %2$s -> %3$s, #%4$s)&quot;, flow, src, snk, channel);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ZuQ0i6gmEe-9tYVtpMatrg" name="getFirstChannelInInstruction" specification="_ZaFUNqgmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_ZuQ0jKgmEe-9tYVtpMatrg" name="Instruction">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ZuQ0jagmEe-9tYVtpMatrg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>var beginIndex = Instruction.indexOf('#') + 1; // get index of the start of the channel #&#xD;
 var endIndex = Instruction.indexOf(')', beginIndex); // get index of the last character of the&#xD;
                                                      // channel #&#xD;
 var channel = Instruction.substring(beginIndex, endIndex); // this substring has the 1st channel&#xD;
 return channel;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ZuQ0jqgmEe-9tYVtpMatrg" name="findNextAvailableInstructionTimeSlot" specification="_ZqyptqgmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_ZuQ0j6gmEe-9tYVtpMatrg" name="schedule" type="_ZaOeIKgmEe-9tYVtpMatrg"/>
                <ownedParameter xmi:id="_ZuQ0kKgmEe-9tYVtpMatrg" name="startLocation">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ZuQ0kagmEe-9tYVtpMatrg" name="nodeInFlow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ZuQ0kqgmEe-9tYVtpMatrg" name="transIndex">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ZuQ0k6gmEe-9tYVtpMatrg" name="nTx">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ZuQ0lKgmEe-9tYVtpMatrg" name="previousNodeInstruction">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZuQ0lagmEe-9tYVtpMatrg" value="*"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ZuQ0lqgmEe-9tYVtpMatrg" name="currentNodeInstruction">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZuQ0l6gmEe-9tYVtpMatrg" value="*"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ZuQ0mKgmEe-9tYVtpMatrg" name="sleepInstruction">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ZuQ0magmEe-9tYVtpMatrg" name="realtimeHART">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ZuQ0mqgmEe-9tYVtpMatrg" name="optimizationRequested">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ZuQ0m6gmEe-9tYVtpMatrg" name="srcNodeIndex">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ZuQ0nKgmEe-9tYVtpMatrg" name="snkNodeIndex">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ZuQ0nagmEe-9tYVtpMatrg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var currentTime = startLocation; // Make sure we don't start looking before the starting&#xD;
                                  // location&#xD;
 if (transIndex > 0) {&#xD;
   currentTime = Math.max(startLocation, currentNodeInstruction[transIndex - 1]); // Make sure we&#xD;
                                                                                  // don't start&#xD;
                                                                                  // looking&#xD;
                                                                                  // before the&#xD;
                                                                                  // startLocation&#xD;
                                                                                  // AND the&#xD;
                                                                                  // previous&#xD;
                                                                                  // instruction&#xD;
                                                                                  // we inserted&#xD;
 }&#xD;
 var done = false; // Flag indicating time slot search is done&#xD;
 if (realtimeHART || (nTx == 1 || nodeInFlow == 0 || transIndex >= nTx - 1)) {&#xD;
   // do the same thing for all nodes when nTx == 1 as for first node of flow when nTx == 1 and&#xD;
   // for kth retry&#xD;
   while (currentTime &lt; schedule.size() &amp;&amp; !done) {&#xD;
     var currentInstructionTimeSlot = schedule.get(currentTime);&#xD;
     if (slotIsAvailable(currentInstructionTimeSlot, srcNodeIndex, snkNodeIndex)) {&#xD;
       done = true;&#xD;
     } else {&#xD;
       currentTime += 1;&#xD;
     }&#xD;
   }&#xD;
 } else { // !reatimeHART and (nTx > 1 and nodeInFlow > 0)&#xD;
   Integer slotOffsetFromLastPreviousInstructionEntry;&#xD;
   if (transIndex >= (previousNodeInstruction.length - 1)) {&#xD;
     slotOffsetFromLastPreviousInstructionEntry =&#xD;
         transIndex - (previousNodeInstruction.length - 1) + 1;&#xD;
     var possibleInstructionTimeSlotIndex =&#xD;
         previousNodeInstruction[previousNodeInstruction.length - 1]&#xD;
             + slotOffsetFromLastPreviousInstructionEntry; // same as previous node's next retry&#xD;
                                                           // entry&#xD;
     // or continuous past it if more attempts for this instruction&#xD;
     if (startLocation &lt; possibleInstructionTimeSlotIndex) { // make sure this time isn't earlier&#xD;
                                                             // than the starting location&#xD;
       // (which can also mean the start time for searching available slots due to channel&#xD;
       // unavailability)&#xD;
       currentTime = possibleInstructionTimeSlotIndex; // OK to update to this time slot index&#xD;
     }&#xD;
     done = false; // However, we need to check if the current slot is available, and if not keep&#xD;
                   // searching until we find one. This happens with preemptions&#xD;
     if (!optimizationRequested) {&#xD;
       while (currentTime &lt; schedule.size() &amp;&amp; !done) {&#xD;
         var currentInstructionTimeSlot = schedule.get(currentTime);&#xD;
         if (slotIsAvailable(currentInstructionTimeSlot, srcNodeIndex, snkNodeIndex)) { // get&#xD;
                                                                                        // the&#xD;
                                                                                        // proposed&#xD;
                                                                                        // currentInstructionTimeSlot.&#xD;
                                                                                        // If&#xD;
                                                                                        // available,&#xD;
                                                                                        // done&#xD;
                                                                                        // is&#xD;
                                                                                        // true,&#xD;
                                                                                        // else&#xD;
                                                                                        // keep&#xD;
                                                                                        // checking&#xD;
                                                                                        // for a&#xD;
                                                                                        // time&#xD;
           done = true;&#xD;
         } else {&#xD;
           currentTime += 1;&#xD;
         }&#xD;
       }&#xD;
     } else {&#xD;
       // do something to support the optimization&#xD;
       while (currentTime &lt; schedule.size() &amp;&amp; !done) {&#xD;
         var currentInstructionTimeSlot = schedule.get(currentTime);&#xD;
         if (slotIsAvailable(currentInstructionTimeSlot, srcNodeIndex, snkNodeIndex)) { // get&#xD;
                                                                                        // the&#xD;
                                                                                        // proposed&#xD;
                                                                                        // currentInstructionTimeSlot.&#xD;
                                                                                        // If&#xD;
                                                                                        // available,&#xD;
                                                                                        // done&#xD;
                                                                                        // is&#xD;
                                                                                        // true,&#xD;
                                                                                        // else&#xD;
                                                                                        // keep&#xD;
                                                                                        // checking&#xD;
                                                                                        // for a&#xD;
                                                                                        // time&#xD;
           done = true;&#xD;
         } else {&#xD;
           currentTime += 1;&#xD;
         }&#xD;
       }&#xD;
     }&#xD;
   } else {&#xD;
     var possibleInstructionTimeSlotIndex = previousNodeInstruction[transIndex + 1]; // same as&#xD;
                                                                                     // previous&#xD;
                                                                                     // node's&#xD;
                                                                                     // next&#xD;
                                                                                     // retry&#xD;
                                                                                     // entry&#xD;
     if (startLocation &lt;= possibleInstructionTimeSlotIndex) { // make sure this time isn't&#xD;
                                                              // earlier than the starting&#xD;
                                                              // location&#xD;
       // (which can also mean the start time for searching available slots due to channel&#xD;
       // unavailability)&#xD;
       currentTime = possibleInstructionTimeSlotIndex; //&#xD;
     }&#xD;
     done = false; // However, we need to check if the current slot is available, and if not keep&#xD;
                   // searching until we find one. This happens with preemptions&#xD;
     if (!optimizationRequested) {&#xD;
       while (currentTime &lt; schedule.size() &amp;&amp; !done) {&#xD;
         var currentInstructionTimeSlot = schedule.get(currentTime);&#xD;
         if (slotIsAvailable(currentInstructionTimeSlot, srcNodeIndex, snkNodeIndex)) { // get&#xD;
                                                                                        // the&#xD;
                                                                                        // proposed&#xD;
                                                                                        // currentInstructionTimeSlot.&#xD;
                                                                                        // If&#xD;
                                                                                        // available,&#xD;
                                                                                        // done&#xD;
                                                                                        // is&#xD;
                                                                                        // true,&#xD;
                                                                                        // else&#xD;
                                                                                        // keep&#xD;
                                                                                        // checking&#xD;
                                                                                        // for a&#xD;
                                                                                        // time&#xD;
           done = true;&#xD;
         } else {&#xD;
           currentTime += 1;&#xD;
         }&#xD;
       }&#xD;
     } else {&#xD;
       // do something to support the optimization&#xD;
       if (currentTime &lt; schedule.size()) { // First make sure we haven't exceeded the current&#xD;
                                            // schedule table. If so, no need to optimize.&#xD;
         // Just return current time and let caller figure out what to do.&#xD;
         var tmpInstructionTimeSlot = schedule.get(currentTime);&#xD;
         var srcInstruction = tmpInstructionTimeSlot.get(srcNodeIndex);&#xD;
         var snkInstruction = tmpInstructionTimeSlot.get(snkNodeIndex);&#xD;
         if (!srcInstruction.contains(&quot;wait(&quot;) || !snkInstruction.contains(&quot;sleep&quot;)) { // instruction&#xD;
                                                                                       // should&#xD;
                                                                                       // contain&#xD;
                                                                                       // a wait,&#xD;
                                                                                       // so we&#xD;
                                                                                       // can use&#xD;
                                                                                       // it&#xD;
                                                                                       // during&#xD;
                                                                                       // optimization.&#xD;
                                                                                       // Only a&#xD;
                                                                                       // wait&#xD;
                                                                                       // for&#xD;
                                                                                       // this&#xD;
                                                                                       // time&#xD;
                                                                                       // slot is&#xD;
                                                                                       // expected&#xD;
                                                                                       // at this&#xD;
                                                                                       // point&#xD;
           // we also need to be sure the snk is sleeping&#xD;
           // If either condition is not true, then we need to find another time slot&#xD;
           while (currentTime &lt; schedule.size() &amp;&amp; !done) {&#xD;
             var currentInstructionTimeSlot = schedule.get(currentTime);&#xD;
             if (slotIsAvailable(currentInstructionTimeSlot, srcNodeIndex, snkNodeIndex)) { // get&#xD;
                                                                                            // the&#xD;
                                                                                            // proposed&#xD;
                                                                                            // currentInstructionTimeSlot.&#xD;
                                                                                            // If&#xD;
                                                                                            // available,&#xD;
                                                                                            // done&#xD;
                                                                                            // is&#xD;
                                                                                            // true,&#xD;
                                                                                            // else&#xD;
                                                                                            // keep&#xD;
                                                                                            // checking&#xD;
                                                                                            // for&#xD;
                                                                                            // a&#xD;
                                                                                            // time&#xD;
               done = true;&#xD;
             } else {&#xD;
               currentTime += 1;&#xD;
             }&#xD;
           }&#xD;
         } else if (srcInstruction.contains(&quot;else(&quot;)) { // This should never be the case, but not&#xD;
                                                        // sure if it is bad...print an error&#xD;
                                                        // indicating the issue&#xD;
           var errorString = String.format(&#xD;
               &quot;POSSIBLE ERROR, but not sure...   At time slot %d of the schedule, &quot;,&#xD;
               currentTime);&#xD;
           errorString +=&#xD;
               &quot;instruction for the src node contains\n   an unexpected 'else wait' instruction:&quot;;&#xD;
           errorString += srcInstruction;&#xD;
           System.err.println(errorString);&#xD;
         }&#xD;
       }&#xD;
     }&#xD;
   }&#xD;
 }&#xD;
 return currentTime;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ZuQ0nqgmEe-9tYVtpMatrg" name="slotIsAvailable" specification="_ZqzQy6gmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_ZuRbgKgmEe-9tYVtpMatrg" name="currentInstructionTimeSlot" type="_ZZrEgKgmEe-9tYVtpMatrg"/>
                <ownedParameter xmi:id="_ZuRbgagmEe-9tYVtpMatrg" name="srcNodeIndex">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ZuRbgqgmEe-9tYVtpMatrg" name="snkNodeIndex">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ZuRbg6gmEe-9tYVtpMatrg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>var vacantSlot = false; // assume slot is not vacant ----// Flag indicating time slot search is&#xD;
                         // done&#xD;
 if (SLEEP_INSTRUCTION.equals(currentInstructionTimeSlot.get(srcNodeIndex))&#xD;
     &amp;&amp; SLEEP_INSTRUCTION.equals(currentInstructionTimeSlot.get(snkNodeIndex))) { // src and snk&#xD;
                                                                                  // are both&#xD;
                                                                                  // sleeping, so&#xD;
                                                                                  // slot is&#xD;
                                                                                  // available&#xD;
   vacantSlot = true;&#xD;
 }&#xD;
 return vacantSlot;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ZuRbhKgmEe-9tYVtpMatrg" name="findNextAvailableChannel" specification="_Zqz30qgmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_ZuRbhagmEe-9tYVtpMatrg" name="schedule" type="_ZaOeIKgmEe-9tYVtpMatrg"/>
                <ownedParameter xmi:id="_ZuRbhqgmEe-9tYVtpMatrg" name="nodeName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ZuRbh6gmEe-9tYVtpMatrg" name="currentTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ZuRbiKgmEe-9tYVtpMatrg" name="srcNodeIndex">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ZuRbiagmEe-9tYVtpMatrg" name="snkNodeIndex">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ZuRbiqgmEe-9tYVtpMatrg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>var newChannel = UNKNOWN; // indicates no channel was available. The caller will need to check&#xD;
                           // this result&#xD;
&#xD;
 // create an instance of the Warp DSL class for parsing instructions&#xD;
 var dsl = new WarpDSL();&#xD;
 InstructionTimeSlot priorInstructionTimeSlot;&#xD;
&#xD;
 var channels = channelsAvailable.getChannelSet(currentTime);&#xD;
 if (currentTime > 0) { // get the prior schedule time slot to see what channels were used in&#xD;
                        // that slot, which have to be avoided here&#xD;
   Integer priorTime = currentTime - 1;&#xD;
   priorInstructionTimeSlot = schedule.get(priorTime); // get a copy of the prior time slot&#xD;
   var srcPriorInstruction = priorInstructionTimeSlot.get(srcNodeIndex);&#xD;
   var snkPriorInstruction = priorInstructionTimeSlot.get(snkNodeIndex);&#xD;
&#xD;
   // extract the channels used by the src and snk nodes in the prior time slot and store them in&#xD;
   // an array&#xD;
   var instructionParametersArrayList = dsl.getInstructionParameters(srcPriorInstruction); // get&#xD;
                                                                                           // the&#xD;
                                                                                           // parameters&#xD;
                                                                                           // from&#xD;
                                                                                           // the&#xD;
                                                                                           // instruction&#xD;
                                                                                           // in&#xD;
                                                                                           // the&#xD;
                                                                                           // src&#xD;
                                                                                           // node's&#xD;
                                                                                           // prior&#xD;
                                                                                           // time&#xD;
                                                                                           // slot&#xD;
   for (int i = 0; i &lt; instructionParametersArrayList.size(); i++) {&#xD;
     var instructionParameters = instructionParametersArrayList.get(i); // get a copy of the&#xD;
                                                                        // paramaters&#xD;
     channels.remove(instructionParameters.getChannel());&#xD;
   }&#xD;
   instructionParametersArrayList = dsl.getInstructionParameters(snkPriorInstruction); // get the&#xD;
                                                                                       // parameters&#xD;
                                                                                       // from&#xD;
                                                                                       // the&#xD;
                                                                                       // instruction&#xD;
                                                                                       // in the&#xD;
                                                                                       // snk&#xD;
                                                                                       // node's&#xD;
                                                                                       // prior&#xD;
                                                                                       // time&#xD;
                                                                                       // slot&#xD;
   for (int i = 0; i &lt; instructionParametersArrayList.size(); i++) {&#xD;
     var instructionParameters = instructionParametersArrayList.get(i); // get a copy of the&#xD;
                                                                        // paramaters&#xD;
     channels.remove(instructionParameters.getChannel());&#xD;
   }&#xD;
 }&#xD;
 Integer channel = workLoad.getNodeChannel(nodeName); // get the last used channel for the node&#xD;
 channel++; // increment the channel because we don't use the same channel in consecutive time&#xD;
            // slots for the same node&#xD;
 if (channel >= getNumChannels()) { // valid range is 0..NumChannels-1. Reset when channel hits&#xD;
                                    // max&#xD;
   channel = 0;&#xD;
 }&#xD;
 var channelFound = false;&#xD;
 while (!channelFound &amp;&amp; !channels.isEmpty()) { // loop until a channel is found or we run out of&#xD;
                                                // channels to assign&#xD;
   var channelString = String.valueOf(channel);&#xD;
   var channelRemoved = channels.remove(channelString);&#xD;
   if (channelRemoved) {&#xD;
     // newChannel has the channel&#xD;
     newChannel = channelString;&#xD;
     channelFound = true;&#xD;
   } else {&#xD;
     // try another channel&#xD;
     channel += 1;&#xD;
     if (channel >= getNumChannels()) { // valid range is 0..NumChannels-1. Reset when channel&#xD;
                                        // hits max&#xD;
       channel = 0;&#xD;
     }&#xD;
   }&#xD;
 }&#xD;
 return newChannel; // returns UNKNOWN to indicate no channel found. This should never happen.&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ZuRbi6gmEe-9tYVtpMatrg" name="selectPriority" specification="_ZaGiUKgmEe-9tYVtpMatrg">
                <language>java</language>
                <body>setScheduleSelected(ScheduleChoices.PRIORITY);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ZuRbjKgmEe-9tYVtpMatrg" name="selectRM" specification="_ZaGiUagmEe-9tYVtpMatrg">
                <language>java</language>
                <body>setScheduleSelected(ScheduleChoices.RM);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ZuRbjagmEe-9tYVtpMatrg" name="selectDM" specification="_ZaGiUqgmEe-9tYVtpMatrg">
                <language>java</language>
                <body>setScheduleSelected(ScheduleChoices.DM);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ZuRbjqgmEe-9tYVtpMatrg" name="selectRtHART" specification="_ZaGiU6gmEe-9tYVtpMatrg">
                <language>java</language>
                <body>setScheduleSelected(ScheduleChoices.RTHART);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ZuRbj6gmEe-9tYVtpMatrg" name="setScheduleSelected" specification="_ZsQCSKgmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_ZuRbkKgmEe-9tYVtpMatrg" name="choice" type="_ZsO0IKgmEe-9tYVtpMatrg"/>
                <language>java</language>
                <body>switch (choice) {&#xD;
   case PRIORITY:&#xD;
     schedulerName = &quot;Priority&quot;;&#xD;
     schChoice = &quot;-Priority&quot;;&#xD;
     workLoad.setFlowsInPriorityOrder();&#xD;
     break;&#xD;
   case RM:&#xD;
     schedulerName = &quot;RateMonotonic&quot;;&#xD;
     schChoice = &quot;-RM&quot;;&#xD;
     workLoad.setFlowsInRMorder();&#xD;
     break;&#xD;
   case DM:&#xD;
     schedulerName = &quot;DeadlineMonotonic&quot;;&#xD;
     schChoice = &quot;-DM&quot;;&#xD;
     workLoad.setFlowsInDMorder();&#xD;
     break;&#xD;
   case RTHART:&#xD;
     schedulerName = &quot;RealtimeHART&quot;;&#xD;
     schChoice = &quot;-RealTimeHART&quot;;&#xD;
     workLoad.setFlowsInRealTimeHARTorder();&#xD;
     setRealTimeHartFlag(true);&#xD;
     break;&#xD;
   case CONNECTIVITY_POSET_DM:&#xD;
     schedulerName = &quot;ConnectivityPosetDM&quot;;&#xD;
     schChoice = &quot;-CPdm&quot;;&#xD;
     workLoad.setFlowsInDMorder();&#xD;
     break;&#xD;
   case CONNECTIVITY_POSET_PRIORITY:&#xD;
     schedulerName = &quot;ConnectivityPoset&quot;;&#xD;
     schChoice = &quot;-CPoset&quot;;&#xD;
     workLoad.setFlowsInPriorityOrder();&#xD;
     break;&#xD;
   case CONNECTIVITY_POSET_RM:&#xD;
     schedulerName = &quot;ConnectivityPosetRM&quot;;&#xD;
     schChoice = &quot;-CPrm&quot;;&#xD;
     workLoad.setFlowsInRMorder();&#xD;
     break;&#xD;
   case POSET_DM:&#xD;
     schedulerName = &quot;PosetDM&quot;;&#xD;
     schChoice = &quot;-PosetDM&quot;;&#xD;
     workLoad.setFlowsInDMorder();&#xD;
     break;&#xD;
   case POSET_PRIORITY:&#xD;
     schedulerName = &quot;Poset&quot;;&#xD;
     schChoice = &quot;-Poset&quot;;&#xD;
     workLoad.setFlowsInPriorityOrder();&#xD;
     break;&#xD;
   case POSET_RM:&#xD;
     schedulerName = &quot;PosetRM&quot;;&#xD;
     schChoice = &quot;-PosetDM&quot;;&#xD;
     workLoad.setFlowsInRMorder();&#xD;
     break;&#xD;
   case WARP_POSET_DM:&#xD;
     schedulerName = &quot;WarpPosetDM&quot;;&#xD;
     schChoice = &quot;-WPdm&quot;;&#xD;
     workLoad.setFlowsInDMorder();&#xD;
     break;&#xD;
   case WARP_POSET_PRIORITY:&#xD;
     schedulerName = &quot;WarpPoset&quot;;&#xD;
     schChoice = &quot;-WarpPoset&quot;;&#xD;
     workLoad.setFlowsInPriorityOrder();&#xD;
     break;&#xD;
   case WARP_POSET_RM:&#xD;
     schedulerName = &quot;WarpPosetRM&quot;;&#xD;
     schChoice = &quot;-WPrm&quot;;&#xD;
     workLoad.setFlowsInRMorder();&#xD;
     break;&#xD;
   default:&#xD;
     schedulerName = &quot;Priority&quot;;&#xD;
     schChoice = &quot;-Priority&quot;;&#xD;
     workLoad.setFlowsInPriorityOrder();&#xD;
     break;&#xD;
 }&#xD;
 SchedulerSelected = choice;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ZuRbkagmEe-9tYVtpMatrg" name="setSchedule" specification="_Zqz32agmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_ZuRbkqgmEe-9tYVtpMatrg" name="schedule" type="_ZaOeIKgmEe-9tYVtpMatrg"/>
                <language>java</language>
                <body>scheduleBuilt = schedule;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ZuRbk6gmEe-9tYVtpMatrg" name="getSchedule" specification="_ZaGiVKgmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_ZuRblKgmEe-9tYVtpMatrg" type="_ZaOeIKgmEe-9tYVtpMatrg" direction="return"/>
                <language>java</language>
                <body>return scheduleBuilt;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ZuRblagmEe-9tYVtpMatrg" name="getSchedulerName" specification="_ZaGiVagmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_ZuRblqgmEe-9tYVtpMatrg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return schedulerName;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ZuRbl6gmEe-9tYVtpMatrg" name="getSchChoice" specification="_ZaHJY6gmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_ZuRbmKgmEe-9tYVtpMatrg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return schChoice;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ZuRbmagmEe-9tYVtpMatrg" name="getNumChannels" specification="_ZaHJZagmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_ZuRbmqgmEe-9tYVtpMatrg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>return nChannels;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ZuRbm6gmEe-9tYVtpMatrg" name="getNumTransmissions" specification="_ZaHwcqgmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_ZuRbnKgmEe-9tYVtpMatrg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>return nTransmissions;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ZuRbnagmEe-9tYVtpMatrg" name="getRealTimeHartFlag" specification="_ZaHwd6gmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_ZuRbnqgmEe-9tYVtpMatrg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>return realTimeHARTflag;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ZuSCkKgmEe-9tYVtpMatrg" name="setRealTimeHartFlag" specification="_ZaIXgKgmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_ZuSCkagmEe-9tYVtpMatrg" name="flag">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>realTimeHARTflag = flag;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ZuSCkqgmEe-9tYVtpMatrg" name="getMinPacketReceptionRate" specification="_ZaIXgqgmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_ZuSCk6gmEe-9tYVtpMatrg" type="_ZsQpUKgmEe-9tYVtpMatrg" direction="return"/>
                <language>java</language>
                <body>return workLoad.getMinPacketReceptionRate();&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ZuSClKgmEe-9tYVtpMatrg" name="getE2e" specification="_ZaIXhqgmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_ZuSClagmEe-9tYVtpMatrg" type="_ZsQpUKgmEe-9tYVtpMatrg" direction="return"/>
                <language>java</language>
                <body>return workLoad.getE2e();&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ZuSClqgmEe-9tYVtpMatrg" name="getName" specification="_ZaI-kqgmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_ZuSCl6gmEe-9tYVtpMatrg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return workLoad.getName();&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ZuSCmKgmEe-9tYVtpMatrg" name="getOptimizationFlag" specification="_ZaI-l6gmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_ZuSCmagmEe-9tYVtpMatrg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>return optimizationRequested;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ZuSCmqgmEe-9tYVtpMatrg" name="deadlineMisses" specification="_ZaJloqgmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_ZuSCm6gmEe-9tYVtpMatrg" type="_ZZLVQKgmEe-9tYVtpMatrg" direction="return"/>
                <language>java</language>
                <body>return deadlineMisses;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ZuSCnKgmEe-9tYVtpMatrg" name="getNumFaults" specification="_ZaJlo6gmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_ZuSCnagmEe-9tYVtpMatrg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>return workLoad.getNumFaults();&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ZuSCnqgmEe-9tYVtpMatrg" name="getNodeMapIndex" specification="_ZaJlqKgmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_ZuSCn6gmEe-9tYVtpMatrg" type="_Zp_YcKgmEe-9tYVtpMatrg" direction="return"/>
                <language>java</language>
                <body>var orderedNodes = workLoad.getNodeNamesOrderedAlphabetically(); // create an array of node&#xD;
                                                                  // names&#xD;
 // sorted alphabetically&#xD;
 var nodeIndexMap = new HashMap&lt;String, Integer>(); // create a new mapping from node names to&#xD;
                                                    // index in schedule&#xD;
 // table&#xD;
 var nNodes = orderedNodes.length;&#xD;
 for (int index = 0; index &lt; nNodes; index++) { // set up the node to index mapping&#xD;
   var name = orderedNodes[index];&#xD;
   nodeIndexMap.put(name, index); // add name, index mapping to NodeIndex map&#xD;
 }&#xD;
 return nodeIndexMap;&#xD;
  </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_ZaDfAKgmEe-9tYVtpMatrg" name="toWorkLoad" method="_ZuQNfqgmEe-9tYVtpMatrg">
                <ownedComment xmi:id="_ZurEIagmEe-9tYVtpMatrg">
                  <body>Returns the work load &#xD;
   * @return workLoad</body>
                </ownedComment>
                <ownedParameter xmi:id="_ZqyptagmEe-9tYVtpMatrg" type="_Zbu6AqgmEe-9tYVtpMatrg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_ZaEGEKgmEe-9tYVtpMatrg" name="buildOriginalProgram" method="_ZuQ0cqgmEe-9tYVtpMatrg"/>
              <ownedOperation xmi:id="_ZaEGEagmEe-9tYVtpMatrg" name="waitInstruction" visibility="private" method="_ZuQ0c6gmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_ZaEGEqgmEe-9tYVtpMatrg" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ZaEGE6gmEe-9tYVtpMatrg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_ZaEGFKgmEe-9tYVtpMatrg" name="elseWaitInstruction" visibility="private" method="_ZuQ0dqgmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_ZaEGFagmEe-9tYVtpMatrg" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ZaEGFqgmEe-9tYVtpMatrg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_ZaEtIKgmEe-9tYVtpMatrg" name="elsePullClause" visibility="private" method="_ZuQ0eagmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_ZaEtIagmEe-9tYVtpMatrg" name="flow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ZaEtIqgmEe-9tYVtpMatrg" name="src">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ZaEtI6gmEe-9tYVtpMatrg" name="snk">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ZaEtJKgmEe-9tYVtpMatrg" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ZaEtJagmEe-9tYVtpMatrg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_ZaEtJqgmEe-9tYVtpMatrg" name="hasPushInstruction" visibility="private" method="_ZuQ0f6gmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_ZaEtJ6gmEe-9tYVtpMatrg" name="flow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ZaEtKKgmEe-9tYVtpMatrg" name="src">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ZaEtKagmEe-9tYVtpMatrg" name="snk">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ZaEtKqgmEe-9tYVtpMatrg" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ZaEtK6gmEe-9tYVtpMatrg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_ZaFUMKgmEe-9tYVtpMatrg" name="pushInstruction" visibility="private" method="_ZuQ0hagmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_ZaFUMagmEe-9tYVtpMatrg" name="flow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ZaFUMqgmEe-9tYVtpMatrg" name="src">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ZaFUM6gmEe-9tYVtpMatrg" name="snk">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ZaFUNKgmEe-9tYVtpMatrg" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ZaFUNagmEe-9tYVtpMatrg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_ZaFUNqgmEe-9tYVtpMatrg" name="getFirstChannelInInstruction" visibility="private" method="_ZuQ0i6gmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_ZaFUN6gmEe-9tYVtpMatrg" name="Instruction">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ZaFUOKgmEe-9tYVtpMatrg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_ZaGiUKgmEe-9tYVtpMatrg" name="selectPriority" method="_ZuRbi6gmEe-9tYVtpMatrg"/>
              <ownedOperation xmi:id="_ZaGiUagmEe-9tYVtpMatrg" name="selectRM" method="_ZuRbjKgmEe-9tYVtpMatrg"/>
              <ownedOperation xmi:id="_ZaGiUqgmEe-9tYVtpMatrg" name="selectDM" method="_ZuRbjagmEe-9tYVtpMatrg"/>
              <ownedOperation xmi:id="_ZaGiU6gmEe-9tYVtpMatrg" name="selectRtHART" method="_ZuRbjqgmEe-9tYVtpMatrg"/>
              <ownedOperation xmi:id="_ZaGiVKgmEe-9tYVtpMatrg" name="getSchedule" method="_ZuRbk6gmEe-9tYVtpMatrg">
                <ownedComment xmi:id="_ZurEIqgmEe-9tYVtpMatrg">
                  <body>Returns the built schulde&#xD;
   * @return scheduleBuilt</body>
                </ownedComment>
                <ownedParameter xmi:id="_Zq0e4KgmEe-9tYVtpMatrg" type="_ZaOeIKgmEe-9tYVtpMatrg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_ZaGiVagmEe-9tYVtpMatrg" name="getSchedulerName" method="_ZuRblagmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_ZaGiVqgmEe-9tYVtpMatrg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_ZaHJY6gmEe-9tYVtpMatrg" name="getSchChoice" method="_ZuRbl6gmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_ZaHJZKgmEe-9tYVtpMatrg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_ZaHJZagmEe-9tYVtpMatrg" name="getNumChannels" method="_ZuRbmagmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_ZaHJZqgmEe-9tYVtpMatrg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_ZaHwcqgmEe-9tYVtpMatrg" name="getNumTransmissions" method="_ZuRbm6gmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_ZaHwc6gmEe-9tYVtpMatrg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_ZaHwd6gmEe-9tYVtpMatrg" name="getRealTimeHartFlag" visibility="private" method="_ZuRbnagmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_ZaHweKgmEe-9tYVtpMatrg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_ZaIXgKgmEe-9tYVtpMatrg" name="setRealTimeHartFlag" visibility="private" method="_ZuSCkKgmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_ZaIXgagmEe-9tYVtpMatrg" name="flag">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_ZaIXgqgmEe-9tYVtpMatrg" name="getMinPacketReceptionRate" method="_ZuSCkqgmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_ZsQpUqgmEe-9tYVtpMatrg" type="_ZsQpUKgmEe-9tYVtpMatrg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_ZaIXhqgmEe-9tYVtpMatrg" name="getE2e" method="_ZuSClKgmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_ZsQpU6gmEe-9tYVtpMatrg" type="_ZsQpUKgmEe-9tYVtpMatrg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_ZaI-kqgmEe-9tYVtpMatrg" name="getName" method="_ZuSClqgmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_ZaI-k6gmEe-9tYVtpMatrg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_ZaI-l6gmEe-9tYVtpMatrg" name="getOptimizationFlag" method="_ZuSCmKgmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_ZaI-mKgmEe-9tYVtpMatrg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_ZaJloqgmEe-9tYVtpMatrg" name="deadlineMisses" method="_ZuSCmqgmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_Zq0e4agmEe-9tYVtpMatrg" type="_ZZLVQKgmEe-9tYVtpMatrg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_ZaJlo6gmEe-9tYVtpMatrg" name="getNumFaults" method="_ZuSCnKgmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_ZaJlpKgmEe-9tYVtpMatrg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_ZaJlqKgmEe-9tYVtpMatrg" name="getNodeMapIndex" method="_ZuSCnqgmEe-9tYVtpMatrg">
                <ownedComment xmi:id="_ZurEI6gmEe-9tYVtpMatrg">
                  <body>Retrieves a mapping of node names to their respective indices in the schedule table.&#xD;
   * @return nodeIndexMap</body>
                </ownedComment>
                <ownedParameter xmi:id="_ZsRQYKgmEe-9tYVtpMatrg" type="_Zp_YcKgmEe-9tYVtpMatrg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_ZqypsKgmEe-9tYVtpMatrg" name="setDefaultParameters" visibility="private" method="_ZuQNeagmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_ZqypsagmEe-9tYVtpMatrg" name="workLoad" type="_Zbu6AqgmEe-9tYVtpMatrg"/>
                <ownedParameter xmi:id="_ZqypsqgmEe-9tYVtpMatrg" name="nChannels">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Zqyps6gmEe-9tYVtpMatrg" name="verbose">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ZqyptKgmEe-9tYVtpMatrg" name="reportLatency">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_ZqyptqgmEe-9tYVtpMatrg" name="findNextAvailableInstructionTimeSlot" visibility="private" method="_ZuQ0jqgmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_Zqypt6gmEe-9tYVtpMatrg" name="schedule" type="_ZaOeIKgmEe-9tYVtpMatrg"/>
                <ownedParameter xmi:id="_ZqypuKgmEe-9tYVtpMatrg" name="startLocation">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ZqypuagmEe-9tYVtpMatrg" name="nodeInFlow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ZqypuqgmEe-9tYVtpMatrg" name="transIndex">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ZqzQwKgmEe-9tYVtpMatrg" name="nTx">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ZqzQwagmEe-9tYVtpMatrg" name="previousNodeInstruction">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZqzQyagmEe-9tYVtpMatrg" value="*"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ZqzQwqgmEe-9tYVtpMatrg" name="currentNodeInstruction">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZqzQyqgmEe-9tYVtpMatrg" value="*"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ZqzQw6gmEe-9tYVtpMatrg" name="sleepInstruction">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ZqzQxKgmEe-9tYVtpMatrg" name="realtimeHART">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ZqzQxagmEe-9tYVtpMatrg" name="optimizationRequested">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ZqzQxqgmEe-9tYVtpMatrg" name="srcNodeIndex">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ZqzQx6gmEe-9tYVtpMatrg" name="snkNodeIndex">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ZqzQyKgmEe-9tYVtpMatrg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_ZqzQy6gmEe-9tYVtpMatrg" name="slotIsAvailable" visibility="private" method="_ZuQ0nqgmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_ZqzQzKgmEe-9tYVtpMatrg" name="currentInstructionTimeSlot" type="_ZZrEgKgmEe-9tYVtpMatrg"/>
                <ownedParameter xmi:id="_ZqzQzagmEe-9tYVtpMatrg" name="srcNodeIndex">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Zqz30KgmEe-9tYVtpMatrg" name="snkNodeIndex">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Zqz30agmEe-9tYVtpMatrg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_Zqz30qgmEe-9tYVtpMatrg" name="findNextAvailableChannel" visibility="private" method="_ZuRbhKgmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_Zqz306gmEe-9tYVtpMatrg" name="schedule" type="_ZaOeIKgmEe-9tYVtpMatrg"/>
                <ownedParameter xmi:id="_Zqz31KgmEe-9tYVtpMatrg" name="nodeName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Zqz31agmEe-9tYVtpMatrg" name="currentTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Zqz31qgmEe-9tYVtpMatrg" name="srcNodeIndex">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Zqz316gmEe-9tYVtpMatrg" name="snkNodeIndex">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Zqz32KgmEe-9tYVtpMatrg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_Zqz32agmEe-9tYVtpMatrg" name="setSchedule" visibility="private" method="_ZuRbkagmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_Zqz32qgmEe-9tYVtpMatrg" name="schedule" type="_ZaOeIKgmEe-9tYVtpMatrg"/>
              </ownedOperation>
              <ownedOperation xmi:id="_ZsPbMKgmEe-9tYVtpMatrg" name="Program" visibility="package" method="_ZuQNbagmEe-9tYVtpMatrg">
                <eAnnotations xmi:id="_ZsPbNqgmEe-9tYVtpMatrg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_ZsPbN6gmEe-9tYVtpMatrg" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_ZsPbMagmEe-9tYVtpMatrg" name="workLoad" type="_Zbu6AqgmEe-9tYVtpMatrg"/>
                <ownedParameter xmi:id="_ZsPbMqgmEe-9tYVtpMatrg" name="nChannels">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ZsPbM6gmEe-9tYVtpMatrg" name="choice" type="_ZsO0IKgmEe-9tYVtpMatrg"/>
                <ownedParameter xmi:id="_ZsPbNKgmEe-9tYVtpMatrg" name="verbose">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ZsPbNagmEe-9tYVtpMatrg" name="reportLatency">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ZsPbOKgmEe-9tYVtpMatrg" type="_ZaCQ4KgmEe-9tYVtpMatrg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_ZsPbOagmEe-9tYVtpMatrg" name="Program" visibility="package" method="_ZuQNdKgmEe-9tYVtpMatrg">
                <eAnnotations xmi:id="_ZsQCQ6gmEe-9tYVtpMatrg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_ZsQCRKgmEe-9tYVtpMatrg" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_ZsQCQKgmEe-9tYVtpMatrg" name="workLoad" type="_Zbu6AqgmEe-9tYVtpMatrg"/>
                <ownedParameter xmi:id="_ZsQCQagmEe-9tYVtpMatrg" name="nChannels">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ZsQCQqgmEe-9tYVtpMatrg" name="choice" type="_ZsO0IKgmEe-9tYVtpMatrg"/>
                <ownedParameter xmi:id="_ZsQCRagmEe-9tYVtpMatrg" type="_ZaCQ4KgmEe-9tYVtpMatrg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_ZsQCRqgmEe-9tYVtpMatrg" name="buildProgram" method="_ZuQ0cKgmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_ZsQCR6gmEe-9tYVtpMatrg" name="choice" type="_ZsO0IKgmEe-9tYVtpMatrg"/>
              </ownedOperation>
              <ownedOperation xmi:id="_ZsQCSKgmEe-9tYVtpMatrg" name="setScheduleSelected" visibility="private" method="_ZuRbj6gmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_ZsQCSagmEe-9tYVtpMatrg" name="choice" type="_ZsO0IKgmEe-9tYVtpMatrg"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_ZaOeIKgmEe-9tYVtpMatrg" name="ProgramSchedule">
              <generalization xmi:id="_Zq2UEKgmEe-9tYVtpMatrg" general="_ZbAhQKgmEe-9tYVtpMatrg"/>
              <ownedAttribute xmi:id="_Ztaf4KgmEe-9tYVtpMatrg" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_ZtbG8KgmEe-9tYVtpMatrg" value="1L"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ZuSpoKgmEe-9tYVtpMatrg" name="ProgramSchedule" specification="_ZaOeIagmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_ZuSpoagmEe-9tYVtpMatrg" type="_ZaOeIKgmEe-9tYVtpMatrg" direction="return"/>
                <language>java</language>
                <body>super();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ZuSpoqgmEe-9tYVtpMatrg" name="ProgramSchedule" specification="_ZaPFM6gmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_ZuSpo6gmEe-9tYVtpMatrg" name="row">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ZuSppKgmEe-9tYVtpMatrg" name="column">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ZuSppagmEe-9tYVtpMatrg" type="_ZaOeIKgmEe-9tYVtpMatrg" direction="return"/>
                <language>java</language>
                <body>super(row,column);&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_ZaOeIagmEe-9tYVtpMatrg" name="ProgramSchedule" method="_ZuSpoKgmEe-9tYVtpMatrg">
                <eAnnotations xmi:id="_ZaPFMKgmEe-9tYVtpMatrg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_ZaPFMagmEe-9tYVtpMatrg" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_ZaPFMqgmEe-9tYVtpMatrg" type="_ZaOeIKgmEe-9tYVtpMatrg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_ZaPFM6gmEe-9tYVtpMatrg" name="ProgramSchedule" visibility="package" method="_ZuSpoqgmEe-9tYVtpMatrg">
                <eAnnotations xmi:id="_ZaPFNqgmEe-9tYVtpMatrg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_ZaPFN6gmEe-9tYVtpMatrg" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_ZaPFNKgmEe-9tYVtpMatrg" name="row">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ZaPFNagmEe-9tYVtpMatrg" name="column">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ZaPFOKgmEe-9tYVtpMatrg" type="_ZaOeIKgmEe-9tYVtpMatrg" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_ZaPsQKgmEe-9tYVtpMatrg" name="ProgramVisualization">
              <ownedComment xmi:id="_ZurEJKgmEe-9tYVtpMatrg">
                <body>@author sgoddard&#xD;
@author jcbates&#xD;
@version 1.5&#xD;
ProgramVisualiztion builds graph based on data; checks if flows have passed their deadlines&#xD;
 *</body>
              </ownedComment>
              <generalization xmi:id="_Zq27KKgmEe-9tYVtpMatrg" general="_ZbJEIKgmEe-9tYVtpMatrg"/>
              <ownedAttribute xmi:id="_ZtbG8agmEe-9tYVtpMatrg" name="SOURCE_SUFFIX" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_ZtbG8qgmEe-9tYVtpMatrg" value="&quot;.dsl&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_ZtbG86gmEe-9tYVtpMatrg" name="sourceCode" visibility="private" type="_ZaOeIKgmEe-9tYVtpMatrg" association="_ZvbSEagmEe-9tYVtpMatrg"/>
              <ownedAttribute xmi:id="_ZtbuAagmEe-9tYVtpMatrg" name="program" visibility="private" type="_ZaCQ4KgmEe-9tYVtpMatrg" association="_Zvb5IagmEe-9tYVtpMatrg"/>
              <ownedAttribute xmi:id="_ZtbuA6gmEe-9tYVtpMatrg" name="deadlinesMet" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ZuSppqgmEe-9tYVtpMatrg" name="ProgramVisualization" specification="_Zq27IKgmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_ZuSpp6gmEe-9tYVtpMatrg" name="warp" type="_ZbdNMKgmEe-9tYVtpMatrg"/>
                <ownedParameter xmi:id="_ZuSpqKgmEe-9tYVtpMatrg" type="_ZaPsQKgmEe-9tYVtpMatrg" direction="return"/>
                <language>java</language>
                <body>super(new FileManager(), warp, SOURCE_SUFFIX);&#xD;
 this.program = warp.toProgram();&#xD;
 this.sourceCode = program.getSchedule();&#xD;
 this.deadlinesMet = warp.deadlinesMet();&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ZuSpqagmEe-9tYVtpMatrg" name="displayVisualization" specification="_ZaPsQagmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_ZuSpqqgmEe-9tYVtpMatrg" type="_ZZlk8KgmEe-9tYVtpMatrg" direction="return"/>
                <language>java</language>
                <body>return new GuiVisualization(createTitle(), createColumnHeader(), createVisualizationData());&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ZuSpq6gmEe-9tYVtpMatrg" name="createHeader" specification="_ZaQTU6gmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_ZuSprKgmEe-9tYVtpMatrg" type="_ZZLVQKgmEe-9tYVtpMatrg" direction="return"/>
                <language>java</language>
                <body>Description header = new Description();&#xD;
&#xD;
 header.add(createTitle());&#xD;
 header.add(String.format(&quot;Scheduler Name: %s\n&quot;, program.getSchedulerName()));&#xD;
&#xD;
 /* The following parameters are output based on a special schedule or the fault model */&#xD;
 if (program.getNumFaults() > 0) { // only specify when deterministic fault model is assumed&#xD;
   header.add(String.format(&quot;numFaults: %d\n&quot;, program.getNumFaults()));&#xD;
 }&#xD;
 header.add(String.format(&quot;M: %s\n&quot;, String.valueOf(program.getMinPacketReceptionRate())));&#xD;
 header.add(String.format(&quot;E2E: %s\n&quot;, String.valueOf(program.getE2e())));&#xD;
 header.add(String.format(&quot;nChannels: %d\n&quot;, program.getNumChannels()));&#xD;
 return header;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ZuSpragmEe-9tYVtpMatrg" name="createFooter" specification="_ZaQ6YqgmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_ZuSprqgmEe-9tYVtpMatrg" type="_ZZLVQKgmEe-9tYVtpMatrg" direction="return"/>
                <language>java</language>
                <body>Description footer = new Description();&#xD;
 String deadlineMsg = null;&#xD;
&#xD;
 if (deadlinesMet) {&#xD;
   deadlineMsg = &quot;All flows meet their deadlines\n&quot;;&#xD;
 } else {&#xD;
   deadlineMsg = &quot;WARNING: NOT all flows meet their deadlines. See deadline analysis report.\n&quot;;&#xD;
 }&#xD;
 footer.add(String.format(&quot;// %s&quot;, deadlineMsg));&#xD;
 return footer;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ZuSpr6gmEe-9tYVtpMatrg" name="createColumnHeader" specification="_ZaQ6ZqgmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_ZuSpsKgmEe-9tYVtpMatrg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZuSpsagmEe-9tYVtpMatrg" value="*"/>
                </ownedParameter>
                <language>java</language>
                <body>var orderedNodes = program.toWorkLoad().getNodeNamesOrderedAlphabetically();&#xD;
 String[] columnNames = new String[orderedNodes.length + 1];&#xD;
 columnNames[0] = &quot;Time Slot&quot;; // add the Time Slot column header first&#xD;
 /* loop through the node names, adding each to the header */&#xD;
 for (int i = 0; i &lt; orderedNodes.length; i++) {&#xD;
   columnNames[i + 1] = orderedNodes[i];&#xD;
 }&#xD;
 return columnNames;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ZuSpsqgmEe-9tYVtpMatrg" name="createVisualizationData" specification="_ZaRhc6gmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_ZuSps6gmEe-9tYVtpMatrg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZuSptKgmEe-9tYVtpMatrg" value="*"/>
                </ownedParameter>
                <language>java</language>
                <body>if (visualizationData == null) {&#xD;
   int numRows = sourceCode.getNumRows();&#xD;
   int numColumns = sourceCode.getNumColumns();&#xD;
   visualizationData = new String[numRows][numColumns + 1];&#xD;
&#xD;
   for (int row = 0; row &lt; numRows; row++) {&#xD;
     visualizationData[row][0] = String.format(&quot;%s&quot;, row);&#xD;
     for (int column = 0; column &lt; numColumns; column++) {&#xD;
       visualizationData[row][column + 1] = sourceCode.get(row, column);&#xD;
     }&#xD;
   }&#xD;
 }&#xD;
 return visualizationData;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ZuTQsKgmEe-9tYVtpMatrg" name="createTitle" specification="_ZaSIgKgmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_ZuTQsagmEe-9tYVtpMatrg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return String.format(&quot;WARP program for graph %s\n&quot;, program.getName());&#xD;
  </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_ZaPsQagmEe-9tYVtpMatrg" name="displayVisualization" method="_ZuSpqagmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_Zq27JagmEe-9tYVtpMatrg" type="_ZZlk8KgmEe-9tYVtpMatrg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_ZaQTU6gmEe-9tYVtpMatrg" name="createHeader" visibility="protected" method="_ZuSpq6gmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_Zq27JqgmEe-9tYVtpMatrg" type="_ZZLVQKgmEe-9tYVtpMatrg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_ZaQ6YqgmEe-9tYVtpMatrg" name="createFooter" visibility="protected" method="_ZuSpragmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_Zq27J6gmEe-9tYVtpMatrg" type="_ZZLVQKgmEe-9tYVtpMatrg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_ZaQ6ZqgmEe-9tYVtpMatrg" name="createColumnHeader" visibility="protected" method="_ZuSpr6gmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_ZaQ6Z6gmEe-9tYVtpMatrg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZaQ6aKgmEe-9tYVtpMatrg" value="*"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_ZaRhc6gmEe-9tYVtpMatrg" name="createVisualizationData" visibility="protected" method="_ZuSpsqgmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_ZaRhdKgmEe-9tYVtpMatrg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZaRhdagmEe-9tYVtpMatrg" value="*"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_ZaSIgKgmEe-9tYVtpMatrg" name="createTitle" visibility="private" method="_ZuTQsKgmEe-9tYVtpMatrg">
                <ownedComment xmi:id="_ZurrMKgmEe-9tYVtpMatrg">
                  <body>Returns title&#xD;
   * @return returns the title of the graph</body>
                </ownedComment>
                <ownedParameter xmi:id="_ZaSIgagmEe-9tYVtpMatrg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_Zq27IKgmEe-9tYVtpMatrg" name="ProgramVisualization" visibility="package" method="_ZuSppqgmEe-9tYVtpMatrg">
                <eAnnotations xmi:id="_Zq27IqgmEe-9tYVtpMatrg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_Zq27I6gmEe-9tYVtpMatrg" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_Zq27IagmEe-9tYVtpMatrg" name="warp" type="_ZbdNMKgmEe-9tYVtpMatrg"/>
                <ownedParameter xmi:id="_Zq27JKgmEe-9tYVtpMatrg" type="_ZaPsQKgmEe-9tYVtpMatrg" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_ZaSvkKgmEe-9tYVtpMatrg" name="ReleaseTimeComparator">
              <interfaceRealization xmi:id="_ZsR3cKgmEe-9tYVtpMatrg" client="_ZaSvkKgmEe-9tYVtpMatrg" supplier="_ZqOB9qgmEe-9tYVtpMatrg" contract="_ZqOB9qgmEe-9tYVtpMatrg"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ZuTQsqgmEe-9tYVtpMatrg" name="compare" specification="_ZsTFkKgmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_ZuTQs6gmEe-9tYVtpMatrg" name="obj1" type="_Zr9HUKgmEe-9tYVtpMatrg"/>
                <ownedParameter xmi:id="_ZuTQtKgmEe-9tYVtpMatrg" name="obj2" type="_Zr9HUKgmEe-9tYVtpMatrg"/>
                <ownedParameter xmi:id="_ZuTQtagmEe-9tYVtpMatrg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>var result = obj1.releaseTimeComparison(obj2);&#xD;
		if (result == 0) {&#xD;
			// tied for priority, so break tie on release time&#xD;
			result = obj1.priorityComparison(obj2);&#xD;
		}&#xD;
		return result; // 0 => tie on priority and release time&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_ZsTFkKgmEe-9tYVtpMatrg" name="compare" method="_ZuTQsqgmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_ZsTFkagmEe-9tYVtpMatrg" name="obj1" type="_Zr9HUKgmEe-9tYVtpMatrg"/>
                <ownedParameter xmi:id="_ZsTFkqgmEe-9tYVtpMatrg" name="obj2" type="_Zr9HUKgmEe-9tYVtpMatrg"/>
                <ownedParameter xmi:id="_ZsTFk6gmEe-9tYVtpMatrg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_ZaT9sKgmEe-9tYVtpMatrg" name="ReleaseTimeQueue">
              <generalization xmi:id="_ZaVy4KgmEe-9tYVtpMatrg" general="_ZaVL0KgmEe-9tYVtpMatrg"/>
              <ownedAttribute xmi:id="_ZtcVEagmEe-9tYVtpMatrg" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_ZtcVEqgmEe-9tYVtpMatrg" value="1L"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ZuTQtqgmEe-9tYVtpMatrg" name="ReleaseTimeQueue" specification="_ZaUkwagmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_ZuTQt6gmEe-9tYVtpMatrg" type="_ZaT9sKgmEe-9tYVtpMatrg" direction="return"/>
                <language>java</language>
                <body>super(1, new ReleaseTimeComparator&lt;T>());&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ZuTQuKgmEe-9tYVtpMatrg" name="ReleaseTimeQueue" specification="_Zq3iMKgmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_ZuTQuagmEe-9tYVtpMatrg" name="schedulableObjects" type="_Zqqt4KgmEe-9tYVtpMatrg"/>
                <ownedParameter xmi:id="_ZuTQuqgmEe-9tYVtpMatrg" type="_ZaT9sKgmEe-9tYVtpMatrg" direction="return"/>
                <language>java</language>
                <body>super(new ReleaseTimeComparator&lt;T>());&#xD;
		this.addAll(schedulableObjects);&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_ZaUkwagmEe-9tYVtpMatrg" name="ReleaseTimeQueue" visibility="package" method="_ZuTQtqgmEe-9tYVtpMatrg">
                <eAnnotations xmi:id="_ZaUkwqgmEe-9tYVtpMatrg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_ZaUkw6gmEe-9tYVtpMatrg" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_ZaUkxKgmEe-9tYVtpMatrg" type="_ZaT9sKgmEe-9tYVtpMatrg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_Zq3iMKgmEe-9tYVtpMatrg" name="ReleaseTimeQueue" visibility="package" method="_ZuTQuKgmEe-9tYVtpMatrg">
                <eAnnotations xmi:id="_Zq3iMqgmEe-9tYVtpMatrg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_Zq3iM6gmEe-9tYVtpMatrg" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_Zq3iMagmEe-9tYVtpMatrg" name="schedulableObjects" type="_Zqqt4KgmEe-9tYVtpMatrg"/>
                <ownedParameter xmi:id="_Zq3iNKgmEe-9tYVtpMatrg" type="_ZaT9sKgmEe-9tYVtpMatrg" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_ZaWZ8KgmEe-9tYVtpMatrg" name="ReliabilityAnalysis">
              <ownedComment xmi:id="_ZurrMagmEe-9tYVtpMatrg">
                <body>ReliabilityAnalysis analyzes the end-to-end reliability of messages transmitted in flows for the&#xD;
WARP system.&#xD;
&lt;p>&#xD;
&#xD;
Let M represent the Minimum Packet Reception Rate on an edge in a flow. The end-to-end&#xD;
reliability for each flow, flow:src->sink, is computed iteratively as follows:&lt;br>&#xD;
(1)The flow:src node has an initial probability of 1.0 when it is released. All other initial&#xD;
probabilities are 0.0. (That is, the reset of the nodes in the flow have an initial probability&#xD;
value of 0.0.) &lt;br>&#xD;
(2) each src->sink pair probability is computed as NewSinkNodeState = (1-M)*PrevSnkNodeState +&#xD;
M*PrevSrcNodeState &lt;br>&#xD;
This value represents the probability that the message as been received by the node SinkNode.&#xD;
Thus, the NewSinkNodeState probability will increase each time a push or pull is executed with&#xD;
SinkNode as a listener.&#xD;
&lt;p>&#xD;
&#xD;
The last probability state value for any node is the reliability of the message reaching that&#xD;
node, and the end-to-end reliability of a flow is the value of the last Flow:SinkNode&#xD;
probability.&#xD;
&lt;p>&#xD;
&#xD;
CS2820 Fall 2024 Project: Implement this class to compute the probabilities that comprise the&#xD;
ReliablityMatrix, which is the core of the reliability visualization that is requested in Warp.&#xD;
&lt;p>&#xD;
&#xD;
To do this, you will need to retrieve the program source, parse the instructions for each node,&#xD;
in each time slot, to extract the src and snk nodes in the instruction and then apply the message&#xD;
success probability equation defined in the project assignment.&#xD;
&lt;p>&#xD;
&#xD;
I recommend using the getInstructionParameters method of the WarpDSL class to extract the src and&#xD;
snk nodes from the instruction string in a program schedule time slot.&#xD;
&#xD;
@author sgoddard&#xD;
@version 1.8 Fall 2024&#xD;
 *</body>
              </ownedComment>
              <ownedAttribute xmi:id="_ZtcVE6gmEe-9tYVtpMatrg" name="e2e" visibility="private" type="_ZsQpUKgmEe-9tYVtpMatrg">
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_ZtcVFKgmEe-9tYVtpMatrg" value="0.0"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_Ztc8IKgmEe-9tYVtpMatrg" name="minPacketReceptionRate" visibility="private" type="_ZsQpUKgmEe-9tYVtpMatrg">
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_Ztc8IagmEe-9tYVtpMatrg" value="0.0"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_Ztc8I6gmEe-9tYVtpMatrg" name="numFaults" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_Ztc8JKgmEe-9tYVtpMatrg" value="0"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_Ztc8JqgmEe-9tYVtpMatrg" name="constructorIndicator" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ZuTQu6gmEe-9tYVtpMatrg" name="ReliabilityAnalysis" specification="_ZsTsoKgmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_ZuTQvKgmEe-9tYVtpMatrg" name="e2e" type="_ZsQpUKgmEe-9tYVtpMatrg"/>
                <ownedParameter xmi:id="_ZuTQvagmEe-9tYVtpMatrg" name="minPacketReceptionRate" type="_ZsQpUKgmEe-9tYVtpMatrg"/>
                <ownedParameter xmi:id="_ZuTQvqgmEe-9tYVtpMatrg" type="_ZaWZ8KgmEe-9tYVtpMatrg" direction="return"/>
                <language>java</language>
                <body>this.e2e = e2e;&#xD;
 this.minPacketReceptionRate = minPacketReceptionRate;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ZuTQv6gmEe-9tYVtpMatrg" name="ReliabilityAnalysis" specification="_ZaXBAKgmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_ZuTQwKgmEe-9tYVtpMatrg" name="numFaults">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ZuTQwagmEe-9tYVtpMatrg" type="_ZaWZ8KgmEe-9tYVtpMatrg" direction="return"/>
                <language>java</language>
                <body>this.e2e = 0.99;&#xD;
 this.minPacketReceptionRate = 0.9;&#xD;
 this.numFaults = numFaults;&#xD;
 this.constructorIndicator = true;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ZuTQwqgmEe-9tYVtpMatrg" name="ReliabilityAnalysis" specification="_Zq4wUagmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_ZuTQw6gmEe-9tYVtpMatrg" name="program" type="_ZaCQ4KgmEe-9tYVtpMatrg"/>
                <ownedParameter xmi:id="_ZuTQxKgmEe-9tYVtpMatrg" type="_ZaWZ8KgmEe-9tYVtpMatrg" direction="return"/>
                <language>java</language>
                <body>// TODO Auto-generated constructor stub&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ZuTQxagmEe-9tYVtpMatrg" name="numTxPerLinkAndTotalTxCost" specification="_Zq4wVqgmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_ZuTQxqgmEe-9tYVtpMatrg" name="flow" type="_ZZWUYKgmEe-9tYVtpMatrg"/>
                <ownedParameter xmi:id="_ZuTQx6gmEe-9tYVtpMatrg" type="_Zp__gKgmEe-9tYVtpMatrg" direction="return"/>
                <language>java</language>
                <body>ArrayList&lt;Node> nodesInFlow = flow.nodes;&#xD;
 ArrayList&lt;Integer> numTxArrayList = new ArrayList&lt;>();&#xD;
 if (constructorIndicator) {&#xD;
   numTxArrayList = helperForConstructorNumFaults(nodesInFlow);&#xD;
 } else {&#xD;
   numTxArrayList = helperForConstructorE2EAndMPRR(nodesInFlow);&#xD;
 }&#xD;
 return numTxArrayList;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ZuT3wKgmEe-9tYVtpMatrg" name="helperForConstructorE2EAndMPRR" specification="_ZsUTsKgmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_ZuT3wagmEe-9tYVtpMatrg" name="nodesInFlow" type="_Zp__gKgmEe-9tYVtpMatrg"/>
                <ownedParameter xmi:id="_ZuT3wqgmEe-9tYVtpMatrg" type="_Zp__gKgmEe-9tYVtpMatrg" direction="return"/>
                <language>java</language>
                <body>int nNodesInFlow = nodesInFlow.size(); &#xD;
 ArrayList&lt;Integer> txAttempts = new ArrayList&lt;>(Collections.nCopies(nNodesInFlow + 1, 0));&#xD;
 int nHops = nNodesInFlow - 1;&#xD;
 Double minLinkReliablityNeded = Math.max(e2e, Math.pow(e2e, (1.0 / (double) nHops))); &#xD;
 //create ReliabilityTable with a row for each time slot&#xD;
 ReliabilityTable reliabilityWindow = new ReliabilityTable();&#xD;
 ReliabilityRow currentRow = new ReliabilityRow(nNodesInFlow, 0.0);&#xD;
 currentRow.set(0, 1.0);&#xD;
 reliabilityWindow.add(currentRow);&#xD;
 Double e2eReliabilityState = currentRow.get(nNodesInFlow - 1);&#xD;
 int timeSlot = 0; //start time at 0&#xD;
 while (e2eReliabilityState &lt; e2e) {&#xD;
   //retrieve previous row and create new row for current time slot&#xD;
   ReliabilityRow prevRow = reliabilityWindow.get(timeSlot);&#xD;
   //loop through nodes to update reliabilities&#xD;
   for (int nodeIndex = 0; nodeIndex &lt; nHops; nodeIndex++) { &#xD;
     int srcNodeIndex = nodeIndex;&#xD;
     int snkNodeIndex = nodeIndex + 1;&#xD;
     double prevSrcState = prevRow.get(srcNodeIndex);&#xD;
     double prevSnkState = prevRow.get(snkNodeIndex);&#xD;
     double nextSnkState;&#xD;
     //if sink node hasn't reached min reliability and source has the packet&#xD;
     if (prevSnkState &lt; minLinkReliablityNeded &amp;&amp; prevSrcState > 0) {&#xD;
       nextSnkState = ((1.0 - minPacketReceptionRate) * prevSnkState) &#xD;
                             + (minPacketReceptionRate * prevSrcState);&#xD;
       txAttempts.set(nodeIndex, txAttempts.get(nodeIndex) + 1);&#xD;
     } else {&#xD;
       nextSnkState = prevSnkState;&#xD;
     }&#xD;
     //update current row with max reliability for each node&#xD;
     currentRow.set(nodeIndex, Math.max(currentRow.get(nodeIndex), prevSrcState));&#xD;
     currentRow.set(nodeIndex + 1, nextSnkState);&#xD;
   }&#xD;
   //update the E2E reliability state with last node's value&#xD;
   e2eReliabilityState = currentRow.get(nNodesInFlow - 1);&#xD;
   reliabilityWindow.add(currentRow);&#xD;
   timeSlot++;&#xD;
 }&#xD;
 //set total transmission cost as last element&#xD;
 txAttempts.set(nNodesInFlow, reliabilityWindow.size());&#xD;
 return txAttempts;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ZuT3w6gmEe-9tYVtpMatrg" name="helperForConstructorNumFaults" specification="_ZsU6wagmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_ZuT3xKgmEe-9tYVtpMatrg" name="flowNodes" type="_Zp__gKgmEe-9tYVtpMatrg"/>
                <ownedParameter xmi:id="_ZuT3xagmEe-9tYVtpMatrg" type="_Zp__gKgmEe-9tYVtpMatrg" direction="return"/>
                <language>java</language>
                <body>ArrayList&lt;Integer> numTxArrayList = new ArrayList&lt;>();&#xD;
 for (int i = 0; i &lt; flowNodes.size(); i++) {&#xD;
   numTxArrayList.add(numFaults + 1);&#xD;
 }&#xD;
 int numEdgesInFlow = flowNodes.size() - 1;&#xD;
 int maxFaultsInFlow = numEdgesInFlow * numFaults;&#xD;
 numTxArrayList.add(numEdgesInFlow + maxFaultsInFlow);&#xD;
 return numTxArrayList;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ZuT3xqgmEe-9tYVtpMatrg" name="verifyReliabilities" specification="_ZaXoEagmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_ZuT3x6gmEe-9tYVtpMatrg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>// TODO Auto-generated method stub&#xD;
 return true;&#xD;
  </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_ZaXBAKgmEe-9tYVtpMatrg" name="ReliabilityAnalysis" method="_ZuTQv6gmEe-9tYVtpMatrg">
                <eAnnotations xmi:id="_ZaXBAqgmEe-9tYVtpMatrg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_ZaXBA6gmEe-9tYVtpMatrg" key="create"/>
                </eAnnotations>
                <ownedComment xmi:id="_ZurrM6gmEe-9tYVtpMatrg">
                  <body>Constructor initializing an object with default end-to-end reliability target,&#xD;
   * default minimum packet reception rate, and a specified number of faults.&#xD;
   *&#xD;
   * @param numFaults number of faults tolerated per edge</body>
                </ownedComment>
                <ownedParameter xmi:id="_ZaXBAagmEe-9tYVtpMatrg" name="numFaults">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ZaXBBKgmEe-9tYVtpMatrg" type="_ZaWZ8KgmEe-9tYVtpMatrg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_ZaXoEKgmEe-9tYVtpMatrg" name="getReliabilities">
                <ownedParameter xmi:id="_Zq5XYagmEe-9tYVtpMatrg" type="_Zab5gKgmEe-9tYVtpMatrg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_ZaXoEagmEe-9tYVtpMatrg" name="verifyReliabilities" method="_ZuT3xqgmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_ZaXoEqgmEe-9tYVtpMatrg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_Zq4wUagmEe-9tYVtpMatrg" name="ReliabilityAnalysis" method="_ZuTQwqgmEe-9tYVtpMatrg">
                <eAnnotations xmi:id="_Zq4wU6gmEe-9tYVtpMatrg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_Zq4wVKgmEe-9tYVtpMatrg" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_Zq4wUqgmEe-9tYVtpMatrg" name="program" type="_ZaCQ4KgmEe-9tYVtpMatrg"/>
                <ownedParameter xmi:id="_Zq4wVagmEe-9tYVtpMatrg" type="_ZaWZ8KgmEe-9tYVtpMatrg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_Zq4wVqgmEe-9tYVtpMatrg" name="numTxPerLinkAndTotalTxCost" method="_ZuTQxagmEe-9tYVtpMatrg">
                <ownedComment xmi:id="_ZurrNKgmEe-9tYVtpMatrg">
                  <body>Estimates the worst-case number of transmissions needed across a flow to meet&#xD;
   * the end-to-end reliability target.&#xD;
   *&#xD;
   * @param flow  given flow where transmission attempts are measured&#xD;
   * @return      ArrayList of transmission attempts for each node pair in flow</body>
                </ownedComment>
                <ownedParameter xmi:id="_Zq4wV6gmEe-9tYVtpMatrg" name="flow" type="_ZZWUYKgmEe-9tYVtpMatrg"/>
                <ownedParameter xmi:id="_ZsTspqgmEe-9tYVtpMatrg" type="_Zp__gKgmEe-9tYVtpMatrg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_ZsTsoKgmEe-9tYVtpMatrg" name="ReliabilityAnalysis" method="_ZuTQu6gmEe-9tYVtpMatrg">
                <eAnnotations xmi:id="_ZsTso6gmEe-9tYVtpMatrg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_ZsTspKgmEe-9tYVtpMatrg" key="create"/>
                </eAnnotations>
                <ownedComment xmi:id="_ZurrMqgmEe-9tYVtpMatrg">
                  <body>Constructor initializing an object with the specified end-to-end reliability &#xD;
   * target and the minimum packet reception rate.&#xD;
   *&#xD;
   * @param e2e                    end-to-end reliability target&#xD;
   * @param minPacketReceptionRate minimum packet reception rate</body>
                </ownedComment>
                <ownedParameter xmi:id="_ZsTsoagmEe-9tYVtpMatrg" name="e2e" type="_ZsQpUKgmEe-9tYVtpMatrg"/>
                <ownedParameter xmi:id="_ZsTsoqgmEe-9tYVtpMatrg" name="minPacketReceptionRate" type="_ZsQpUKgmEe-9tYVtpMatrg"/>
                <ownedParameter xmi:id="_ZsTspagmEe-9tYVtpMatrg" type="_ZaWZ8KgmEe-9tYVtpMatrg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_ZsUTsKgmEe-9tYVtpMatrg" name="helperForConstructorE2EAndMPRR" method="_ZuT3wKgmEe-9tYVtpMatrg">
                <ownedComment xmi:id="_ZurrNagmEe-9tYVtpMatrg">
                  <body>Helper method for computing the transmission costs for each node and the total transmission&#xD;
   * cost in a given flow where transmission costs for each node are variable. MPRR represents&#xD;
   * the minimum packet reception rate.&#xD;
   *&#xD;
   * @param nodesInFlow ArrayList of nodes in the given flow&#xD;
   * @return            ArrayList of the transmission costs for each node and the given flow</body>
                </ownedComment>
                <ownedParameter xmi:id="_ZsUTsagmEe-9tYVtpMatrg" name="nodesInFlow" type="_Zp__gKgmEe-9tYVtpMatrg"/>
                <ownedParameter xmi:id="_ZsUTs6gmEe-9tYVtpMatrg" type="_Zp__gKgmEe-9tYVtpMatrg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_ZsU6wagmEe-9tYVtpMatrg" name="helperForConstructorNumFaults" method="_ZuT3w6gmEe-9tYVtpMatrg">
                <ownedComment xmi:id="_ZurrNqgmEe-9tYVtpMatrg">
                  <body>Helper method for computing the transmission costs for each node and the total transmission&#xD;
   * cost in a given flow where transmission costs for each node are fixed. &#xD;
   *&#xD;
   * @param flowNodes ArrayList of nodes in the given flow&#xD;
   * @return          ArrayList of the transmission costs for each node and the given flow</body>
                </ownedComment>
                <ownedParameter xmi:id="_ZsU6wqgmEe-9tYVtpMatrg" name="flowNodes" type="_Zp__gKgmEe-9tYVtpMatrg"/>
                <ownedParameter xmi:id="_ZsU6xKgmEe-9tYVtpMatrg" type="_Zp__gKgmEe-9tYVtpMatrg" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Interface" xmi:id="_ZaY2MKgmEe-9tYVtpMatrg" name="ReliabilityParameters" visibility="package">
              <ownedComment xmi:id="_ZurrN6gmEe-9tYVtpMatrg">
                <body>@author sgoddard&#xD;
@version 1.8 Fall 2024&#xD;
 *</body>
              </ownedComment>
              <ownedAttribute xmi:id="_ZaZdQKgmEe-9tYVtpMatrg" name="minPacketReceptionRate" type="_ZsQpUKgmEe-9tYVtpMatrg" isReadOnly="true"/>
              <ownedAttribute xmi:id="_ZaarYKgmEe-9tYVtpMatrg" name="e2e" type="_ZsQpUKgmEe-9tYVtpMatrg" isReadOnly="true"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_ZaarYagmEe-9tYVtpMatrg" name="ReliabilityRow">
              <generalization xmi:id="_Zq5-cKgmEe-9tYVtpMatrg" general="_ZajOQKgmEe-9tYVtpMatrg"/>
              <ownedAttribute xmi:id="_Ztc8KKgmEe-9tYVtpMatrg" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_ZtdjMKgmEe-9tYVtpMatrg" value="1L"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ZuT3yKgmEe-9tYVtpMatrg" name="ReliabilityRow" specification="_ZabScKgmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_ZuT3yagmEe-9tYVtpMatrg" type="_ZaarYagmEe-9tYVtpMatrg" direction="return"/>
                <language>java</language>
                <body>super();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ZuT3yqgmEe-9tYVtpMatrg" name="ReliabilityRow" specification="_ZsVh0agmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_ZuT3y6gmEe-9tYVtpMatrg" name="numColumns">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ZuT3zKgmEe-9tYVtpMatrg" name="element" type="_ZsQpUKgmEe-9tYVtpMatrg"/>
                <ownedParameter xmi:id="_ZuT3zagmEe-9tYVtpMatrg" type="_ZaarYagmEe-9tYVtpMatrg" direction="return"/>
                <language>java</language>
                <body>super(numColumns, element);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ZuT3zqgmEe-9tYVtpMatrg" name="ReliabilityRow" specification="_ZsWI5agmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_ZuT3z6gmEe-9tYVtpMatrg" name="rowArray" type="_ZsQpUKgmEe-9tYVtpMatrg">
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZuT30KgmEe-9tYVtpMatrg" value="*"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ZuT30agmEe-9tYVtpMatrg" type="_ZaarYagmEe-9tYVtpMatrg" direction="return"/>
                <language>java</language>
                <body>super(rowArray);&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_ZabScKgmEe-9tYVtpMatrg" name="ReliabilityRow" method="_ZuT3yKgmEe-9tYVtpMatrg">
                <eAnnotations xmi:id="_ZabScagmEe-9tYVtpMatrg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_ZabScqgmEe-9tYVtpMatrg" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_ZabSc6gmEe-9tYVtpMatrg" type="_ZaarYagmEe-9tYVtpMatrg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_ZsVh0agmEe-9tYVtpMatrg" name="ReliabilityRow" visibility="package" method="_ZuT3yqgmEe-9tYVtpMatrg">
                <eAnnotations xmi:id="_ZsWI4qgmEe-9tYVtpMatrg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_ZsWI46gmEe-9tYVtpMatrg" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_ZsWI4KgmEe-9tYVtpMatrg" name="numColumns">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ZsWI4agmEe-9tYVtpMatrg" name="element" type="_ZsQpUKgmEe-9tYVtpMatrg"/>
                <ownedParameter xmi:id="_ZsWI5KgmEe-9tYVtpMatrg" type="_ZaarYagmEe-9tYVtpMatrg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_ZsWI5agmEe-9tYVtpMatrg" name="ReliabilityRow" visibility="package" method="_ZuT3zqgmEe-9tYVtpMatrg">
                <eAnnotations xmi:id="_ZsWI56gmEe-9tYVtpMatrg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_ZsWI6KgmEe-9tYVtpMatrg" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_ZsWI5qgmEe-9tYVtpMatrg" name="rowArray" type="_ZsQpUKgmEe-9tYVtpMatrg">
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZsWI6qgmEe-9tYVtpMatrg" value="*"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ZsWI6agmEe-9tYVtpMatrg" type="_ZaarYagmEe-9tYVtpMatrg" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_Zab5gKgmEe-9tYVtpMatrg" name="ReliabilityTable">
              <generalization xmi:id="_Zq6lgKgmEe-9tYVtpMatrg" general="_ZbAhQKgmEe-9tYVtpMatrg"/>
              <ownedAttribute xmi:id="_ZtdjMagmEe-9tYVtpMatrg" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_ZtdjMqgmEe-9tYVtpMatrg" value="1L"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ZuT30qgmEe-9tYVtpMatrg" name="ReliabilityTable" specification="_ZacgkKgmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_ZuT306gmEe-9tYVtpMatrg" type="_Zab5gKgmEe-9tYVtpMatrg" direction="return"/>
                <language>java</language>
                <body>super();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ZuT31KgmEe-9tYVtpMatrg" name="ReliabilityTable" specification="_ZacglKgmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_ZuT31agmEe-9tYVtpMatrg" name="row">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ZuT31qgmEe-9tYVtpMatrg" name="column">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ZuT316gmEe-9tYVtpMatrg" type="_Zab5gKgmEe-9tYVtpMatrg" direction="return"/>
                <language>java</language>
                <body>super();&#xD;
		for(int i=0; i &lt; row; i++) {&#xD;
			ReliabilityRow emptyRow = new ReliabilityRow();&#xD;
			for(int j=0; j &lt; column; j++) {&#xD;
				emptyRow.add(0.0);&#xD;
			}&#xD;
			this.add(emptyRow);&#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_ZacgkKgmEe-9tYVtpMatrg" name="ReliabilityTable" method="_ZuT30qgmEe-9tYVtpMatrg">
                <eAnnotations xmi:id="_ZacgkagmEe-9tYVtpMatrg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_ZacgkqgmEe-9tYVtpMatrg" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_Zacgk6gmEe-9tYVtpMatrg" type="_Zab5gKgmEe-9tYVtpMatrg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_ZacglKgmEe-9tYVtpMatrg" name="ReliabilityTable" visibility="package" method="_ZuT31KgmEe-9tYVtpMatrg">
                <eAnnotations xmi:id="_Zacgl6gmEe-9tYVtpMatrg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_ZacgmKgmEe-9tYVtpMatrg" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_ZacglagmEe-9tYVtpMatrg" name="row">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ZacglqgmEe-9tYVtpMatrg" name="column">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ZadHoKgmEe-9tYVtpMatrg" type="_Zab5gKgmEe-9tYVtpMatrg" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_ZadHoagmEe-9tYVtpMatrg" name="ReliabilityVisualization">
              <ownedComment xmi:id="_ZurrOKgmEe-9tYVtpMatrg">
                <body>ReliabilityVisualization creates the visualizations for&#xD;
the reliability analysis of the WARP program. &lt;p>&#xD;
&#xD;
CS2820 Fall 2024 Project: Implement this class to create&#xD;
the visualizations that are requested in Warp. Your solution&#xD;
should support both the file and Java Swing Window (gui) visualizations.&#xD;
 *&#xD;
I recommend using class ProgramVisualization as an example of how to implement&#xD;
this class. Your solution will likely be similar to the code in ProgramVisualization.&#xD;
&#xD;
@author sgoddard&#xD;
@version 1.8 Fall 2024&#xD;
 *</body>
              </ownedComment>
              <generalization xmi:id="_Zq7zoKgmEe-9tYVtpMatrg" general="_ZbJEIKgmEe-9tYVtpMatrg"/>
              <ownedAttribute xmi:id="_ZtdjM6gmEe-9tYVtpMatrg" name="SOURCE_SUFFIX" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_ZtdjNKgmEe-9tYVtpMatrg" value="&quot;.ra&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_ZtdjNagmEe-9tYVtpMatrg" name="OBJECT_NAME" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_ZtdjNqgmEe-9tYVtpMatrg" value="&quot;Reliability Analysis&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_ZtdjN6gmEe-9tYVtpMatrg" name="warp" visibility="private" type="_ZbdNMKgmEe-9tYVtpMatrg" association="_Zvb5JKgmEe-9tYVtpMatrg"/>
              <ownedAttribute xmi:id="_ZteKQKgmEe-9tYVtpMatrg" name="ra" visibility="private" type="_ZaWZ8KgmEe-9tYVtpMatrg" association="_ZvcgMKgmEe-9tYVtpMatrg"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ZuT32KgmEe-9tYVtpMatrg" name="ReliabilityVisualization" specification="_Zq7MkKgmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_ZuT32agmEe-9tYVtpMatrg" name="warp" type="_ZbdNMKgmEe-9tYVtpMatrg"/>
                <ownedParameter xmi:id="_ZuT32qgmEe-9tYVtpMatrg" type="_ZadHoagmEe-9tYVtpMatrg" direction="return"/>
                <language>java</language>
                <body>super(new FileManager(), warp, SOURCE_SUFFIX);&#xD;
	  this.warp = warp;&#xD;
	  this.ra = warp.toReliabilityAnalysis();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ZuUe0KgmEe-9tYVtpMatrg" name="createTitle" specification="_ZadusKgmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_ZuUe0agmEe-9tYVtpMatrg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return String.format(OBJECT_NAME + &quot; for graph %s\n&quot;, warp.getName());&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ZuUe0qgmEe-9tYVtpMatrg" name="createHeader" specification="_ZadusqgmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_ZuUe06gmEe-9tYVtpMatrg" type="_ZZLVQKgmEe-9tYVtpMatrg" direction="return"/>
                <language>java</language>
                <body>Description header = new Description();&#xD;
&#xD;
	  header.add(createTitle());&#xD;
	  header.add(String.format(&quot;Scheduler Name: %s\n&quot;, warp.getSchedulerName()));&#xD;
&#xD;
	  /* The following parameters are output based on a special schedule or the fault model */&#xD;
	  if (warp.getNumFaults() > 0) { // only specify when deterministic fault model is assumed&#xD;
	    header.add(String.format(&quot;numFaults: %d\n&quot;, warp.getNumFaults()));&#xD;
	  }&#xD;
	  header.add(String.format(&quot;M: %s\n&quot;, String.valueOf(warp.getMinPacketReceptionRate())));&#xD;
	  header.add(String.format(&quot;E2E: %s\n&quot;, String.valueOf(warp.getE2e())));&#xD;
	  header.add(String.format(&quot;nChannels: %d\n&quot;, warp.getNumChannels()));&#xD;
	  return header;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ZuUe1KgmEe-9tYVtpMatrg" name="createFooter" specification="_ZaeVw6gmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_ZuUe1agmEe-9tYVtpMatrg" type="_ZZLVQKgmEe-9tYVtpMatrg" direction="return"/>
                <language>java</language>
                <body>Description footer = new Description();&#xD;
	  String deadlineMsg = null;&#xD;
&#xD;
	  if (warp.deadlinesMet()) {&#xD;
	    deadlineMsg = &quot;All flows meet their deadlines\n&quot;;&#xD;
	  } else {&#xD;
	    deadlineMsg = &quot;WARNING: NOT all flows meet their deadlines. See deadline analysis report.\n&quot;;&#xD;
	  }&#xD;
	  footer.add(String.format(&quot;// %s&quot;, deadlineMsg));&#xD;
	  return footer;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ZuUe1qgmEe-9tYVtpMatrg" name="createColumnHeader" specification="_Zae80KgmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_ZuUe16gmEe-9tYVtpMatrg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZuUe2KgmEe-9tYVtpMatrg" value="*"/>
                </ownedParameter>
                <language>java</language>
                <body>String[] orderedNodes = warp.toWorkload().getNodeNamesOrderedAlphabetically();&#xD;
	  String[] columnNames = new String[orderedNodes.length + 1];&#xD;
	  columnNames[0] = &quot;Time Slot&quot;; // add the Time Slot column header first&#xD;
	  /* loop through the node names, adding each to the header */&#xD;
	  for (int i = 0; i &lt; orderedNodes.length; i++) {&#xD;
	    columnNames[i + 1] = orderedNodes[i];&#xD;
   }&#xD;
   return columnNames;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ZuUe2agmEe-9tYVtpMatrg" name="createVisualizationData" specification="_Zae816gmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_ZuUe2qgmEe-9tYVtpMatrg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZuUe26gmEe-9tYVtpMatrg" value="*"/>
                </ownedParameter>
                <language>java</language>
                <body>if (visualizationData == null) {&#xD;
	    int numRows = ra.getReliabilities().getNumRows();&#xD;
	    int numColumns = ra.getReliabilities().getNumColumns();&#xD;
	    visualizationData = new String[numRows][numColumns + 1];&#xD;
&#xD;
	    for (int row = 0; row &lt; numRows; row++) {&#xD;
	      visualizationData[row][0] = String.format(&quot;%s&quot;, row);&#xD;
	      for (int column = 0; column &lt; numColumns; column++) {&#xD;
	        visualizationData[row][column + 1] = ra.getReliabilities().get(row, column).toString();&#xD;
	      }&#xD;
	    }&#xD;
	  }&#xD;
	  return visualizationData;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ZuUe3KgmEe-9tYVtpMatrg" name="displayVisualization" specification="_Zafj46gmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_ZuUe3agmEe-9tYVtpMatrg" type="_ZZlk8KgmEe-9tYVtpMatrg" direction="return"/>
                <language>java</language>
                <body>return new GuiVisualization(createTitle(), createColumnHeader(), createVisualizationData());&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_ZadusKgmEe-9tYVtpMatrg" name="createTitle" visibility="private" method="_ZuUe0KgmEe-9tYVtpMatrg">
                <ownedComment xmi:id="_ZusSQagmEe-9tYVtpMatrg">
                  <body>Creates a string title for the current WARP reliability visualization.&#xD;
	 *&#xD;
	 * @return string title of current visualization</body>
                </ownedComment>
                <ownedParameter xmi:id="_ZadusagmEe-9tYVtpMatrg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_ZadusqgmEe-9tYVtpMatrg" name="createHeader" visibility="protected" method="_ZuUe0qgmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_Zq7MlagmEe-9tYVtpMatrg" type="_ZZLVQKgmEe-9tYVtpMatrg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_ZaeVw6gmEe-9tYVtpMatrg" name="createFooter" visibility="protected" method="_ZuUe1KgmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_Zq7MlqgmEe-9tYVtpMatrg" type="_ZZLVQKgmEe-9tYVtpMatrg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_Zae80KgmEe-9tYVtpMatrg" name="createColumnHeader" visibility="protected" method="_ZuUe1qgmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_Zae80agmEe-9tYVtpMatrg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Zae80qgmEe-9tYVtpMatrg" value="*"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_Zae816gmEe-9tYVtpMatrg" name="createVisualizationData" visibility="protected" method="_ZuUe2agmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_Zae82KgmEe-9tYVtpMatrg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Zae82agmEe-9tYVtpMatrg" value="*"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_Zafj46gmEe-9tYVtpMatrg" name="displayVisualization" method="_ZuUe3KgmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_Zq7Ml6gmEe-9tYVtpMatrg" type="_ZZlk8KgmEe-9tYVtpMatrg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_Zq7MkKgmEe-9tYVtpMatrg" name="ReliabilityVisualization" visibility="package" method="_ZuT32KgmEe-9tYVtpMatrg">
                <eAnnotations xmi:id="_Zq7MkqgmEe-9tYVtpMatrg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_Zq7Mk6gmEe-9tYVtpMatrg" key="create"/>
                </eAnnotations>
                <ownedComment xmi:id="_ZusSQKgmEe-9tYVtpMatrg">
                  <body>Constructor used to initialize the ReliabilityVisualization object &#xD;
	 * using a FileManager object, the WARP interface, and the suffix&#xD;
	 * denoting a ReliabilityAnalysis object. The ReliabilityAnalysis&#xD;
	 * object is initialized by converting the WARP interface into a &#xD;
	 * ReliabilityAnalysis object.&#xD;
	 * &#xD;
	 * @param warp the given WARP interface</body>
                </ownedComment>
                <ownedParameter xmi:id="_Zq7MkagmEe-9tYVtpMatrg" name="warp" type="_ZbdNMKgmEe-9tYVtpMatrg"/>
                <ownedParameter xmi:id="_Zq7MlKgmEe-9tYVtpMatrg" type="_ZadHoagmEe-9tYVtpMatrg" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_ZahZEKgmEe-9tYVtpMatrg" name="ReportVisualization">
              <generalization xmi:id="_Zq8auqgmEe-9tYVtpMatrg" general="_ZbJEIKgmEe-9tYVtpMatrg"/>
              <ownedAttribute xmi:id="_ZteKQqgmEe-9tYVtpMatrg" name="SUFFIX" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_ZteKQ6gmEe-9tYVtpMatrg" value="&quot;.txt&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_ZteKRKgmEe-9tYVtpMatrg" name="content" visibility="private" type="_ZZLVQKgmEe-9tYVtpMatrg" association="_ZvcgM6gmEe-9tYVtpMatrg"/>
              <ownedAttribute xmi:id="_ZteKRqgmEe-9tYVtpMatrg" name="title" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ZuUe3qgmEe-9tYVtpMatrg" name="ReportVisualization" specification="_Zq8asKgmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_ZuUe36gmEe-9tYVtpMatrg" name="fm" type="_ZZSC8KgmEe-9tYVtpMatrg"/>
                <ownedParameter xmi:id="_ZuUe4KgmEe-9tYVtpMatrg" name="warp" type="_Za9d8agmEe-9tYVtpMatrg"/>
                <ownedParameter xmi:id="_ZuUe4agmEe-9tYVtpMatrg" name="content" type="_ZZLVQKgmEe-9tYVtpMatrg"/>
                <ownedParameter xmi:id="_ZuUe4qgmEe-9tYVtpMatrg" name="title">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ZuUe46gmEe-9tYVtpMatrg" type="_ZahZEKgmEe-9tYVtpMatrg" direction="return"/>
                <language>java</language>
                <body>super(fm, warp, new String(title + &quot;Report&quot;), SUFFIX);&#xD;
		this.content = content;&#xD;
		this.title = title;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ZuUe5KgmEe-9tYVtpMatrg" name="visualization" specification="_ZaiAIKgmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_ZuUe5agmEe-9tYVtpMatrg" type="_ZZLVQKgmEe-9tYVtpMatrg" direction="return"/>
                <language>java</language>
                <body>return createReport();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ZuUe5qgmEe-9tYVtpMatrg" name="createReport" specification="_ZainMKgmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_ZuUe56gmEe-9tYVtpMatrg" type="_ZZLVQKgmEe-9tYVtpMatrg" direction="return"/>
                <language>java</language>
                <body>Description report;&#xD;
		if (content.size() > 0) {&#xD;
			report = new Description(new String (title + &quot; Report&quot;));&#xD;
			report.addAll(content);&#xD;
		} else {&#xD;
			report = new Description(new String (&quot;No &quot; + title + &quot; to report&quot;));&#xD;
		}&#xD;
		return report;&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_ZaiAIKgmEe-9tYVtpMatrg" name="visualization" method="_ZuUe5KgmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_Zq8auKgmEe-9tYVtpMatrg" type="_ZZLVQKgmEe-9tYVtpMatrg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_ZainMKgmEe-9tYVtpMatrg" name="createReport" visibility="private" method="_ZuUe5qgmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_Zq8auagmEe-9tYVtpMatrg" type="_ZZLVQKgmEe-9tYVtpMatrg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_Zq8asKgmEe-9tYVtpMatrg" name="ReportVisualization" visibility="package" method="_ZuUe3qgmEe-9tYVtpMatrg">
                <eAnnotations xmi:id="_Zq8atagmEe-9tYVtpMatrg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_Zq8atqgmEe-9tYVtpMatrg" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_Zq8asagmEe-9tYVtpMatrg" name="fm" type="_ZZSC8KgmEe-9tYVtpMatrg"/>
                <ownedParameter xmi:id="_Zq8asqgmEe-9tYVtpMatrg" name="warp" type="_Za9d8agmEe-9tYVtpMatrg"/>
                <ownedParameter xmi:id="_Zq8as6gmEe-9tYVtpMatrg" name="content" type="_ZZLVQKgmEe-9tYVtpMatrg"/>
                <ownedParameter xmi:id="_Zq8atKgmEe-9tYVtpMatrg" name="title">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Zq8at6gmEe-9tYVtpMatrg" type="_ZahZEKgmEe-9tYVtpMatrg" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_ZajOQKgmEe-9tYVtpMatrg" name="Row">
              <generalization xmi:id="_ZsXXBKgmEe-9tYVtpMatrg" general="_Zp__gKgmEe-9tYVtpMatrg"/>
              <ownedAttribute xmi:id="_ZtexUagmEe-9tYVtpMatrg" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_ZtexUqgmEe-9tYVtpMatrg" value="1L"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ZuVF4KgmEe-9tYVtpMatrg" name="Row" specification="_Zaj1UKgmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_ZuVF4agmEe-9tYVtpMatrg" type="_ZajOQKgmEe-9tYVtpMatrg" direction="return"/>
                <language>java</language>
                <body>super();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ZuVF4qgmEe-9tYVtpMatrg" name="Row" specification="_ZsWv8KgmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_ZuVF46gmEe-9tYVtpMatrg" name="numElements">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ZuVF5KgmEe-9tYVtpMatrg" name="element" type="_Zr9HUKgmEe-9tYVtpMatrg"/>
                <ownedParameter xmi:id="_ZuVF5agmEe-9tYVtpMatrg" type="_ZajOQKgmEe-9tYVtpMatrg" direction="return"/>
                <language>java</language>
                <body>super();&#xD;
		for (int i=0; i &lt; numElements; i++) {  &#xD;
			this.add(element); // create the the row initialized with element&#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ZuVF5qgmEe-9tYVtpMatrg" name="Row" specification="_ZsWv9qgmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_ZuVF56gmEe-9tYVtpMatrg" name="rowArray" type="_Zr9HUKgmEe-9tYVtpMatrg">
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZuVF6KgmEe-9tYVtpMatrg" value="*"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ZuVF6agmEe-9tYVtpMatrg" type="_ZajOQKgmEe-9tYVtpMatrg" direction="return"/>
                <language>java</language>
                <body>super();&#xD;
		for (int i=0; i &lt; rowArray.length; i++) {  &#xD;
			this.add(rowArray[i]); // create the the row initialized with rowArray&#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ZuVF6qgmEe-9tYVtpMatrg" name="Row" specification="_Zaj1VKgmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_ZuVF66gmEe-9tYVtpMatrg" name="numElements">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ZuVF7KgmEe-9tYVtpMatrg" type="_ZajOQKgmEe-9tYVtpMatrg" direction="return"/>
                <language>java</language>
                <body>super(numElements);&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_Zaj1UKgmEe-9tYVtpMatrg" name="Row" method="_ZuVF4KgmEe-9tYVtpMatrg">
                <eAnnotations xmi:id="_Zaj1UagmEe-9tYVtpMatrg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_Zaj1UqgmEe-9tYVtpMatrg" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_Zaj1U6gmEe-9tYVtpMatrg" type="_ZajOQKgmEe-9tYVtpMatrg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_Zaj1VKgmEe-9tYVtpMatrg" name="Row" visibility="package" method="_ZuVF6qgmEe-9tYVtpMatrg">
                <eAnnotations xmi:id="_ZakcYagmEe-9tYVtpMatrg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_ZakcYqgmEe-9tYVtpMatrg" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_ZakcYKgmEe-9tYVtpMatrg" name="numElements">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ZakcY6gmEe-9tYVtpMatrg" type="_ZajOQKgmEe-9tYVtpMatrg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_ZsWv8KgmEe-9tYVtpMatrg" name="Row" visibility="package" method="_ZuVF4qgmEe-9tYVtpMatrg">
                <eAnnotations xmi:id="_ZsWv86gmEe-9tYVtpMatrg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_ZsWv9KgmEe-9tYVtpMatrg" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_ZsWv8agmEe-9tYVtpMatrg" name="numElements">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ZsWv8qgmEe-9tYVtpMatrg" name="element" type="_Zr9HUKgmEe-9tYVtpMatrg"/>
                <ownedParameter xmi:id="_ZsWv9agmEe-9tYVtpMatrg" type="_ZajOQKgmEe-9tYVtpMatrg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_ZsWv9qgmEe-9tYVtpMatrg" name="Row" visibility="package" method="_ZuVF5qgmEe-9tYVtpMatrg">
                <eAnnotations xmi:id="_ZsXXAKgmEe-9tYVtpMatrg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_ZsXXAagmEe-9tYVtpMatrg" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_ZsWv96gmEe-9tYVtpMatrg" name="rowArray" type="_Zr9HUKgmEe-9tYVtpMatrg">
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZsXXA6gmEe-9tYVtpMatrg" value="*"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ZsXXAqgmEe-9tYVtpMatrg" type="_ZajOQKgmEe-9tYVtpMatrg" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_ZakcZKgmEe-9tYVtpMatrg" name="SchedulableObject" isAbstract="true">
              <ownedAttribute xmi:id="_ZtexU6gmEe-9tYVtpMatrg" name="DEFAULT" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_ZtexVKgmEe-9tYVtpMatrg" value="0"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_ZtexVagmEe-9tYVtpMatrg" name="DEFAULT_PERIOD" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_ZtexVqgmEe-9tYVtpMatrg" value="100"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_ZtexV6gmEe-9tYVtpMatrg" name="DEFAULT_DEADLINE" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_ZtfYYKgmEe-9tYVtpMatrg" value="100"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_ZtfYYagmEe-9tYVtpMatrg" name="UNKNOWN" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_ZtfYYqgmEe-9tYVtpMatrg" value="&quot;unknown&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_ZtfYY6gmEe-9tYVtpMatrg" name="BEFORE_START" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_ZtfYZKgmEe-9tYVtpMatrg" value="-1"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_ZtfYZagmEe-9tYVtpMatrg" name="name" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_ZtfYZ6gmEe-9tYVtpMatrg" name="priority">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_ZtfYaKgmEe-9tYVtpMatrg" name="period" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_ZtfYaagmEe-9tYVtpMatrg" name="deadline">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_Ztf_cKgmEe-9tYVtpMatrg" name="phase" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_Ztf_cqgmEe-9tYVtpMatrg" name="releaseTime" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_ZtgmgagmEe-9tYVtpMatrg" name="startTime" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_Ztgmg6gmEe-9tYVtpMatrg" name="endTime" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_ZtgmhKgmEe-9tYVtpMatrg" name="lastUpdateTime">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_ZtgmhagmEe-9tYVtpMatrg" value="BEFORE_START"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_ZtgmhqgmEe-9tYVtpMatrg" name="predecessor" type="_ZakcZKgmEe-9tYVtpMatrg" association="_Zus5UKgmEe-9tYVtpMatrg"/>
              <ownedAttribute xmi:id="_ZthNkKgmEe-9tYVtpMatrg" name="endTimes" visibility="private" type="_ZaVL0KgmEe-9tYVtpMatrg" association="_ZvdHQKgmEe-9tYVtpMatrg"/>
              <ownedAttribute xmi:id="_ZthNk6gmEe-9tYVtpMatrg" name="subObjects" type="_Zq9o0qgmEe-9tYVtpMatrg" isReadOnly="true" association="_ZvdHQ6gmEe-9tYVtpMatrg"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ZuVF7agmEe-9tYVtpMatrg" name="SchedulableObject" specification="_ZalqgKgmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_ZuVF7qgmEe-9tYVtpMatrg" type="_ZakcZKgmEe-9tYVtpMatrg" direction="return"/>
                <language>java</language>
                <body>setDefaultParameters();&#xD;
		setNextReleaseTime(0); // initialize parameters&#xD;
		this.lastUpdateTime = -1; // reset lastUpdate &#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ZuVF76gmEe-9tYVtpMatrg" name="SchedulableObject" specification="_Zq-P4agmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_ZuVF8KgmEe-9tYVtpMatrg" name="obj" type="_ZakcZKgmEe-9tYVtpMatrg"/>
                <ownedParameter xmi:id="_ZuVF8agmEe-9tYVtpMatrg" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ZuVF8qgmEe-9tYVtpMatrg" type="_ZakcZKgmEe-9tYVtpMatrg" direction="return"/>
                <language>java</language>
                <body>this.name = obj.getName();&#xD;
		this.priority = obj.getPriority();&#xD;
		this.period = obj.getPeriod();&#xD;
		this.deadline = obj.getDeadline();&#xD;
		this.phase = obj.getPhase();&#xD;
		this.startTime = obj.getStartTime();&#xD;
		this.endTime = obj.getEndTime();&#xD;
		this.releaseTime = obj.getReleaseTime(); // initialize parameters&#xD;
		this.lastUpdateTime = time; // reset lastUpdate &#xD;
		this.predecessor = obj.getPredecessor();&#xD;
		this.endTimes = new PriorityQueue&lt;Integer>(); &#xD;
		this.endTimes.addAll(obj.getAllEndTimes());&#xD;
		this.subObjects = new LinkedList&lt;SchedulableObject>();&#xD;
		this.subObjects.addAll(obj.getSubObjects());&#xD;
		&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ZuVF86gmEe-9tYVtpMatrg" name="SchedulableObject" specification="_ZamRkKgmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_ZuVF9KgmEe-9tYVtpMatrg" name="priority">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ZuVF9agmEe-9tYVtpMatrg" name="period">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ZuVF9qgmEe-9tYVtpMatrg" name="deadline">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ZuVF96gmEe-9tYVtpMatrg" name="phase">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ZuVF-KgmEe-9tYVtpMatrg" type="_ZakcZKgmEe-9tYVtpMatrg" direction="return"/>
                <language>java</language>
                <body>setDefaultParameters();&#xD;
		this.priority = priority;&#xD;
		this.period = period;&#xD;
		this.deadline = deadline;&#xD;
		this.phase = phase;&#xD;
		setNextReleaseTime(0); // initialize parameters&#xD;
		this.lastUpdateTime = BEFORE_START; // reset lastUpdate &#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ZuVs8KgmEe-9tYVtpMatrg" name="SchedulableObject" specification="_ZamRmKgmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_ZuVs8agmEe-9tYVtpMatrg" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ZuVs8qgmEe-9tYVtpMatrg" name="priority">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ZuVs86gmEe-9tYVtpMatrg" name="period">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ZuVs9KgmEe-9tYVtpMatrg" name="deadline">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ZuVs9agmEe-9tYVtpMatrg" name="phase">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ZuVs9qgmEe-9tYVtpMatrg" type="_ZakcZKgmEe-9tYVtpMatrg" direction="return"/>
                <language>java</language>
                <body>setDefaultParameters();&#xD;
		this.name = name;&#xD;
		this.priority = priority;&#xD;
		this.period = period;&#xD;
		this.deadline = deadline;&#xD;
		this.phase = phase;&#xD;
		setNextReleaseTime(0); // initialize parameters&#xD;
		this.lastUpdateTime = BEFORE_START; // reset lastUpdate &#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ZuVs96gmEe-9tYVtpMatrg" name="setDefaultParameters" specification="_Zam4p6gmEe-9tYVtpMatrg">
                <language>java</language>
                <body>this.name = UNKNOWN;&#xD;
		this.priority = DEFAULT;&#xD;
		this.period = DEFAULT_PERIOD;&#xD;
		this.deadline = DEFAULT_DEADLINE;&#xD;
		this.phase = DEFAULT;&#xD;
		this.startTime = BEFORE_START;&#xD;
		this.endTime = BEFORE_START;&#xD;
		this.predecessor = null; &#xD;
		this.endTimes = new PriorityQueue&lt;Integer>(); &#xD;
		this.subObjects = new LinkedList&lt;SchedulableObject>();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ZuVs-KgmEe-9tYVtpMatrg" name="getAllEndTimes" specification="_Zam4qKgmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_ZuVs-agmEe-9tYVtpMatrg" type="_ZaVL0KgmEe-9tYVtpMatrg" direction="return"/>
                <language>java</language>
                <body>return endTimes;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ZuVs-qgmEe-9tYVtpMatrg" name="addToEndTimes" specification="_ZanfsKgmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_ZuVs-6gmEe-9tYVtpMatrg" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>/* Add the endTime to the endTimes Q&#xD;
		 * so that we can track predecessor endTimes&#xD;
		 * and make sure successors don't start before &#xD;
		 * predecessors&#xD;
		 */&#xD;
		endTimes.add(time);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ZuVs_KgmEe-9tYVtpMatrg" name="peekEndTimes" specification="_ZanfsqgmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_ZuVs_agmEe-9tYVtpMatrg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>return endTimes.peek();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ZuVs_qgmEe-9tYVtpMatrg" name="pollEndTimes" specification="_ZanftKgmEe-9tYVtpMatrg">
                <language>java</language>
                <body>endTimes.poll();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ZuVs_6gmEe-9tYVtpMatrg" name="addSubObject" specification="_Zq-29KgmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_ZuVtAKgmEe-9tYVtpMatrg" name="obj" type="_ZakcZKgmEe-9tYVtpMatrg"/>
                <language>java</language>
                <body>subObjects.add(obj);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ZuVtAagmEe-9tYVtpMatrg" name="getName" specification="_ZanftagmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_ZuVtAqgmEe-9tYVtpMatrg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return name;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ZuVtA6gmEe-9tYVtpMatrg" name="setName" specification="_ZaoGwKgmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_ZuVtBKgmEe-9tYVtpMatrg" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>this.name = name;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ZuVtBagmEe-9tYVtpMatrg" name="getReleaseTime" specification="_ZaoGwqgmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_ZuVtBqgmEe-9tYVtpMatrg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>return releaseTime;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ZuVtB6gmEe-9tYVtpMatrg" name="getPhase" specification="_ZaoGxKgmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_ZuVtCKgmEe-9tYVtpMatrg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>return phase;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ZuVtCagmEe-9tYVtpMatrg" name="getStartTime" specification="_ZaoGxqgmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_ZuVtCqgmEe-9tYVtpMatrg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>return startTime;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ZuVtC6gmEe-9tYVtpMatrg" name="setEndTime" specification="_ZaoGyKgmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_ZuVtDKgmEe-9tYVtpMatrg" name="endTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>this.endTime = endTime;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ZuVtDagmEe-9tYVtpMatrg" name="setStartTime" specification="_Zaot0KgmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_ZuVtDqgmEe-9tYVtpMatrg" name="startTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>this.startTime = startTime;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ZuVtD6gmEe-9tYVtpMatrg" name="setReleaseTime" specification="_Zaot0qgmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_ZuVtEKgmEe-9tYVtpMatrg" name="releaseTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>this.releaseTime = releaseTime;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ZuVtEagmEe-9tYVtpMatrg" name="setPeriod" specification="_Zaot1KgmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_ZuVtEqgmEe-9tYVtpMatrg" name="period">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>this.period = period;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ZuVtE6gmEe-9tYVtpMatrg" name="setPhase" specification="_Zaot1qgmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_ZuVtFKgmEe-9tYVtpMatrg" name="phase">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>this.phase = phase;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ZuWUAKgmEe-9tYVtpMatrg" name="setNextReleaseTime" specification="_Zaot2KgmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_ZuWUAagmEe-9tYVtpMatrg" name="currentTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>if (currentTime >= lastUpdateTime) {&#xD;
			// released every (j*period)+phase, for all j >=0&#xD;
			Integer j = 0;&#xD;
			if (period > 0) {&#xD;
				j = (int) Math.ceil((double)currentTime/(double)period); // gives floor&#xD;
			} &#xD;
			Integer nextRelease = (j*period)+phase ;&#xD;
			releaseTime = nextRelease;&#xD;
			lastUpdateTime = currentTime;&#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ZuWUAqgmEe-9tYVtpMatrg" name="maxPhaseComparison" specification="_Zq-29qgmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_ZuWUA6gmEe-9tYVtpMatrg" name="obj2" type="_ZakcZKgmEe-9tYVtpMatrg"/>
                <ownedParameter xmi:id="_ZuWUBKgmEe-9tYVtpMatrg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>// for ascending order of priority&#xD;
		return compareDescendingOrder(this.getDeadline(), obj2.getDeadline());&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ZuWUBagmEe-9tYVtpMatrg" name="maxPhaseComparison" specification="_Zq-2-agmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_ZuWUBqgmEe-9tYVtpMatrg" name="obj1" type="_ZakcZKgmEe-9tYVtpMatrg"/>
                <ownedParameter xmi:id="_ZuWUB6gmEe-9tYVtpMatrg" name="obj2" type="_ZakcZKgmEe-9tYVtpMatrg"/>
                <ownedParameter xmi:id="_ZuWUCKgmEe-9tYVtpMatrg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>return obj1.maxPhaseComparison(obj2);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ZuWUCagmEe-9tYVtpMatrg" name="deadlineComparison" specification="_Zq_eAKgmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_ZuWUCqgmEe-9tYVtpMatrg" name="obj2" type="_ZakcZKgmEe-9tYVtpMatrg"/>
                <ownedParameter xmi:id="_ZuWUC6gmEe-9tYVtpMatrg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>// for ascending order of priority&#xD;
		return compareAscendingOrder(this.getDeadline(), obj2.getDeadline());&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ZuWUDKgmEe-9tYVtpMatrg" name="deadlineComparison" specification="_Zq_eA6gmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_ZuWUDagmEe-9tYVtpMatrg" name="obj1" type="_ZakcZKgmEe-9tYVtpMatrg"/>
                <ownedParameter xmi:id="_ZuWUDqgmEe-9tYVtpMatrg" name="obj2" type="_ZakcZKgmEe-9tYVtpMatrg"/>
                <ownedParameter xmi:id="_ZuWUD6gmEe-9tYVtpMatrg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>return obj1.deadlineComparison(obj2);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ZuWUEKgmEe-9tYVtpMatrg" name="periodComparison" specification="_Zq_eB6gmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_ZuWUEagmEe-9tYVtpMatrg" name="obj2" type="_ZakcZKgmEe-9tYVtpMatrg"/>
                <ownedParameter xmi:id="_ZuWUEqgmEe-9tYVtpMatrg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>// for ascending order of priority&#xD;
		return compareAscendingOrder(this.getPeriod(), obj2.getPeriod());&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ZuWUE6gmEe-9tYVtpMatrg" name="periodComparison" specification="_Zq_eCqgmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_ZuWUFKgmEe-9tYVtpMatrg" name="obj1" type="_ZakcZKgmEe-9tYVtpMatrg"/>
                <ownedParameter xmi:id="_ZuWUFagmEe-9tYVtpMatrg" name="obj2" type="_ZakcZKgmEe-9tYVtpMatrg"/>
                <ownedParameter xmi:id="_ZuWUFqgmEe-9tYVtpMatrg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>return obj1.periodComparison(obj2);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ZuWUF6gmEe-9tYVtpMatrg" name="priorityComparison" specification="_Zq_eDqgmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_ZuWUGKgmEe-9tYVtpMatrg" name="obj2" type="_ZakcZKgmEe-9tYVtpMatrg"/>
                <ownedParameter xmi:id="_ZuWUGagmEe-9tYVtpMatrg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>// for ascending order of priority&#xD;
		return compareAscendingOrder(this.getPriority(), obj2.getPriority());&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ZuWUGqgmEe-9tYVtpMatrg" name="priorityComparison" specification="_ZrAFEKgmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_ZuWUG6gmEe-9tYVtpMatrg" name="obj1" type="_ZakcZKgmEe-9tYVtpMatrg"/>
                <ownedParameter xmi:id="_ZuWUHKgmEe-9tYVtpMatrg" name="obj2" type="_ZakcZKgmEe-9tYVtpMatrg"/>
                <ownedParameter xmi:id="_ZuWUHagmEe-9tYVtpMatrg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>return obj1.priorityComparison(obj2);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ZuWUHqgmEe-9tYVtpMatrg" name="releaseTimeComparison" specification="_ZrAFFKgmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_ZuWUH6gmEe-9tYVtpMatrg" name="obj2" type="_ZakcZKgmEe-9tYVtpMatrg"/>
                <ownedParameter xmi:id="_ZuWUIKgmEe-9tYVtpMatrg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>// for ascending order of release time&#xD;
		return compareAscendingOrder(this.getReleaseTime(), obj2.getReleaseTime());&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ZuWUIagmEe-9tYVtpMatrg" name="releaseTimeComparison" specification="_ZrAFF6gmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_ZuWUIqgmEe-9tYVtpMatrg" name="obj1" type="_ZakcZKgmEe-9tYVtpMatrg"/>
                <ownedParameter xmi:id="_ZuWUI6gmEe-9tYVtpMatrg" name="obj2" type="_ZakcZKgmEe-9tYVtpMatrg"/>
                <ownedParameter xmi:id="_ZuWUJKgmEe-9tYVtpMatrg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>return obj1.releaseTimeComparison(obj2); &#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ZuWUJagmEe-9tYVtpMatrg" name="LatestReleaseTimeComparison" specification="_ZrAFG6gmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_ZuWUJqgmEe-9tYVtpMatrg" name="obj2" type="_ZakcZKgmEe-9tYVtpMatrg"/>
                <ownedParameter xmi:id="_ZuWUJ6gmEe-9tYVtpMatrg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>// for ascending order of release time&#xD;
		return compareDescendingOrder(this.getReleaseTime(), obj2.getReleaseTime());&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ZuWUKKgmEe-9tYVtpMatrg" name="LatestReleaseTimeComparison" specification="_ZrAFHqgmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_ZuWUKagmEe-9tYVtpMatrg" name="obj1" type="_ZakcZKgmEe-9tYVtpMatrg"/>
                <ownedParameter xmi:id="_ZuWUKqgmEe-9tYVtpMatrg" name="obj2" type="_ZakcZKgmEe-9tYVtpMatrg"/>
                <ownedParameter xmi:id="_ZuWUK6gmEe-9tYVtpMatrg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>return obj1.releaseTimeComparison(obj2); &#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ZuW7EKgmEe-9tYVtpMatrg" name="compareAscendingOrder" specification="_ZaqjAKgmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_ZuW7EagmEe-9tYVtpMatrg" name="v1">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ZuW7EqgmEe-9tYVtpMatrg" name="v2">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ZuW7E6gmEe-9tYVtpMatrg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>if (v1 &lt; v2)&#xD;
			return -1; &#xD;
		else if (v1 > v2)&#xD;
			return 1; &#xD;
		return 0; // tied: values are the same &#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ZuW7FKgmEe-9tYVtpMatrg" name="compareDescendingOrder" specification="_ZaqjBKgmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_ZuW7FagmEe-9tYVtpMatrg" name="v1">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ZuW7FqgmEe-9tYVtpMatrg" name="v2">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ZuW7F6gmEe-9tYVtpMatrg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>if (v1 &lt; v2)&#xD;
			return 1; &#xD;
		else if (v1 > v2)&#xD;
			return -1; &#xD;
		return 0; // tied: values are the same &#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ZuW7GKgmEe-9tYVtpMatrg" name="print" specification="_ZarKEKgmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_ZuW7GagmEe-9tYVtpMatrg" name="headerMsg">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>System.out.printf(&quot;\n%s&quot;,headerMsg);&#xD;
		print();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ZuW7GqgmEe-9tYVtpMatrg" name="print" specification="_ZarKEqgmEe-9tYVtpMatrg">
                <language>java</language>
                <body>System.out.printf(&quot;\nName: %s\n&quot;,getName());&#xD;
		System.out.printf(&quot;\tPriority: %d\n&quot;,getPriority());&#xD;
		System.out.printf(&quot;\tPeriod: %d\n&quot;,getPeriod());&#xD;
		System.out.printf(&quot;\tDeadline: %d\n&quot;,getDeadline());&#xD;
		System.out.printf(&quot;\tPhase: %d\n&quot;, getPhase());&#xD;
		System.out.printf(&quot;\tReleaseTime: %d\n&quot;,getReleaseTime());&#xD;
		System.out.printf(&quot;\tStartTime: %d\n&quot;,getStartTime());&#xD;
		System.out.printf(&quot;\tEndTime: %d\n&quot;,getEndTime());&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_ZalqgKgmEe-9tYVtpMatrg" name="SchedulableObject" visibility="package" method="_ZuVF7agmEe-9tYVtpMatrg">
                <eAnnotations xmi:id="_ZalqgagmEe-9tYVtpMatrg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_ZalqgqgmEe-9tYVtpMatrg" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_Zalqg6gmEe-9tYVtpMatrg" type="_ZakcZKgmEe-9tYVtpMatrg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_ZamRkKgmEe-9tYVtpMatrg" name="SchedulableObject" visibility="package" method="_ZuVF86gmEe-9tYVtpMatrg">
                <eAnnotations xmi:id="_ZamRlagmEe-9tYVtpMatrg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_ZamRlqgmEe-9tYVtpMatrg" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_ZamRkagmEe-9tYVtpMatrg" name="priority">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ZamRkqgmEe-9tYVtpMatrg" name="period">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ZamRk6gmEe-9tYVtpMatrg" name="deadline">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ZamRlKgmEe-9tYVtpMatrg" name="phase">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ZamRl6gmEe-9tYVtpMatrg" type="_ZakcZKgmEe-9tYVtpMatrg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_ZamRmKgmEe-9tYVtpMatrg" name="SchedulableObject" visibility="package" method="_ZuVs8KgmEe-9tYVtpMatrg">
                <eAnnotations xmi:id="_Zam4pKgmEe-9tYVtpMatrg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_Zam4pagmEe-9tYVtpMatrg" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_ZamRmagmEe-9tYVtpMatrg" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Zam4oKgmEe-9tYVtpMatrg" name="priority">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Zam4oagmEe-9tYVtpMatrg" name="period">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Zam4oqgmEe-9tYVtpMatrg" name="deadline">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Zam4o6gmEe-9tYVtpMatrg" name="phase">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Zam4pqgmEe-9tYVtpMatrg" type="_ZakcZKgmEe-9tYVtpMatrg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_Zam4p6gmEe-9tYVtpMatrg" name="setDefaultParameters" visibility="private" method="_ZuVs96gmEe-9tYVtpMatrg"/>
              <ownedOperation xmi:id="_Zam4qKgmEe-9tYVtpMatrg" name="getAllEndTimes" method="_ZuVs-KgmEe-9tYVtpMatrg">
                <ownedComment xmi:id="_Zus5U6gmEe-9tYVtpMatrg">
                  <body>@return the endTimes queue</body>
                </ownedComment>
                <ownedParameter xmi:id="_Zq-286gmEe-9tYVtpMatrg" type="_ZaVL0KgmEe-9tYVtpMatrg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_ZanfsKgmEe-9tYVtpMatrg" name="addToEndTimes" method="_ZuVs-qgmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_ZanfsagmEe-9tYVtpMatrg" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_ZanfsqgmEe-9tYVtpMatrg" name="peekEndTimes" method="_ZuVs_KgmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_Zanfs6gmEe-9tYVtpMatrg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_ZanftKgmEe-9tYVtpMatrg" name="pollEndTimes" method="_ZuVs_qgmEe-9tYVtpMatrg"/>
              <ownedOperation xmi:id="_ZanftagmEe-9tYVtpMatrg" name="getName" method="_ZuVtAagmEe-9tYVtpMatrg">
                <ownedComment xmi:id="_Zus5VKgmEe-9tYVtpMatrg">
                  <body>@return the name</body>
                </ownedComment>
                <ownedParameter xmi:id="_ZanftqgmEe-9tYVtpMatrg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_ZaoGwKgmEe-9tYVtpMatrg" name="setName" method="_ZuVtA6gmEe-9tYVtpMatrg">
                <ownedComment xmi:id="_Zus5VagmEe-9tYVtpMatrg">
                  <body>@param name the name to set</body>
                </ownedComment>
                <ownedParameter xmi:id="_ZaoGwagmEe-9tYVtpMatrg" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_ZaoGwqgmEe-9tYVtpMatrg" name="getReleaseTime" method="_ZuVtBagmEe-9tYVtpMatrg">
                <ownedComment xmi:id="_Zus5VqgmEe-9tYVtpMatrg">
                  <body>@return the releaseTime</body>
                </ownedComment>
                <ownedParameter xmi:id="_ZaoGw6gmEe-9tYVtpMatrg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_ZaoGxKgmEe-9tYVtpMatrg" name="getPhase" method="_ZuVtB6gmEe-9tYVtpMatrg">
                <ownedComment xmi:id="_Zus5V6gmEe-9tYVtpMatrg">
                  <body>@return the phase</body>
                </ownedComment>
                <ownedParameter xmi:id="_ZaoGxagmEe-9tYVtpMatrg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_ZaoGxqgmEe-9tYVtpMatrg" name="getStartTime" method="_ZuVtCagmEe-9tYVtpMatrg">
                <ownedComment xmi:id="_Zus5WKgmEe-9tYVtpMatrg">
                  <body>@return the startTime</body>
                </ownedComment>
                <ownedParameter xmi:id="_ZaoGx6gmEe-9tYVtpMatrg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_ZaoGyKgmEe-9tYVtpMatrg" name="setEndTime" method="_ZuVtC6gmEe-9tYVtpMatrg">
                <ownedComment xmi:id="_Zus5WagmEe-9tYVtpMatrg">
                  <body>@param endTime the endTime to set</body>
                </ownedComment>
                <ownedParameter xmi:id="_ZaoGyagmEe-9tYVtpMatrg" name="endTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_Zaot0KgmEe-9tYVtpMatrg" name="setStartTime" method="_ZuVtDagmEe-9tYVtpMatrg">
                <ownedComment xmi:id="_Zus5WqgmEe-9tYVtpMatrg">
                  <body>@param startTime the startTime to set</body>
                </ownedComment>
                <ownedParameter xmi:id="_Zaot0agmEe-9tYVtpMatrg" name="startTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_Zaot0qgmEe-9tYVtpMatrg" name="setReleaseTime" method="_ZuVtD6gmEe-9tYVtpMatrg">
                <ownedComment xmi:id="_Zus5W6gmEe-9tYVtpMatrg">
                  <body>@param releaseTime the releaseTime to set</body>
                </ownedComment>
                <ownedParameter xmi:id="_Zaot06gmEe-9tYVtpMatrg" name="releaseTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_Zaot1KgmEe-9tYVtpMatrg" name="setPeriod" method="_ZuVtEagmEe-9tYVtpMatrg">
                <ownedComment xmi:id="_Zus5XKgmEe-9tYVtpMatrg">
                  <body>@param period the period to set</body>
                </ownedComment>
                <ownedParameter xmi:id="_Zaot1agmEe-9tYVtpMatrg" name="period">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_Zaot1qgmEe-9tYVtpMatrg" name="setPhase" method="_ZuVtE6gmEe-9tYVtpMatrg">
                <ownedComment xmi:id="_Zus5XagmEe-9tYVtpMatrg">
                  <body>@param phase the phase to set</body>
                </ownedComment>
                <ownedParameter xmi:id="_Zaot16gmEe-9tYVtpMatrg" name="phase">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_Zaot2KgmEe-9tYVtpMatrg" name="setNextReleaseTime" method="_ZuWUAKgmEe-9tYVtpMatrg">
                <ownedComment xmi:id="_Zus5XqgmEe-9tYVtpMatrg">
                  <body>@param releaseTime the releaseTime to set</body>
                </ownedComment>
                <ownedParameter xmi:id="_ZapU4KgmEe-9tYVtpMatrg" name="currentTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_ZaqjAKgmEe-9tYVtpMatrg" name="compareAscendingOrder" method="_ZuW7EKgmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_ZaqjAagmEe-9tYVtpMatrg" name="v1">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ZaqjAqgmEe-9tYVtpMatrg" name="v2">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ZaqjA6gmEe-9tYVtpMatrg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_ZaqjBKgmEe-9tYVtpMatrg" name="compareDescendingOrder" method="_ZuW7FKgmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_ZaqjBagmEe-9tYVtpMatrg" name="v1">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ZaqjBqgmEe-9tYVtpMatrg" name="v2">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ZaqjB6gmEe-9tYVtpMatrg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_ZarKEKgmEe-9tYVtpMatrg" name="print" method="_ZuW7GKgmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_ZarKEagmEe-9tYVtpMatrg" name="headerMsg">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_ZarKEqgmEe-9tYVtpMatrg" name="print" method="_ZuW7GqgmEe-9tYVtpMatrg"/>
              <ownedOperation xmi:id="_Zq-P4agmEe-9tYVtpMatrg" name="SchedulableObject" visibility="package" method="_ZuVF76gmEe-9tYVtpMatrg">
                <eAnnotations xmi:id="_Zq-28KgmEe-9tYVtpMatrg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_Zq-28agmEe-9tYVtpMatrg" key="create"/>
                </eAnnotations>
                <ownedComment xmi:id="_Zus5UqgmEe-9tYVtpMatrg">
                  <body>Constructor that creates a copy of schedulable &#xD;
	 * parameters of the input obj, but setting its&#xD;
	 * lastUpdateTime to input time.&#xD;
	 * &#xD;
	 * @param obj&#xD;
	 * @param time</body>
                </ownedComment>
                <ownedParameter xmi:id="_Zq-P4qgmEe-9tYVtpMatrg" name="obj" type="_ZakcZKgmEe-9tYVtpMatrg"/>
                <ownedParameter xmi:id="_Zq-P46gmEe-9tYVtpMatrg" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Zq-28qgmEe-9tYVtpMatrg" type="_ZakcZKgmEe-9tYVtpMatrg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_Zq-29KgmEe-9tYVtpMatrg" name="addSubObject" method="_ZuVs_6gmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_Zq-29agmEe-9tYVtpMatrg" name="obj" type="_ZakcZKgmEe-9tYVtpMatrg"/>
              </ownedOperation>
              <ownedOperation xmi:id="_Zq-29qgmEe-9tYVtpMatrg" name="maxPhaseComparison" method="_ZuWUAqgmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_Zq-296gmEe-9tYVtpMatrg" name="obj2" type="_ZakcZKgmEe-9tYVtpMatrg"/>
                <ownedParameter xmi:id="_Zq-2-KgmEe-9tYVtpMatrg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_Zq-2-agmEe-9tYVtpMatrg" name="maxPhaseComparison" method="_ZuWUBagmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_Zq-2-qgmEe-9tYVtpMatrg" name="obj1" type="_ZakcZKgmEe-9tYVtpMatrg"/>
                <ownedParameter xmi:id="_Zq-2-6gmEe-9tYVtpMatrg" name="obj2" type="_ZakcZKgmEe-9tYVtpMatrg"/>
                <ownedParameter xmi:id="_Zq-2_KgmEe-9tYVtpMatrg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_Zq_eAKgmEe-9tYVtpMatrg" name="deadlineComparison" method="_ZuWUCagmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_Zq_eAagmEe-9tYVtpMatrg" name="obj2" type="_ZakcZKgmEe-9tYVtpMatrg"/>
                <ownedParameter xmi:id="_Zq_eAqgmEe-9tYVtpMatrg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_Zq_eA6gmEe-9tYVtpMatrg" name="deadlineComparison" method="_ZuWUDKgmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_Zq_eBKgmEe-9tYVtpMatrg" name="obj1" type="_ZakcZKgmEe-9tYVtpMatrg"/>
                <ownedParameter xmi:id="_Zq_eBagmEe-9tYVtpMatrg" name="obj2" type="_ZakcZKgmEe-9tYVtpMatrg"/>
                <ownedParameter xmi:id="_Zq_eBqgmEe-9tYVtpMatrg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_Zq_eB6gmEe-9tYVtpMatrg" name="periodComparison" method="_ZuWUEKgmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_Zq_eCKgmEe-9tYVtpMatrg" name="obj2" type="_ZakcZKgmEe-9tYVtpMatrg"/>
                <ownedParameter xmi:id="_Zq_eCagmEe-9tYVtpMatrg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_Zq_eCqgmEe-9tYVtpMatrg" name="periodComparison" method="_ZuWUE6gmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_Zq_eC6gmEe-9tYVtpMatrg" name="obj1" type="_ZakcZKgmEe-9tYVtpMatrg"/>
                <ownedParameter xmi:id="_Zq_eDKgmEe-9tYVtpMatrg" name="obj2" type="_ZakcZKgmEe-9tYVtpMatrg"/>
                <ownedParameter xmi:id="_Zq_eDagmEe-9tYVtpMatrg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_Zq_eDqgmEe-9tYVtpMatrg" name="priorityComparison" method="_ZuWUF6gmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_Zq_eD6gmEe-9tYVtpMatrg" name="obj2" type="_ZakcZKgmEe-9tYVtpMatrg"/>
                <ownedParameter xmi:id="_Zq_eEKgmEe-9tYVtpMatrg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_ZrAFEKgmEe-9tYVtpMatrg" name="priorityComparison" method="_ZuWUGqgmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_ZrAFEagmEe-9tYVtpMatrg" name="obj1" type="_ZakcZKgmEe-9tYVtpMatrg"/>
                <ownedParameter xmi:id="_ZrAFEqgmEe-9tYVtpMatrg" name="obj2" type="_ZakcZKgmEe-9tYVtpMatrg"/>
                <ownedParameter xmi:id="_ZrAFE6gmEe-9tYVtpMatrg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_ZrAFFKgmEe-9tYVtpMatrg" name="releaseTimeComparison" method="_ZuWUHqgmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_ZrAFFagmEe-9tYVtpMatrg" name="obj2" type="_ZakcZKgmEe-9tYVtpMatrg"/>
                <ownedParameter xmi:id="_ZrAFFqgmEe-9tYVtpMatrg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_ZrAFF6gmEe-9tYVtpMatrg" name="releaseTimeComparison" method="_ZuWUIagmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_ZrAFGKgmEe-9tYVtpMatrg" name="obj1" type="_ZakcZKgmEe-9tYVtpMatrg"/>
                <ownedParameter xmi:id="_ZrAFGagmEe-9tYVtpMatrg" name="obj2" type="_ZakcZKgmEe-9tYVtpMatrg"/>
                <ownedParameter xmi:id="_ZrAFGqgmEe-9tYVtpMatrg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_ZrAFG6gmEe-9tYVtpMatrg" name="LatestReleaseTimeComparison" method="_ZuWUJagmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_ZrAFHKgmEe-9tYVtpMatrg" name="obj2" type="_ZakcZKgmEe-9tYVtpMatrg"/>
                <ownedParameter xmi:id="_ZrAFHagmEe-9tYVtpMatrg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_ZrAFHqgmEe-9tYVtpMatrg" name="LatestReleaseTimeComparison" method="_ZuWUKKgmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_ZrAFH6gmEe-9tYVtpMatrg" name="obj1" type="_ZakcZKgmEe-9tYVtpMatrg"/>
                <ownedParameter xmi:id="_ZrAFIKgmEe-9tYVtpMatrg" name="obj2" type="_ZakcZKgmEe-9tYVtpMatrg"/>
                <ownedParameter xmi:id="_ZrAFIagmEe-9tYVtpMatrg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_ZawCkKgmEe-9tYVtpMatrg" name="SchedulableObjectQueue">
              <generalization xmi:id="_ZaxQsKgmEe-9tYVtpMatrg" general="_ZaVL0KgmEe-9tYVtpMatrg"/>
              <ownedAttribute xmi:id="_ZtibsKgmEe-9tYVtpMatrg" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_ZtibsagmEe-9tYVtpMatrg" value="1L"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ZuW7G6gmEe-9tYVtpMatrg" name="SchedulableObjectQueue" specification="_ZsZMMKgmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_ZuW7HKgmEe-9tYVtpMatrg" name="comparitor" type="_ZqOB9qgmEe-9tYVtpMatrg"/>
                <ownedParameter xmi:id="_ZuW7HagmEe-9tYVtpMatrg" type="_ZawCkKgmEe-9tYVtpMatrg" direction="return"/>
                <language>java</language>
                <body>super(1, comparitor);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ZuXiIKgmEe-9tYVtpMatrg" name="SchedulableObjectQueue" specification="_ZsZzQagmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_ZuXiIagmEe-9tYVtpMatrg" name="comparitor" type="_ZqOB9qgmEe-9tYVtpMatrg"/>
                <ownedParameter xmi:id="_ZuXiIqgmEe-9tYVtpMatrg" name="schedulableObjects" type="_Zqqt4KgmEe-9tYVtpMatrg"/>
                <ownedParameter xmi:id="_ZuXiI6gmEe-9tYVtpMatrg" type="_ZawCkKgmEe-9tYVtpMatrg" direction="return"/>
                <language>java</language>
                <body>super(comparitor);&#xD;
		this.addAll(schedulableObjects);&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_ZsZMMKgmEe-9tYVtpMatrg" name="SchedulableObjectQueue" visibility="package" method="_ZuW7G6gmEe-9tYVtpMatrg">
                <eAnnotations xmi:id="_ZsZMMqgmEe-9tYVtpMatrg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_ZsZMM6gmEe-9tYVtpMatrg" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_ZsZMMagmEe-9tYVtpMatrg" name="comparitor" type="_ZqOB9qgmEe-9tYVtpMatrg"/>
                <ownedParameter xmi:id="_ZsZMNKgmEe-9tYVtpMatrg" type="_ZawCkKgmEe-9tYVtpMatrg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_ZsZzQagmEe-9tYVtpMatrg" name="SchedulableObjectQueue" visibility="package" method="_ZuXiIKgmEe-9tYVtpMatrg">
                <eAnnotations xmi:id="_ZsZzRKgmEe-9tYVtpMatrg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_ZsZzRagmEe-9tYVtpMatrg" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_ZsZzQqgmEe-9tYVtpMatrg" name="comparitor" type="_ZqOB9qgmEe-9tYVtpMatrg"/>
                <ownedParameter xmi:id="_ZsZzQ6gmEe-9tYVtpMatrg" name="schedulableObjects" type="_Zqqt4KgmEe-9tYVtpMatrg"/>
                <ownedParameter xmi:id="_ZsZzRqgmEe-9tYVtpMatrg" type="_ZawCkKgmEe-9tYVtpMatrg" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_Zax3wagmEe-9tYVtpMatrg" name="Schedule" isAbstract="true">
              <ownedComment xmi:id="_ZutgYKgmEe-9tYVtpMatrg">
                <body>Schedule builds a non-preemptive, priority schedule &#xD;
for the Partially Ordered Set (Poset) using numChannels. &#xD;
It ensures, precedence constraints are preserved, and &#xD;
reports deadline misses.&#xD;
&#xD;
@author sgoddard2&#xD;
 *</body>
              </ownedComment>
              <ownedAttribute xmi:id="_ZtibsqgmEe-9tYVtpMatrg" name="UNKNOWN" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_Ztibs6gmEe-9tYVtpMatrg" value="&quot;unknown&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_ZtibtKgmEe-9tYVtpMatrg" name="schedulable" visibility="protected">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_ZtibtqgmEe-9tYVtpMatrg" name="numChannels" visibility="protected">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_ZtjCwagmEe-9tYVtpMatrg" name="fakeTime" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_ZtjCwqgmEe-9tYVtpMatrg" value="0"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_ZtjCxKgmEe-9tYVtpMatrg" name="endScheduleTime" visibility="protected">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_ZtjCxqgmEe-9tYVtpMatrg" name="schedule" visibility="protected" type="_Za5MgKgmEe-9tYVtpMatrg" association="_ZvdHRqgmEe-9tYVtpMatrg"/>
              <ownedAttribute xmi:id="_ZtjCyKgmEe-9tYVtpMatrg" name="poset" visibility="protected" type="_ZZ4f4KgmEe-9tYVtpMatrg" association="_ZvduUagmEe-9tYVtpMatrg"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ZuXiJKgmEe-9tYVtpMatrg" name="Schedule" specification="_ZrChUKgmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_ZuXiJagmEe-9tYVtpMatrg" name="poset" type="_ZZ4f4KgmEe-9tYVtpMatrg"/>
                <ownedParameter xmi:id="_ZuXiJqgmEe-9tYVtpMatrg" name="numChannels">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ZuXiJ6gmEe-9tYVtpMatrg" type="_Zax3wagmEe-9tYVtpMatrg" direction="return"/>
                <language>java</language>
                <body>this.poset = poset;&#xD;
		this.numChannels = numChannels;&#xD;
		var maxPhase = poset.getMaxPhase();&#xD;
		endScheduleTime = poset.getHyperPeriod();&#xD;
		if (maxPhase > 0) {&#xD;
			/* need to schedule longer to cover start-up period */&#xD;
			endScheduleTime = maxPhase + 2*endScheduleTime ;&#xD;
		}&#xD;
		schedule = new ScheduleTable(numChannels+1,endScheduleTime);&#xD;
		schedulable = true;&#xD;
		buildSchedule();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ZuXiMqgmEe-9tYVtpMatrg" name="getSchedule" specification="_Zazs-qgmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_ZuXiM6gmEe-9tYVtpMatrg" type="_Za5MgKgmEe-9tYVtpMatrg" direction="return"/>
                <language>java</language>
                <body>return schedule;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ZuXiNKgmEe-9tYVtpMatrg" name="buildSchedule" specification="_Za0UAKgmEe-9tYVtpMatrg">
                <language>java</language>
                <body>var next = poset.getNextActivation();&#xD;
		while (next != null) {&#xD;
			/* Add next to the schedule if max of its release time &#xD;
			 * and end time is less than the endScheduleTime.&#xD;
			 * Otherwise, its releaseTime is >= endScheduleTime&#xD;
			 * or endTime >= currentTime, which means can't&#xD;
			 * schedule at this time.&#xD;
			 */&#xD;
			if (!addToSchedule(next)) {&#xD;
				schedulable = false;&#xD;
				reportNotSchedulable(next);&#xD;
				/* Record unschedulable element */&#xD;
				fakeSchedulingToTestRest(next);&#xD;
				next.setNextReleaseTime(next.getEndTime());&#xD;
				if (next.getReleaseTime() &lt; endScheduleTime) {&#xD;
					poset.addActivation(next);&#xD;
				}&#xD;
			} else {&#xD;
				/* update the next release time and add it back into&#xD;
				 * the priority queue&#xD;
				 */&#xD;
				next.setNextReleaseTime(next.getEndTime());&#xD;
				if (next.getReleaseTime() &lt; endScheduleTime) {&#xD;
					poset.addActivation(next);&#xD;
				}&#xD;
&#xD;
			}&#xD;
			next = poset.getNextActivation();&#xD;
		}&#xD;
		print();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ZuXiNagmEe-9tYVtpMatrg" name="toProgram" specification="_Za0UAagmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_ZuXiNqgmEe-9tYVtpMatrg" type="_ZaOeIKgmEe-9tYVtpMatrg" direction="return"/>
                <language>java</language>
                <body>var nodeNames = poset.getNodesNamesOrderedAlphabetically();&#xD;
		var numNodes = nodeNames.length;&#xD;
		var program = new ProgramSchedule(endScheduleTime,numNodes);&#xD;
		CodeFragment codeFragment = null;&#xD;
		var duration = 0; // default duration for SLEEP;&#xD;
		String name = null;&#xD;
		var startTime = 0;&#xD;
		var endTime = 0;&#xD;
		HashMap&lt;String, Integer> nodeIndexMap = new HashMap&lt;>();&#xD;
		&#xD;
		if (!schedulable) {&#xD;
			/* not Schedulable, so we will not create code */&#xD;
			return program; // return empty program&#xD;
		}&#xD;
		&#xD;
		/* build the nodeIndexMap by putting nodes in alphabetic&#xD;
		 * order and then hashing its name to its rank&#xD;
		 */&#xD;
		for (int i = 0; i &lt; numNodes; i++) {&#xD;
			nodeIndexMap.put(nodeNames[i], i);&#xD;
		}&#xD;
		&#xD;
		for (int channel = 0; channel &lt; numChannels; channel++) {&#xD;
			for (int time = 0; time &lt; endScheduleTime; time++) {&#xD;
				var entry = schedule.get(channel,time);&#xD;
				if (entry == null) {&#xD;
					/* no entry here, so instruction will be SLEEP instruction */&#xD;
					codeFragment = new CodeFragment();&#xD;
					startTime = time;&#xD;
					endTime = time;&#xD;
					name = &quot;Empty&quot;;&#xD;
				} else {&#xD;
					/* create the codeFragment for this activation entry */&#xD;
					codeFragment = new CodeFragment(entry.getDelta(),entry.getEdges(),&#xD;
							entry.getCoordinators(),channel);&#xD;
					startTime = entry.getStartTime();&#xD;
					endTime = entry.getEndTime();&#xD;
					name = entry.getName();&#xD;
					duration =  endTime - startTime + 1;&#xD;
					if (duration > codeFragment.size()) {&#xD;
						/* for combination fragments, we can sometimes generate&#xD;
						 * more efficient code than originally thought. So,&#xD;
						 * update schedule by replacing the entry with null&#xD;
						 * and update the activation with the the new end time.&#xD;
						 */&#xD;
						for (int k = 0; k &lt; (duration - codeFragment.size()); k++) {&#xD;
							schedule.set(channel,endTime-k,null);&#xD;
						}&#xD;
						endTime = codeFragment.size() + startTime - 1;&#xD;
						entry.setEndTime(endTime);&#xD;
						&#xD;
					}&#xD;
				}&#xD;
				duration =  endTime - startTime + 1;&#xD;
				/* duration can be &lt; fragment size  when two activations &#xD;
				 * were combined but they had different delta values. &#xD;
				 * The larger was used, but we should make sure duration isn't&#xD;
				 * > size, else we may overwrite something. Just report for now.&#xD;
				 */&#xD;
				if (duration > codeFragment.size()) {&#xD;
					System.err.printf(&quot;activation %s: duration = %d, codeSize = %d&quot;, &#xD;
							name,duration, codeFragment.size());&#xD;
				} else if (time != startTime ){&#xD;
					System.err.printf(&quot;activation %s: time = %d, startTime = %d&quot;, &#xD;
							name, time, startTime);&#xD;
&#xD;
				} else {&#xD;
					var instructions = codeFragment.instructions();&#xD;
					var coordinator = codeFragment.getCoordinator();&#xD;
&#xD;
					if (coordinator != null) {&#xD;
						/* coordinator is null the entry is sleep,&#xD;
						 * which happens when the schedule entry was null.&#xD;
						 * We skip this entry and then replace nulls in the&#xD;
						 * program with sleep instructions at the end&#xD;
						 */&#xD;
						for (int i = 0; i &lt; duration; i++) {&#xD;
							var instr = instructions.get(i);&#xD;
							/* enter the instruciton in the program */&#xD;
							var row = time+i;&#xD;
							var column = nodeIndexMap.get(coordinator);		&#xD;
							program.set(row,column,instr);&#xD;
&#xD;
							/* get the listeners from the instruction &#xD;
							 * and insert the wait() instructions into&#xD;
							 * the program for each listener&#xD;
							 * */&#xD;
							var dsl = new WarpDSL();&#xD;
							var instructionParametersArray = dsl.getInstructionParameters(instr); &#xD;
							for (InstructionParameters fragment: instructionParametersArray) {&#xD;
								String listener = fragment.getListener();&#xD;
								if(!listener.equals(UNKNOWN)) {&#xD;
									/* need to add a wait instruction for node listener&#xD;
									 * wait(#channel)&#xD;
									 * at time,listener location of program table&#xD;
									 */&#xD;
									program.set(time+i,nodeIndexMap.get(listener),codeFragment.wait(channel));&#xD;
								}&#xD;
							}&#xD;
						}&#xD;
					}&#xD;
					time += duration-1;&#xD;
				}&#xD;
&#xD;
			}&#xD;
		}&#xD;
		replaceNullWithSleep(program);&#xD;
		return program;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ZuXiN6gmEe-9tYVtpMatrg" name="replaceNullWithSleep" specification="_ZrChWKgmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_ZuXiOKgmEe-9tYVtpMatrg" name="program" type="_ZaOeIKgmEe-9tYVtpMatrg"/>
                <language>java</language>
                <body>var rows = program.getNumRows();&#xD;
		var columns = program.getNumColumns();&#xD;
&#xD;
		for (int i = 0; i &lt; rows; i++) {&#xD;
			for (int j = 0; j &lt; columns; j++) {&#xD;
				var entry = program.get(i,j);&#xD;
				if (entry == null) {&#xD;
					program.set(i, j, CodeFragment.sleep());&#xD;
				}&#xD;
			}&#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ZuXiOagmEe-9tYVtpMatrg" name="fakeSchedulingToTestRest" specification="_ZrChWqgmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_ZuXiOqgmEe-9tYVtpMatrg" name="next" type="_ZYoisKgmEe-9tYVtpMatrg"/>
                <language>java</language>
                <body>var pred = next.getPredecessor();&#xD;
		var startTime = fakeTime;&#xD;
		var channel = numChannels; // use last channel&#xD;
		if (pred != null) {&#xD;
			/* remove pred end time */&#xD;
			pred.pollEndTimes(); &#xD;
		} &#xD;
		next.setStartTime(next.getReleaseTime());&#xD;
		var duration = next.getExecutionDuration();&#xD;
		fakeTime = startTime + duration - 1;&#xD;
		if (fakeTime >= endScheduleTime) {&#xD;
			System.err.print(&quot;NOT SCHEDULABLE: CAN'T STORE ANY MORE FAKE ENTRIES&quot;);&#xD;
			print();&#xD;
		}&#xD;
		next.setEndTime(next.getReleaseTime()+next.getDeadline()-next.getPhase());&#xD;
		/* Add the endTime to the elements endTimes Q&#xD;
		 * so that we can track predecessor endTimes&#xD;
		 * and make sure successors don't start before &#xD;
		 * predecessors&#xD;
		 */&#xD;
		next.addToEndTimes(endScheduleTime); &#xD;
		/* Create a new entry, based on next, to be entered&#xD;
		 * into the scheduling tale&#xD;
		 */&#xD;
		var entry = new Activation(next, startTime);&#xD;
		for (int i = startTime; i &lt;= fakeTime; i++) {&#xD;
			/* Add this object to the schedule for the&#xD;
			 * from startTime to endTime.&#xD;
			 */&#xD;
			schedule.set(channel, i, entry);&#xD;
		}&#xD;
		fakeTime++;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ZuXiO6gmEe-9tYVtpMatrg" name="getChannelAndSetStartTime" specification="_ZrDIYKgmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_ZuXiPKgmEe-9tYVtpMatrg" name="schedulableObject" type="_ZYoisKgmEe-9tYVtpMatrg"/>
                <ownedParameter xmi:id="_ZuXiPagmEe-9tYVtpMatrg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var time = schedulableObject.getReleaseTime();&#xD;
		var channel = numChannels; // default is no channel available&#xD;
		var endTime = endScheduleTime; // duration of the schedule&#xD;
		schedulableObject.setStartTime(endTime);&#xD;
		schedulableObject.setEndTime(endTime);&#xD;
		/* Create a flag indicating it might be possible to combine&#xD;
		 * to partitions. This flag will be used to create a channel&#xD;
		 * affinity, in case scheduler wants to combine to partitions.&#xD;
		 */&#xD;
		var pred = schedulableObject.getPredecessor();&#xD;
		if (pred != null) {&#xD;
			/* peek at the head of the endTimes for pred */&#xD;
			var predEndTime = pred.peekEndTimes();&#xD;
			if (predEndTime == null) {&#xD;
				return numChannels; // return indicates no channel/time&#xD;
			} else if (predEndTime >= time) {&#xD;
				/* can't schedule here; need to look later */&#xD;
				time = predEndTime+1;&#xD;
			} &#xD;
		}&#xD;
		var scheduleLocation = findChannelAndTime(time,schedulableObject );&#xD;
		channel = scheduleLocation.getChannel();&#xD;
		time = scheduleLocation.getTime();&#xD;
&#xD;
		if (channel != numChannels &amp;&amp; time &lt; endScheduleTime) {&#xD;
			/* Found a channel with no conflicts.&#xD;
			 * Set the object's start time to the that&#xD;
			 * time.&#xD;
			 */&#xD;
			schedulableObject.setStartTime(time);&#xD;
&#xD;
		}&#xD;
		return channel;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ZuXiPqgmEe-9tYVtpMatrg" name="findChannelAndTime" specification="_ZrDIY6gmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_ZuXiP6gmEe-9tYVtpMatrg" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ZuXiQKgmEe-9tYVtpMatrg" name="schedulableObject" type="_ZYoisKgmEe-9tYVtpMatrg"/>
                <ownedParameter xmi:id="_ZuXiQagmEe-9tYVtpMatrg" type="_ZazF4KgmEe-9tYVtpMatrg" direction="return"/>
                <language>java</language>
                <body>var channel = numChannels; // default is no channel available &#xD;
		var duration = schedulableObject.getExecutionDuration();&#xD;
		&#xD;
		while (time &lt; endScheduleTime &amp;&amp; conflictsExist(schedulableObject, time, duration )) {&#xD;
			time ++; //+= duration+1;&#xD;
		}&#xD;
		if (time >= endScheduleTime) {&#xD;
			/* no conflict time available */&#xD;
			return new ScheduleLocation(channel, time);	&#xD;
		} &#xD;
		&#xD;
		/* can schedule at current value of time, so find the best channel.&#xD;
		 * Bias toward and empty channel at near lowest end of spectrum */&#xD;
		for (int i = numChannels-1; i >= 0 ; i--) {&#xD;
			/* Start at numChannels and work down to 0&#xD;
			 * checking for conflicts and finding an&#xD;
			 * empty slot at the same time. This will&#xD;
			 * result in the lowest possible channel&#xD;
			 * being used if their are no conflicts&#xD;
			 * with any channel entries.&#xD;
			 * &#xD;
			 * This version combines entries as soon as.&#xD;
			 * possible, without looking for other, low-channel&#xD;
			 * combinations.&#xD;
			 */&#xD;
			// var entry = schedule.get(i,time);&#xD;
			if (time > 0 &amp;&amp; schedulableObject.getReleaseTime() &lt; time) {&#xD;
				var priorEntry = schedule.get(i, time-1);&#xD;
				if (priorEntry != null) {&#xD;
					var combinedDuration = priorEntry.getCombinedExecutionDuration(schedulableObject);&#xD;
					if (priorEntry.canCombine(schedulableObject) &amp;&amp; &#xD;
							noOtherChannelConflicts(i,schedulableObject, time-1) &amp;&amp;&#xD;
							isAvailable(schedulableObject,i,priorEntry.getStartTime(),combinedDuration)) {&#xD;
						channel = i;&#xD;
						time = priorEntry.getStartTime();&#xD;
						break;&#xD;
					}&#xD;
				}&#xD;
			}&#xD;
			if (isAvailable(schedulableObject, i, time, duration)) {&#xD;
				channel = i;&#xD;
			}&#xD;
&#xD;
		}&#xD;
		/* no time and channel found in interval [time, time+duration]&#xD;
		 * so, advance time and check again&#xD;
		 */&#xD;
		if (channel == numChannels) {&#xD;
			return continueSearch(time,schedulableObject);&#xD;
		} else {&#xD;
			return new ScheduleLocation(channel, time);	&#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ZuYJMKgmEe-9tYVtpMatrg" name="continueSearch" specification="_ZrDIZ6gmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_ZuYJMagmEe-9tYVtpMatrg" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ZuYJMqgmEe-9tYVtpMatrg" name="activation" type="_ZYoisKgmEe-9tYVtpMatrg"/>
                <ownedParameter xmi:id="_ZuYJM6gmEe-9tYVtpMatrg" type="_ZazF4KgmEe-9tYVtpMatrg" direction="return"/>
                <language>java</language>
                <body>return findChannelAndTime(time+1,activation);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ZuYJNKgmEe-9tYVtpMatrg" name="noOtherChannelConflicts" specification="_ZrDIa6gmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_ZuYJNagmEe-9tYVtpMatrg" name="exceptedChannel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ZuYJNqgmEe-9tYVtpMatrg" name="schedulableObject" type="_ZYoisKgmEe-9tYVtpMatrg"/>
                <ownedParameter xmi:id="_ZuYJN6gmEe-9tYVtpMatrg" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ZuYJOKgmEe-9tYVtpMatrg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>var result = true;&#xD;
&#xD;
		if (time >= endScheduleTime) {&#xD;
			/* not enough time left in the schedule,&#xD;
			 * so return false &#xD;
			 */&#xD;
			return false;&#xD;
		}&#xD;
		for (Integer channel = 0; channel &lt; numChannels ; channel++) {&#xD;
			var entry = schedule.get(channel,time);&#xD;
&#xD;
			if (entry != null &amp;&amp; schedulableObject != null &amp;&amp; channel != exceptedChannel) {&#xD;
				if (entry.conflictExists(schedulableObject)) {&#xD;
					result = false;&#xD;
					return result;&#xD;
				}&#xD;
			} &#xD;
		}&#xD;
		return result;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ZuYJOagmEe-9tYVtpMatrg" name="conflictsExist" specification="_ZrDvcagmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_ZuYJOqgmEe-9tYVtpMatrg" name="obj" type="_ZYoisKgmEe-9tYVtpMatrg"/>
                <ownedParameter xmi:id="_ZuYJO6gmEe-9tYVtpMatrg" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ZuYJPKgmEe-9tYVtpMatrg" name="duration">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ZuYJPagmEe-9tYVtpMatrg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>var result = false;&#xD;
&#xD;
		if (time+duration >= endScheduleTime) {&#xD;
			/* not enough time left in the schedule,&#xD;
			 * so return false &#xD;
			 */&#xD;
			return false;&#xD;
		}&#xD;
		if (duration &lt;= 0) {&#xD;
			result  = true;&#xD;
		} else {&#xD;
			for (Integer i = time; i &lt; time+duration; i++ ) {&#xD;
				for (Integer channel = 0; channel &lt; numChannels ; channel++) {&#xD;
					var entry = schedule.get(channel,i);&#xD;
					if (entry != null &amp;&amp; obj != null) {&#xD;
						if (entry.conflictExists(obj)) {&#xD;
							result = true;&#xD;
							return result;&#xD;
						}&#xD;
					} &#xD;
				}&#xD;
			}	&#xD;
		}&#xD;
		return result;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ZuYJPqgmEe-9tYVtpMatrg" name="freeOfCoordinatorConflicts" specification="_ZrDvdqgmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_ZuYJP6gmEe-9tYVtpMatrg" name="obj" type="_ZYoisKgmEe-9tYVtpMatrg"/>
                <ownedParameter xmi:id="_ZuYJQKgmEe-9tYVtpMatrg" name="requestedChannel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ZuYJQagmEe-9tYVtpMatrg" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ZuYJQqgmEe-9tYVtpMatrg" name="duration">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ZuYJQ6gmEe-9tYVtpMatrg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>var result = true;&#xD;
&#xD;
		if (time+(duration-1) >= endScheduleTime) {&#xD;
			/* not enough time left in the schedule,&#xD;
			 * so return false &#xD;
			 */&#xD;
			return false;&#xD;
		}&#xD;
		if (duration &lt;= 0) {&#xD;
			result  = false;&#xD;
		} else {&#xD;
			for (Integer i = time; i &lt; time+duration; i++ ) {&#xD;
				for (Integer channel = 0; channel &lt; numChannels ; channel++) {&#xD;
					var entry = schedule.get(channel,time);&#xD;
					if (entry != null &amp;&amp; obj != null) {&#xD;
						if (entry.canCombine(obj) &amp;&amp; channel != requestedChannel) {&#xD;
							result = false; // same coordinator is scheduled&#xD;
							return result;&#xD;
						}&#xD;
					} &#xD;
				}&#xD;
			}	&#xD;
		}&#xD;
		return result;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ZuYJRKgmEe-9tYVtpMatrg" name="isAvailable" specification="_ZrDvfKgmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_ZuYJRagmEe-9tYVtpMatrg" name="a1" type="_ZYoisKgmEe-9tYVtpMatrg"/>
                <ownedParameter xmi:id="_ZuYJRqgmEe-9tYVtpMatrg" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ZuYJR6gmEe-9tYVtpMatrg" name="start">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ZuYJSKgmEe-9tYVtpMatrg" name="duration">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ZuYJSagmEe-9tYVtpMatrg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>var available = true;&#xD;
		&#xD;
		if (conflictsExist(a1,start,duration)) {&#xD;
			return false;&#xD;
		}&#xD;
		for (Integer j = start; j &lt; start+duration; j++ ) {&#xD;
			var currentEntry = schedule.get(channel,j);&#xD;
			if (currentEntry != null) {&#xD;
				if (currentEntry.canCombine(a1)) {&#xD;
					/* no conflict with this entry, and can&#xD;
					 * combine so check for combined entry time&#xD;
					 *  to see if we can combine activations&#xD;
					 */&#xD;
					var combinedDuration = currentEntry.getCombinedExecutionDuration(a1);&#xD;
					var combinedEntry = new CombinedActivation(currentEntry,a1);&#xD;
					var searchTime = currentEntry.getEndTime()+1;&#xD;
					var searchLength = combinedDuration - (duration-(j-start));&#xD;
					return isAvailable(combinedEntry, channel, searchTime, searchLength);&#xD;
				} else {&#xD;
					available = false;&#xD;
					break;&#xD;
				}&#xD;
			}&#xD;
		}&#xD;
		if (available) {&#xD;
			available = freeOfCoordinatorConflicts(a1, channel, start, duration);&#xD;
		}&#xD;
		return available;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ZuYJSqgmEe-9tYVtpMatrg" name="isAvailable" specification="_ZrEWgKgmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_ZuYJS6gmEe-9tYVtpMatrg" name="a1" type="_ZYoisKgmEe-9tYVtpMatrg"/>
                <ownedParameter xmi:id="_ZuYJTKgmEe-9tYVtpMatrg" name="start">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ZuYJTagmEe-9tYVtpMatrg" name="duration">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ZuYJTqgmEe-9tYVtpMatrg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>var available = false;&#xD;
		&#xD;
		for (Integer channel = 0; channel &lt; numChannels; channel++) {&#xD;
			if (isAvailable(a1,channel,start,duration)) {&#xD;
			available = true;&#xD;
			break;&#xD;
			}&#xD;
		}&#xD;
		return available;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ZuYJT6gmEe-9tYVtpMatrg" name="timeRemaining" specification="_Za1iIKgmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_ZuYJUKgmEe-9tYVtpMatrg" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ZuYJUagmEe-9tYVtpMatrg" name="start">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ZuYJUqgmEe-9tYVtpMatrg" name="duration">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ZuYJU6gmEe-9tYVtpMatrg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var result = duration;&#xD;
&#xD;
		var row = schedule.get(channel);&#xD;
		for (Integer i = start; i &lt; start+duration; i++, result-- ) {&#xD;
			if (row.get(i) != null) {&#xD;
				break;&#xD;
			}&#xD;
		}&#xD;
		return result;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ZuYJVKgmEe-9tYVtpMatrg" name="canCombineEntriesInPlace" specification="_ZrEWhagmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_ZuYJVagmEe-9tYVtpMatrg" name="a1" type="_ZYoisKgmEe-9tYVtpMatrg"/>
                <ownedParameter xmi:id="_ZuYJVqgmEe-9tYVtpMatrg" name="a2" type="_ZYoisKgmEe-9tYVtpMatrg"/>
                <ownedParameter xmi:id="_ZuYJV6gmEe-9tYVtpMatrg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>var result = false;&#xD;
		if (a1 == null || a2 == null) {&#xD;
			return false;&#xD;
		}&#xD;
		var minStartTime = Math.min(a1.getStartTime(), a2.getStartTime()); &#xD;
		var maxEndTime = Math.max(a1.getEndTime(), a2.getEndTime()); &#xD;
		&#xD;
		if (a2.canCombine(a1)) {&#xD;
			 var combinedDuration = a2.getCombinedExecutionDuration(a1);&#xD;
			 var newEndTime = minStartTime + combinedDuration - 1;&#xD;
			 if (newEndTime &lt;= maxEndTime) {&#xD;
				result = true;&#xD;
			 }&#xD;
		}&#xD;
		return result;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ZuYJWKgmEe-9tYVtpMatrg" name="combinedEntriesInPlace" specification="_ZrEWiagmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_ZuYJWagmEe-9tYVtpMatrg" name="a1" type="_ZYoisKgmEe-9tYVtpMatrg"/>
                <ownedParameter xmi:id="_ZuYJWqgmEe-9tYVtpMatrg" name="a2" type="_ZYoisKgmEe-9tYVtpMatrg"/>
                <ownedParameter xmi:id="_ZuYJW6gmEe-9tYVtpMatrg" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ZuYJXKgmEe-9tYVtpMatrg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>var result = false;&#xD;
		if (canCombineEntriesInPlace(a1,a2)) {&#xD;
			var entry = new CombinedActivation(a1, a2);&#xD;
			var startTime = entry.getStartTime();&#xD;
			var endTime = entry.getEndTime();&#xD;
			for (int i = startTime; i &lt;= endTime; i++) {&#xD;
				/* Add this object to the schedule for the&#xD;
				 * from startTime to endTime.&#xD;
				 */&#xD;
				schedule.set(channel, i, entry);&#xD;
			}&#xD;
			result = true;&#xD;
		}&#xD;
		return result;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ZuYwQKgmEe-9tYVtpMatrg" name="addToSchedule" specification="_ZrEWjqgmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_ZuYwQagmEe-9tYVtpMatrg" name="next" type="_ZYoisKgmEe-9tYVtpMatrg"/>
                <ownedParameter xmi:id="_ZuYwQqgmEe-9tYVtpMatrg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>var channel = getChannelAndSetStartTime(next);&#xD;
		if (channel == numChannels) {&#xD;
			return false;&#xD;
		}&#xD;
		/* found a time and channel  that are valid */&#xD;
		Activation currentEntry = null;	&#xD;
		var combineTime = endScheduleTime;&#xD;
		var startTime = next.getStartTime(); // set by getChannel()&#xD;
		var duration = next.getExecutionDuration();	&#xD;
		var endTime = startTime + duration - 1;&#xD;
		/* Check the schedule to see if we need to &#xD;
		 * combine next with a higher priority entry &#xD;
		 * in the schedule during its execution&#xD;
		 */&#xD;
		for (int i = startTime; i &lt; startTime + duration; i++) {&#xD;
			currentEntry = schedule.get(channel,i);&#xD;
			if (currentEntry != null &amp;&amp; next.canCombine(currentEntry)) {&#xD;
				/* found an entry to combine, record the time,&#xD;
				 * update the combined duration and new&#xD;
				 * endTime, then exit the loop&#xD;
				 */&#xD;
				/* need to check if combined time is available or&#xD;
				 * if we have to combine yet another entry &#xD;
				 */&#xD;
				 var endCurrentEntry = currentEntry.getEndTime();&#xD;
				 var combinedDuration = next.getCombinedExecutionDuration(currentEntry);&#xD;
				 var newEndTime = startTime + combinedDuration - 1;&#xD;
				 /* need to check to make sure there are no conflicts on other &#xD;
				  * channels for this new interval&#xD;
				  */&#xD;
				 var available = isAvailable(next, channel, startTime, combinedDuration);&#xD;
				 if (available) {	 &#xD;
					 var additionalTimeNeeded = newEndTime - endCurrentEntry;&#xD;
					 if (additionalTimeNeeded > 0) {&#xD;
						 /* see if we can combine the two existing adjacent entries&#xD;
						  * in place. If so, then try to recursively schedule next&#xD;
						  */&#xD;
						 var additionalCombine = schedule.get(channel,endCurrentEntry+1);&#xD;
						 if (additionalCombine != null) {&#xD;
							 if (!combinedEntriesInPlace(currentEntry,additionalCombine,channel)) {&#xD;
								 return false;&#xD;
							 }&#xD;
							 addToSchedule(next);&#xD;
							 return true;&#xD;
						 }&#xD;
					 }&#xD;
					 combineTime = i;&#xD;
					 duration = next.getCombinedExecutionDuration(currentEntry);&#xD;
					 endTime = startTime + duration - 1;&#xD;
					 break;&#xD;
				 }&#xD;
			}&#xD;
		}&#xD;
		next.setEndTime(endTime);&#xD;
		var responseTime = endTime - next.getReleaseTime();&#xD;
		if (responseTime > next.getDeadline()) {&#xD;
			return false; // unable to schedule this entry&#xD;
		}&#xD;
		/* Add the endTime to the elements endTimes Q&#xD;
		 * so that we can track predecessor endTimes&#xD;
		 * and make sure successors don't start before &#xD;
		 * predecessors&#xD;
		 */&#xD;
		next.addToEndTimes(endTime); &#xD;
		/* remove predecessor end time that matches this start time */&#xD;
		var pred = next.getPredecessor();&#xD;
		if (pred != null) {&#xD;
			pred.pollEndTimes(); &#xD;
		}&#xD;
		/* Create a new entry, based on next, to be entered&#xD;
		 * into the scheduling tale&#xD;
		 */&#xD;
		var entry = new Activation(next, startTime);&#xD;
		if (combineTime &lt; endScheduleTime) {&#xD;
			/* change entry to point to combinedActivation&#xD;
			 * and set startTime to the beginning of the &#xD;
			 * combined entries */&#xD;
			var combinedActivation = new CombinedActivation(currentEntry, entry);&#xD;
			entry = combinedActivation;&#xD;
			startTime = entry.getStartTime();&#xD;
			duration = entry.getExecutionDuration();&#xD;
			endTime = startTime + duration - 1;&#xD;
			entry.setEndTime(endTime);&#xD;
			next.setEndTime(endTime);&#xD;
		}&#xD;
		for (int i = startTime; i &lt;= endTime; i++) {&#xD;
			/* Add this object to the schedule for the&#xD;
			 * from startTime to endTime.&#xD;
			 */&#xD;
			schedule.set(channel, i, entry);&#xD;
		}&#xD;
		return true;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ZuYwQ6gmEe-9tYVtpMatrg" name="reportNotSchedulable" specification="_ZrE9kKgmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_ZuYwRKgmEe-9tYVtpMatrg" name="object" type="_ZYoisKgmEe-9tYVtpMatrg"/>
                <language>java</language>
                <body>object.print(&quot;This entry is not Schedulable:&quot;);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ZuYwRagmEe-9tYVtpMatrg" name="printVerbose" specification="_Za2JMKgmEe-9tYVtpMatrg">
                <language>java</language>
                <body>System.out.println(&quot;\nSchedule:&quot;);&#xD;
		var endSchedule = schedule.get(0).size();&#xD;
		for (int i = 0; i &lt; numChannels; i++) {&#xD;
			System.out.printf(&quot;\nChannel: %d&quot;,i);&#xD;
			var name = UNKNOWN;&#xD;
			for (int j = 0; j &lt; endSchedule; j++) {&#xD;
				var entry = schedule.get(i,j);&#xD;
				if (entry != null) {&#xD;
					var entryName = entry.getName();&#xD;
					if (!name.equals(entryName)) {&#xD;
						name = entryName;&#xD;
						entry.print(&quot;Time &quot; + j +&quot;:&quot;);&#xD;
					}&#xD;
				}&#xD;
			}&#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ZuYwRqgmEe-9tYVtpMatrg" name="print" specification="_Za2JMagmEe-9tYVtpMatrg">
                <language>java</language>
                <body>System.out.printf(&quot;\nSchedule (length is %d):\n&quot;, endScheduleTime);&#xD;
		for (int i = 0; i &lt; schedule.size(); i++) {&#xD;
			System.out.printf(&quot;\nChannel: %d: &quot;,i);&#xD;
			var name = UNKNOWN;&#xD;
			var startTime = -1;&#xD;
			for (int j = 0; j &lt; endScheduleTime; j++) {&#xD;
				var entry = schedule.get(i,j);&#xD;
				if (entry != null) {&#xD;
					var entryName = entry.getName();&#xD;
					if (!name.equals(entryName) || startTime != entry.getStartTime()) {&#xD;
						/* only print out unique entries (not duplicates in the interval */&#xD;
						name = entryName;&#xD;
						startTime = entry.getStartTime();&#xD;
						System.out.printf(&quot;%s[%d,%d] &quot;, &#xD;
								name, entry.getStartTime(),entry.getEndTime());&#xD;
					} &#xD;
				}&#xD;
			}&#xD;
		}&#xD;
		/* report the number of Activations not schedulable, if any */&#xD;
		ArrayList&lt;Activation> notSchedulable = schedule.get(numChannels);&#xD;
		var numNotSchedulable = 0; 	&#xD;
		var name = UNKNOWN;&#xD;
		var lastStartTime = -1;&#xD;
		for (int i = 0; i &lt; endScheduleTime; i++) {&#xD;
			var entry = notSchedulable.get(i);&#xD;
			if (entry != null) {&#xD;
				var entryName = entry.getName();&#xD;
				if (!name.equals(entryName) || (name.equals(entryName) &amp;&amp; lastStartTime != entry.getStartTime())) {&#xD;
					name = entryName;&#xD;
					lastStartTime = entry.getStartTime();&#xD;
					numNotSchedulable++;&#xD;
				}&#xD;
			}&#xD;
		}&#xD;
		if (numNotSchedulable > 0 ) {&#xD;
			System.out.printf(&quot;\n%d Activations were not schedulable\n&quot;, numNotSchedulable);&#xD;
		}&#xD;
		System.out.println();&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_Zazs-qgmEe-9tYVtpMatrg" name="getSchedule" method="_ZuXiMqgmEe-9tYVtpMatrg">
                <ownedComment xmi:id="_ZutgY6gmEe-9tYVtpMatrg">
                  <body>@return the schedule</body>
                </ownedComment>
                <ownedParameter xmi:id="_ZrChVqgmEe-9tYVtpMatrg" type="_Za5MgKgmEe-9tYVtpMatrg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_Za0UAKgmEe-9tYVtpMatrg" name="buildSchedule" visibility="private" method="_ZuXiNKgmEe-9tYVtpMatrg"/>
              <ownedOperation xmi:id="_Za0UAagmEe-9tYVtpMatrg" name="toProgram" method="_ZuXiNagmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_ZrChV6gmEe-9tYVtpMatrg" type="_ZaOeIKgmEe-9tYVtpMatrg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_Za1iIKgmEe-9tYVtpMatrg" name="timeRemaining" visibility="protected" method="_ZuYJT6gmEe-9tYVtpMatrg">
                <ownedComment xmi:id="_ZuuHcKgmEe-9tYVtpMatrg">
                  <body>timeRemaining returns duration minus the number of vacant slots found. &#xD;
	 * &#xD;
	 * @return duration-vacantSlots</body>
                </ownedComment>
                <ownedParameter xmi:id="_Za1iIagmEe-9tYVtpMatrg" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Za1iIqgmEe-9tYVtpMatrg" name="start">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Za1iI6gmEe-9tYVtpMatrg" name="duration">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Za1iJKgmEe-9tYVtpMatrg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_Za2JMKgmEe-9tYVtpMatrg" name="printVerbose" method="_ZuYwRagmEe-9tYVtpMatrg"/>
              <ownedOperation xmi:id="_Za2JMagmEe-9tYVtpMatrg" name="print" method="_ZuYwRqgmEe-9tYVtpMatrg"/>
              <ownedOperation xmi:id="_ZrChUKgmEe-9tYVtpMatrg" name="Schedule" visibility="package" method="_ZuXiJKgmEe-9tYVtpMatrg">
                <eAnnotations xmi:id="_ZrChU6gmEe-9tYVtpMatrg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_ZrChVKgmEe-9tYVtpMatrg" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_ZrChUagmEe-9tYVtpMatrg" name="poset" type="_ZZ4f4KgmEe-9tYVtpMatrg"/>
                <ownedParameter xmi:id="_ZrChUqgmEe-9tYVtpMatrg" name="numChannels">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ZrChVagmEe-9tYVtpMatrg" type="_Zax3wagmEe-9tYVtpMatrg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_ZrChWKgmEe-9tYVtpMatrg" name="replaceNullWithSleep" visibility="private" method="_ZuXiN6gmEe-9tYVtpMatrg">
                <ownedComment xmi:id="_ZutgZKgmEe-9tYVtpMatrg">
                  <body>Replace all null entries in program with sleep instructions&#xD;
	 * &#xD;
	 * @param program</body>
                </ownedComment>
                <ownedParameter xmi:id="_ZrChWagmEe-9tYVtpMatrg" name="program" type="_ZaOeIKgmEe-9tYVtpMatrg"/>
              </ownedOperation>
              <ownedOperation xmi:id="_ZrChWqgmEe-9tYVtpMatrg" name="fakeSchedulingToTestRest" visibility="private" method="_ZuXiOagmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_ZrChW6gmEe-9tYVtpMatrg" name="next" type="_ZYoisKgmEe-9tYVtpMatrg"/>
              </ownedOperation>
              <ownedOperation xmi:id="_ZrDIYKgmEe-9tYVtpMatrg" name="getChannelAndSetStartTime" visibility="protected" method="_ZuXiO6gmEe-9tYVtpMatrg">
                <ownedComment xmi:id="_ZutgZagmEe-9tYVtpMatrg">
                  <body>getChannel checks for conflicts and if none, returns a free&#xD;
	 * channel. &lt;br>&#xD;
	 * If return value == numChannels, then no channel can be assigned&#xD;
	 * due to either conflicts or no availability.&#xD;
	 * @param schedulableObject&#xD;
	 * &#xD;
	 * @return available channel or numChannels when none available</body>
                </ownedComment>
                <ownedParameter xmi:id="_ZrDIYagmEe-9tYVtpMatrg" name="schedulableObject" type="_ZYoisKgmEe-9tYVtpMatrg"/>
                <ownedParameter xmi:id="_ZrDIYqgmEe-9tYVtpMatrg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_ZrDIY6gmEe-9tYVtpMatrg" name="findChannelAndTime" visibility="protected" method="_ZuXiPqgmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_ZrDIZKgmEe-9tYVtpMatrg" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ZrDIZagmEe-9tYVtpMatrg" name="schedulableObject" type="_ZYoisKgmEe-9tYVtpMatrg"/>
                <ownedParameter xmi:id="_ZrDIZqgmEe-9tYVtpMatrg" type="_ZazF4KgmEe-9tYVtpMatrg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_ZrDIZ6gmEe-9tYVtpMatrg" name="continueSearch" visibility="protected" method="_ZuYJMKgmEe-9tYVtpMatrg">
                <ownedComment xmi:id="_ZutgZqgmEe-9tYVtpMatrg">
                  <body>continueSearch continues the search for a channel time.&lt;br>&#xD;
	 * The default implementation continues at time+1 by calling&#xD;
	 * findChannelAndTime(time+1,schedulableObject). This method&#xD;
	 * can be overridden to provide preemptive searches or any&#xD;
	 * other method of continuing the search.&#xD;
	 * &#xD;
	 * @param time&#xD;
	 * @param activation&#xD;
	 * @return ScheduleLocation</body>
                </ownedComment>
                <ownedParameter xmi:id="_ZrDIaKgmEe-9tYVtpMatrg" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ZrDIaagmEe-9tYVtpMatrg" name="activation" type="_ZYoisKgmEe-9tYVtpMatrg"/>
                <ownedParameter xmi:id="_ZrDIaqgmEe-9tYVtpMatrg" type="_ZazF4KgmEe-9tYVtpMatrg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_ZrDIa6gmEe-9tYVtpMatrg" name="noOtherChannelConflicts" visibility="protected" method="_ZuYJNKgmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_ZrDIbKgmEe-9tYVtpMatrg" name="exceptedChannel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ZrDIbagmEe-9tYVtpMatrg" name="schedulableObject" type="_ZYoisKgmEe-9tYVtpMatrg"/>
                <ownedParameter xmi:id="_ZrDIbqgmEe-9tYVtpMatrg" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ZrDvcKgmEe-9tYVtpMatrg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_ZrDvcagmEe-9tYVtpMatrg" name="conflictsExist" visibility="protected" method="_ZuYJOagmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_ZrDvcqgmEe-9tYVtpMatrg" name="obj" type="_ZYoisKgmEe-9tYVtpMatrg"/>
                <ownedParameter xmi:id="_ZrDvc6gmEe-9tYVtpMatrg" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ZrDvdKgmEe-9tYVtpMatrg" name="duration">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ZrDvdagmEe-9tYVtpMatrg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_ZrDvdqgmEe-9tYVtpMatrg" name="freeOfCoordinatorConflicts" visibility="protected" method="_ZuYJPqgmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_ZrDvd6gmEe-9tYVtpMatrg" name="obj" type="_ZYoisKgmEe-9tYVtpMatrg"/>
                <ownedParameter xmi:id="_ZrDveKgmEe-9tYVtpMatrg" name="requestedChannel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ZrDveagmEe-9tYVtpMatrg" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ZrDveqgmEe-9tYVtpMatrg" name="duration">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ZrDve6gmEe-9tYVtpMatrg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_ZrDvfKgmEe-9tYVtpMatrg" name="isAvailable" visibility="protected" method="_ZuYJRKgmEe-9tYVtpMatrg">
                <ownedComment xmi:id="_ZutgZ6gmEe-9tYVtpMatrg">
                  <body>isAvailable returns true if the schedule for the channel is available in the &#xD;
	 * interval [start, start+duration-1]</body>
                </ownedComment>
                <ownedParameter xmi:id="_ZrDvfagmEe-9tYVtpMatrg" name="a1" type="_ZYoisKgmEe-9tYVtpMatrg"/>
                <ownedParameter xmi:id="_ZrDvfqgmEe-9tYVtpMatrg" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ZrDvf6gmEe-9tYVtpMatrg" name="start">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ZrDvgKgmEe-9tYVtpMatrg" name="duration">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ZrDvgagmEe-9tYVtpMatrg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_ZrEWgKgmEe-9tYVtpMatrg" name="isAvailable" visibility="protected" method="_ZuYJSqgmEe-9tYVtpMatrg">
                <ownedComment xmi:id="_ZutgaKgmEe-9tYVtpMatrg">
                  <body>isAvailable returns true if the schedule is available in the &#xD;
	 * interval [start, start+duration-1] in any channel</body>
                </ownedComment>
                <ownedParameter xmi:id="_ZrEWgagmEe-9tYVtpMatrg" name="a1" type="_ZYoisKgmEe-9tYVtpMatrg"/>
                <ownedParameter xmi:id="_ZrEWgqgmEe-9tYVtpMatrg" name="start">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ZrEWg6gmEe-9tYVtpMatrg" name="duration">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ZrEWhKgmEe-9tYVtpMatrg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_ZrEWhagmEe-9tYVtpMatrg" name="canCombineEntriesInPlace" visibility="private" method="_ZuYJVKgmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_ZrEWhqgmEe-9tYVtpMatrg" name="a1" type="_ZYoisKgmEe-9tYVtpMatrg"/>
                <ownedParameter xmi:id="_ZrEWh6gmEe-9tYVtpMatrg" name="a2" type="_ZYoisKgmEe-9tYVtpMatrg"/>
                <ownedParameter xmi:id="_ZrEWiKgmEe-9tYVtpMatrg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_ZrEWiagmEe-9tYVtpMatrg" name="combinedEntriesInPlace" visibility="private" method="_ZuYJWKgmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_ZrEWiqgmEe-9tYVtpMatrg" name="a1" type="_ZYoisKgmEe-9tYVtpMatrg"/>
                <ownedParameter xmi:id="_ZrEWi6gmEe-9tYVtpMatrg" name="a2" type="_ZYoisKgmEe-9tYVtpMatrg"/>
                <ownedParameter xmi:id="_ZrEWjKgmEe-9tYVtpMatrg" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ZrEWjagmEe-9tYVtpMatrg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_ZrEWjqgmEe-9tYVtpMatrg" name="addToSchedule" visibility="protected" method="_ZuYwQKgmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_ZrEWj6gmEe-9tYVtpMatrg" name="next" type="_ZYoisKgmEe-9tYVtpMatrg"/>
                <ownedParameter xmi:id="_ZrEWkKgmEe-9tYVtpMatrg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_ZrE9kKgmEe-9tYVtpMatrg" name="reportNotSchedulable" visibility="private" method="_ZuYwQ6gmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_ZrE9kagmEe-9tYVtpMatrg" name="object" type="_ZYoisKgmEe-9tYVtpMatrg"/>
              </ownedOperation>
              <nestedClassifier xmi:type="uml:Class" xmi:id="_ZazF4KgmEe-9tYVtpMatrg" name="ScheduleLocation" visibility="protected">
                <ownedAttribute xmi:id="_Ztjp0KgmEe-9tYVtpMatrg" name="channel" visibility="package">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedAttribute>
                <ownedAttribute xmi:id="_Ztjp0qgmEe-9tYVtpMatrg" name="time" visibility="package">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedAttribute>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ZuXiKKgmEe-9tYVtpMatrg" name="ScheduleLocation" specification="_ZazF4agmEe-9tYVtpMatrg">
                  <ownedParameter xmi:id="_ZuXiKagmEe-9tYVtpMatrg" type="_ZazF4KgmEe-9tYVtpMatrg" direction="return"/>
                  <language>java</language>
                  <body>this.channel = 0;&#xD;
			this.time = 0;&#xD;
		</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ZuXiKqgmEe-9tYVtpMatrg" name="ScheduleLocation" specification="_Zazs8KgmEe-9tYVtpMatrg">
                  <ownedParameter xmi:id="_ZuXiK6gmEe-9tYVtpMatrg" name="channel">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_ZuXiLKgmEe-9tYVtpMatrg" name="time">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_ZuXiLagmEe-9tYVtpMatrg" type="_ZazF4KgmEe-9tYVtpMatrg" direction="return"/>
                  <language>java</language>
                  <body>this.channel = channel;&#xD;
			this.time = time;&#xD;
		</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ZuXiLqgmEe-9tYVtpMatrg" name="getChannel" specification="_Zazs9qgmEe-9tYVtpMatrg">
                  <ownedParameter xmi:id="_ZuXiL6gmEe-9tYVtpMatrg" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>return channel;&#xD;
		</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ZuXiMKgmEe-9tYVtpMatrg" name="getTime" specification="_Zazs-KgmEe-9tYVtpMatrg">
                  <ownedParameter xmi:id="_ZuXiMagmEe-9tYVtpMatrg" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>return time;&#xD;
		</body>
                </ownedBehavior>
                <ownedOperation xmi:id="_ZazF4agmEe-9tYVtpMatrg" name="ScheduleLocation" visibility="package" method="_ZuXiKKgmEe-9tYVtpMatrg">
                  <eAnnotations xmi:id="_ZazF4qgmEe-9tYVtpMatrg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                    <details xmi:id="_ZazF46gmEe-9tYVtpMatrg" key="create"/>
                  </eAnnotations>
                  <ownedParameter xmi:id="_ZazF5KgmEe-9tYVtpMatrg" type="_ZazF4KgmEe-9tYVtpMatrg" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_Zazs8KgmEe-9tYVtpMatrg" name="ScheduleLocation" visibility="package" method="_ZuXiKqgmEe-9tYVtpMatrg">
                  <eAnnotations xmi:id="_Zazs86gmEe-9tYVtpMatrg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                    <details xmi:id="_Zazs9KgmEe-9tYVtpMatrg" key="create"/>
                  </eAnnotations>
                  <ownedParameter xmi:id="_Zazs8agmEe-9tYVtpMatrg" name="channel">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_Zazs8qgmEe-9tYVtpMatrg" name="time">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_Zazs9agmEe-9tYVtpMatrg" type="_ZazF4KgmEe-9tYVtpMatrg" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_Zazs9qgmEe-9tYVtpMatrg" name="getChannel" visibility="protected" method="_ZuXiLqgmEe-9tYVtpMatrg">
                  <ownedComment xmi:id="_ZutgYagmEe-9tYVtpMatrg">
                    <body>@return the channel</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_Zazs96gmEe-9tYVtpMatrg" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_Zazs-KgmEe-9tYVtpMatrg" name="getTime" visibility="protected" method="_ZuXiMKgmEe-9tYVtpMatrg">
                  <ownedComment xmi:id="_ZutgYqgmEe-9tYVtpMatrg">
                    <body>@return the time</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_Zazs-agmEe-9tYVtpMatrg" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  </ownedParameter>
                </ownedOperation>
              </nestedClassifier>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_Za5MgKgmEe-9tYVtpMatrg" name="ScheduleTable">
              <generalization xmi:id="_ZrFkoKgmEe-9tYVtpMatrg" general="_ZbAhQKgmEe-9tYVtpMatrg"/>
              <ownedAttribute xmi:id="_ZtkQ4KgmEe-9tYVtpMatrg" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_ZtkQ4agmEe-9tYVtpMatrg" value="1L"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ZuYwR6gmEe-9tYVtpMatrg" name="ScheduleTable" specification="_Za5zkKgmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_ZuYwSKgmEe-9tYVtpMatrg" type="_Za5MgKgmEe-9tYVtpMatrg" direction="return"/>
                <language>java</language>
                <body>super();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ZuYwSagmEe-9tYVtpMatrg" name="ScheduleTable" specification="_Za6aoKgmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_ZuYwSqgmEe-9tYVtpMatrg" name="row">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ZuYwS6gmEe-9tYVtpMatrg" name="column">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ZuYwTKgmEe-9tYVtpMatrg" type="_Za5MgKgmEe-9tYVtpMatrg" direction="return"/>
                <language>java</language>
                <body>super(row,column);&#xD;
		&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_Za5zkKgmEe-9tYVtpMatrg" name="ScheduleTable" visibility="package" method="_ZuYwR6gmEe-9tYVtpMatrg">
                <eAnnotations xmi:id="_Za5zkagmEe-9tYVtpMatrg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_Za5zkqgmEe-9tYVtpMatrg" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_Za5zk6gmEe-9tYVtpMatrg" type="_Za5MgKgmEe-9tYVtpMatrg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_Za6aoKgmEe-9tYVtpMatrg" name="ScheduleTable" visibility="package" method="_ZuYwSagmEe-9tYVtpMatrg">
                <eAnnotations xmi:id="_Za6ao6gmEe-9tYVtpMatrg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_Za6apKgmEe-9tYVtpMatrg" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_Za6aoagmEe-9tYVtpMatrg" name="row">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Za6aoqgmEe-9tYVtpMatrg" name="column">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Za6apagmEe-9tYVtpMatrg" type="_Za5MgKgmEe-9tYVtpMatrg" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_Za6apqgmEe-9tYVtpMatrg" name="ScheduleTime">
              <ownedAttribute xmi:id="_ZtkQ4qgmEe-9tYVtpMatrg" name="startTime">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_ZtkQ46gmEe-9tYVtpMatrg" name="endTime">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ZuYwTagmEe-9tYVtpMatrg" name="ScheduleTime" specification="_Za7BsKgmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_ZuYwTqgmEe-9tYVtpMatrg" name="startTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ZuYwT6gmEe-9tYVtpMatrg" name="endTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ZuYwUKgmEe-9tYVtpMatrg" type="_Za6apqgmEe-9tYVtpMatrg" direction="return"/>
                <language>java</language>
                <body>this.startTime = startTime;&#xD;
		this.endTime = endTime;&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_Za7BsKgmEe-9tYVtpMatrg" name="ScheduleTime" visibility="package" method="_ZuYwTagmEe-9tYVtpMatrg">
                <eAnnotations xmi:id="_Za7Bs6gmEe-9tYVtpMatrg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_Za7BtKgmEe-9tYVtpMatrg" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_Za7BsagmEe-9tYVtpMatrg" name="startTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Za7BsqgmEe-9tYVtpMatrg" name="endTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Za7BtagmEe-9tYVtpMatrg" type="_Za6apqgmEe-9tYVtpMatrg" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_Za7owKgmEe-9tYVtpMatrg" name="SimulatorInput">
              <ownedComment xmi:id="_ZuuHcagmEe-9tYVtpMatrg">
                <body>@author sgoddard&#xD;
 *</body>
              </ownedComment>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_Za7owagmEe-9tYVtpMatrg" name="SortedPeriodQueue">
              <generalization xmi:id="_Za8246gmEe-9tYVtpMatrg" general="_ZaVL0KgmEe-9tYVtpMatrg"/>
              <ownedAttribute xmi:id="_Ztk38KgmEe-9tYVtpMatrg" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_Ztk38agmEe-9tYVtpMatrg" value="1L"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ZuYwUagmEe-9tYVtpMatrg" name="SortedPeriodQueue" specification="_Za8P0agmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_ZuYwUqgmEe-9tYVtpMatrg" type="_Za7owagmEe-9tYVtpMatrg" direction="return"/>
                <language>java</language>
                <body>super(1, new PeriodComparator&lt;T>());&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ZuZXUKgmEe-9tYVtpMatrg" name="SortedPeriodQueue" specification="_ZrGLsKgmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_ZuZXUagmEe-9tYVtpMatrg" name="schedulableObjects" type="_Zqqt4KgmEe-9tYVtpMatrg"/>
                <ownedParameter xmi:id="_ZuZXUqgmEe-9tYVtpMatrg" type="_Za7owagmEe-9tYVtpMatrg" direction="return"/>
                <language>java</language>
                <body>super(new PeriodComparator&lt;T>());&#xD;
		this.addAll(schedulableObjects);&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_Za8P0agmEe-9tYVtpMatrg" name="SortedPeriodQueue" visibility="package" method="_ZuYwUagmEe-9tYVtpMatrg">
                <eAnnotations xmi:id="_Za824KgmEe-9tYVtpMatrg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_Za824agmEe-9tYVtpMatrg" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_Za824qgmEe-9tYVtpMatrg" type="_Za7owagmEe-9tYVtpMatrg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_ZrGLsKgmEe-9tYVtpMatrg" name="SortedPeriodQueue" visibility="package" method="_ZuZXUKgmEe-9tYVtpMatrg">
                <eAnnotations xmi:id="_ZrGLsqgmEe-9tYVtpMatrg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_ZrGLs6gmEe-9tYVtpMatrg" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_ZrGLsagmEe-9tYVtpMatrg" name="schedulableObjects" type="_Zqqt4KgmEe-9tYVtpMatrg"/>
                <ownedParameter xmi:id="_ZrGLtKgmEe-9tYVtpMatrg" type="_Za7owagmEe-9tYVtpMatrg" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Interface" xmi:id="_Za9d8agmEe-9tYVtpMatrg" name="SystemAttributes" visibility="package">
              <generalization xmi:id="_ZrGywKgmEe-9tYVtpMatrg" general="_ZaY2MKgmEe-9tYVtpMatrg"/>
              <nestedClassifier xmi:type="uml:Enumeration" xmi:id="_Za-FAKgmEe-9tYVtpMatrg" name="ScheduleChoices">
                <ownedLiteral xmi:id="_Za-sEKgmEe-9tYVtpMatrg" name="PRIORITY"/>
                <ownedLiteral xmi:id="_Za-sEagmEe-9tYVtpMatrg" name="RM"/>
                <ownedLiteral xmi:id="_Za-sEqgmEe-9tYVtpMatrg" name="DM"/>
                <ownedLiteral xmi:id="_Za-sE6gmEe-9tYVtpMatrg" name="RTHART"/>
                <ownedLiteral xmi:id="_Za-sFKgmEe-9tYVtpMatrg" name="POSET_PRIORITY"/>
                <ownedLiteral xmi:id="_Za-sFagmEe-9tYVtpMatrg" name="POSET_RM"/>
                <ownedLiteral xmi:id="_Za-sFqgmEe-9tYVtpMatrg" name="POSET_DM"/>
                <ownedLiteral xmi:id="_Za-sF6gmEe-9tYVtpMatrg" name="WARP_POSET_PRIORITY"/>
                <ownedLiteral xmi:id="_Za-sGKgmEe-9tYVtpMatrg" name="WARP_POSET_RM"/>
                <ownedLiteral xmi:id="_Za-sGagmEe-9tYVtpMatrg" name="WARP_POSET_DM"/>
                <ownedLiteral xmi:id="_Za-sGqgmEe-9tYVtpMatrg" name="CONNECTIVITY_POSET_PRIORITY"/>
                <ownedLiteral xmi:id="_Za_TIKgmEe-9tYVtpMatrg" name="CONNECTIVITY_POSET_RM"/>
                <ownedLiteral xmi:id="_Za_TIagmEe-9tYVtpMatrg" name="CONNECTIVITY_POSET_DM"/>
              </nestedClassifier>
              <ownedAttribute xmi:id="_Za_TIqgmEe-9tYVtpMatrg" name="numChannels" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_Za_TI6gmEe-9tYVtpMatrg" name="numFaults" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_Za_TJKgmEe-9tYVtpMatrg" name="name" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_Za_TJagmEe-9tYVtpMatrg" name="schedulerName" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_Za_TJqgmEe-9tYVtpMatrg" name="numTransmissions" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_Za_6MKgmEe-9tYVtpMatrg" name="optimizationFlag" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_Za_6MagmEe-9tYVtpMatrg" name="SystemFactory">
              <ownedComment xmi:id="_ZuuHcqgmEe-9tYVtpMatrg">
                <body>Factory Class to create a schedule instance.&#xD;
This factory can be used to create different&#xD;
types of schedules.&#xD;
@author sgoddard&#xD;
 *</body>
              </ownedComment>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ZuZXU6gmEe-9tYVtpMatrg" name="create" specification="_ZrGyw6gmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_ZuZXVKgmEe-9tYVtpMatrg" name="workload" type="_Zbu6AqgmEe-9tYVtpMatrg"/>
                <ownedParameter xmi:id="_ZuZXVagmEe-9tYVtpMatrg" name="numChannels">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ZuZXVqgmEe-9tYVtpMatrg" name="choice" type="_Za-FAKgmEe-9tYVtpMatrg"/>
                <ownedParameter xmi:id="_ZuZXV6gmEe-9tYVtpMatrg" type="_ZbdNMKgmEe-9tYVtpMatrg" direction="return"/>
                <language>java</language>
                <body>return new WarpSystem(workload,numChannels, choice);&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_ZrGyw6gmEe-9tYVtpMatrg" name="create" isStatic="true" method="_ZuZXU6gmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_ZrGyxKgmEe-9tYVtpMatrg" name="workload" type="_Zbu6AqgmEe-9tYVtpMatrg"/>
                <ownedParameter xmi:id="_ZrGyxagmEe-9tYVtpMatrg" name="numChannels">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ZrGyxqgmEe-9tYVtpMatrg" name="choice" type="_Za-FAKgmEe-9tYVtpMatrg"/>
                <ownedParameter xmi:id="_ZrHZ0KgmEe-9tYVtpMatrg" type="_ZbdNMKgmEe-9tYVtpMatrg" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_ZbAhQKgmEe-9tYVtpMatrg" name="Table">
              <generalization xmi:id="_ZsbocagmEe-9tYVtpMatrg" general="_Zp__gKgmEe-9tYVtpMatrg"/>
              <ownedAttribute xmi:id="_Ztk38qgmEe-9tYVtpMatrg" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_Ztk386gmEe-9tYVtpMatrg" value="1L"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ZuZXWKgmEe-9tYVtpMatrg" name="Table" specification="_ZbBIUagmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_ZuZXWagmEe-9tYVtpMatrg" type="_ZbAhQKgmEe-9tYVtpMatrg" direction="return"/>
                <language>java</language>
                <body>super();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ZuZXWqgmEe-9tYVtpMatrg" name="Table" specification="_ZbBIVagmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_ZuZXW6gmEe-9tYVtpMatrg" name="row">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ZuZXXKgmEe-9tYVtpMatrg" name="column">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ZuZXXagmEe-9tYVtpMatrg" type="_ZbAhQKgmEe-9tYVtpMatrg" direction="return"/>
                <language>java</language>
                <body>super();&#xD;
		&#xD;
		for(int i=0; i &lt; row; i++) {&#xD;
			ArrayList&lt;E> nullRow = new ArrayList&lt;E>();&#xD;
			for(int j=0; j &lt; column; j++) {&#xD;
				nullRow.add(null);&#xD;
			}&#xD;
			this.add((E) nullRow);&#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ZuZXXqgmEe-9tYVtpMatrg" name="getNumRows" specification="_ZbBvY6gmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_ZuZXX6gmEe-9tYVtpMatrg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>return this.size();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ZuZXYKgmEe-9tYVtpMatrg" name="getNumColumns" specification="_ZbBvZagmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_ZuZXYagmEe-9tYVtpMatrg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var numColumns = 0;&#xD;
		var numRows = this.size();&#xD;
		if (numRows > 0) {&#xD;
			var lastRow = this.get(numRows-1);&#xD;
			numColumns = lastRow.size();&#xD;
		}&#xD;
		return numColumns;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ZuZXYqgmEe-9tYVtpMatrg" name="set" specification="_ZsbBYKgmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_ZuZXY6gmEe-9tYVtpMatrg" name="row">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ZuZXZKgmEe-9tYVtpMatrg" name="column">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ZuZXZagmEe-9tYVtpMatrg" name="element" type="_Zr9HUKgmEe-9tYVtpMatrg"/>
                <language>java</language>
                <body>E fullRow;&#xD;
		if (row &lt; this.size()) {&#xD;
			fullRow = this.get(row);&#xD;
			if (column &lt; fullRow.size()) {&#xD;
				fullRow.set(column, element);&#xD;
			}&#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ZuZXZqgmEe-9tYVtpMatrg" name="get" specification="_ZbBvZ6gmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_ZuZXZ6gmEe-9tYVtpMatrg" name="row">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ZuZXaKgmEe-9tYVtpMatrg" name="column">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ZuZXaagmEe-9tYVtpMatrg" type="_Zr9HUKgmEe-9tYVtpMatrg" direction="return"/>
                <language>java</language>
                <body>T element = null;&#xD;
		E fullRow;&#xD;
		if (row &lt; this.size()) {&#xD;
			fullRow = this.get(row);&#xD;
			if (column &lt; fullRow.size()) {&#xD;
				element = fullRow.get(column);&#xD;
			}&#xD;
		}&#xD;
		return element;&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_ZbBIUagmEe-9tYVtpMatrg" name="Table" method="_ZuZXWKgmEe-9tYVtpMatrg">
                <eAnnotations xmi:id="_ZbBIUqgmEe-9tYVtpMatrg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_ZbBIU6gmEe-9tYVtpMatrg" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_ZbBIVKgmEe-9tYVtpMatrg" type="_ZbAhQKgmEe-9tYVtpMatrg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_ZbBIVagmEe-9tYVtpMatrg" name="Table" method="_ZuZXWqgmEe-9tYVtpMatrg">
                <eAnnotations xmi:id="_ZbBvYKgmEe-9tYVtpMatrg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_ZbBvYagmEe-9tYVtpMatrg" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_ZbBIVqgmEe-9tYVtpMatrg" name="row">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ZbBIV6gmEe-9tYVtpMatrg" name="column">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ZbBvYqgmEe-9tYVtpMatrg" type="_ZbAhQKgmEe-9tYVtpMatrg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_ZbBvY6gmEe-9tYVtpMatrg" name="getNumRows" method="_ZuZXXqgmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_ZbBvZKgmEe-9tYVtpMatrg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_ZbBvZagmEe-9tYVtpMatrg" name="getNumColumns" method="_ZuZXYKgmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_ZbBvZqgmEe-9tYVtpMatrg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_ZbBvZ6gmEe-9tYVtpMatrg" name="get" method="_ZuZXZqgmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_ZbBvaKgmEe-9tYVtpMatrg" name="row">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ZbBvaagmEe-9tYVtpMatrg" name="column">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ZsbocKgmEe-9tYVtpMatrg" type="_Zr9HUKgmEe-9tYVtpMatrg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_ZsbBYKgmEe-9tYVtpMatrg" name="set" method="_ZuZXYqgmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_ZsbBYagmEe-9tYVtpMatrg" name="row">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ZsbBYqgmEe-9tYVtpMatrg" name="column">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ZsbBY6gmEe-9tYVtpMatrg" name="element" type="_Zr9HUKgmEe-9tYVtpMatrg"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Interface" xmi:id="_ZbCWcKgmEe-9tYVtpMatrg" name="Visualization">
              <ownedComment xmi:id="_ZuuHc6gmEe-9tYVtpMatrg">
                <body>@author sgoddard&#xD;
@version 1.4</body>
              </ownedComment>
              <nestedClassifier xmi:type="uml:Enumeration" xmi:id="_ZbC9gKgmEe-9tYVtpMatrg" name="SystemChoices">
                <ownedLiteral xmi:id="_ZbC9gqgmEe-9tYVtpMatrg" name="SOURCE"/>
                <ownedLiteral xmi:id="_ZbC9g6gmEe-9tYVtpMatrg" name="RELIABILITIES"/>
                <ownedLiteral xmi:id="_ZbC9hKgmEe-9tYVtpMatrg" name="SIMULATOR_INPUT"/>
                <ownedLiteral xmi:id="_ZbC9hagmEe-9tYVtpMatrg" name="LATENCY"/>
                <ownedLiteral xmi:id="_ZbC9hqgmEe-9tYVtpMatrg" name="LATENCY_REPORT"/>
                <ownedLiteral xmi:id="_ZbC9h6gmEe-9tYVtpMatrg" name="DEADLINE_REPORT"/>
                <ownedLiteral xmi:id="_ZbC9iKgmEe-9tYVtpMatrg" name="CHANNEL"/>
              </nestedClassifier>
              <nestedClassifier xmi:type="uml:Enumeration" xmi:id="_ZbDkkKgmEe-9tYVtpMatrg" name="WorkLoadChoices">
                <ownedLiteral xmi:id="_ZbDkkqgmEe-9tYVtpMatrg" name="INPUT_GRAPH"/>
                <ownedLiteral xmi:id="_ZbDkk6gmEe-9tYVtpMatrg" name="COMUNICATION_GRAPH"/>
                <ownedLiteral xmi:id="_ZbDklKgmEe-9tYVtpMatrg" name="GRAPHVIZ"/>
              </nestedClassifier>
              <ownedOperation xmi:id="_ZbDklagmEe-9tYVtpMatrg" name="toDisplay"/>
              <ownedOperation xmi:id="_ZbDklqgmEe-9tYVtpMatrg" name="toFile"/>
              <ownedOperation xmi:id="_ZbDkl6gmEe-9tYVtpMatrg" name="toString">
                <ownedParameter xmi:id="_ZbELoKgmEe-9tYVtpMatrg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_ZbELoagmEe-9tYVtpMatrg" name="VisualizationFactory">
              <ownedComment xmi:id="_ZuuHdKgmEe-9tYVtpMatrg">
                <body>Factory Class to create a visualization instance.&#xD;
This factory can be used to create different&#xD;
types of visualizations.&#xD;
 *&#xD;
@author sgoddard&#xD;
@version 1.8 Fall 2024</body>
              </ownedComment>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ZuZXaqgmEe-9tYVtpMatrg" name="createVisualization" specification="_ZrIn8KgmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_ZuZXa6gmEe-9tYVtpMatrg" name="warp" type="_ZbdNMKgmEe-9tYVtpMatrg"/>
                <ownedParameter xmi:id="_ZuZXbKgmEe-9tYVtpMatrg" name="outputDirectory">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ZuZXbagmEe-9tYVtpMatrg" name="choice" type="_ZbC9gKgmEe-9tYVtpMatrg"/>
                <ownedParameter xmi:id="_ZuZXbqgmEe-9tYVtpMatrg" type="_ZbCWcKgmEe-9tYVtpMatrg" direction="return"/>
                <language>java</language>
                <body>return new VisualizationImplementation(warp, outputDirectory, choice);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ZuZXb6gmEe-9tYVtpMatrg" name="createVisualization" specification="_ZrIn9agmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_ZuZXcKgmEe-9tYVtpMatrg" name="workload" type="_Zbu6AqgmEe-9tYVtpMatrg"/>
                <ownedParameter xmi:id="_ZuZXcagmEe-9tYVtpMatrg" name="outputDirectory">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ZuZXcqgmEe-9tYVtpMatrg" name="choice" type="_ZbDkkKgmEe-9tYVtpMatrg"/>
                <ownedParameter xmi:id="_ZuZXc6gmEe-9tYVtpMatrg" type="_ZbCWcKgmEe-9tYVtpMatrg" direction="return"/>
                <language>java</language>
                <body>return new VisualizationImplementation(workload, outputDirectory, choice);&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_ZrIn8KgmEe-9tYVtpMatrg" name="createVisualization" isStatic="true" method="_ZuZXaqgmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_ZrIn8agmEe-9tYVtpMatrg" name="warp" type="_ZbdNMKgmEe-9tYVtpMatrg"/>
                <ownedParameter xmi:id="_ZrIn8qgmEe-9tYVtpMatrg" name="outputDirectory">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ZrIn86gmEe-9tYVtpMatrg" name="choice" type="_ZbC9gKgmEe-9tYVtpMatrg"/>
                <ownedParameter xmi:id="_ZrIn9KgmEe-9tYVtpMatrg" type="_ZbCWcKgmEe-9tYVtpMatrg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_ZrIn9agmEe-9tYVtpMatrg" name="createVisualization" isStatic="true" method="_ZuZXb6gmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_ZrIn9qgmEe-9tYVtpMatrg" name="workload" type="_Zbu6AqgmEe-9tYVtpMatrg"/>
                <ownedParameter xmi:id="_ZrIn96gmEe-9tYVtpMatrg" name="outputDirectory">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ZrIn-KgmEe-9tYVtpMatrg" name="choice" type="_ZbDkkKgmEe-9tYVtpMatrg"/>
                <ownedParameter xmi:id="_ZrIn-agmEe-9tYVtpMatrg" type="_ZbCWcKgmEe-9tYVtpMatrg" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_ZbEysKgmEe-9tYVtpMatrg" name="VisualizationImplementation">
              <ownedComment xmi:id="_ZuuHdagmEe-9tYVtpMatrg">
                <body>Handles all visualizations dealt with in the Warp program. This includes creating&#xD;
visualizations with WarpInterface warp, Workload workload. Its main function&#xD;
is checking the input to determine which type of visualization is being requested &#xD;
and running appropriate visualization.&#xD;
@author sgoddard&#xD;
@version 1.5</body>
              </ownedComment>
              <ownedAttribute xmi:id="_Ztk39KgmEe-9tYVtpMatrg" name="visualization" visibility="private" type="_ZZLVQKgmEe-9tYVtpMatrg" association="_ZvduVKgmEe-9tYVtpMatrg"/>
              <ownedAttribute xmi:id="_ZtlfAagmEe-9tYVtpMatrg" name="fileContent" visibility="private" type="_ZZLVQKgmEe-9tYVtpMatrg" association="_ZveVYagmEe-9tYVtpMatrg"/>
              <ownedAttribute xmi:id="_ZtlfA6gmEe-9tYVtpMatrg" name="window" visibility="private" type="_ZZlk8KgmEe-9tYVtpMatrg" association="_ZveVZKgmEe-9tYVtpMatrg"/>
              <ownedAttribute xmi:id="_ZtlfBagmEe-9tYVtpMatrg" name="fileName" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_ZtlfB6gmEe-9tYVtpMatrg" name="inputFileName" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_ZtmGEKgmEe-9tYVtpMatrg" name="fileNameTemplate" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_ZtmGEqgmEe-9tYVtpMatrg" name="fm" visibility="private" type="_ZZSC8KgmEe-9tYVtpMatrg" association="_ZveVZ6gmEe-9tYVtpMatrg">
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_ZtmGE6gmEe-9tYVtpMatrg" value="null"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_ZtmGFagmEe-9tYVtpMatrg" name="warp" visibility="private" type="_ZbdNMKgmEe-9tYVtpMatrg" association="_Zve8cagmEe-9tYVtpMatrg">
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_ZtmGFqgmEe-9tYVtpMatrg" value="null"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_ZtmGGKgmEe-9tYVtpMatrg" name="workLoad" visibility="private" type="_Zbu6AqgmEe-9tYVtpMatrg" association="_Zve8dKgmEe-9tYVtpMatrg">
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_ZtmGGagmEe-9tYVtpMatrg" value="null"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_ZtmtIKgmEe-9tYVtpMatrg" name="visualizationObject" visibility="private" type="_ZbJEIKgmEe-9tYVtpMatrg" association="_ZvfjgagmEe-9tYVtpMatrg"/>
              <interfaceRealization xmi:id="_ZrIn-qgmEe-9tYVtpMatrg" client="_ZbEysKgmEe-9tYVtpMatrg" supplier="_ZbCWcKgmEe-9tYVtpMatrg" contract="_ZbCWcKgmEe-9tYVtpMatrg"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ZuZ-YKgmEe-9tYVtpMatrg" name="VisualizationImplementation" specification="_ZscPgqgmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_ZuZ-YagmEe-9tYVtpMatrg" name="warp" type="_ZbdNMKgmEe-9tYVtpMatrg"/>
                <ownedParameter xmi:id="_ZuZ-YqgmEe-9tYVtpMatrg" name="outputDirectory">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ZuZ-Y6gmEe-9tYVtpMatrg" name="choice" type="_ZscPgKgmEe-9tYVtpMatrg"/>
                <ownedParameter xmi:id="_ZuZ-ZKgmEe-9tYVtpMatrg" type="_ZbEysKgmEe-9tYVtpMatrg" direction="return"/>
                <language>java</language>
                <body>this.fm = new FileManager();&#xD;
 this.warp = warp;&#xD;
 inputFileName = warp.toWorkload().getInputFileName();&#xD;
 this.fileNameTemplate = createFileNameTemplate(outputDirectory);&#xD;
 visualizationObject = null;&#xD;
 createVisualization(choice);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ZuZ-ZagmEe-9tYVtpMatrg" name="VisualizationImplementation" specification="_Zsc2lagmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_ZuZ-ZqgmEe-9tYVtpMatrg" name="workLoad" type="_Zbu6AqgmEe-9tYVtpMatrg"/>
                <ownedParameter xmi:id="_ZuZ-Z6gmEe-9tYVtpMatrg" name="outputDirectory">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ZuZ-aKgmEe-9tYVtpMatrg" name="choice" type="_Zsc2k6gmEe-9tYVtpMatrg"/>
                <ownedParameter xmi:id="_ZuZ-aagmEe-9tYVtpMatrg" type="_ZbEysKgmEe-9tYVtpMatrg" direction="return"/>
                <language>java</language>
                <body>this.fm = new FileManager();&#xD;
 this.workLoad = workLoad;&#xD;
 inputFileName = workLoad.getInputFileName();&#xD;
 this.fileNameTemplate = createFileNameTemplate(outputDirectory);&#xD;
 visualizationObject = null;&#xD;
 createVisualization(choice);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ZuZ-aqgmEe-9tYVtpMatrg" name="toDisplay" specification="_ZbGA0KgmEe-9tYVtpMatrg">
                <language>java</language>
                <body>window = visualizationObject.displayVisualization();&#xD;
 if (window != null) {&#xD;
   window.setVisible();&#xD;
 }&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ZuZ-a6gmEe-9tYVtpMatrg" name="toFile" specification="_ZbGn4qgmEe-9tYVtpMatrg">
                <language>java</language>
                <body>fm.writeFile(fileName, fileContent.toString());&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ZuZ-bKgmEe-9tYVtpMatrg" name="toString" specification="_ZbGn5qgmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_ZuZ-bagmEe-9tYVtpMatrg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return visualization.toString();&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ZuZ-bqgmEe-9tYVtpMatrg" name="createVisualization" specification="_Zsddo6gmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_ZuZ-b6gmEe-9tYVtpMatrg" name="choice" type="_ZscPgKgmEe-9tYVtpMatrg"/>
                <language>java</language>
                <body>switch (choice) { // select the requested visualization&#xD;
   case SOURCE:&#xD;
     createVisualization(new ProgramVisualization(warp));&#xD;
     break;&#xD;
&#xD;
   case RELIABILITIES:&#xD;
     // TODO Implement Reliability Analysis Visualization&#xD;
     createVisualization(new ReliabilityVisualization(warp));&#xD;
     break;&#xD;
&#xD;
   case SIMULATOR_INPUT:&#xD;
     // TODO Implement Simulator Input Visualization&#xD;
     createVisualization(new NotImplentedVisualization(&quot;SimInputNotImplemented&quot;));&#xD;
     break;&#xD;
&#xD;
   case LATENCY:&#xD;
     // TODO Implement Latency Analysis Visualization&#xD;
     createVisualization(new LatencyVisualization(warp));&#xD;
     break;&#xD;
&#xD;
   case CHANNEL:&#xD;
     // TODO Implement Channel Analysis Visualization&#xD;
     createVisualization(new ChannelVisualization(warp));&#xD;
     break;&#xD;
&#xD;
   case LATENCY_REPORT:&#xD;
     createVisualization(new ReportVisualization(fm, warp,&#xD;
         new LatencyAnalysis(warp).latencyReport(), &quot;Latency&quot;));&#xD;
     break;&#xD;
&#xD;
   case DEADLINE_REPORT:&#xD;
     createVisualization(&#xD;
         new ReportVisualization(fm, warp, warp.toProgram().deadlineMisses(), &quot;DeadlineMisses&quot;));&#xD;
     break;&#xD;
&#xD;
   default:&#xD;
     createVisualization(new NotImplentedVisualization(&quot;UnexpectedChoice&quot;));&#xD;
     break;&#xD;
 }&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ZuZ-cKgmEe-9tYVtpMatrg" name="createVisualization" specification="_ZsddpagmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_ZuZ-cagmEe-9tYVtpMatrg" name="choice" type="_Zsc2k6gmEe-9tYVtpMatrg"/>
                <language>java</language>
                <body>switch (choice) { // select the requested visualization&#xD;
   case COMUNICATION_GRAPH:&#xD;
     // createWarpVisualization();&#xD;
     createVisualization(new CommunicationGraph(fm, workLoad));&#xD;
     break;&#xD;
&#xD;
   case GRAPHVIZ:&#xD;
     createVisualization(new GraphViz(fm, workLoad.toString()));&#xD;
     break;&#xD;
&#xD;
   case INPUT_GRAPH:&#xD;
     createVisualization(workLoad);&#xD;
     break;&#xD;
&#xD;
   default:&#xD;
     createVisualization(new NotImplentedVisualization(&quot;UnexpectedChoice&quot;));&#xD;
     break;&#xD;
 }&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ZuZ-cqgmEe-9tYVtpMatrg" name="createVisualization" specification="_Zsddp6gmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_ZuZ-c6gmEe-9tYVtpMatrg" name="obj" type="_Zr9HUKgmEe-9tYVtpMatrg"/>
                <language>java</language>
                <body>visualization = obj.visualization();&#xD;
 fileContent = obj.fileVisualization();&#xD;
 /* display is file content printed to console */&#xD;
 fileName = obj.createFile(fileNameTemplate); // in output directory&#xD;
 visualizationObject = obj;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ZuZ-dKgmEe-9tYVtpMatrg" name="createFileNameTemplate" specification="_ZbHO8agmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_ZuZ-dagmEe-9tYVtpMatrg" name="outputDirectory">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ZuZ-dqgmEe-9tYVtpMatrg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>String fileNameTemplate;&#xD;
 var workingDirectory = fm.getBaseDirectory();&#xD;
 var newDirectory = fm.createDirectory(workingDirectory, outputDirectory);&#xD;
 // Now create the fileNameTemplate using full output path and input filename&#xD;
 if (inputFileName.contains(&quot;/&quot;)) {&#xD;
   var index = inputFileName.lastIndexOf(&quot;/&quot;) + 1;&#xD;
   fileNameTemplate = newDirectory + File.separator + inputFileName.substring(index);&#xD;
 } else {&#xD;
   fileNameTemplate = newDirectory + File.separator + inputFileName;&#xD;
 }&#xD;
 return fileNameTemplate;&#xD;
  </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_ZbGA0KgmEe-9tYVtpMatrg" name="toDisplay" method="_ZuZ-aqgmEe-9tYVtpMatrg"/>
              <ownedOperation xmi:id="_ZbGn4qgmEe-9tYVtpMatrg" name="toFile" method="_ZuZ-a6gmEe-9tYVtpMatrg"/>
              <ownedOperation xmi:id="_ZbGn5qgmEe-9tYVtpMatrg" name="toString" method="_ZuZ-bKgmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_ZbGn56gmEe-9tYVtpMatrg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_ZbHO8agmEe-9tYVtpMatrg" name="createFileNameTemplate" visibility="private" method="_ZuZ-dKgmEe-9tYVtpMatrg">
                <ownedComment xmi:id="_ZuuugqgmEe-9tYVtpMatrg">
                  <body>Creates newDirectory of the workingDirectory and input outputDirectory&#xD;
   * and returns a fileNameTemplate of the newDirectory.&#xD;
   * @param outputDirectory&#xD;
   * @return fileNameTemplate of the input outputDirectory</body>
                </ownedComment>
                <ownedParameter xmi:id="_ZbHO8qgmEe-9tYVtpMatrg" name="outputDirectory">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ZbHO86gmEe-9tYVtpMatrg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_ZscPgqgmEe-9tYVtpMatrg" name="VisualizationImplementation" method="_ZuZ-YKgmEe-9tYVtpMatrg">
                <eAnnotations xmi:id="_Zsc2kKgmEe-9tYVtpMatrg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_Zsc2kagmEe-9tYVtpMatrg" key="create"/>
                </eAnnotations>
                <ownedComment xmi:id="_ZuuHdqgmEe-9tYVtpMatrg">
                  <body>Constructor sets VisualizationImplementation attributes from given input. Creates &#xD;
   * new FileManager(), converts WarpInterface warp input to Wordload. This allows the&#xD;
   * program to get the input file name and create the file name template from outputDirectory&#xD;
   * input. Creates visualization with SystemChoices choice input.&#xD;
   * @param warp&#xD;
   * @param outputDirectory&#xD;
   * @param choice</body>
                </ownedComment>
                <ownedParameter xmi:id="_ZscPg6gmEe-9tYVtpMatrg" name="warp" type="_ZbdNMKgmEe-9tYVtpMatrg"/>
                <ownedParameter xmi:id="_ZscPhKgmEe-9tYVtpMatrg" name="outputDirectory">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ZscPhagmEe-9tYVtpMatrg" name="choice" type="_ZscPgKgmEe-9tYVtpMatrg"/>
                <ownedParameter xmi:id="_Zsc2kqgmEe-9tYVtpMatrg" type="_ZbEysKgmEe-9tYVtpMatrg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_Zsc2lagmEe-9tYVtpMatrg" name="VisualizationImplementation" method="_ZuZ-ZagmEe-9tYVtpMatrg">
                <eAnnotations xmi:id="_ZsddoKgmEe-9tYVtpMatrg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_ZsddoagmEe-9tYVtpMatrg" key="create"/>
                </eAnnotations>
                <ownedComment xmi:id="_ZuuHd6gmEe-9tYVtpMatrg">
                  <body>Constructor sets VisualizationImplementation attributes from given input. Creates &#xD;
   * new FileManager(). Sets input workLoad to a new workLoad and gets the input file name&#xD;
   * from new workLoad. Creates file name template from outputDirectory input and creates&#xD;
   * visualization with WorkLoadChoices choice input.&#xD;
   * @param workLoad the Workload being used&#xD;
   * @param outputDirectory create fileNameTemplate with&#xD;
   * @param choice create visualization of</body>
                </ownedComment>
                <ownedParameter xmi:id="_Zsc2lqgmEe-9tYVtpMatrg" name="workLoad" type="_Zbu6AqgmEe-9tYVtpMatrg"/>
                <ownedParameter xmi:id="_Zsc2l6gmEe-9tYVtpMatrg" name="outputDirectory">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Zsc2mKgmEe-9tYVtpMatrg" name="choice" type="_Zsc2k6gmEe-9tYVtpMatrg"/>
                <ownedParameter xmi:id="_ZsddoqgmEe-9tYVtpMatrg" type="_ZbEysKgmEe-9tYVtpMatrg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_Zsddo6gmEe-9tYVtpMatrg" name="createVisualization" visibility="private" method="_ZuZ-bqgmEe-9tYVtpMatrg">
                <ownedComment xmi:id="_ZuuugKgmEe-9tYVtpMatrg">
                  <body>Checks which SystemChoices choice is requested and runs &#xD;
   * appropriate visualization&#xD;
   * @param choice</body>
                </ownedComment>
                <ownedParameter xmi:id="_ZsddpKgmEe-9tYVtpMatrg" name="choice" type="_ZscPgKgmEe-9tYVtpMatrg"/>
              </ownedOperation>
              <ownedOperation xmi:id="_ZsddpagmEe-9tYVtpMatrg" name="createVisualization" visibility="private" method="_ZuZ-cKgmEe-9tYVtpMatrg">
                <ownedComment xmi:id="_ZuuugagmEe-9tYVtpMatrg">
                  <body>Checks which WorkLoadChoices choice is requested and runs&#xD;
   * appropriate graph visualization&#xD;
   * @param choice</body>
                </ownedComment>
                <ownedParameter xmi:id="_ZsddpqgmEe-9tYVtpMatrg" name="choice" type="_Zsc2k6gmEe-9tYVtpMatrg"/>
              </ownedOperation>
              <ownedOperation xmi:id="_Zsddp6gmEe-9tYVtpMatrg" name="createVisualization" visibility="private" method="_ZuZ-cqgmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_ZsddqKgmEe-9tYVtpMatrg" name="obj" type="_Zr9HUKgmEe-9tYVtpMatrg"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_ZbJEIKgmEe-9tYVtpMatrg" name="VisualizationObject" visibility="package" isAbstract="true">
              <ownedComment xmi:id="_Zuuug6gmEe-9tYVtpMatrg">
                <body>@author sgoddard&#xD;
@version 1.5&#xD;
 *</body>
              </ownedComment>
              <ownedAttribute xmi:id="_ZtmtIqgmEe-9tYVtpMatrg" name="fm" visibility="private" type="_ZZSC8KgmEe-9tYVtpMatrg" association="_ZvfjhKgmEe-9tYVtpMatrg"/>
              <ownedAttribute xmi:id="_ZtmtJKgmEe-9tYVtpMatrg" name="suffix" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_ZtnUMKgmEe-9tYVtpMatrg" name="nameExtension" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_ZtnUMqgmEe-9tYVtpMatrg" name="NOT_IMPLEMENTED" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_ZtnUM6gmEe-9tYVtpMatrg" value="&quot;This visualization has not been implemented.&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_ZtnUNKgmEe-9tYVtpMatrg" name="visualizationData" visibility="protected">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZtnUNagmEe-9tYVtpMatrg" value="*"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ZualcKgmEe-9tYVtpMatrg" name="VisualizationObject" specification="_ZrKdIKgmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_ZualcagmEe-9tYVtpMatrg" name="fm" type="_ZZSC8KgmEe-9tYVtpMatrg"/>
                <ownedParameter xmi:id="_ZualcqgmEe-9tYVtpMatrg" name="workLoad" type="_Zbu6AqgmEe-9tYVtpMatrg"/>
                <ownedParameter xmi:id="_Zualc6gmEe-9tYVtpMatrg" name="suffix">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ZualdKgmEe-9tYVtpMatrg" type="_ZbJEIKgmEe-9tYVtpMatrg" direction="return"/>
                <language>java</language>
                <body>this.fm = fm;&#xD;
 this.nameExtension = String.format(&quot;-%sM-%sE2E&quot;,&#xD;
     String.valueOf(workLoad.getMinPacketReceptionRate()), String.valueOf(workLoad.getE2e()));&#xD;
 this.suffix = suffix;&#xD;
 visualizationData = null;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ZualdagmEe-9tYVtpMatrg" name="VisualizationObject" specification="_ZrLEMKgmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_ZualdqgmEe-9tYVtpMatrg" name="fm" type="_ZZSC8KgmEe-9tYVtpMatrg"/>
                <ownedParameter xmi:id="_Zuald6gmEe-9tYVtpMatrg" name="warp" type="_Za9d8agmEe-9tYVtpMatrg"/>
                <ownedParameter xmi:id="_ZualeKgmEe-9tYVtpMatrg" name="suffix">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ZualeagmEe-9tYVtpMatrg" type="_ZbJEIKgmEe-9tYVtpMatrg" direction="return"/>
                <language>java</language>
                <body>this.fm = fm;&#xD;
 if (warp.getNumFaults() > 0) {&#xD;
   this.nameExtension = nameExtension(warp.getSchedulerName(), warp.getNumFaults());&#xD;
 } else {&#xD;
   this.nameExtension =&#xD;
       nameExtension(warp.getSchedulerName(), warp.getMinPacketReceptionRate(), warp.getE2e());&#xD;
 }&#xD;
 this.suffix = suffix;&#xD;
 visualizationData = null;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ZualeqgmEe-9tYVtpMatrg" name="VisualizationObject" specification="_ZrLEN6gmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_Zuale6gmEe-9tYVtpMatrg" name="fm" type="_ZZSC8KgmEe-9tYVtpMatrg"/>
                <ownedParameter xmi:id="_ZualfKgmEe-9tYVtpMatrg" name="warp" type="_Za9d8agmEe-9tYVtpMatrg"/>
                <ownedParameter xmi:id="_ZualfagmEe-9tYVtpMatrg" name="nameExtension">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ZualfqgmEe-9tYVtpMatrg" name="suffix">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Zualf6gmEe-9tYVtpMatrg" type="_ZbJEIKgmEe-9tYVtpMatrg" direction="return"/>
                <language>java</language>
                <body>this.fm = fm;&#xD;
 if (warp.getNumFaults() > 0) {&#xD;
   this.nameExtension =&#xD;
       nameExtension(warp.getSchedulerName(), warp.getNumFaults()) + nameExtension;&#xD;
 } else {&#xD;
   this.nameExtension =&#xD;
       nameExtension(warp.getSchedulerName(), warp.getMinPacketReceptionRate(), warp.getE2e())&#xD;
           + nameExtension;&#xD;
 }&#xD;
&#xD;
 this.suffix = suffix;&#xD;
 visualizationData = null;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ZualgKgmEe-9tYVtpMatrg" name="VisualizationObject" specification="_ZrLrQagmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_ZualgagmEe-9tYVtpMatrg" name="fm" type="_ZZSC8KgmEe-9tYVtpMatrg"/>
                <ownedParameter xmi:id="_ZualgqgmEe-9tYVtpMatrg" name="nameExtension">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Zualg6gmEe-9tYVtpMatrg" name="suffix">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ZualhKgmEe-9tYVtpMatrg" type="_ZbJEIKgmEe-9tYVtpMatrg" direction="return"/>
                <language>java</language>
                <body>this.fm = fm;&#xD;
 this.nameExtension = nameExtension;&#xD;
 this.suffix = suffix;&#xD;
 visualizationData = null;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ZualhagmEe-9tYVtpMatrg" name="nameExtension" specification="_ZserwKgmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_ZualhqgmEe-9tYVtpMatrg" name="schName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Zualh6gmEe-9tYVtpMatrg" name="m" type="_ZsQpUKgmEe-9tYVtpMatrg"/>
                <ownedParameter xmi:id="_ZualiKgmEe-9tYVtpMatrg" name="e2e">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ZualiagmEe-9tYVtpMatrg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>String extension =&#xD;
     String.format(&quot;%s-%sM-%sE2E&quot;, schName, String.valueOf(m), String.valueOf(e2e));&#xD;
 return extension;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ZualiqgmEe-9tYVtpMatrg" name="nameExtension" specification="_ZbKSQKgmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_Zuali6gmEe-9tYVtpMatrg" name="schName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ZualjKgmEe-9tYVtpMatrg" name="numFaults">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ZualjagmEe-9tYVtpMatrg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>String extension = String.format(&quot;%s-%sFaults&quot;, schName, String.valueOf(numFaults));&#xD;
 return extension;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ZualjqgmEe-9tYVtpMatrg" name="getFileManager" specification="_ZbK5U6gmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_Zualj6gmEe-9tYVtpMatrg" type="_ZZSC8KgmEe-9tYVtpMatrg" direction="return"/>
                <language>java</language>
                <body>return fm;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ZualkKgmEe-9tYVtpMatrg" name="visualization" specification="_ZbK5VKgmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_ZualkagmEe-9tYVtpMatrg" type="_ZZLVQKgmEe-9tYVtpMatrg" direction="return"/>
                <language>java</language>
                <body>Description content = new Description();&#xD;
 var data = createVisualizationData();&#xD;
&#xD;
 if (data != null) {&#xD;
   String nodeString = String.join(&quot;\t&quot;, createColumnHeader()) + &quot;\n&quot;;&#xD;
   content.add(nodeString);&#xD;
&#xD;
   for (int rowIndex = 0; rowIndex &lt; data.length; rowIndex++) {&#xD;
     var row = data[rowIndex];&#xD;
     String rowString = String.join(&quot;\t&quot;, row) + &quot;\n&quot;;&#xD;
     content.add(rowString);&#xD;
   }&#xD;
 } else {&#xD;
   content.add(NOT_IMPLEMENTED);&#xD;
 }&#xD;
 return content;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ZualkqgmEe-9tYVtpMatrg" name="createFile" specification="_ZbLgYKgmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_Zualk6gmEe-9tYVtpMatrg" name="fileNameTemplate">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ZuallKgmEe-9tYVtpMatrg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return fm.createFile(fileNameTemplate, nameExtension, suffix);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ZuallagmEe-9tYVtpMatrg" name="fileVisualization" specification="_ZbLgY6gmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_ZuallqgmEe-9tYVtpMatrg" type="_ZZLVQKgmEe-9tYVtpMatrg" direction="return"/>
                <language>java</language>
                <body>Description fileContent = createHeader();&#xD;
 fileContent.addAll(visualization());&#xD;
 fileContent.addAll(createFooter());&#xD;
 return fileContent;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Zuall6gmEe-9tYVtpMatrg" name="displayVisualization" specification="_ZbLgZKgmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_ZualmKgmEe-9tYVtpMatrg" type="_ZZlk8KgmEe-9tYVtpMatrg" direction="return"/>
                <language>java</language>
                <body>return null; // not implemented&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ZubMgKgmEe-9tYVtpMatrg" name="createHeader" specification="_ZbLgZagmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_ZubMgagmEe-9tYVtpMatrg" type="_ZZLVQKgmEe-9tYVtpMatrg" direction="return"/>
                <language>java</language>
                <body>Description header = new Description();&#xD;
 return header;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ZubMgqgmEe-9tYVtpMatrg" name="createFooter" specification="_ZbMHcKgmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_ZubMg6gmEe-9tYVtpMatrg" type="_ZZLVQKgmEe-9tYVtpMatrg" direction="return"/>
                <language>java</language>
                <body>Description footer = new Description();&#xD;
 return footer;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ZubMhKgmEe-9tYVtpMatrg" name="createColumnHeader" specification="_ZbMHcagmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_ZubMhagmEe-9tYVtpMatrg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZubMhqgmEe-9tYVtpMatrg" value="*"/>
                </ownedParameter>
                <language>java</language>
                <body>return new String[] {NOT_IMPLEMENTED};&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ZubMh6gmEe-9tYVtpMatrg" name="createVisualizationData" specification="_ZbMHdagmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_ZubMiKgmEe-9tYVtpMatrg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZubMiagmEe-9tYVtpMatrg" value="*"/>
                </ownedParameter>
                <language>java</language>
                <body>return visualizationData; // not implemented--returns null&#xD;
  </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_ZbKSQKgmEe-9tYVtpMatrg" name="nameExtension" visibility="private" method="_ZualiqgmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_ZbK5UKgmEe-9tYVtpMatrg" name="schName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ZbK5UagmEe-9tYVtpMatrg" name="numFaults">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ZbK5UqgmEe-9tYVtpMatrg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_ZbK5U6gmEe-9tYVtpMatrg" name="getFileManager" method="_ZualjqgmEe-9tYVtpMatrg">
                <ownedComment xmi:id="_ZuuuhKgmEe-9tYVtpMatrg">
                  <body>@return the fm</body>
                </ownedComment>
                <ownedParameter xmi:id="_ZrLrSKgmEe-9tYVtpMatrg" type="_ZZSC8KgmEe-9tYVtpMatrg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_ZbK5VKgmEe-9tYVtpMatrg" name="visualization" method="_ZualkKgmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_ZrLrSagmEe-9tYVtpMatrg" type="_ZZLVQKgmEe-9tYVtpMatrg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_ZbLgYKgmEe-9tYVtpMatrg" name="createFile" method="_ZualkqgmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_ZbLgYagmEe-9tYVtpMatrg" name="fileNameTemplate">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ZbLgYqgmEe-9tYVtpMatrg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_ZbLgY6gmEe-9tYVtpMatrg" name="fileVisualization" method="_ZuallagmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_ZrLrSqgmEe-9tYVtpMatrg" type="_ZZLVQKgmEe-9tYVtpMatrg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_ZbLgZKgmEe-9tYVtpMatrg" name="displayVisualization" method="_Zuall6gmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_ZrLrS6gmEe-9tYVtpMatrg" type="_ZZlk8KgmEe-9tYVtpMatrg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_ZbLgZagmEe-9tYVtpMatrg" name="createHeader" visibility="protected" method="_ZubMgKgmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_ZrLrTKgmEe-9tYVtpMatrg" type="_ZZLVQKgmEe-9tYVtpMatrg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_ZbMHcKgmEe-9tYVtpMatrg" name="createFooter" visibility="protected" method="_ZubMgqgmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_ZrLrTagmEe-9tYVtpMatrg" type="_ZZLVQKgmEe-9tYVtpMatrg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_ZbMHcagmEe-9tYVtpMatrg" name="createColumnHeader" visibility="protected" method="_ZubMhKgmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_ZbMHcqgmEe-9tYVtpMatrg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZbMHc6gmEe-9tYVtpMatrg" value="*"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_ZbMHdagmEe-9tYVtpMatrg" name="createVisualizationData" visibility="protected" method="_ZubMh6gmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_ZbMHdqgmEe-9tYVtpMatrg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZbMHd6gmEe-9tYVtpMatrg" value="*"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_ZrKdIKgmEe-9tYVtpMatrg" name="VisualizationObject" visibility="package" method="_ZualcKgmEe-9tYVtpMatrg">
                <eAnnotations xmi:id="_ZrKdJKgmEe-9tYVtpMatrg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_ZrKdJagmEe-9tYVtpMatrg" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_ZrKdIagmEe-9tYVtpMatrg" name="fm" type="_ZZSC8KgmEe-9tYVtpMatrg"/>
                <ownedParameter xmi:id="_ZrKdIqgmEe-9tYVtpMatrg" name="workLoad" type="_Zbu6AqgmEe-9tYVtpMatrg"/>
                <ownedParameter xmi:id="_ZrKdI6gmEe-9tYVtpMatrg" name="suffix">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ZrKdJqgmEe-9tYVtpMatrg" type="_ZbJEIKgmEe-9tYVtpMatrg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_ZrLEMKgmEe-9tYVtpMatrg" name="VisualizationObject" visibility="package" method="_ZualdagmEe-9tYVtpMatrg">
                <eAnnotations xmi:id="_ZrLENKgmEe-9tYVtpMatrg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_ZrLENagmEe-9tYVtpMatrg" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_ZrLEMagmEe-9tYVtpMatrg" name="fm" type="_ZZSC8KgmEe-9tYVtpMatrg"/>
                <ownedParameter xmi:id="_ZrLEMqgmEe-9tYVtpMatrg" name="warp" type="_Za9d8agmEe-9tYVtpMatrg"/>
                <ownedParameter xmi:id="_ZrLEM6gmEe-9tYVtpMatrg" name="suffix">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ZrLENqgmEe-9tYVtpMatrg" type="_ZbJEIKgmEe-9tYVtpMatrg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_ZrLEN6gmEe-9tYVtpMatrg" name="VisualizationObject" visibility="package" method="_ZualeqgmEe-9tYVtpMatrg">
                <eAnnotations xmi:id="_ZrLEPKgmEe-9tYVtpMatrg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_ZrLEPagmEe-9tYVtpMatrg" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_ZrLEOKgmEe-9tYVtpMatrg" name="fm" type="_ZZSC8KgmEe-9tYVtpMatrg"/>
                <ownedParameter xmi:id="_ZrLEOagmEe-9tYVtpMatrg" name="warp" type="_Za9d8agmEe-9tYVtpMatrg"/>
                <ownedParameter xmi:id="_ZrLEOqgmEe-9tYVtpMatrg" name="nameExtension">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ZrLEO6gmEe-9tYVtpMatrg" name="suffix">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ZrLrQKgmEe-9tYVtpMatrg" type="_ZbJEIKgmEe-9tYVtpMatrg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_ZrLrQagmEe-9tYVtpMatrg" name="VisualizationObject" visibility="package" method="_ZualgKgmEe-9tYVtpMatrg">
                <eAnnotations xmi:id="_ZrLrRagmEe-9tYVtpMatrg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_ZrLrRqgmEe-9tYVtpMatrg" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_ZrLrQqgmEe-9tYVtpMatrg" name="fm" type="_ZZSC8KgmEe-9tYVtpMatrg"/>
                <ownedParameter xmi:id="_ZrLrQ6gmEe-9tYVtpMatrg" name="nameExtension">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ZrLrRKgmEe-9tYVtpMatrg" name="suffix">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ZrLrR6gmEe-9tYVtpMatrg" type="_ZbJEIKgmEe-9tYVtpMatrg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_ZserwKgmEe-9tYVtpMatrg" name="nameExtension" visibility="private" method="_ZualhagmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_ZserwagmEe-9tYVtpMatrg" name="schName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ZserwqgmEe-9tYVtpMatrg" name="m" type="_ZsQpUKgmEe-9tYVtpMatrg"/>
                <ownedParameter xmi:id="_Zserw6gmEe-9tYVtpMatrg" name="e2e">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ZserxKgmEe-9tYVtpMatrg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_ZbPKwKgmEe-9tYVtpMatrg" name="Warp">
              <ownedComment xmi:id="_ZuuuhagmEe-9tYVtpMatrg">
                <body>The Warp class sets default values of constants and also sets the warp parameters for the&#xD;
given input. It creates and visualizes any requested output files and runs verification&#xD;
checks to make sure deadlines and reliability targets are met, and that there are no &#xD;
channel conflicts. Runs additional tests to make sure everything will run smoothly. This&#xD;
class also prints out all warp parameters along with Boolean expressions for if any flags&#xD;
are requested. &#xD;
@author sgoddard&#xD;
@version 1.8 Fall 2024</body>
              </ownedComment>
              <ownedAttribute xmi:id="_Ztn7QKgmEe-9tYVtpMatrg" name="NUM_CHANNELS" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_Ztn7QagmEe-9tYVtpMatrg" value="16"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_Ztn7QqgmEe-9tYVtpMatrg" name="MIN_LQ" visibility="private" isLeaf="true" isStatic="true" type="_ZsQpUKgmEe-9tYVtpMatrg" isReadOnly="true">
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_Ztn7Q6gmEe-9tYVtpMatrg" value="0.9"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_Ztn7RKgmEe-9tYVtpMatrg" name="E2E" visibility="private" isLeaf="true" isStatic="true" type="_ZsQpUKgmEe-9tYVtpMatrg" isReadOnly="true">
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_Ztn7RagmEe-9tYVtpMatrg" value="0.99"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_Ztn7RqgmEe-9tYVtpMatrg" name="DEFAULT_OUTPUT_SUB_DIRECTORY" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_Ztn7R6gmEe-9tYVtpMatrg" value="&quot;OutputFiles/&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_Ztn7SKgmEe-9tYVtpMatrg" name="DEFAULT_SCHEDULER" visibility="private" isLeaf="true" isStatic="true" type="_Za-FAKgmEe-9tYVtpMatrg" isReadOnly="true">
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_Ztn7SagmEe-9tYVtpMatrg" value="ScheduleChoices.PRIORITY"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_Ztn7SqgmEe-9tYVtpMatrg" name="DEFAULT_FAULTS_TOLERATED" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_Ztn7S6gmEe-9tYVtpMatrg" value="0"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_Ztn7TKgmEe-9tYVtpMatrg" name="nChannels" visibility="private" isStatic="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_ZtoiUagmEe-9tYVtpMatrg" name="numFaults" visibility="private" isStatic="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_ZtoiU6gmEe-9tYVtpMatrg" name="minLQ" visibility="private" isStatic="true" type="_ZsQpUKgmEe-9tYVtpMatrg"/>
              <ownedAttribute xmi:id="_ZtoiVagmEe-9tYVtpMatrg" name="e2e" visibility="private" isStatic="true" type="_ZsQpUKgmEe-9tYVtpMatrg"/>
              <ownedAttribute xmi:id="_ZtoiV6gmEe-9tYVtpMatrg" name="outputSubDirectory" visibility="private" isStatic="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_ZtoiWagmEe-9tYVtpMatrg" name="guiRequested" isStatic="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_ZtpJYagmEe-9tYVtpMatrg" name="gvRequested" visibility="private" isStatic="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_ZtpJY6gmEe-9tYVtpMatrg" name="wfRequested" visibility="private" isStatic="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_ZtpJZagmEe-9tYVtpMatrg" name="raRequested" visibility="private" isStatic="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_ZtpJZ6gmEe-9tYVtpMatrg" name="laRequested" visibility="private" isStatic="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_ZtpJaagmEe-9tYVtpMatrg" name="caRequested" visibility="private" isStatic="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_ZtpwcagmEe-9tYVtpMatrg" name="simRequested" visibility="private" isStatic="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_Ztpwc6gmEe-9tYVtpMatrg" name="allRequested" visibility="private" isStatic="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_ZtrloKgmEe-9tYVtpMatrg" name="latencyRequested" visibility="private" isStatic="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_ZtsMsagmEe-9tYVtpMatrg" name="schedulerRequested" visibility="private" isStatic="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_ZtsMsqgmEe-9tYVtpMatrg" value="false"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_ZtszwagmEe-9tYVtpMatrg" name="verboseMode" visibility="private" isStatic="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_Ztszw6gmEe-9tYVtpMatrg" name="inputFile" visibility="private" isStatic="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_Ztta0agmEe-9tYVtpMatrg" name="schedulerSelected" visibility="private" isStatic="true" type="_Za-FAKgmEe-9tYVtpMatrg"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ZubMiqgmEe-9tYVtpMatrg" name="main" specification="_ZbRnAKgmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_ZubMi6gmEe-9tYVtpMatrg" name="args">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZubMjKgmEe-9tYVtpMatrg" value="*"/>
                </ownedParameter>
                <language>java</language>
                <body>// parse command-line options and set WARP system parameters&#xD;
 setWarpParameters(args);&#xD;
&#xD;
 // and print out the values if in verbose mode&#xD;
 if (verboseMode) {&#xD;
   printWarpParameters();&#xD;
 }&#xD;
&#xD;
 // Create and visualize the workload&#xD;
 // inputFile string, which may be null,&#xD;
 WorkLoad workLoad = new WorkLoad(numFaults, minLQ, e2e, inputFile);&#xD;
 if (allRequested) {&#xD;
   for (WorkLoadChoices choice : WorkLoadChoices.values()) {&#xD;
     visualize(workLoad, choice); // visualize all Program choices&#xD;
   }&#xD;
   // Create and visualize the Warp System&#xD;
   if (schedulerRequested) {&#xD;
     WarpInterface warp = SystemFactory.create(workLoad, nChannels, schedulerSelected);&#xD;
     verifyPerformanceRequirements(warp);&#xD;
     for (SystemChoices choice : SystemChoices.values()) {&#xD;
       visualize(warp, choice); // visualize all System choices&#xD;
     }&#xD;
   } else { // create a system for all scheduler choices&#xD;
     for (ScheduleChoices sch : ScheduleChoices.values()) {&#xD;
       schedulerSelected = sch;&#xD;
       WarpInterface warp = SystemFactory.create(workLoad, nChannels, schedulerSelected);&#xD;
       verifyPerformanceRequirements(warp);&#xD;
       for (SystemChoices choice : SystemChoices.values()) {&#xD;
         visualize(warp, choice); // visualize all System choices&#xD;
       }&#xD;
     }&#xD;
   }&#xD;
 } else { // visualize warp workload, source program and other requested items&#xD;
   visualize(workLoad, WorkLoadChoices.INPUT_GRAPH);&#xD;
   if (wfRequested) {&#xD;
     visualize(workLoad, WorkLoadChoices.COMUNICATION_GRAPH);&#xD;
   }&#xD;
   if (gvRequested) {&#xD;
     visualize(workLoad, WorkLoadChoices.GRAPHVIZ);&#xD;
   }&#xD;
   WarpInterface warp = SystemFactory.create(workLoad, nChannels, schedulerSelected);&#xD;
   verifyPerformanceRequirements(warp);&#xD;
   visualize(warp, SystemChoices.SOURCE);&#xD;
   if (caRequested) {&#xD;
     visualize(warp, SystemChoices.CHANNEL);&#xD;
   }&#xD;
   if (laRequested) {&#xD;
     visualize(warp, SystemChoices.LATENCY);&#xD;
   }&#xD;
   if (latencyRequested || laRequested) {&#xD;
     visualize(warp, SystemChoices.LATENCY_REPORT);&#xD;
   }&#xD;
   if (raRequested) {&#xD;
     visualize(warp, SystemChoices.RELIABILITIES);&#xD;
   }&#xD;
 }&#xD;
&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ZubMjagmEe-9tYVtpMatrg" name="visualize" specification="_ZrOHgKgmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_ZubMjqgmEe-9tYVtpMatrg" name="workLoad" type="_Zbu6AqgmEe-9tYVtpMatrg"/>
                <ownedParameter xmi:id="_ZubMj6gmEe-9tYVtpMatrg" name="choice" type="_ZbDkkKgmEe-9tYVtpMatrg"/>
                <language>java</language>
                <body>var viz =&#xD;
     VisualizationFactory.createVisualization(workLoad, outputSubDirectory, choice);&#xD;
 if (viz != null) {&#xD;
   if (verboseMode) {&#xD;
     System.out.println(viz.toString());&#xD;
   }&#xD;
   viz.toFile();&#xD;
   if (guiRequested) {&#xD;
     viz.toDisplay();&#xD;
   }&#xD;
 }&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ZubMkKgmEe-9tYVtpMatrg" name="visualize" specification="_ZrOHg6gmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_ZubMkagmEe-9tYVtpMatrg" name="warp" type="_ZbdNMKgmEe-9tYVtpMatrg"/>
                <ownedParameter xmi:id="_ZubMkqgmEe-9tYVtpMatrg" name="choice" type="_ZbC9gKgmEe-9tYVtpMatrg"/>
                <language>java</language>
                <body>var viz = VisualizationFactory.createVisualization(warp, outputSubDirectory, choice);&#xD;
 if (viz != null) {&#xD;
   viz.toFile();&#xD;
   if (guiRequested &amp;&amp; schedulerRequested) {&#xD;
     /* Only display window when a specific scheduler has been requested */&#xD;
     viz.toDisplay();&#xD;
   }&#xD;
 }&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ZubMk6gmEe-9tYVtpMatrg" name="verifyPerformanceRequirements" specification="_ZrOHhqgmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_ZubMlKgmEe-9tYVtpMatrg" name="warp" type="_ZbdNMKgmEe-9tYVtpMatrg"/>
                <language>java</language>
                <body>verifyDeadlines(warp);&#xD;
 verifyReliabilities(warp);&#xD;
 verifyNoChannelConflicts(warp);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ZubzkKgmEe-9tYVtpMatrg" name="verifyReliabilities" specification="_ZrOukKgmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_ZubzkagmEe-9tYVtpMatrg" name="warp" type="_ZbdNMKgmEe-9tYVtpMatrg"/>
                <language>java</language>
                <body>if (schedulerSelected != ScheduleChoices.RTHART) {&#xD;
   /* RealTime HART doesn't adhere to reliability targets */&#xD;
   if (!warp.reliabilitiesMet()) {&#xD;
     System.err.printf(&#xD;
         &quot;\n\tERROR: Not all flows meet the end-to-end &quot;&#xD;
             + &quot;reliability of %s under %s scheduling.\n&quot;,&#xD;
         String.valueOf(e2e), schedulerSelected.toString());&#xD;
   } else if (verboseMode) {&#xD;
     System.out.printf(&#xD;
         &quot;\n\tAll flows meet the end-to-end reliability &quot; + &quot;of %s under %s scheduling.\n&quot;,&#xD;
         String.valueOf(e2e), schedulerSelected.toString());&#xD;
   }&#xD;
 }&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ZubzkqgmEe-9tYVtpMatrg" name="verifyDeadlines" specification="_ZrOukqgmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_Zubzk6gmEe-9tYVtpMatrg" name="warp" type="_ZbdNMKgmEe-9tYVtpMatrg"/>
                <language>java</language>
                <body>if (!warp.deadlinesMet()) {&#xD;
   System.err.printf(&quot;\n\tERROR: Not all flows meet their deadlines under %s scheduling.\n&quot;,&#xD;
       schedulerSelected.toString());&#xD;
   visualize(warp, SystemChoices.DEADLINE_REPORT);&#xD;
 } else if (verboseMode) {&#xD;
   System.out.printf(&quot;\n\tAll flows meet their deadlines under %s scheduling.\n&quot;,&#xD;
       schedulerSelected.toString());&#xD;
 }&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ZubzlKgmEe-9tYVtpMatrg" name="verifyNoChannelConflicts" specification="_ZrOulKgmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_ZubzlagmEe-9tYVtpMatrg" name="warp" type="_ZbdNMKgmEe-9tYVtpMatrg"/>
                <language>java</language>
                <body>if (warp.toChannelAnalysis().isChannelConflict()) {&#xD;
   System.err&#xD;
       .printf(&quot;\n\tERROR: Channel conficts exists. See Channel Visualization for details.\n&quot;);&#xD;
   if (!caRequested) { // only need to create the visualization if not already requested&#xD;
     visualize(warp, SystemChoices.CHANNEL);&#xD;
   }&#xD;
 } else if (verboseMode) {&#xD;
   System.out.printf(&quot;\n\tNo channel conflicts detected.\n&quot;);&#xD;
 }&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ZubzlqgmEe-9tYVtpMatrg" name="setWarpParameters" specification="_ZbS1IKgmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_Zubzl6gmEe-9tYVtpMatrg" name="args">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZubzmKgmEe-9tYVtpMatrg" value="*"/>
                </ownedParameter>
                <language>java</language>
                <body>// move command line parsing into this&#xD;
                                                      // function--need to set up globals?&#xD;
&#xD;
 // create holder objects for storing results ...&#xD;
 // BooleanHolder debug = new BooleanHolder();&#xD;
 StringHolder schedulerSelected = new StringHolder();&#xD;
 IntHolder channels = new IntHolder();&#xD;
 IntHolder faults = new IntHolder();&#xD;
 DoubleHolder m = new DoubleHolder();&#xD;
 DoubleHolder end2end = new DoubleHolder();&#xD;
 BooleanHolder gui = new BooleanHolder();&#xD;
 BooleanHolder gv = new BooleanHolder();&#xD;
 BooleanHolder wf = new BooleanHolder();&#xD;
 BooleanHolder ra = new BooleanHolder();&#xD;
 BooleanHolder la = new BooleanHolder();&#xD;
 BooleanHolder ca = new BooleanHolder();&#xD;
 BooleanHolder s = new BooleanHolder();&#xD;
 BooleanHolder all = new BooleanHolder();&#xD;
 BooleanHolder latency = new BooleanHolder();&#xD;
 BooleanHolder verbose = new BooleanHolder();&#xD;
 StringHolder input = new StringHolder();&#xD;
 StringHolder output = new StringHolder();&#xD;
&#xD;
 // create the parser and specify the allowed options ...&#xD;
 ArgParser parser = new ArgParser(&quot;java -jar warp.jar&quot;);&#xD;
 parser.addOption(&quot;-sch, --schedule %s {priority,rm,dm,rtHart,poset} #scheduler options&quot;,&#xD;
     schedulerSelected);&#xD;
 parser.addOption(&quot;-c, --channels %d {[1,16]} #number of wireless channels&quot;, channels);&#xD;
 parser.addOption(&quot;-m %f {[0.5,1.0]} #minimum link quality in the system&quot;, m);&#xD;
 parser.addOption(&#xD;
     &quot;-e, --e2e %f {[0.5,1.0]} #global end-to-end communcation reliability for all flows&quot;,&#xD;
     end2end);&#xD;
 parser.addOption(&quot;-f, --faults %d {[1,10]} #number of faults per edge in a flow (per period)&quot;,&#xD;
     faults);&#xD;
 parser.addOption(&quot;-gui %v #create a gui visualizations&quot;, gui);&#xD;
 parser.addOption(&quot;-gv %v #create a graph visualization (.gv) file for GraphViz&quot;, gv);&#xD;
 parser.addOption(&#xD;
     &quot;-wf  %v #create a WARP (.wf) file that shows the maximum number of transmissions on each segment of the flow needed to meet the end-to-end reliability&quot;,&#xD;
     wf);&#xD;
 parser.addOption(&#xD;
     &quot;-ra  %v #create a reliability analysis file (tab delimited .csv) for the warp program&quot;,&#xD;
     ra);&#xD;
 parser.addOption(&#xD;
     &quot;-la  %v #create a latency analysis file (tab delimited .csv) for the warp program&quot;, la);&#xD;
 parser.addOption(&#xD;
     &quot;-ca  %v #create a channel analysis file (tab delimited .csv) for the warp program&quot;, ca);&#xD;
 parser.addOption(&quot;-s  %v #create a simulator input file (.txt) for the warp program&quot;, s);&#xD;
 parser.addOption(&quot;-a, --all  %v #create all output files (activates -gv, -wf, -ra, -s)&quot;, all);&#xD;
 parser.addOption(&quot;-l, --latency  %v #generates end-to-end latency report file (.txt)&quot;, latency);&#xD;
 parser.addOption(&quot;-i, --input %s #&lt;InputFile> of graph flows (workload)&quot;, input);&#xD;
 parser.addOption(&quot;-o, --output %s #&lt;OutputDIRECTORY> where output files will be placed&quot;,&#xD;
     output);&#xD;
 parser.addOption(&#xD;
     &quot;-v, --verbose %v #Echo input file name and parsed contents. Then for each flow instance: show maximum E2E latency and min/max communication cost for that instance of the flow&quot;,&#xD;
     verbose);&#xD;
 // parser.addOption (&quot;-d, -debug, --debug %v #Debug mode: base directory =&#xD;
 // $HOME/Documents/WARP/&quot;, debug);&#xD;
&#xD;
&#xD;
 // match the arguments ...&#xD;
 parser.matchAllArgs(args);&#xD;
&#xD;
 // Set WARP system configuration options&#xD;
 if (channels.value > 0) {&#xD;
   nChannels = channels.value; // set option specified&#xD;
 } else {&#xD;
   nChannels = NUM_CHANNELS; // set to default&#xD;
 }&#xD;
 if (faults.value > 0) { // global variable for # of Faults tolerated per edge&#xD;
   numFaults = faults.value; // set option specified&#xD;
 } else {&#xD;
   numFaults = DEFAULT_FAULTS_TOLERATED; // set to default&#xD;
 }&#xD;
 if (m.value > 0.0) { // global variable for minimum Link Quality in system&#xD;
   minLQ = m.value; // set option specified&#xD;
 } else {&#xD;
   minLQ = MIN_LQ; // set to default&#xD;
 }&#xD;
 if (end2end.value > 0.0) { // global variable for minimum Link Quality in system&#xD;
   e2e = end2end.value; // set option specified&#xD;
 } else {&#xD;
   e2e = E2E; // set to default&#xD;
 }&#xD;
 if (output.value != null) { // default output subdirectory (from working directory)&#xD;
   outputSubDirectory = output.value; // set option specified&#xD;
 } else {&#xD;
   outputSubDirectory = DEFAULT_OUTPUT_SUB_DIRECTORY; // set to default&#xD;
 }&#xD;
&#xD;
 guiRequested = gui.value; // GraphVis file requested flag&#xD;
 gvRequested = gv.value; // GraphVis file requested flag&#xD;
 wfRequested = wf.value; // WARP file requested flag&#xD;
 raRequested = ra.value; // Reliability Analysis file requested flag&#xD;
 laRequested = la.value; // Latency Analysis file requested flag&#xD;
 caRequested = ca.value; // Latency Analysis file requested flag&#xD;
 simRequested = s.value; // Simulation file requested flag&#xD;
 allRequested = all.value; // all out files requested flag&#xD;
 latencyRequested = latency.value; // latency report requested flag&#xD;
 verboseMode = verbose.value; // verbose mode flag (mainly for running in IDE)&#xD;
 // debugMode = debug.value; // debug mode flag (mainly for running in IDE)&#xD;
 inputFile = input.value; // input file specified&#xD;
 if (schedulerSelected.value != null) { // can't switch on a null value so check then switch&#xD;
   schedulerRequested = true;&#xD;
   switch (schedulerSelected.value) {&#xD;
     case &quot;priority&quot;:&#xD;
       Warp.schedulerSelected = ScheduleChoices.PRIORITY;&#xD;
       break;&#xD;
&#xD;
     case &quot;rm&quot;:&#xD;
       Warp.schedulerSelected = ScheduleChoices.RM;&#xD;
       break;&#xD;
&#xD;
     case &quot;dm&quot;:&#xD;
       Warp.schedulerSelected = ScheduleChoices.DM;&#xD;
       break;&#xD;
&#xD;
     case &quot;rtHart&quot;:&#xD;
       Warp.schedulerSelected = ScheduleChoices.RTHART;&#xD;
       break;&#xD;
&#xD;
     case &quot;poset&quot;:&#xD;
       Warp.schedulerSelected = ScheduleChoices.POSET_PRIORITY;&#xD;
       break;&#xD;
&#xD;
     default:&#xD;
       Warp.schedulerSelected = ScheduleChoices.PRIORITY;&#xD;
       break;&#xD;
   }&#xD;
 } else { // null value when no scheduler specified; so use default&#xD;
   Warp.schedulerSelected = DEFAULT_SCHEDULER;&#xD;
 }&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ZubzmagmEe-9tYVtpMatrg" name="printWarpParameters" specification="_ZbS1JKgmEe-9tYVtpMatrg">
                <language>java</language>
                <body>// print all system configuration parameters&#xD;
 // Print out each of the system configuration values&#xD;
 System.out.println(&quot;WARP system configuration values:&quot;);&#xD;
 System.out.println(&quot;\tScheduler=&quot; + schedulerSelected);&#xD;
 System.out.println(&quot;\tnChanels=&quot; + nChannels);&#xD;
 System.out.println(&quot;\tnumFaults=&quot; + numFaults);&#xD;
 System.out.println(&quot;\tminLQ=&quot; + minLQ);&#xD;
 System.out.println(&quot;\tE2E=&quot; + e2e);&#xD;
 System.out.println(&quot;\tguiRequest flag=&quot; + guiRequested);&#xD;
 System.out.println(&quot;\tgvRequest flag=&quot; + gvRequested);&#xD;
 System.out.println(&quot;\twfRequest flag=&quot; + wfRequested);&#xD;
 System.out.println(&quot;\traRequest flag=&quot; + raRequested);&#xD;
 System.out.println(&quot;\tlaRequest flag=&quot; + laRequested);&#xD;
 System.out.println(&quot;\tcaRequest flag=&quot; + caRequested);&#xD;
 System.out.println(&quot;\tsimRequest flag=&quot; + simRequested);&#xD;
 System.out.println(&quot;\tallOutFilesRequest flag=&quot; + allRequested);&#xD;
 System.out.println(&quot;\tlatency flag=&quot; + latencyRequested);&#xD;
 if (inputFile != null) {&#xD;
   System.out.println(&quot;\tinput file=&quot; + inputFile);&#xD;
 } else {&#xD;
   System.out.println(&quot;\tNo input file specified; will be requested when needed.&quot;);&#xD;
 }&#xD;
 System.out.println(&quot;\toutputSubDirectory=&quot; + outputSubDirectory);&#xD;
 System.out.println(&quot;\tverbose flag=&quot; + verboseMode);&#xD;
 // System.out.println (&quot;\tdebug flag=&quot; + debugMode);&#xD;
  </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_ZbRnAKgmEe-9tYVtpMatrg" name="main" isStatic="true" method="_ZubMiqgmEe-9tYVtpMatrg">
                <ownedComment xmi:id="_ZuuuhqgmEe-9tYVtpMatrg">
                  <body>Main method sets warp parameters with given input arguments and prints out the parameters&#xD;
   * if in verbose mode. It creates and visualizes the new workload. If the all output files &#xD;
   * flag is requested, it visualizes all workLoad Program choices and creates and visualizes&#xD;
   * the Warp System with all warp System choices. If not all output files are requested, it&#xD;
   * still visualizes the ones asked for of warp workload, source program, and other requested&#xD;
   * output items.&#xD;
   * @param args Command-line arguments passed to the application.</body>
                </ownedComment>
                <ownedParameter xmi:id="_ZbSOEKgmEe-9tYVtpMatrg" name="args">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZbSOEagmEe-9tYVtpMatrg" value="*"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_ZbS1IKgmEe-9tYVtpMatrg" name="setWarpParameters" visibility="private" isStatic="true" method="_ZubzlqgmEe-9tYVtpMatrg">
                <ownedComment xmi:id="_ZuuujagmEe-9tYVtpMatrg">
                  <body>Creates holder objects to store results and creates the parser to process and comprehend &#xD;
   * the input data. Also checks that all arguments are valid and sets values for parser. It &#xD;
   * checks which flags are present and stores this as a Boolean value. Additionally, checks &#xD;
   * if schedulerSelected value is null and cannot run is null. Then checks value of &#xD;
   * schedulerSelected to see what the value wants to do and runs method before it breaks.&#xD;
   * @param args</body>
                </ownedComment>
                <ownedParameter xmi:id="_ZbS1IagmEe-9tYVtpMatrg" name="args">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZbS1IqgmEe-9tYVtpMatrg" value="*"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_ZbS1JKgmEe-9tYVtpMatrg" name="printWarpParameters" visibility="private" isStatic="true" method="_ZubzmagmEe-9tYVtpMatrg">
                <ownedComment xmi:id="_ZuuujqgmEe-9tYVtpMatrg">
                  <body>Prints out all system configuration parameters including the scheduler, channels,&#xD;
   * number of faults, minimum Link Quality, end-to-end reliability, and if any flags&#xD;
   * are requested. Prints out the input file if given and if there is not one, it &#xD;
   * alerts that one will be needed.</body>
                </ownedComment>
              </ownedOperation>
              <ownedOperation xmi:id="_ZrOHgKgmEe-9tYVtpMatrg" name="visualize" visibility="private" isStatic="true" method="_ZubMjagmEe-9tYVtpMatrg">
                <ownedComment xmi:id="_Zuuuh6gmEe-9tYVtpMatrg">
                  <body>Creates a visualization instance of input WorkLoad workLoad and WorkLoadChoices&#xD;
   * choice. If the visualization is null and if verboseMode holds True, prints out&#xD;
   * viz as a String, otherwise, convert viz to a file and if gui flag is requested,&#xD;
   * convert viz to a display.&#xD;
   * @param workLoad&#xD;
   * @param choice</body>
                </ownedComment>
                <ownedParameter xmi:id="_ZrOHgagmEe-9tYVtpMatrg" name="workLoad" type="_Zbu6AqgmEe-9tYVtpMatrg"/>
                <ownedParameter xmi:id="_ZrOHgqgmEe-9tYVtpMatrg" name="choice" type="_ZbDkkKgmEe-9tYVtpMatrg"/>
              </ownedOperation>
              <ownedOperation xmi:id="_ZrOHg6gmEe-9tYVtpMatrg" name="visualize" visibility="private" isStatic="true" method="_ZubMkKgmEe-9tYVtpMatrg">
                <ownedComment xmi:id="_ZuuuiKgmEe-9tYVtpMatrg">
                  <body>Creates a visualization instance of input WarpInterface warp with SystemChoices &#xD;
   * choice. If visualization is null, turns viz to a file, and if gui and schedule &#xD;
   * flags are requested, turn viz into a display.&#xD;
   * @param warp&#xD;
   * @param choice</body>
                </ownedComment>
                <ownedParameter xmi:id="_ZrOHhKgmEe-9tYVtpMatrg" name="warp" type="_ZbdNMKgmEe-9tYVtpMatrg"/>
                <ownedParameter xmi:id="_ZrOHhagmEe-9tYVtpMatrg" name="choice" type="_ZbC9gKgmEe-9tYVtpMatrg"/>
              </ownedOperation>
              <ownedOperation xmi:id="_ZrOHhqgmEe-9tYVtpMatrg" name="verifyPerformanceRequirements" visibility="private" isStatic="true" method="_ZubMk6gmEe-9tYVtpMatrg">
                <ownedComment xmi:id="_ZuuuiagmEe-9tYVtpMatrg">
                  <body>Runs verification checks over if deadlines are met, if reliability targets&#xD;
   * are met, and if there are channel conflicts for the input WarpInterface warp.&#xD;
   * @param warp</body>
                </ownedComment>
                <ownedParameter xmi:id="_ZrOHh6gmEe-9tYVtpMatrg" name="warp" type="_ZbdNMKgmEe-9tYVtpMatrg"/>
              </ownedOperation>
              <ownedOperation xmi:id="_ZrOukKgmEe-9tYVtpMatrg" name="verifyReliabilities" visibility="private" isStatic="true" method="_ZubzkKgmEe-9tYVtpMatrg">
                <ownedComment xmi:id="_ZuuuiqgmEe-9tYVtpMatrg">
                  <body>Checks that the reliability targets are met in input warp. If reliability&#xD;
   * is not met, prints an error statement. If verboseMode is True with the input, &#xD;
   * prints out statement that flows meet reliability in this instance.&#xD;
   * @param warp</body>
                </ownedComment>
                <ownedParameter xmi:id="_ZrOukagmEe-9tYVtpMatrg" name="warp" type="_ZbdNMKgmEe-9tYVtpMatrg"/>
              </ownedOperation>
              <ownedOperation xmi:id="_ZrOukqgmEe-9tYVtpMatrg" name="verifyDeadlines" visibility="private" isStatic="true" method="_ZubzkqgmEe-9tYVtpMatrg">
                <ownedComment xmi:id="_Zuuui6gmEe-9tYVtpMatrg">
                  <body>Checks if the deadlines are met in input warp. If deadlines are not met, prints&#xD;
   * out an error message and visualizes a Deadline Report. If verboseMode is true for&#xD;
   * input, prints out a message telling the deadlines are all met.&#xD;
   * @param warp</body>
                </ownedComment>
                <ownedParameter xmi:id="_ZrOuk6gmEe-9tYVtpMatrg" name="warp" type="_ZbdNMKgmEe-9tYVtpMatrg"/>
              </ownedOperation>
              <ownedOperation xmi:id="_ZrOulKgmEe-9tYVtpMatrg" name="verifyNoChannelConflicts" visibility="private" isStatic="true" method="_ZubzlKgmEe-9tYVtpMatrg">
                <ownedComment xmi:id="_ZuuujKgmEe-9tYVtpMatrg">
                  <body>Determines if there is a channel conflict in the WarpInterface warp given &#xD;
   * as input. Creates a Channel Analysis visualization if not already requested.&#xD;
   * @param warp</body>
                </ownedComment>
                <ownedParameter xmi:id="_ZrOulagmEe-9tYVtpMatrg" name="warp" type="_ZbdNMKgmEe-9tYVtpMatrg"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_ZbV4cKgmEe-9tYVtpMatrg" name="WarpDSL">
              <ownedComment xmi:id="_Zuuuj6gmEe-9tYVtpMatrg">
                <body>@author sgoddard&#xD;
 *</body>
              </ownedComment>
              <ownedAttribute xmi:id="_Ztta06gmEe-9tYVtpMatrg" name="UNKNOWN" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_Ztta1KgmEe-9tYVtpMatrg" value="&quot;unknown&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_ZtuB4KgmEe-9tYVtpMatrg" name="UNUSED" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_ZtuB4agmEe-9tYVtpMatrg" value="&quot;unused&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_Ztuo8KgmEe-9tYVtpMatrg" name="PUSH" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_Ztuo8agmEe-9tYVtpMatrg" value="&quot;push&quot;"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ZucaqKgmEe-9tYVtpMatrg" name="getInstructionParameters" specification="_ZbZi0KgmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_ZucaqagmEe-9tYVtpMatrg" name="instruction">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ZucaqqgmEe-9tYVtpMatrg" type="_Zp__gKgmEe-9tYVtpMatrg" direction="return"/>
                <language>java</language>
                <body>ArrayList&lt;InstructionParameters> instructionParametersArrayList;&#xD;
 	var dsl = new ListenerDsl();&#xD;
     // Read input file and build AST of graph&#xD;
     try {&#xD;
     	CharStream inputInstruction = CharStreams.fromString(instruction);&#xD;
     	var lexer = new WARPdslLexer(inputInstruction);&#xD;
     	var instructionTokens = new CommonTokenStream(lexer);&#xD;
     	var parser = new WARPdslParser(instructionTokens);&#xD;
     	ParseTree instructionTree = parser.instruction(); // begin parsing at rule 'warp'&#xD;
     	var warp = new ParseTreeWalker();&#xD;
     	warp.walk(dsl, instructionTree);&#xD;
     } catch (Exception e) {&#xD;
     	e.printStackTrace();&#xD;
     	System.err.println(&quot;Unable to parse instruction instruction from the schedule entry:&quot; + e.getMessage());&#xD;
     }&#xD;
     instructionParametersArrayList = dsl.getInstructionParameters();&#xD;
     return instructionParametersArrayList;&#xD;
 </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_ZbZi0KgmEe-9tYVtpMatrg" name="getInstructionParameters" method="_ZucaqKgmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_ZbZi0agmEe-9tYVtpMatrg" name="instruction">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Zsf54KgmEe-9tYVtpMatrg" type="_Zp__gKgmEe-9tYVtpMatrg" direction="return"/>
              </ownedOperation>
              <nestedClassifier xmi:type="uml:Class" xmi:id="_ZbXGkKgmEe-9tYVtpMatrg" name="InstructionParameters">
                <ownedAttribute xmi:id="_Ztuo8qgmEe-9tYVtpMatrg" name="name" isReadOnly="true">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <defaultValue xmi:type="uml:LiteralString" xmi:id="_ZtvQAKgmEe-9tYVtpMatrg" value="UNUSED"/>
                </ownedAttribute>
                <ownedAttribute xmi:id="_ZtvQAagmEe-9tYVtpMatrg" name="flow" isReadOnly="true">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <defaultValue xmi:type="uml:LiteralString" xmi:id="_ZtvQAqgmEe-9tYVtpMatrg" value="UNUSED"/>
                </ownedAttribute>
                <ownedAttribute xmi:id="_ZtvQA6gmEe-9tYVtpMatrg" name="src" isReadOnly="true">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <defaultValue xmi:type="uml:LiteralString" xmi:id="_ZtvQBKgmEe-9tYVtpMatrg" value="UNUSED"/>
                </ownedAttribute>
                <ownedAttribute xmi:id="_ZtvQBagmEe-9tYVtpMatrg" name="snk" isReadOnly="true">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <defaultValue xmi:type="uml:LiteralString" xmi:id="_ZtvQBqgmEe-9tYVtpMatrg" value="UNUSED"/>
                </ownedAttribute>
                <ownedAttribute xmi:id="_ZtvQB6gmEe-9tYVtpMatrg" name="channel" isReadOnly="true">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <defaultValue xmi:type="uml:LiteralString" xmi:id="_Ztv3EKgmEe-9tYVtpMatrg" value="UNUSED"/>
                </ownedAttribute>
                <ownedAttribute xmi:id="_Ztv3EagmEe-9tYVtpMatrg" name="coordinator" visibility="private">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <defaultValue xmi:type="uml:LiteralString" xmi:id="_Ztv3EqgmEe-9tYVtpMatrg" value="UNKNOWN"/>
                </ownedAttribute>
                <ownedAttribute xmi:id="_Ztv3FKgmEe-9tYVtpMatrg" name="listener">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <defaultValue xmi:type="uml:LiteralString" xmi:id="_Ztv3FagmEe-9tYVtpMatrg" value="UNKNOWN"/>
                </ownedAttribute>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ZubzmqgmEe-9tYVtpMatrg" name="getCoordinator" specification="_ZbXtoKgmEe-9tYVtpMatrg">
                  <ownedParameter xmi:id="_Zubzm6gmEe-9tYVtpMatrg" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>return coordinator;&#xD;
		</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ZubznKgmEe-9tYVtpMatrg" name="setCoordinator" specification="_ZbYUsKgmEe-9tYVtpMatrg">
                  <ownedParameter xmi:id="_ZubznagmEe-9tYVtpMatrg" name="coordinator">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>this.coordinator = coordinator;&#xD;
		</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ZubznqgmEe-9tYVtpMatrg" name="setName" specification="_ZbYUsqgmEe-9tYVtpMatrg">
                  <ownedParameter xmi:id="_Zubzn6gmEe-9tYVtpMatrg" name="name">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>this.name = name;&#xD;
     </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ZubzoKgmEe-9tYVtpMatrg" name="setFlow" specification="_ZbYUtKgmEe-9tYVtpMatrg">
                  <ownedParameter xmi:id="_ZubzoagmEe-9tYVtpMatrg" name="flow">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>this.flow = flow;&#xD;
     </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ZucaoKgmEe-9tYVtpMatrg" name="setSrc" specification="_ZbYUtqgmEe-9tYVtpMatrg">
                  <ownedParameter xmi:id="_ZucaoagmEe-9tYVtpMatrg" name="src">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>this.src = src;&#xD;
     </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ZucaoqgmEe-9tYVtpMatrg" name="setSnk" specification="_ZbY7wagmEe-9tYVtpMatrg">
                  <ownedParameter xmi:id="_Zucao6gmEe-9tYVtpMatrg" name="snk">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>this.snk = snk;&#xD;
     </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ZucapKgmEe-9tYVtpMatrg" name="setChannel" specification="_ZbY7w6gmEe-9tYVtpMatrg">
                  <ownedParameter xmi:id="_ZucapagmEe-9tYVtpMatrg" name="channel">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>this.channel = channel;&#xD;
     </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ZucapqgmEe-9tYVtpMatrg" name="unused" specification="_ZbY7xagmEe-9tYVtpMatrg">
                  <ownedParameter xmi:id="_Zucap6gmEe-9tYVtpMatrg" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>return UNUSED;&#xD;
		</body>
                </ownedBehavior>
                <ownedOperation xmi:id="_ZbXtoKgmEe-9tYVtpMatrg" name="getCoordinator" method="_ZubzmqgmEe-9tYVtpMatrg">
                  <ownedComment xmi:id="_ZuvVkKgmEe-9tYVtpMatrg">
                    <body>@return the coordinator</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_ZbXtoagmEe-9tYVtpMatrg" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_ZbYUsKgmEe-9tYVtpMatrg" name="setCoordinator" method="_ZubznKgmEe-9tYVtpMatrg">
                  <ownedComment xmi:id="_ZuvVkagmEe-9tYVtpMatrg">
                    <body>@param coordinator the coordinator to set</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_ZbYUsagmEe-9tYVtpMatrg" name="coordinator">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_ZbYUsqgmEe-9tYVtpMatrg" name="setName" visibility="private" method="_ZubznqgmEe-9tYVtpMatrg">
                  <ownedParameter xmi:id="_ZbYUs6gmEe-9tYVtpMatrg" name="name">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_ZbYUtKgmEe-9tYVtpMatrg" name="setFlow" visibility="private" method="_ZubzoKgmEe-9tYVtpMatrg">
                  <ownedParameter xmi:id="_ZbYUtagmEe-9tYVtpMatrg" name="flow">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_ZbYUtqgmEe-9tYVtpMatrg" name="setSrc" visibility="private" method="_ZucaoKgmEe-9tYVtpMatrg">
                  <ownedParameter xmi:id="_ZbY7wKgmEe-9tYVtpMatrg" name="src">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_ZbY7wagmEe-9tYVtpMatrg" name="setSnk" visibility="private" method="_ZucaoqgmEe-9tYVtpMatrg">
                  <ownedParameter xmi:id="_ZbY7wqgmEe-9tYVtpMatrg" name="snk">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_ZbY7w6gmEe-9tYVtpMatrg" name="setChannel" visibility="private" method="_ZucapKgmEe-9tYVtpMatrg">
                  <ownedParameter xmi:id="_ZbY7xKgmEe-9tYVtpMatrg" name="channel">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_ZbY7xagmEe-9tYVtpMatrg" name="unused" method="_ZucapqgmEe-9tYVtpMatrg">
                  <ownedParameter xmi:id="_ZbY7xqgmEe-9tYVtpMatrg" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                </ownedOperation>
              </nestedClassifier>
              <nestedClassifier xmi:type="uml:Class" xmi:id="_ZbaJ4KgmEe-9tYVtpMatrg" name="ListenerDsl" visibility="private" isLeaf="true">
                <generalization xmi:id="_ZshvEagmEe-9tYVtpMatrg" general="_Zsgg8KgmEe-9tYVtpMatrg"/>
                <ownedAttribute xmi:id="_Ztv3FqgmEe-9tYVtpMatrg" name="inAction" visibility="package">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedAttribute>
                <ownedAttribute xmi:id="_ZtweIagmEe-9tYVtpMatrg" name="instructionParametersArrayList" visibility="package" type="_Zp__gKgmEe-9tYVtpMatrg" association="_ZvgKkKgmEe-9tYVtpMatrg"/>
                <ownedAttribute xmi:id="_ZtxFMKgmEe-9tYVtpMatrg" name="instructionParameters" visibility="package" type="_ZbXGkKgmEe-9tYVtpMatrg" association="_ZvgKk6gmEe-9tYVtpMatrg"/>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Zucaq6gmEe-9tYVtpMatrg" name="ListenerDsl" specification="_ZbaJ4agmEe-9tYVtpMatrg">
                  <ownedParameter xmi:id="_ZucarKgmEe-9tYVtpMatrg" type="_ZbaJ4KgmEe-9tYVtpMatrg" direction="return"/>
                  <language>java</language>
                  <body>inAction = false;&#xD;
         instructionParametersArrayList = new ArrayList&lt;InstructionParameters>();&#xD;
     </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ZucaragmEe-9tYVtpMatrg" name="getInstructionParameters" specification="_Zbaw8KgmEe-9tYVtpMatrg">
                  <ownedParameter xmi:id="_ZucarqgmEe-9tYVtpMatrg" type="_Zp__gKgmEe-9tYVtpMatrg" direction="return"/>
                  <language>java</language>
                  <body>return instructionParametersArrayList;&#xD;
     </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Zucar6gmEe-9tYVtpMatrg" name="enterAction" specification="_ZrRK0agmEe-9tYVtpMatrg">
                  <ownedParameter xmi:id="_ZucasKgmEe-9tYVtpMatrg" name="ctx" type="_ZrQjwKgmEe-9tYVtpMatrg"/>
                  <language>java</language>
                  <body>inAction = true;&#xD;
         instructionParameters = new InstructionParameters();  // create a new instance of the parameter structure with default initialization&#xD;
     </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ZucasagmEe-9tYVtpMatrg" name="exitAction" specification="_ZrRx4qgmEe-9tYVtpMatrg">
                  <ownedParameter xmi:id="_ZucasqgmEe-9tYVtpMatrg" name="ctx" type="_ZrQjwKgmEe-9tYVtpMatrg"/>
                  <language>java</language>
                  <body>inAction = false;&#xD;
         instructionParametersArrayList.add(instructionParameters);  // this action is done, so add the parameters to the list&#xD;
     </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Zucas6gmEe-9tYVtpMatrg" name="exitFlowName" specification="_ZrSY8KgmEe-9tYVtpMatrg">
                  <ownedParameter xmi:id="_ZucatKgmEe-9tYVtpMatrg" name="ctx" type="_ZrRx56gmEe-9tYVtpMatrg"/>
                  <language>java</language>
                  <body>if (inAction) {&#xD;
             String flowName = ctx.getText(); // get the flow name&#xD;
             instructionParameters.setFlow(flowName);&#xD;
         }&#xD;
     </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ZucatagmEe-9tYVtpMatrg" name="exitCmd" specification="_ZrSY96gmEe-9tYVtpMatrg">
                  <ownedParameter xmi:id="_ZucatqgmEe-9tYVtpMatrg" name="ctx" type="_ZrSY9agmEe-9tYVtpMatrg"/>
                  <language>java</language>
                  <body>String command = ctx.getText(); // get the command/instruction name&#xD;
         instructionParameters.setName(command);&#xD;
     </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Zucat6gmEe-9tYVtpMatrg" name="exitSrcNode" specification="_ZrTABagmEe-9tYVtpMatrg">
                  <ownedParameter xmi:id="_ZucauKgmEe-9tYVtpMatrg" name="ctx" type="_ZrTAA6gmEe-9tYVtpMatrg"/>
                  <language>java</language>
                  <body>String srcName = ctx.getText(); // get the src node name&#xD;
         instructionParameters.setSrc(srcName);&#xD;
         var command = instructionParameters.getName();&#xD;
         if (command.equals(PUSH)) {&#xD;
         	/* if push then coordinator is src &#xD;
         	 */&#xD;
         	instructionParameters.setCoordinator(srcName);&#xD;
         }else {&#xD;
         	/* otherwise listener is src */&#xD;
         	instructionParameters.setListener(srcName);&#xD;
         }&#xD;
     </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ZucauagmEe-9tYVtpMatrg" name="exitSnkNode" specification="_ZrTnEqgmEe-9tYVtpMatrg">
                  <ownedParameter xmi:id="_ZucauqgmEe-9tYVtpMatrg" name="ctx" type="_ZrTnEKgmEe-9tYVtpMatrg"/>
                  <language>java</language>
                  <body>String snkName = ctx.getText(); // get the snk node name&#xD;
         instructionParameters.setSnk(snkName);&#xD;
         var command = instructionParameters.getName();&#xD;
         if (command.equals(PUSH)) {&#xD;
         	/* if push then listener is snk */&#xD;
         	instructionParameters.setListener(snkName);&#xD;
         }else {&#xD;
         	/* otherwise coordinator is snk &#xD;
         	 */&#xD;
         	instructionParameters.setCoordinator(snkName);&#xD;
         }&#xD;
     </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Zucau6gmEe-9tYVtpMatrg" name="exitChannel" specification="_ZrUOIqgmEe-9tYVtpMatrg">
                  <ownedParameter xmi:id="_ZucavKgmEe-9tYVtpMatrg" name="ctx" type="_ZrUOIKgmEe-9tYVtpMatrg"/>
                  <language>java</language>
                  <body>String channelString = ctx.getText(); // get the snk node name&#xD;
     	String channel; // resulting channel that will be extracted from the channel string&#xD;
     	Integer index = channelString.indexOf('#');&#xD;
     	if (index >= 0 &amp;&amp; index &lt; channelString.length()) {&#xD;
     		channel = channelString.substring(index+1); // get string starting at first channel number&#xD;
     	} else {&#xD;
     		channel = UNKNOWN; // no valid channel in the channelString, so set to UNKNOWN&#xD;
     	}	&#xD;
         instructionParameters.setChannel(channel); &#xD;
     </body>
                </ownedBehavior>
                <ownedOperation xmi:id="_ZbaJ4agmEe-9tYVtpMatrg" name="ListenerDsl" visibility="package" method="_Zucaq6gmEe-9tYVtpMatrg">
                  <eAnnotations xmi:id="_ZbaJ4qgmEe-9tYVtpMatrg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                    <details xmi:id="_ZbaJ46gmEe-9tYVtpMatrg" key="create"/>
                  </eAnnotations>
                  <ownedParameter xmi:id="_ZbaJ5KgmEe-9tYVtpMatrg" type="_ZbaJ4KgmEe-9tYVtpMatrg" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_Zbaw8KgmEe-9tYVtpMatrg" name="getInstructionParameters" method="_ZucaragmEe-9tYVtpMatrg">
                  <ownedParameter xmi:id="_ZshvEKgmEe-9tYVtpMatrg" type="_Zp__gKgmEe-9tYVtpMatrg" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_ZrRK0agmEe-9tYVtpMatrg" name="enterAction" method="_Zucar6gmEe-9tYVtpMatrg">
                  <ownedParameter xmi:id="_ZrRK0qgmEe-9tYVtpMatrg" name="ctx" type="_ZrQjwKgmEe-9tYVtpMatrg"/>
                </ownedOperation>
                <ownedOperation xmi:id="_ZrRx4qgmEe-9tYVtpMatrg" name="exitAction" method="_ZucasagmEe-9tYVtpMatrg">
                  <ownedParameter xmi:id="_ZrRx46gmEe-9tYVtpMatrg" name="ctx" type="_ZrQjwKgmEe-9tYVtpMatrg"/>
                </ownedOperation>
                <ownedOperation xmi:id="_ZrSY8KgmEe-9tYVtpMatrg" name="exitFlowName" method="_Zucas6gmEe-9tYVtpMatrg">
                  <ownedParameter xmi:id="_ZrSY8agmEe-9tYVtpMatrg" name="ctx" type="_ZrRx56gmEe-9tYVtpMatrg"/>
                </ownedOperation>
                <ownedOperation xmi:id="_ZrSY96gmEe-9tYVtpMatrg" name="exitCmd" method="_ZucatagmEe-9tYVtpMatrg">
                  <ownedParameter xmi:id="_ZrSY-KgmEe-9tYVtpMatrg" name="ctx" type="_ZrSY9agmEe-9tYVtpMatrg"/>
                </ownedOperation>
                <ownedOperation xmi:id="_ZrTABagmEe-9tYVtpMatrg" name="exitSrcNode" method="_Zucat6gmEe-9tYVtpMatrg">
                  <ownedParameter xmi:id="_ZrTABqgmEe-9tYVtpMatrg" name="ctx" type="_ZrTAA6gmEe-9tYVtpMatrg"/>
                </ownedOperation>
                <ownedOperation xmi:id="_ZrTnEqgmEe-9tYVtpMatrg" name="exitSnkNode" method="_ZucauagmEe-9tYVtpMatrg">
                  <ownedParameter xmi:id="_ZrTnE6gmEe-9tYVtpMatrg" name="ctx" type="_ZrTnEKgmEe-9tYVtpMatrg"/>
                </ownedOperation>
                <ownedOperation xmi:id="_ZrUOIqgmEe-9tYVtpMatrg" name="exitChannel" method="_Zucau6gmEe-9tYVtpMatrg">
                  <ownedParameter xmi:id="_ZrUOI6gmEe-9tYVtpMatrg" name="ctx" type="_ZrUOIKgmEe-9tYVtpMatrg"/>
                </ownedOperation>
              </nestedClassifier>
            </packagedElement>
            <packagedElement xmi:type="uml:Interface" xmi:id="_ZbdNMKgmEe-9tYVtpMatrg" name="WarpInterface">
              <ownedComment xmi:id="_ZuvVkqgmEe-9tYVtpMatrg">
                <body>@author sgoddard&#xD;
@version 1.4</body>
              </ownedComment>
              <generalization xmi:id="_ZrU1MKgmEe-9tYVtpMatrg" general="_Za9d8agmEe-9tYVtpMatrg"/>
              <ownedOperation xmi:id="_Zbd0QKgmEe-9tYVtpMatrg" name="toWorkload">
                <ownedParameter xmi:id="_ZrVcQKgmEe-9tYVtpMatrg" type="_Zbu6AqgmEe-9tYVtpMatrg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_Zbd0QagmEe-9tYVtpMatrg" name="toProgram">
                <ownedParameter xmi:id="_ZrVcQagmEe-9tYVtpMatrg" type="_ZaCQ4KgmEe-9tYVtpMatrg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_Zbd0QqgmEe-9tYVtpMatrg" name="toReliabilityAnalysis">
                <ownedParameter xmi:id="_ZrVcQqgmEe-9tYVtpMatrg" type="_ZaWZ8KgmEe-9tYVtpMatrg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_Zbd0Q6gmEe-9tYVtpMatrg" name="toSimulator">
                <ownedParameter xmi:id="_ZrVcQ6gmEe-9tYVtpMatrg" type="_Za7owKgmEe-9tYVtpMatrg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_Zbd0RKgmEe-9tYVtpMatrg" name="toLatencyAnalysis">
                <ownedParameter xmi:id="_ZrVcRKgmEe-9tYVtpMatrg" type="_ZZsSqagmEe-9tYVtpMatrg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_Zbd0RagmEe-9tYVtpMatrg" name="toChannelAnalysis">
                <ownedParameter xmi:id="_ZrVcRagmEe-9tYVtpMatrg" type="_ZY3MMKgmEe-9tYVtpMatrg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_ZbebUKgmEe-9tYVtpMatrg" name="toSensorNetwork"/>
              <ownedOperation xmi:id="_ZbebUagmEe-9tYVtpMatrg" name="reliabilitiesMet">
                <ownedParameter xmi:id="_ZbebUqgmEe-9tYVtpMatrg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_ZbebU6gmEe-9tYVtpMatrg" name="deadlinesMet">
                <ownedParameter xmi:id="_ZbebVKgmEe-9tYVtpMatrg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_ZbfpcKgmEe-9tYVtpMatrg" name="WarpPoset">
              <ownedComment xmi:id="_ZuvVk6gmEe-9tYVtpMatrg">
                <body>ConnectivityPoset extends Poset by selecting&#xD;
the base station in the flow as the primary &#xD;
coordinator&#xD;
&#xD;
@author sgoddard</body>
              </ownedComment>
              <generalization xmi:id="_ZrVcS6gmEe-9tYVtpMatrg" general="_ZZ4f4KgmEe-9tYVtpMatrg"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ZudBsKgmEe-9tYVtpMatrg" name="WarpPoset" specification="_ZrVcRqgmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_ZudBsagmEe-9tYVtpMatrg" name="workload" type="_Zbu6AqgmEe-9tYVtpMatrg"/>
                <ownedParameter xmi:id="_ZudBsqgmEe-9tYVtpMatrg" type="_ZbfpcKgmEe-9tYVtpMatrg" direction="return"/>
                <language>java</language>
                <body>super(workload);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ZudBs6gmEe-9tYVtpMatrg" name="findCoordinator" specification="_Zsi9MKgmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_ZudBtKgmEe-9tYVtpMatrg" name="nodesInFlow" type="_Zp__gKgmEe-9tYVtpMatrg"/>
                <ownedParameter xmi:id="_ZudBtagmEe-9tYVtpMatrg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var baseStation = findBaseStation();&#xD;
		var baseName = baseStation.getName();&#xD;
		var size = nodesInFlow.size();&#xD;
		/* assume flow sink is the coordinator */&#xD;
		Integer coordinatorIndex = size-1;&#xD;
&#xD;
		if (baseName.equals(nodesInFlow.get(0).getName())) {&#xD;
			/* flow src is coordinator, so update index */&#xD;
			coordinatorIndex = 0;&#xD;
		}&#xD;
		return coordinatorIndex;&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_ZrVcRqgmEe-9tYVtpMatrg" name="WarpPoset" visibility="package" method="_ZudBsKgmEe-9tYVtpMatrg">
                <eAnnotations xmi:id="_ZrVcSKgmEe-9tYVtpMatrg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_ZrVcSagmEe-9tYVtpMatrg" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_ZrVcR6gmEe-9tYVtpMatrg" name="workload" type="_Zbu6AqgmEe-9tYVtpMatrg"/>
                <ownedParameter xmi:id="_ZrVcSqgmEe-9tYVtpMatrg" type="_ZbfpcKgmEe-9tYVtpMatrg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_Zsi9MKgmEe-9tYVtpMatrg" name="findCoordinator" visibility="protected" method="_ZudBs6gmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_Zsi9MagmEe-9tYVtpMatrg" name="nodesInFlow" type="_Zp__gKgmEe-9tYVtpMatrg"/>
                <ownedParameter xmi:id="_ZsjkQKgmEe-9tYVtpMatrg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_ZbgQgKgmEe-9tYVtpMatrg" name="WarpSystem">
              <ownedComment xmi:id="_ZuvVlKgmEe-9tYVtpMatrg">
                <body>@author sgoddard&#xD;
@version 1.4</body>
              </ownedComment>
              <ownedAttribute xmi:id="_ZtxsQKgmEe-9tYVtpMatrg" name="program" visibility="private" type="_ZaCQ4KgmEe-9tYVtpMatrg" association="_ZvgKlqgmEe-9tYVtpMatrg"/>
              <ownedAttribute xmi:id="_ZtxsQqgmEe-9tYVtpMatrg" name="workLoad" visibility="private" type="_Zbu6AqgmEe-9tYVtpMatrg" association="_ZvgxoagmEe-9tYVtpMatrg"/>
              <ownedAttribute xmi:id="_ZtxsRKgmEe-9tYVtpMatrg" name="ra" visibility="private" type="_ZaWZ8KgmEe-9tYVtpMatrg" association="_ZvhYsKgmEe-9tYVtpMatrg"/>
              <ownedAttribute xmi:id="_ZtxsRqgmEe-9tYVtpMatrg" name="la" visibility="private" type="_ZZsSqagmEe-9tYVtpMatrg" association="_ZvhYs6gmEe-9tYVtpMatrg"/>
              <ownedAttribute xmi:id="_ZtyTUagmEe-9tYVtpMatrg" name="ca" visibility="private" type="_ZY3MMKgmEe-9tYVtpMatrg" association="_Zvh_wKgmEe-9tYVtpMatrg"/>
              <ownedAttribute xmi:id="_ZtyTU6gmEe-9tYVtpMatrg" name="numChannels" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_Zty6YqgmEe-9tYVtpMatrg" name="verboseMode" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_Zty6Y6gmEe-9tYVtpMatrg" value="false"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_Zty6ZagmEe-9tYVtpMatrg" name="latencyRequested" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_Zty6ZqgmEe-9tYVtpMatrg" value="false"/>
              </ownedAttribute>
              <interfaceRealization xmi:id="_ZrWDUKgmEe-9tYVtpMatrg" client="_ZbgQgKgmEe-9tYVtpMatrg" supplier="_ZbdNMKgmEe-9tYVtpMatrg" contract="_ZbdNMKgmEe-9tYVtpMatrg"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ZudowKgmEe-9tYVtpMatrg" name="WarpSystem" specification="_ZskyYKgmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_ZudowagmEe-9tYVtpMatrg" name="workLoad" type="_Zbu6AqgmEe-9tYVtpMatrg"/>
                <ownedParameter xmi:id="_ZudowqgmEe-9tYVtpMatrg" name="numChannels">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Zudow6gmEe-9tYVtpMatrg" name="choice" type="_ZsO0IKgmEe-9tYVtpMatrg"/>
                <ownedParameter xmi:id="_ZudoxKgmEe-9tYVtpMatrg" type="_ZbgQgKgmEe-9tYVtpMatrg" direction="return"/>
                <language>java</language>
                <body>this.workLoad = workLoad;&#xD;
 this.numChannels = numChannels;&#xD;
 createProgram(workLoad, numChannels, choice);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ZudoxagmEe-9tYVtpMatrg" name="toWorkload" specification="_Zbg3kKgmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_ZudoxqgmEe-9tYVtpMatrg" type="_Zbu6AqgmEe-9tYVtpMatrg" direction="return"/>
                <language>java</language>
                <body>return workLoad;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Zudox6gmEe-9tYVtpMatrg" name="toProgram" specification="_ZbheoqgmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_ZudoyKgmEe-9tYVtpMatrg" type="_ZaCQ4KgmEe-9tYVtpMatrg" direction="return"/>
                <language>java</language>
                <body>return program;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ZudoyagmEe-9tYVtpMatrg" name="toReliabilityAnalysis" specification="_ZbhepqgmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_ZudoyqgmEe-9tYVtpMatrg" type="_ZaWZ8KgmEe-9tYVtpMatrg" direction="return"/>
                <language>java</language>
                <body>ra = new ReliabilityAnalysis(program);&#xD;
 return ra;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Zudoy6gmEe-9tYVtpMatrg" name="toSimulator" specification="_ZbiFs6gmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_ZudozKgmEe-9tYVtpMatrg" type="_Za7owKgmEe-9tYVtpMatrg" direction="return"/>
                <language>java</language>
                <body>return null;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ZudozagmEe-9tYVtpMatrg" name="toLatencyAnalysis" specification="_ZbiFt6gmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_ZudozqgmEe-9tYVtpMatrg" type="_ZZsSqagmEe-9tYVtpMatrg" direction="return"/>
                <language>java</language>
                <body>la = new LatencyAnalysis(this);&#xD;
 return la;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Zudoz6gmEe-9tYVtpMatrg" name="toChannelAnalysis" specification="_ZbiFu6gmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_Zudo0KgmEe-9tYVtpMatrg" type="_ZY3MMKgmEe-9tYVtpMatrg" direction="return"/>
                <language>java</language>
                <body>ca = new ChannelAnalysis(this);&#xD;
 return ca;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Zudo0agmEe-9tYVtpMatrg" name="reliabilitiesMet" specification="_Zbisw6gmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_Zudo0qgmEe-9tYVtpMatrg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>if (ra == null) {&#xD;
   ra = new ReliabilityAnalysis(program);&#xD;
 }&#xD;
 return ra.verifyReliabilities();&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Zudo06gmEe-9tYVtpMatrg" name="deadlinesMet" specification="_ZbisyKgmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_Zudo1KgmEe-9tYVtpMatrg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>Boolean result = true;&#xD;
 if (program.deadlineMisses().size() > 0) {&#xD;
   result = false;&#xD;
 }&#xD;
 return result;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Zudo1agmEe-9tYVtpMatrg" name="createProgram" specification="_ZskyZ6gmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_Zudo1qgmEe-9tYVtpMatrg" name="workLoad" type="_Zbu6AqgmEe-9tYVtpMatrg"/>
                <ownedParameter xmi:id="_Zudo16gmEe-9tYVtpMatrg" name="numChannels">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Zudo2KgmEe-9tYVtpMatrg" name="choice" type="_ZsO0IKgmEe-9tYVtpMatrg"/>
                <language>java</language>
                <body>program = new Program(workLoad, numChannels, choice, verboseMode, latencyRequested);&#xD;
&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Zudo2agmEe-9tYVtpMatrg" name="getNumFaults" specification="_ZbjT06gmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_Zudo2qgmEe-9tYVtpMatrg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>return program.getNumFaults();&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Zudo26gmEe-9tYVtpMatrg" name="getMinPacketReceptionRate" specification="_ZbjT2KgmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_Zudo3KgmEe-9tYVtpMatrg" type="_ZsQpUKgmEe-9tYVtpMatrg" direction="return"/>
                <language>java</language>
                <body>return workLoad.getMinPacketReceptionRate();&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Zudo3agmEe-9tYVtpMatrg" name="getE2e" specification="_Zbj646gmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_Zudo3qgmEe-9tYVtpMatrg" type="_ZsQpUKgmEe-9tYVtpMatrg" direction="return"/>
                <language>java</language>
                <body>return workLoad.getE2e();&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Zudo36gmEe-9tYVtpMatrg" name="getName" specification="_Zbj656gmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_Zudo4KgmEe-9tYVtpMatrg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return workLoad.getName();&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Zudo4agmEe-9tYVtpMatrg" name="getSchedulerName" specification="_Zbkh86gmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_Zudo4qgmEe-9tYVtpMatrg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return program.getSchedulerName();&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Zudo46gmEe-9tYVtpMatrg" name="getNumTransmissions" specification="_Zbkh-KgmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_Zudo5KgmEe-9tYVtpMatrg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>return program.getNumTransmissions();&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ZueP0KgmEe-9tYVtpMatrg" name="getOptimizationFlag" specification="_ZblJAqgmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_ZueP0agmEe-9tYVtpMatrg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>return program.getOptimizationFlag();&#xD;
  </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_Zbg3kKgmEe-9tYVtpMatrg" name="toWorkload" method="_ZudoxagmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_ZrWDUagmEe-9tYVtpMatrg" type="_Zbu6AqgmEe-9tYVtpMatrg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_ZbheoqgmEe-9tYVtpMatrg" name="toProgram" method="_Zudox6gmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_ZrWDUqgmEe-9tYVtpMatrg" type="_ZaCQ4KgmEe-9tYVtpMatrg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_ZbhepqgmEe-9tYVtpMatrg" name="toReliabilityAnalysis" method="_ZudoyagmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_ZrWDU6gmEe-9tYVtpMatrg" type="_ZaWZ8KgmEe-9tYVtpMatrg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_ZbiFs6gmEe-9tYVtpMatrg" name="toSimulator" method="_Zudoy6gmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_ZrWDVKgmEe-9tYVtpMatrg" type="_Za7owKgmEe-9tYVtpMatrg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_ZbiFt6gmEe-9tYVtpMatrg" name="toLatencyAnalysis" method="_ZudozagmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_ZrWDVagmEe-9tYVtpMatrg" type="_ZZsSqagmEe-9tYVtpMatrg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_ZbiFu6gmEe-9tYVtpMatrg" name="toChannelAnalysis" method="_Zudoz6gmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_ZrWqYKgmEe-9tYVtpMatrg" type="_ZY3MMKgmEe-9tYVtpMatrg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_Zbisw6gmEe-9tYVtpMatrg" name="reliabilitiesMet" method="_Zudo0agmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_ZbisxKgmEe-9tYVtpMatrg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_ZbisyKgmEe-9tYVtpMatrg" name="deadlinesMet" method="_Zudo06gmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_ZbisyagmEe-9tYVtpMatrg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_ZbjT06gmEe-9tYVtpMatrg" name="getNumFaults" method="_Zudo2agmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_ZbjT1KgmEe-9tYVtpMatrg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_ZbjT2KgmEe-9tYVtpMatrg" name="getMinPacketReceptionRate" method="_Zudo26gmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_ZslZcqgmEe-9tYVtpMatrg" type="_ZsQpUKgmEe-9tYVtpMatrg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_Zbj646gmEe-9tYVtpMatrg" name="getE2e" method="_Zudo3agmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_ZslZc6gmEe-9tYVtpMatrg" type="_ZsQpUKgmEe-9tYVtpMatrg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_Zbj656gmEe-9tYVtpMatrg" name="getName" method="_Zudo36gmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_Zbj66KgmEe-9tYVtpMatrg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_Zbkh86gmEe-9tYVtpMatrg" name="getSchedulerName" method="_Zudo4agmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_Zbkh9KgmEe-9tYVtpMatrg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_Zbkh-KgmEe-9tYVtpMatrg" name="getNumTransmissions" method="_Zudo46gmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_Zbkh-agmEe-9tYVtpMatrg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_ZblJAqgmEe-9tYVtpMatrg" name="getOptimizationFlag" method="_ZueP0KgmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_ZblJA6gmEe-9tYVtpMatrg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_ZblJB6gmEe-9tYVtpMatrg" name="toSensorNetwork"/>
              <ownedOperation xmi:id="_ZskyYKgmEe-9tYVtpMatrg" name="WarpSystem" method="_ZudowKgmEe-9tYVtpMatrg">
                <eAnnotations xmi:id="_ZskyZKgmEe-9tYVtpMatrg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_ZskyZagmEe-9tYVtpMatrg" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_ZskyYagmEe-9tYVtpMatrg" name="workLoad" type="_Zbu6AqgmEe-9tYVtpMatrg"/>
                <ownedParameter xmi:id="_ZskyYqgmEe-9tYVtpMatrg" name="numChannels">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ZskyY6gmEe-9tYVtpMatrg" name="choice" type="_ZsO0IKgmEe-9tYVtpMatrg"/>
                <ownedParameter xmi:id="_ZskyZqgmEe-9tYVtpMatrg" type="_ZbgQgKgmEe-9tYVtpMatrg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_ZskyZ6gmEe-9tYVtpMatrg" name="createProgram" visibility="private" method="_Zudo1agmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_ZskyaKgmEe-9tYVtpMatrg" name="workLoad" type="_Zbu6AqgmEe-9tYVtpMatrg"/>
                <ownedParameter xmi:id="_ZslZcKgmEe-9tYVtpMatrg" name="numChannels">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ZslZcagmEe-9tYVtpMatrg" name="choice" type="_ZsO0IKgmEe-9tYVtpMatrg"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_ZbnlQKgmEe-9tYVtpMatrg" name="WarpSystemTest" visibility="package">
              <eAnnotations xmi:id="_ZbnlQagmEe-9tYVtpMatrg" source="http://ns.yatta.de/umllab">
                <contents xmi:type="ecore:EAnnotation" xmi:id="_ZbnlQqgmEe-9tYVtpMatrg" source="codegen">
                  <details xmi:id="_ZbnlQ6gmEe-9tYVtpMatrg" key="codegenDirectory" value="/cs2820-fall24/test"/>
                </contents>
              </eAnnotations>
              <ownedOperation xmi:id="_ZboMUKgmEe-9tYVtpMatrg" name="test" visibility="package"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_ZbozYKgmEe-9tYVtpMatrg" name="WorkLoadDescription">
              <ownedComment xmi:id="_ZuvVlagmEe-9tYVtpMatrg">
                <body>Reads the input file, whose name is passed as input parameter to the constructor, and builds a&#xD;
Description object based on the contents. Each line of the file is an entry (string) in the&#xD;
Description object.&#xD;
&#xD;
@author sgoddard&#xD;
@version 1.8 Fall 2024</body>
              </ownedComment>
              <generalization xmi:id="_ZrX4g6gmEe-9tYVtpMatrg" general="_ZbJEIKgmEe-9tYVtpMatrg"/>
              <ownedAttribute xmi:id="_ZtzhcKgmEe-9tYVtpMatrg" name="EMPTY" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_ZtzhcagmEe-9tYVtpMatrg" value="&quot;&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_ZtzhcqgmEe-9tYVtpMatrg" name="INPUT_FILE_SUFFIX" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_Ztzhc6gmEe-9tYVtpMatrg" value="&quot;.wld&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_ZtzhdKgmEe-9tYVtpMatrg" name="description" visibility="private" type="_ZZLVQKgmEe-9tYVtpMatrg" association="_Zvh_w6gmEe-9tYVtpMatrg"/>
              <ownedAttribute xmi:id="_ZtzhdqgmEe-9tYVtpMatrg" name="inputGraphString" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_Zt0IgKgmEe-9tYVtpMatrg" name="fm" visibility="private" type="_ZZSC8KgmEe-9tYVtpMatrg" association="_Zvh_xqgmEe-9tYVtpMatrg"/>
              <ownedAttribute xmi:id="_Zt0IgqgmEe-9tYVtpMatrg" name="inputFileName" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ZueP0qgmEe-9tYVtpMatrg" name="WorkLoadDescription" specification="_ZbozYagmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_ZueP06gmEe-9tYVtpMatrg" name="inputFileName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ZueP1KgmEe-9tYVtpMatrg" type="_ZbozYKgmEe-9tYVtpMatrg" direction="return"/>
                <language>java</language>
                <body>super(new FileManager(), EMPTY, INPUT_FILE_SUFFIX); // VisualizationObject constructor&#xD;
 this.fm = this.getFileManager();&#xD;
 initialize(inputFileName);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ZueP1agmEe-9tYVtpMatrg" name="visualization" specification="_Zbpac6gmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_ZueP1qgmEe-9tYVtpMatrg" type="_ZZLVQKgmEe-9tYVtpMatrg" direction="return"/>
                <language>java</language>
                <body>return description;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ZueP16gmEe-9tYVtpMatrg" name="fileVisualization" specification="_Zbpad6gmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_ZueP2KgmEe-9tYVtpMatrg" type="_ZZLVQKgmEe-9tYVtpMatrg" direction="return"/>
                <language>java</language>
                <body>return description;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ZueP2agmEe-9tYVtpMatrg" name="toString" specification="_ZbqBgqgmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_ZueP2qgmEe-9tYVtpMatrg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return inputGraphString;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ZueP26gmEe-9tYVtpMatrg" name="initialize" specification="_ZbqBh6gmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_ZueP3KgmEe-9tYVtpMatrg" name="inputFile">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>// Get the input graph file name and read its contents&#xD;
 InputGraphFile gf = new InputGraphFile(fm);&#xD;
 inputGraphString = gf.readGraphFile(inputFile);&#xD;
 this.inputFileName = gf.getGraphFileName();&#xD;
 description = new Description(inputGraphString);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ZueP3agmEe-9tYVtpMatrg" name="main" specification="_ZbqBiagmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_ZueP3qgmEe-9tYVtpMatrg" name="args">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZueP36gmEe-9tYVtpMatrg" value="*"/>
                </ownedParameter>
                <language>java</language>
                <body>WorkLoadDescription myWorkLoad = new WorkLoadDescription(&quot;StressTest.txt&quot;);&#xD;
	  Description myDescription = myWorkLoad.description;&#xD;
	  &#xD;
	  /* Deletes end of line behind graph name */&#xD;
	  System.out.println(myDescription.getFirst().split(&quot; &quot;)[0]);&#xD;
	  &#xD;
	  /* First and last lines of file don't hold a flow */&#xD;
	  myDescription.remove(0);&#xD;
	  myDescription.remove(myDescription.size()-1);&#xD;
	  &#xD;
	  /* Imported Collections.sort() method alphabetizes array lists */&#xD;
	  Collections.sort(myDescription);&#xD;
	  for (int i=1; i&lt;myDescription.size()+1; i++) {&#xD;
		  System.out.print(&quot;Flow &quot; + i + &quot;: &quot; + myDescription.get(i-1));&#xD;
	  }&#xD;
  </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_ZbozYagmEe-9tYVtpMatrg" name="WorkLoadDescription" visibility="package" method="_ZueP0qgmEe-9tYVtpMatrg">
                <eAnnotations xmi:id="_ZbpacKgmEe-9tYVtpMatrg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_ZbpacagmEe-9tYVtpMatrg" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_ZbozYqgmEe-9tYVtpMatrg" name="inputFileName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ZbpacqgmEe-9tYVtpMatrg" type="_ZbozYKgmEe-9tYVtpMatrg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_Zbpac6gmEe-9tYVtpMatrg" name="visualization" method="_ZueP1agmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_ZrX4gagmEe-9tYVtpMatrg" type="_ZZLVQKgmEe-9tYVtpMatrg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_Zbpad6gmEe-9tYVtpMatrg" name="fileVisualization" method="_ZueP16gmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_ZrX4gqgmEe-9tYVtpMatrg" type="_ZZLVQKgmEe-9tYVtpMatrg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_ZbqBgqgmEe-9tYVtpMatrg" name="toString" method="_ZueP2agmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_ZbqBg6gmEe-9tYVtpMatrg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_ZbqBh6gmEe-9tYVtpMatrg" name="initialize" visibility="private" method="_ZueP26gmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_ZbqBiKgmEe-9tYVtpMatrg" name="inputFile">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_ZbqBiagmEe-9tYVtpMatrg" name="main" isStatic="true" method="_ZueP3agmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_ZbqBiqgmEe-9tYVtpMatrg" name="args">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZbqokKgmEe-9tYVtpMatrg" value="*"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_ZbrPoKgmEe-9tYVtpMatrg" name="WorkLoadListener" visibility="package" isLeaf="true">
              <ownedComment xmi:id="_ZuvVlqgmEe-9tYVtpMatrg">
                <body>@author sgoddard&#xD;
 *</body>
              </ownedComment>
              <generalization xmi:id="_ZsmAgKgmEe-9tYVtpMatrg" general="_ZqaPM6gmEe-9tYVtpMatrg"/>
              <ownedAttribute xmi:id="_Zt0Ig6gmEe-9tYVtpMatrg" name="workLoad" visibility="package" type="_Zbu6AqgmEe-9tYVtpMatrg" association="_Zvim0agmEe-9tYVtpMatrg"/>
              <ownedAttribute xmi:id="_Zt0IhagmEe-9tYVtpMatrg" name="currentFlow" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Zue24KgmEe-9tYVtpMatrg" name="WorkLoadListener" specification="_ZrYfkKgmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_Zue24agmEe-9tYVtpMatrg" name="workLoad" type="_Zbu6AqgmEe-9tYVtpMatrg"/>
                <ownedParameter xmi:id="_Zue24qgmEe-9tYVtpMatrg" type="_ZbrPoKgmEe-9tYVtpMatrg" direction="return"/>
                <language>java</language>
                <body>this.workLoad = workLoad; // used to populate the workLoad as the input file is read&#xD;
     this.currentFlow = new String();&#xD;
  // Read input file and build AST of graphFile&#xD;
     try {&#xD;
     	CharStream inputGraph = CharStreams.fromString(workLoad.toString());&#xD;
     	var lexer = new WARPLexer(inputGraph);&#xD;
     	var tokens = new CommonTokenStream(lexer);&#xD;
     	var parser = new WARPParser(tokens);&#xD;
     	ParseTree warpTree = parser.warp(); // begin parsing at rule 'warp'&#xD;
     	var warp = new ParseTreeWalker();&#xD;
     	 // Now populate build the workLoad by walking the input Graph tokens&#xD;
     	warp.walk(this, warpTree);&#xD;
     } catch (Exception e) {&#xD;
     	e.printStackTrace();&#xD;
     	System.err.println(&quot;ERROR: Unable to parse graphFile&quot; + e.getMessage());&#xD;
     }&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Zue246gmEe-9tYVtpMatrg" name="buildNodesAndFlows" specification="_ZrYflagmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_Zue25KgmEe-9tYVtpMatrg" name="workLoad" type="_Zbu6AqgmEe-9tYVtpMatrg"/>
                <language>java</language>
                <body>/*&#xD;
 	 * Create the listener object, which will read the workLoad &#xD;
 	 * description and then buid the node and flow objects that&#xD;
 	 * instantiates the workLoad. This object is not needed&#xD;
 	 * after that.&#xD;
 	 */&#xD;
 	new WorkLoadListener(workLoad); &#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Zue25agmEe-9tYVtpMatrg" name="testPrintStdOut" specification="_Zbr2sKgmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_Zue25qgmEe-9tYVtpMatrg" name="msg">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>System.out.printf(&quot;\n In WARPworkLoad Listener!!\n&quot;);&#xD;
 	System.out.printf(msg);&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Zue256gmEe-9tYVtpMatrg" name="enterWarpName" specification="_ZrZGoKgmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_Zue26KgmEe-9tYVtpMatrg" name="ctx" type="_ZqcEYagmEe-9tYVtpMatrg"/>
                <language>java</language>
                <body>var name = ctx.getText();  // get the name of the graph &#xD;
     workLoad.setName(name); // store the  name for later reference&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Zue26agmEe-9tYVtpMatrg" name="enterFlowName" specification="_ZrZGpagmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_Zue26qgmEe-9tYVtpMatrg" name="ctx" type="_ZqdShqgmEe-9tYVtpMatrg"/>
                <language>java</language>
                <body>currentFlow = ctx.getText();&#xD;
     workLoad.addFlow(currentFlow);&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Zue266gmEe-9tYVtpMatrg" name="exitPriority" specification="_ZrZttKgmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_Zue27KgmEe-9tYVtpMatrg" name="ctx" type="_ZrZtsqgmEe-9tYVtpMatrg"/>
                <language>java</language>
                <body>var priority = Integer.parseInt(ctx.getText());  // get priority from the AST&#xD;
     workLoad.setFlowPriority(currentFlow, priority);&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Zue27agmEe-9tYVtpMatrg" name="exitPeriod" specification="_ZraUxKgmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_Zue27qgmEe-9tYVtpMatrg" name="ctx" type="_ZraUwqgmEe-9tYVtpMatrg"/>
                <language>java</language>
                <body>var period = Integer.parseInt(ctx.getText());// get period from the AST&#xD;
     workLoad.setFlowPeriod(currentFlow, period);&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Zue276gmEe-9tYVtpMatrg" name="exitDeadline" specification="_Zra71KgmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_Zue28KgmEe-9tYVtpMatrg" name="ctx" type="_Zra70qgmEe-9tYVtpMatrg"/>
                <language>java</language>
                <body>var deadline = Integer.parseInt(ctx.getText());// get deadline from the AST&#xD;
     workLoad.setFlowDeadline(currentFlow, deadline);&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Zue28agmEe-9tYVtpMatrg" name="exitPhase" specification="_Zrbi4qgmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_Zue28qgmEe-9tYVtpMatrg" name="ctx" type="_Zrbi4KgmEe-9tYVtpMatrg"/>
                <language>java</language>
                <body>var phase = Integer.parseInt(ctx.getText());// get phase from the AST&#xD;
     workLoad.setFlowPhase(currentFlow, phase);&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Zue286gmEe-9tYVtpMatrg" name="exitSrcNode" specification="_Zrbi56gmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_Zue29KgmEe-9tYVtpMatrg" name="ctx" type="_Zqd5lqgmEe-9tYVtpMatrg"/>
                <language>java</language>
                <body>var nodeName = ctx.getText(); // get the src node name&#xD;
     workLoad.addNodeToFlow(currentFlow, nodeName);&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Zue29agmEe-9tYVtpMatrg" name="exitSnkNode" specification="_ZrcJ86gmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_Zue29qgmEe-9tYVtpMatrg" name="ctx" type="_ZqfHsqgmEe-9tYVtpMatrg"/>
                <language>java</language>
                <body>var nodeName = ctx.getText(); // get the snk node name&#xD;
     workLoad.addNodeToFlow(currentFlow, nodeName);&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Zufd8KgmEe-9tYVtpMatrg" name="exitFlow" specification="_ZrcxAKgmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_Zufd8agmEe-9tYVtpMatrg" name="ctx" type="_ZqfuwqgmEe-9tYVtpMatrg"/>
                <language>java</language>
                <body>workLoad.finalizeCurrentFlow(currentFlow);&#xD;
 </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_Zbr2sKgmEe-9tYVtpMatrg" name="testPrintStdOut" method="_Zue25agmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_Zbr2sagmEe-9tYVtpMatrg" name="msg">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_ZrYfkKgmEe-9tYVtpMatrg" name="WorkLoadListener" visibility="private" method="_Zue24KgmEe-9tYVtpMatrg">
                <eAnnotations xmi:id="_ZrYfkqgmEe-9tYVtpMatrg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_ZrYfk6gmEe-9tYVtpMatrg" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_ZrYfkagmEe-9tYVtpMatrg" name="workLoad" type="_Zbu6AqgmEe-9tYVtpMatrg"/>
                <ownedParameter xmi:id="_ZrYflKgmEe-9tYVtpMatrg" type="_ZbrPoKgmEe-9tYVtpMatrg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_ZrYflagmEe-9tYVtpMatrg" name="buildNodesAndFlows" isStatic="true" method="_Zue246gmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_ZrYflqgmEe-9tYVtpMatrg" name="workLoad" type="_Zbu6AqgmEe-9tYVtpMatrg"/>
              </ownedOperation>
              <ownedOperation xmi:id="_ZrZGoKgmEe-9tYVtpMatrg" name="enterWarpName" method="_Zue256gmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_ZrZGoagmEe-9tYVtpMatrg" name="ctx" type="_ZqcEYagmEe-9tYVtpMatrg"/>
              </ownedOperation>
              <ownedOperation xmi:id="_ZrZGpagmEe-9tYVtpMatrg" name="enterFlowName" method="_Zue26agmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_ZrZGpqgmEe-9tYVtpMatrg" name="ctx" type="_ZqdShqgmEe-9tYVtpMatrg"/>
              </ownedOperation>
              <ownedOperation xmi:id="_ZrZttKgmEe-9tYVtpMatrg" name="exitPriority" method="_Zue266gmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_ZrZttagmEe-9tYVtpMatrg" name="ctx" type="_ZrZtsqgmEe-9tYVtpMatrg"/>
              </ownedOperation>
              <ownedOperation xmi:id="_ZraUxKgmEe-9tYVtpMatrg" name="exitPeriod" method="_Zue27agmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_ZraUxagmEe-9tYVtpMatrg" name="ctx" type="_ZraUwqgmEe-9tYVtpMatrg"/>
              </ownedOperation>
              <ownedOperation xmi:id="_Zra71KgmEe-9tYVtpMatrg" name="exitDeadline" method="_Zue276gmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_Zra71agmEe-9tYVtpMatrg" name="ctx" type="_Zra70qgmEe-9tYVtpMatrg"/>
              </ownedOperation>
              <ownedOperation xmi:id="_Zrbi4qgmEe-9tYVtpMatrg" name="exitPhase" method="_Zue28agmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_Zrbi46gmEe-9tYVtpMatrg" name="ctx" type="_Zrbi4KgmEe-9tYVtpMatrg"/>
              </ownedOperation>
              <ownedOperation xmi:id="_Zrbi56gmEe-9tYVtpMatrg" name="exitSrcNode" method="_Zue286gmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_Zrbi6KgmEe-9tYVtpMatrg" name="ctx" type="_Zqd5lqgmEe-9tYVtpMatrg"/>
              </ownedOperation>
              <ownedOperation xmi:id="_ZrcJ86gmEe-9tYVtpMatrg" name="exitSnkNode" method="_Zue29agmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_ZrcJ9KgmEe-9tYVtpMatrg" name="ctx" type="_ZqfHsqgmEe-9tYVtpMatrg"/>
              </ownedOperation>
              <ownedOperation xmi:id="_ZrcxAKgmEe-9tYVtpMatrg" name="exitFlow" method="_Zufd8KgmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_ZrcxAagmEe-9tYVtpMatrg" name="ctx" type="_ZqfuwqgmEe-9tYVtpMatrg"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_ZbtE0KgmEe-9tYVtpMatrg" name="ReliabilityVisualizationTest" visibility="package">
              <eAnnotations xmi:id="_Zbtr4KgmEe-9tYVtpMatrg" source="http://ns.yatta.de/umllab">
                <contents xmi:type="ecore:EAnnotation" xmi:id="_Zbtr4agmEe-9tYVtpMatrg" source="codegen">
                  <details xmi:id="_Zbtr4qgmEe-9tYVtpMatrg" key="codegenDirectory" value="/cs2820-fall24/test"/>
                </contents>
              </eAnnotations>
              <ownedAttribute xmi:id="_Zt0vkagmEe-9tYVtpMatrg" name="workload" visibility="private" type="_Zbu6AqgmEe-9tYVtpMatrg" association="_Zvim1KgmEe-9tYVtpMatrg"/>
              <ownedAttribute xmi:id="_Zt0vk6gmEe-9tYVtpMatrg" name="numChannels" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_Zt0vlagmEe-9tYVtpMatrg" name="warp" visibility="private" type="_ZbdNMKgmEe-9tYVtpMatrg" association="_ZvjN4agmEe-9tYVtpMatrg"/>
              <ownedAttribute xmi:id="_Zt1WoagmEe-9tYVtpMatrg" name="viz" visibility="private" type="_ZadHoagmEe-9tYVtpMatrg" association="_ZvjN5KgmEe-9tYVtpMatrg"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Zufd8qgmEe-9tYVtpMatrg" name="setUp" specification="_Zbtr46gmEe-9tYVtpMatrg">
                <language>java</language>
                <body>workload = new WorkLoad( 0.9,	0.99, &quot;StressTest4.txt&quot;); &#xD;
		  numChannels = 16; &#xD;
		  warp = SystemFactory.create(workload, numChannels, ScheduleChoices.PRIORITY);&#xD;
	  &#xD;
	  &#xD;
	  viz = new ReliabilityVisualization(warp);&#xD;
	  &#xD;
	  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Zufd86gmEe-9tYVtpMatrg" name="createColumnHeaderTest" specification="_ZbuS86gmEe-9tYVtpMatrg">
                <language>java</language>
                <body>String[] header = viz.createColumnHeader();&#xD;
			for (int i = 0; i &lt; header.length; i++) {&#xD;
				System.out.println(header[i]);&#xD;
			}&#xD;
			//System.out.println(header);&#xD;
			 //assertNotNull(header);&#xD;
			&#xD;
		</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Zufd9KgmEe-9tYVtpMatrg" name="createHeaderTest" specification="_ZbuS96gmEe-9tYVtpMatrg">
                <language>java</language>
                <body>Description header = viz.createHeader();&#xD;
		  System.out.println(header);&#xD;
		  assertEquals(header, &quot;1&quot;);&#xD;
	  </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_Zbtr46gmEe-9tYVtpMatrg" name="setUp" visibility="package" method="_Zufd8qgmEe-9tYVtpMatrg"/>
              <ownedOperation xmi:id="_ZbuS86gmEe-9tYVtpMatrg" name="createColumnHeaderTest" method="_Zufd86gmEe-9tYVtpMatrg"/>
              <ownedOperation xmi:id="_ZbuS96gmEe-9tYVtpMatrg" name="createHeaderTest" method="_Zufd9KgmEe-9tYVtpMatrg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_Zbu6AqgmEe-9tYVtpMatrg" name="WorkLoad">
              <ownedComment xmi:id="_Zuv8oKgmEe-9tYVtpMatrg">
                <body>Build the nodes and flows for the workload described in the workload description file, whose name&#xD;
is passed into the Constructor via the parameter inputFileName. Good default values for the&#xD;
constructors are m = 0.9, e2e = 0.99, and numFaults = 1 when the second constructor is used.&#xD;
&#xD;
Initializes nodes and flows from the specified workload description file (`inputFileName`). &#xD;
Default values for the second constructor are m = 0.9, e2e = 0.99, and numFaults = 1.&#xD;
&#xD;
@author sgoddard&#xD;
@jcbates&#xD;
@version 1.4&#xD;
&#xD;
 *&#xD;
 *</body>
              </ownedComment>
              <generalization xmi:id="_ZriQkKgmEe-9tYVtpMatrg" general="_ZbozYKgmEe-9tYVtpMatrg"/>
              <ownedAttribute xmi:id="_Zt1Wo6gmEe-9tYVtpMatrg" name="DEFAULT_PRIORITY" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_Zt1WpKgmEe-9tYVtpMatrg" value="0"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_Zt1WpagmEe-9tYVtpMatrg" name="DEFAULT_INDEX" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_Zt19sKgmEe-9tYVtpMatrg" value="0"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_Zt19sagmEe-9tYVtpMatrg" name="DEFAULT_TX_NUM" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_Zt19sqgmEe-9tYVtpMatrg" value="0"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_Zt19s6gmEe-9tYVtpMatrg" name="FLOW_WARNING" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_Zt19tKgmEe-9tYVtpMatrg" value="&quot;\n\tWarning! Bad situation: &quot; + &quot;Flow %s doesn't exist but trying to &quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_Zt19tagmEe-9tYVtpMatrg" name="numFaults" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_Zt19tqgmEe-9tYVtpMatrg" value="0"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_Zt19t6gmEe-9tYVtpMatrg" name="minPacketReceptionRate" type="_ZsQpUKgmEe-9tYVtpMatrg" isReadOnly="true">
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_Zt19uKgmEe-9tYVtpMatrg" value="0.0"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_Zt19uagmEe-9tYVtpMatrg" name="e2e" visibility="private" type="_ZsQpUKgmEe-9tYVtpMatrg">
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_Zt19uqgmEe-9tYVtpMatrg" value="0.0"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_Zt2kwagmEe-9tYVtpMatrg" name="intForNodeNames">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_Zt2kwqgmEe-9tYVtpMatrg" value="false"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_Zt2kw6gmEe-9tYVtpMatrg" name="intForFlowNames" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_Zt2kxKgmEe-9tYVtpMatrg" value="false"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_Zt2kxqgmEe-9tYVtpMatrg" name="flows" type="_ZZdpIKgmEe-9tYVtpMatrg" association="_Zuv8oagmEe-9tYVtpMatrg"/>
              <ownedAttribute xmi:id="_Zt2kx6gmEe-9tYVtpMatrg" name="nodes" type="_ZZ01gKgmEe-9tYVtpMatrg" association="_Zuv8o6gmEe-9tYVtpMatrg"/>
              <ownedAttribute xmi:id="_Zt3L0KgmEe-9tYVtpMatrg" name="name" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_Zt3L0qgmEe-9tYVtpMatrg" name="flowNamesInOriginalOrder" type="_Zp__gKgmEe-9tYVtpMatrg" association="_ZvjN56gmEe-9tYVtpMatrg">
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_Zt3L1KgmEe-9tYVtpMatrg" value="new ArrayList&lt;>()"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_Zt3L1agmEe-9tYVtpMatrg" name="flowNamesInPriorityOrder" type="_Zp__gKgmEe-9tYVtpMatrg" association="_Zvj08agmEe-9tYVtpMatrg">
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_Zt3y4agmEe-9tYVtpMatrg" value="new ArrayList&lt;>()"/>
              </ownedAttribute>
              <interfaceRealization xmi:id="_ZrgbYagmEe-9tYVtpMatrg" client="_Zbu6AqgmEe-9tYVtpMatrg" supplier="_ZaY2MKgmEe-9tYVtpMatrg" contract="_ZaY2MKgmEe-9tYVtpMatrg"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Zufd9agmEe-9tYVtpMatrg" name="WorkLoad" specification="_ZsnOoKgmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_Zufd9qgmEe-9tYVtpMatrg" name="m" type="_ZsQpUKgmEe-9tYVtpMatrg"/>
                <ownedParameter xmi:id="_Zufd96gmEe-9tYVtpMatrg" name="e2e" type="_ZsQpUKgmEe-9tYVtpMatrg"/>
                <ownedParameter xmi:id="_Zufd-KgmEe-9tYVtpMatrg" name="inputFileName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Zufd-agmEe-9tYVtpMatrg" type="_Zbu6AqgmEe-9tYVtpMatrg" direction="return"/>
                <language>java</language>
                <body>super(inputFileName);&#xD;
 setDefaultParameters();&#xD;
 minPacketReceptionRate = m; // use file manager passed to this object&#xD;
 this.e2e = e2e; // use populate this flows object as the input file is read&#xD;
 /*&#xD;
  * Read input file, build the AST of graph and the listener will build the node and flow data&#xD;
  * objects&#xD;
  */&#xD;
 WorkLoadListener.buildNodesAndFlows(this);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Zufd-qgmEe-9tYVtpMatrg" name="WorkLoad" specification="_Zsn1s6gmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_Zufd-6gmEe-9tYVtpMatrg" name="numFaults">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Zufd_KgmEe-9tYVtpMatrg" name="m" type="_ZsQpUKgmEe-9tYVtpMatrg"/>
                <ownedParameter xmi:id="_Zufd_agmEe-9tYVtpMatrg" name="e2e" type="_ZsQpUKgmEe-9tYVtpMatrg"/>
                <ownedParameter xmi:id="_Zufd_qgmEe-9tYVtpMatrg" name="inputFileName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Zufd_6gmEe-9tYVtpMatrg" type="_Zbu6AqgmEe-9tYVtpMatrg" direction="return"/>
                <language>java</language>
                <body>super(inputFileName);&#xD;
 setDefaultParameters();&#xD;
 this.numFaults = numFaults;&#xD;
 minPacketReceptionRate = m; // use file manager passed to this object&#xD;
 this.e2e = e2e; // use populate this flows object as the input file is read&#xD;
 /*&#xD;
  * Read input file, build the AST of graph and the listener will build the node and flow data&#xD;
  * objects&#xD;
  */&#xD;
 WorkLoadListener.buildNodesAndFlows(this);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ZugFAKgmEe-9tYVtpMatrg" name="setDefaultParameters" specification="_ZbwvMKgmEe-9tYVtpMatrg">
                <language>java</language>
                <body>intForNodeNames = true; // default is that node names are all alpha names&#xD;
 intForFlowNames = true; // default is that node names are all alpha names&#xD;
 flows = new FlowMap(); // map of all flow nodes in the WARP graph (&lt;name, Flow>)&#xD;
 nodes = new NodeMap(); // map of all graph nodes in the WARP graph (&lt;name, Node>)&#xD;
 flowNamesInOriginalOrder = new ArrayList&lt;>(); // array to hold names of flows to preserve their&#xD;
                                               // order&#xD;
 flowNamesInPriorityOrder = new ArrayList&lt;>();&#xD;
 numFaults = DEFAULT_TX_NUM;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ZugFAagmEe-9tYVtpMatrg" name="getE2e" specification="_ZbxWQKgmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_ZugFAqgmEe-9tYVtpMatrg" type="_ZsQpUKgmEe-9tYVtpMatrg" direction="return"/>
                <language>java</language>
                <body>return e2e;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ZugFA6gmEe-9tYVtpMatrg" name="getIntForFlowNames" specification="_ZbxWQagmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_ZugFBKgmEe-9tYVtpMatrg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>return intForFlowNames;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ZugFBagmEe-9tYVtpMatrg" name="getName" specification="_ZbxWQ6gmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_ZugFBqgmEe-9tYVtpMatrg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return name;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ZugFB6gmEe-9tYVtpMatrg" name="setMinPacketReceptionRate" specification="_ZsocwagmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_ZugFCKgmEe-9tYVtpMatrg" name="minPacketReceptionRate" type="_ZsQpUKgmEe-9tYVtpMatrg"/>
                <language>java</language>
                <body>this.minPacketReceptionRate = minPacketReceptionRate;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ZugFCagmEe-9tYVtpMatrg" name="getMaxPhase" specification="_ZbxWRagmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_ZugFCqgmEe-9tYVtpMatrg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var queue = new SchedulableObjectQueue&lt;Flow>(new MaxPhaseComparator&lt;Flow>(), flows.values());&#xD;
 return queue.poll().getPhase();&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ZugFC6gmEe-9tYVtpMatrg" name="getMinPeriod" specification="_ZbxWR6gmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_ZugFDKgmEe-9tYVtpMatrg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var queue = new SchedulableObjectQueue&lt;Flow>(new PeriodComparator&lt;Flow>(), flows.values());&#xD;
 return queue.poll().getPeriod();&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ZugFDagmEe-9tYVtpMatrg" name="setE2e" specification="_Zsocw6gmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_ZugFDqgmEe-9tYVtpMatrg" name="e2e" type="_ZsQpUKgmEe-9tYVtpMatrg"/>
                <language>java</language>
                <body>this.e2e = e2e;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ZugFD6gmEe-9tYVtpMatrg" name="setIntForFlowNames" specification="_Zbx9UagmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_ZugFEKgmEe-9tYVtpMatrg" name="intForFlowNames">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>this.intForFlowNames = intForFlowNames;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ZugFEagmEe-9tYVtpMatrg" name="setName" specification="_Zbx9U6gmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_ZugFEqgmEe-9tYVtpMatrg" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>this.name = name;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ZugFE6gmEe-9tYVtpMatrg" name="setNodeChannel" specification="_Zbx9VagmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_ZugFFKgmEe-9tYVtpMatrg" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ZugFFagmEe-9tYVtpMatrg" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var node = nodes.get(name); // get the node object&#xD;
 node.setChannel(channel);&#xD;
 nodes.put(name, node); // update the nodes map with the updated object&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ZugFFqgmEe-9tYVtpMatrg" name="getNodeChannel" specification="_Zbx9WKgmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_ZugFF6gmEe-9tYVtpMatrg" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ZugFGKgmEe-9tYVtpMatrg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var node = nodes.get(name); // get the node object&#xD;
 return node.getChannel();&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ZugFGagmEe-9tYVtpMatrg" name="addFlow" specification="_ZbykYqgmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_ZugFGqgmEe-9tYVtpMatrg" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>if (flows.containsKey(flowName)) {&#xD;
   System.out.printf(&quot;\n\tWarning! A flow with name %s already exists. &quot;&#xD;
       + &quot;It has been replaced with a new flow\n.&quot;, flowName);&#xD;
 }&#xD;
 var index = flows.size();&#xD;
 var flowNode = new Flow(flowName, index, index);&#xD;
 flows.put(flowName, flowNode);&#xD;
 if (!Utilities.isInteger(flowName) &amp;&amp; intForFlowNames) {&#xD;
   intForFlowNames = false; // set false because name not is a number; &amp;&amp; above makes sure we&#xD;
                            // only set it once&#xD;
 }&#xD;
 flowNamesInOriginalOrder.add(flowName);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ZugFG6gmEe-9tYVtpMatrg" name="isIntForNodeNames" specification="_ZbykZKgmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_ZugFHKgmEe-9tYVtpMatrg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>return intForNodeNames;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ZugFHagmEe-9tYVtpMatrg" name="isIntForFlowNames" specification="_ZbykZqgmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_ZugFHqgmEe-9tYVtpMatrg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>// returns true if all flow names are an ints&#xD;
 return intForFlowNames;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ZugFH6gmEe-9tYVtpMatrg" name="addNodeToFlow" specification="_ZbykaKgmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_ZugFIKgmEe-9tYVtpMatrg" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ZugFIagmEe-9tYVtpMatrg" name="nodeName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>if (!Utilities.isInteger(nodeName) &amp;&amp; intForNodeNames) {&#xD;
   /* set false because name not is a number; &amp;&amp; above makes sure we only set it once */&#xD;
   intForNodeNames = false;&#xD;
 }&#xD;
 if (!nodes.containsKey(nodeName)) { // create the node and add it to nodes if map doesn't have&#xD;
                                     // this node already.&#xD;
   /* If the node already exists, just need to add to the flow */&#xD;
   var index = nodes.size(); // nodeIndex will be the order added&#xD;
   var graphNode = new Node(nodeName, DEFAULT_PRIORITY, index); // create a new graph node&#xD;
   nodes.put(nodeName, graphNode); // add it to the map of nodes&#xD;
 }&#xD;
 /*&#xD;
  * Node is now created and in the nodes map Next we need to get the current flow and add this&#xD;
  * node to that flow by appending it to the node array for that flow&#xD;
  */&#xD;
 var flowNode = getFlow(flowName);&#xD;
 var graphNode = new Node(nodeName, flowNode.nodes.size(), DEFAULT_INDEX);&#xD;
 /* the priority is the node's index in the flow, which is the current array size */&#xD;
 flowNode.addNode(graphNode);&#xD;
 flowNode.linkTxAndTotalCost.add(DEFAULT_TX_NUM);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ZugsEKgmEe-9tYVtpMatrg" name="getFlowPriority" specification="_ZbzLcKgmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_ZugsEagmEe-9tYVtpMatrg" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ZugsEqgmEe-9tYVtpMatrg" name="nodeName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ZugsE6gmEe-9tYVtpMatrg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var priority = 0;&#xD;
 var flow = getFlow(flowName);&#xD;
 Iterator&lt;Node> nodes = flow.nodes.iterator();&#xD;
 while (nodes.hasNext()) {&#xD;
   var node = nodes.next();&#xD;
   if (node.getName() == nodeName) {&#xD;
     priority = node.getPriority(); // found the src node, set its index&#xD;
     break;&#xD;
   }&#xD;
 }&#xD;
 return priority;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ZugsFKgmEe-9tYVtpMatrg" name="setFlowPriority" specification="_ZbzLdKgmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_ZugsFagmEe-9tYVtpMatrg" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ZugsFqgmEe-9tYVtpMatrg" name="priority">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var flowNode = getFlow(flowName);&#xD;
 flowNode.setPriority(priority);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ZugsF6gmEe-9tYVtpMatrg" name="setFlowPeriod" specification="_ZbzLd6gmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_ZugsGKgmEe-9tYVtpMatrg" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ZugsGagmEe-9tYVtpMatrg" name="period">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var flowNode = getFlow(flowName);&#xD;
 flowNode.setPeriod(period);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ZugsGqgmEe-9tYVtpMatrg" name="setFlowDeadline" specification="_ZbzygKgmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_ZugsG6gmEe-9tYVtpMatrg" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ZugsHKgmEe-9tYVtpMatrg" name="deadline">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var flowNode = getFlow(flowName);&#xD;
 flowNode.setDeadline(deadline);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ZugsHagmEe-9tYVtpMatrg" name="setFlowPhase" specification="_Zbzyg6gmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_ZugsHqgmEe-9tYVtpMatrg" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ZugsH6gmEe-9tYVtpMatrg" name="phase">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var flowNode = getFlow(flowName);&#xD;
 flowNode.setPhase(phase);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ZugsIKgmEe-9tYVtpMatrg" name="getFlowIndex" specification="_ZbzyhqgmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_ZugsIagmEe-9tYVtpMatrg" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ZugsIqgmEe-9tYVtpMatrg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var flowNode = getFlow(flowName);&#xD;
 return flowNode.index;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ZugsI6gmEe-9tYVtpMatrg" name="getFlowPriority" specification="_ZbzyiagmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_ZugsJKgmEe-9tYVtpMatrg" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ZugsJagmEe-9tYVtpMatrg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var flowNode = getFlow(flowName);&#xD;
 return flowNode.getPriority();&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ZugsJqgmEe-9tYVtpMatrg" name="getFlowPeriod" specification="_Zb0ZkagmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_ZugsJ6gmEe-9tYVtpMatrg" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ZugsKKgmEe-9tYVtpMatrg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var flowNode = getFlow(flowName);&#xD;
 return flowNode.getPeriod();&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ZugsKagmEe-9tYVtpMatrg" name="getFlowDeadline" specification="_Zb0ZlKgmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_ZugsKqgmEe-9tYVtpMatrg" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ZugsK6gmEe-9tYVtpMatrg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var flowNode = getFlow(flowName);&#xD;
 return flowNode.getDeadline();&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ZugsLKgmEe-9tYVtpMatrg" name="getFlowPhase" specification="_Zb0Zl6gmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_ZugsLagmEe-9tYVtpMatrg" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ZugsLqgmEe-9tYVtpMatrg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var flowNode = getFlow(flowName);&#xD;
 return flowNode.getPhase();&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ZugsL6gmEe-9tYVtpMatrg" name="getFlowTxAttemptsPerLink" specification="_Zb1AoKgmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_ZugsMKgmEe-9tYVtpMatrg" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ZugsMagmEe-9tYVtpMatrg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var flowNode = getFlow(flowName);&#xD;
 return flowNode.numTxPerLink;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ZugsMqgmEe-9tYVtpMatrg" name="setFlowsInPriorityOrder" specification="_Zb1Ao6gmEe-9tYVtpMatrg">
                <language>java</language>
                <body>// create a list of Flow objects from the FlowMap using the stream interface.&#xD;
 List&lt;Flow> unsortedFlows = flows.values().stream().collect(Collectors.toList());&#xD;
 // Now sort by a secondary key, which is index in this case&#xD;
 List&lt;Flow> sortedByIndex = unsortedFlows.stream().sorted(Comparator.comparing(Flow::getIndex))&#xD;
     .collect(Collectors.toList());&#xD;
 // Now sort by primary key, which is priority in this case&#xD;
 List&lt;Flow> sortedFlows = sortedByIndex.stream().sorted(Comparator.comparing(Flow::getPriority))&#xD;
     .collect(Collectors.toList());&#xD;
 // Finally, create a new flowNamesInPriorityOrder that contains the flow names in the requested&#xD;
 // order&#xD;
 flowNamesInPriorityOrder = new ArrayList&lt;>();&#xD;
 sortedFlows.forEach((node) -> flowNamesInPriorityOrder.add(node.getName()));&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ZugsM6gmEe-9tYVtpMatrg" name="setFlowsInDMorder" specification="_Zb1ApKgmEe-9tYVtpMatrg">
                <language>java</language>
                <body>/* create a list of Flow objects from the FlowMap using the stream interface. */&#xD;
 List&lt;Flow> unsortedFlows = flows.values().stream().collect(Collectors.toList());&#xD;
 /* Now sort by a secondary key, which is priority in this case */&#xD;
 List&lt;Flow> sortedByPriority = unsortedFlows.stream()&#xD;
     .sorted(Comparator.comparing(Flow::getPriority)).collect(Collectors.toList());&#xD;
 /* Now sort by primary key, which is deadline in this case */&#xD;
 List&lt;Flow> sortedFlows = sortedByPriority.stream()&#xD;
     .sorted(Comparator.comparing(Flow::getDeadline)).collect(Collectors.toList());&#xD;
 /*&#xD;
  * Finally, create a new flowNamesInPriorityOrder that contains the flow names in the requested&#xD;
  * order&#xD;
  */&#xD;
 flowNamesInPriorityOrder = new ArrayList&lt;>();&#xD;
 sortedFlows.forEach((node) -> flowNamesInPriorityOrder.add(node.getName()));&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ZugsNKgmEe-9tYVtpMatrg" name="setFlowsInRMorder" specification="_Zb1ApagmEe-9tYVtpMatrg">
                <language>java</language>
                <body>// create a list of Flow objects from the FlowMap using the stream interface.&#xD;
 List&lt;Flow> unsortedFlows = flows.values().stream().collect(Collectors.toList());&#xD;
 // Now sort by a secondary key, which is priority in this case&#xD;
 List&lt;Flow> sortedByPriority = unsortedFlows.stream()&#xD;
     .sorted(Comparator.comparing(Flow::getPriority)).collect(Collectors.toList());&#xD;
 // Now sort by primary key, which is period in this case&#xD;
 List&lt;Flow> sortedFlows = sortedByPriority.stream().sorted(Comparator.comparing(Flow::getPeriod))&#xD;
     .collect(Collectors.toList());&#xD;
 // Finally, create a new flowNamesInPriorityOrder that contains the flow names in the requested&#xD;
 // order&#xD;
 flowNamesInPriorityOrder = new ArrayList&lt;>();&#xD;
 sortedFlows.forEach((node) -> flowNamesInPriorityOrder.add(node.getName()));&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ZugsNagmEe-9tYVtpMatrg" name="setFlowsInRealTimeHARTorder" specification="_Zb1ApqgmEe-9tYVtpMatrg">
                <language>java</language>
                <body>setFlowsInPriorityOrder(); // use Priority order for RealTimeHART&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ZugsNqgmEe-9tYVtpMatrg" name="finalizeCurrentFlow" specification="_Zb1Ap6gmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_ZugsN6gmEe-9tYVtpMatrg" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>if (numFaults > 0) {&#xD;
   finalizeFlowWithFixedFaultTolerance(flowName);&#xD;
 } else {&#xD;
   finalizeFlowWithE2eParameters(flowName);&#xD;
 }&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ZuhTIKgmEe-9tYVtpMatrg" name="nextReleaseTime" specification="_Zb1AqagmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_ZuhTIagmEe-9tYVtpMatrg" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ZuhTIqgmEe-9tYVtpMatrg" name="currentTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ZuhTI6gmEe-9tYVtpMatrg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var flow = getFlow(flowName);&#xD;
 flow.setLastUpdateTime(currentTime);&#xD;
 flow.setNextReleaseTime(currentTime);&#xD;
 return flow.getReleaseTime(); // next release Time at or after currentTime&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ZuhTJKgmEe-9tYVtpMatrg" name="nextAbsoluteDeadline" specification="_Zb1ns6gmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_ZuhTJagmEe-9tYVtpMatrg" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ZuhTJqgmEe-9tYVtpMatrg" name="currentTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ZuhTJ6gmEe-9tYVtpMatrg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var flow = getFlow(flowName);&#xD;
 flow.setLastUpdateTime(currentTime);&#xD;
 flow.setNextReleaseTime(currentTime);&#xD;
 return flow.getReleaseTime() + flow.getDeadline(); // next deadline after currentTime&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ZuhTKKgmEe-9tYVtpMatrg" name="finalizeFlowWithE2eParameters" specification="_Zb1nt6gmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_ZuhTKagmEe-9tYVtpMatrg" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>var flowNode = flows.get(flowName);&#xD;
 var m = minPacketReceptionRate; // shorten the name :-)&#xD;
 if (flowNode != null) {&#xD;
   var nodes = flowNode.nodes;&#xD;
   int nHops = nodes.size();&#xD;
   if (nHops &lt; 1) {&#xD;
     /*&#xD;
      * number of hops in flow, but make sure it will be at least 1, else it isn't a flow! || was&#xD;
      * -1 at end&#xD;
      */&#xD;
     nHops = 2;&#xD;
   }&#xD;
   Double nTx = 1.0; // set nTx to 1 by default (1 transmission per link required at a minimum&#xD;
                     // and when m == 1.0&#xD;
   if (m &lt; 1.0) {&#xD;
     /*&#xD;
      * now compute nTXper link based on Ryan's formula: log(1 - e2e^(1/hops)) / log(1 - M) = #&#xD;
      * txs per hop&#xD;
      */&#xD;
     nTx = Math.log((1.0 - Math.pow(e2e, (1.0 / (double) nHops)))) / Math.log(1.0 - m);&#xD;
   }&#xD;
   /* set numTxPerLink based on M, E2E, and flow length */&#xD;
   flowNode.numTxPerLink = (int) Math.ceil(nTx);&#xD;
   /* Now compute nTx per link to reach E2E requirement. */&#xD;
   ReliabilityAnalysis linkTxTotalCost2 = new ReliabilityAnalysis(e2e, m);&#xD;
   flowNode.linkTxAndTotalCost = linkTxTotalCost2.numTxPerLinkAndTotalTxCost(flowNode);&#xD;
   flows.put(flowName, flowNode); // update flow node in Flows array&#xD;
 } else { // should never happen...&#xD;
   System.out.printf(&quot;\n\tWarning! Bad situation: Flow %s doesn't exist but &quot;&#xD;
       + &quot;trying to get its numTxPerLink property\n.&quot;, flowName);&#xD;
 }&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ZuhTKqgmEe-9tYVtpMatrg" name="finalizeFlowWithFixedFaultTolerance" specification="_Zb1nuagmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_ZuhTK6gmEe-9tYVtpMatrg" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>var flowNode = flows.get(flowName);&#xD;
 if (flowNode != null) {&#xD;
   /* set numTxPerLink based on numFaults */&#xD;
   flowNode.numTxPerLink = numFaults + 1;&#xD;
   /* Now compute nTx per link to reach E2E requirement. */&#xD;
   ReliabilityAnalysis linkTxTotalCost2 = new ReliabilityAnalysis(numFaults);&#xD;
   flowNode.linkTxAndTotalCost = linkTxTotalCost2.numTxPerLinkAndTotalTxCost(flowNode);&#xD;
   flows.put(flowName, flowNode); // update flow node in Flows array&#xD;
 } else { // should never happen...&#xD;
   System.out.printf(&quot;\n\tWarning! Bad situation: Flow %s doesn't exist but &quot;&#xD;
       + &quot;trying to get its numTxPerLink property\n.&quot;, flowName);&#xD;
 }&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ZuhTLKgmEe-9tYVtpMatrg" name="getNodeNamesOrderedAlphabetically" specification="_Zb1nu6gmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_ZuhTLagmEe-9tYVtpMatrg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZuhTLqgmEe-9tYVtpMatrg" value="*"/>
                </ownedParameter>
                <language>java</language>
                <body>var nodes = getNodes();&#xD;
 Set&lt;String> keys = nodes.keySet(); // get the names from the node map&#xD;
 String[] nodeNames = keys.toArray(new String[keys.size()]);&#xD;
 Arrays.sort(nodeNames); // NodeNames are now sorted&#xD;
 // However, if names are actually strings of integers, then the sort doesn't come out&#xD;
 // the way we would like. So, handle that case&#xD;
 var nodeNamesAsInts = new Integer[nodeNames.length];&#xD;
 var allIntNames = true; // flag to see if all names are Ints or not&#xD;
 for (int i = 0; i &lt; nodeNames.length; i++) {&#xD;
   var nodeName = nodeNames[i];&#xD;
   if (Utilities.isInteger(nodeName) &amp;&amp; allIntNames) {&#xD;
     // nodeName is an alpha representation of an integer&#xD;
     nodeNamesAsInts[i] = Integer.parseInt(nodeName);&#xD;
   } else {&#xD;
     // nodeName is an alpha name and not an integer, so set flag and terminate loop&#xD;
     allIntNames = false; // set false because name not is a number; &amp;&amp; above makes sure we only&#xD;
                          // set it once&#xD;
     break; // can stop the loop once we know not all of the names are ints&#xD;
   }&#xD;
 }&#xD;
 if (allIntNames) {&#xD;
   // If all names are ints, then we need to sort them accordingly&#xD;
   // Otherwise, we get names in what appears to not be in order because&#xD;
   Arrays.sort(nodeNamesAsInts); // sort the ints in assending order&#xD;
   for (int i = 0; i &lt; nodeNamesAsInts.length; i++) {&#xD;
     nodeNames[i] = Integer.toString(nodeNamesAsInts[i]); // convert int to string&#xD;
   }&#xD;
 }&#xD;
 return nodeNames;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ZuhTL6gmEe-9tYVtpMatrg" name="getFlow" specification="_Zb2Ow6gmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_ZuhTMKgmEe-9tYVtpMatrg" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ZuhTMagmEe-9tYVtpMatrg" type="_ZZWUYKgmEe-9tYVtpMatrg" direction="return"/>
                <language>java</language>
                <body>var flow = flows.get(flowName); // get the requested flow node&#xD;
 if (flow == null) {// return empty node if not found&#xD;
   flow = new Flow();&#xD;
   System.out.printf(FLOW_WARNING + &quot;retrieve it\n.&quot;, flowName);&#xD;
 }&#xD;
 return flow;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ZuhTMqgmEe-9tYVtpMatrg" name="getFlowNames" specification="_Zb2OxagmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_ZuhTM6gmEe-9tYVtpMatrg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZuhTNKgmEe-9tYVtpMatrg" value="*"/>
                </ownedParameter>
                <language>java</language>
                <body>return flowNamesInOriginalOrder.toArray(new String[0]);&#xD;
 // could use new String[list.size()], but due to JVM optimizations new (new String[0] is better&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ZuhTNagmEe-9tYVtpMatrg" name="getNodeIndex" specification="_Zb210KgmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_ZuhTNqgmEe-9tYVtpMatrg" name="nodeName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ZuhTN6gmEe-9tYVtpMatrg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var index = 0;&#xD;
 var node = nodes.get(nodeName); // could throw an exception if null, but just return 0 for now&#xD;
 if (node != null) {&#xD;
   index = node.getIndex();&#xD;
 }&#xD;
 return index;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ZuhTOKgmEe-9tYVtpMatrg" name="getNodesInFlow" specification="_Zb2106gmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_ZuhTOagmEe-9tYVtpMatrg" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ZuhTOqgmEe-9tYVtpMatrg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZuhTO6gmEe-9tYVtpMatrg" value="*"/>
                </ownedParameter>
                <language>java</language>
                <body>// get the flow node for requested Flow and then loop through the&#xD;
 // nodes in the flow to create an array of the node names in&#xD;
 // the same order as they exist in the flow specification (i.e., Graph file)&#xD;
 var flow = flows.get(flowName);&#xD;
 String[] nodes;&#xD;
 if (flow != null) {&#xD;
   nodes = new String[flow.nodes.size()];&#xD;
   for (int i = 0; i &lt; nodes.length; i++) {&#xD;
     var node = flow.nodes.get(i); // get the node from the arrayList&#xD;
     nodes[i] = node.getName(); // get the name and store it in the array&#xD;
   }&#xD;
&#xD;
 } else {&#xD;
   nodes = new String[0]; // return empty array&#xD;
   System.out.printf(&quot;\n\t Warning! No Flow with name %s.\n&quot;, flowName);&#xD;
 }&#xD;
 return nodes;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ZuhTPKgmEe-9tYVtpMatrg" name="getHyperPeriod" specification="_Zb3c4agmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_ZuhTPagmEe-9tYVtpMatrg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var hyperPeriod = 1; // hyperPeriod is LCM of all periods. Initialize to 1&#xD;
 for (String flowName : getFlowNames()) {&#xD;
   // var dm = new Utlitities();&#xD;
   hyperPeriod = Utilities.lcm(hyperPeriod, getFlowPeriod(flowName)); // Find LCM of hyperPeriod&#xD;
                                                                      // so far and the current&#xD;
                                                                      // period, then update the&#xD;
                                                                      // hyperPeriod with that&#xD;
                                                                      // value&#xD;
 }&#xD;
 return hyperPeriod;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ZuhTPqgmEe-9tYVtpMatrg" name="getTotalTxAttemptsInFlow" specification="_Zb3c46gmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_ZuhTP6gmEe-9tYVtpMatrg" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ZuhTQKgmEe-9tYVtpMatrg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var flow = getFlow(flowName);&#xD;
 var linkTxAndTotalCost = flow.getLinkTxAndTotalCost();&#xD;
 var totalCostIndex = linkTxAndTotalCost.size() - 1;&#xD;
 var totalCost = linkTxAndTotalCost.get(totalCostIndex);&#xD;
 return totalCost;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ZuhTQagmEe-9tYVtpMatrg" name="getNumTxAttemptsPerLink" specification="_Zb3c5qgmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_ZuhTQqgmEe-9tYVtpMatrg" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ZuhTQ6gmEe-9tYVtpMatrg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZuhTRKgmEe-9tYVtpMatrg" value="*"/>
                </ownedParameter>
                <language>java</language>
                <body>var flow = getFlow(flowName);&#xD;
 var linkTxAndTotalCost = new ArrayList&lt;Integer>(flow.getLinkTxAndTotalCost());&#xD;
 var lastElement = linkTxAndTotalCost.size() - 1;&#xD;
 linkTxAndTotalCost.remove(lastElement); // remove the last element, because that is the sum of&#xD;
                                         // others&#xD;
 return linkTxAndTotalCost.toArray(new Integer[0]);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ZuhTRagmEe-9tYVtpMatrg" name="addEdge" specification="_ZrhCcagmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_ZuhTRqgmEe-9tYVtpMatrg" name="nodeName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ZuhTR6gmEe-9tYVtpMatrg" name="edge" type="_ZZMjY6gmEe-9tYVtpMatrg"/>
                <language>java</language>
                <body>var node = nodes.get(nodeName); // get the node object&#xD;
 node.addEdge(edge);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Zuh6MKgmEe-9tYVtpMatrg" name="maxFlowLength" specification="_Zb4D8agmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_Zuh6MagmEe-9tYVtpMatrg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>Integer maxLength = 0;&#xD;
 for (Flow flow : flows.values()) {&#xD;
   maxLength = Math.max(maxLength, flow.nodes.size());&#xD;
 }&#xD;
 return maxLength;&#xD;
  </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_ZbwvMKgmEe-9tYVtpMatrg" name="setDefaultParameters" visibility="private" method="_ZugFAKgmEe-9tYVtpMatrg">
                <ownedComment xmi:id="_ZuwjsqgmEe-9tYVtpMatrg">
                  <body>Initialize the default parameters for the WorkLoad object</body>
                </ownedComment>
              </ownedOperation>
              <ownedOperation xmi:id="_ZbxWQKgmEe-9tYVtpMatrg" name="getE2e" method="_ZugFAagmEe-9tYVtpMatrg">
                <ownedComment xmi:id="_Zuwjs6gmEe-9tYVtpMatrg">
                  <body>@return the e2e</body>
                </ownedComment>
                <ownedParameter xmi:id="_ZsocwKgmEe-9tYVtpMatrg" type="_ZsQpUKgmEe-9tYVtpMatrg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_ZbxWQagmEe-9tYVtpMatrg" name="getIntForFlowNames" method="_ZugFA6gmEe-9tYVtpMatrg">
                <ownedComment xmi:id="_ZuwjtKgmEe-9tYVtpMatrg">
                  <body>@return the intForFlowNames</body>
                </ownedComment>
                <ownedParameter xmi:id="_ZbxWQqgmEe-9tYVtpMatrg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_ZbxWQ6gmEe-9tYVtpMatrg" name="getName" method="_ZugFBagmEe-9tYVtpMatrg">
                <ownedComment xmi:id="_ZuwjtagmEe-9tYVtpMatrg">
                  <body>@return the name</body>
                </ownedComment>
                <ownedParameter xmi:id="_ZbxWRKgmEe-9tYVtpMatrg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_ZbxWRagmEe-9tYVtpMatrg" name="getMaxPhase" method="_ZugFCagmEe-9tYVtpMatrg">
                <ownedComment xmi:id="_Zuwjt6gmEe-9tYVtpMatrg">
                  <body>@return the maximum phase of all flows</body>
                </ownedComment>
                <ownedParameter xmi:id="_ZbxWRqgmEe-9tYVtpMatrg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_ZbxWR6gmEe-9tYVtpMatrg" name="getMinPeriod" method="_ZugFC6gmEe-9tYVtpMatrg">
                <ownedComment xmi:id="_ZuwjuKgmEe-9tYVtpMatrg">
                  <body>@return the minimum period of all flows</body>
                </ownedComment>
                <ownedParameter xmi:id="_Zbx9UKgmEe-9tYVtpMatrg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_Zbx9UagmEe-9tYVtpMatrg" name="setIntForFlowNames" method="_ZugFD6gmEe-9tYVtpMatrg">
                <ownedComment xmi:id="_ZuwjuqgmEe-9tYVtpMatrg">
                  <body>@param intForFlowNames the intForFlowNames to set</body>
                </ownedComment>
                <ownedParameter xmi:id="_Zbx9UqgmEe-9tYVtpMatrg" name="intForFlowNames">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_Zbx9U6gmEe-9tYVtpMatrg" name="setName" method="_ZugFEagmEe-9tYVtpMatrg">
                <ownedComment xmi:id="_Zuwju6gmEe-9tYVtpMatrg">
                  <body>@param name the name to set</body>
                </ownedComment>
                <ownedParameter xmi:id="_Zbx9VKgmEe-9tYVtpMatrg" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_Zbx9VagmEe-9tYVtpMatrg" name="setNodeChannel" method="_ZugFE6gmEe-9tYVtpMatrg">
                <ownedComment xmi:id="_ZuwjvKgmEe-9tYVtpMatrg">
                  <body>@param name the node whose channel is to be set&#xD;
   * @param channel the channel to set</body>
                </ownedComment>
                <ownedParameter xmi:id="_Zbx9VqgmEe-9tYVtpMatrg" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Zbx9V6gmEe-9tYVtpMatrg" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_Zbx9WKgmEe-9tYVtpMatrg" name="getNodeChannel" method="_ZugFFqgmEe-9tYVtpMatrg">
                <ownedComment xmi:id="_ZuwjvagmEe-9tYVtpMatrg">
                  <body>@return the node channel</body>
                </ownedComment>
                <ownedParameter xmi:id="_ZbykYKgmEe-9tYVtpMatrg" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ZbykYagmEe-9tYVtpMatrg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_ZbykYqgmEe-9tYVtpMatrg" name="addFlow" method="_ZugFGagmEe-9tYVtpMatrg">
                <ownedComment xmi:id="_ZuwjvqgmEe-9tYVtpMatrg">
                  <body>add a new flow node to the Flows dictionary. Only name, priority, and index are changed from&#xD;
    default values priority is set to the number of flows already added (index), 0 for first flow&#xD;
    This will create a default priority equal to the order listed in the input graph file. We&#xD;
    also set index to the same value so we can preserve that order as a secondary sort key. The&#xD;
    initalPriority field is probably not needed, but it might be useful in the future?? If the&#xD;
    optional flow parameters (priority, period, ...) is set, then this default priority will be&#xD;
    over written&#xD;
    &#xD;
    Initializes default parameters for the WorkLoad object, including settings for node and flow names,  &#xD;
    and initializes maps for flow and node storage.&#xD;
 @param flowName</body>
                </ownedComment>
                <ownedParameter xmi:id="_ZbykY6gmEe-9tYVtpMatrg" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_ZbykZKgmEe-9tYVtpMatrg" name="isIntForNodeNames" method="_ZugFG6gmEe-9tYVtpMatrg">
                <ownedComment xmi:id="_Zuwjv6gmEe-9tYVtpMatrg">
                  <body>@return returns true if all node names are ints</body>
                </ownedComment>
                <ownedParameter xmi:id="_ZbykZagmEe-9tYVtpMatrg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_ZbykZqgmEe-9tYVtpMatrg" name="isIntForFlowNames" method="_ZugFHagmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_ZbykZ6gmEe-9tYVtpMatrg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_ZbykaKgmEe-9tYVtpMatrg" name="addNodeToFlow" method="_ZugFH6gmEe-9tYVtpMatrg">
                <ownedComment xmi:id="_ZuwjwKgmEe-9tYVtpMatrg">
                  <body>Adds node to flow creating one if no node exists &#xD;
@param flowName&#xD;
@param nodeName</body>
                </ownedComment>
                <ownedParameter xmi:id="_ZbykaagmEe-9tYVtpMatrg" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ZbykaqgmEe-9tYVtpMatrg" name="nodeName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_ZbzLcKgmEe-9tYVtpMatrg" name="getFlowPriority" method="_ZugsEKgmEe-9tYVtpMatrg">
                <ownedComment xmi:id="_ZuwjwagmEe-9tYVtpMatrg">
                  <body>Iterates over nodes and returns the priority node &#xD;
&#xD;
@param flowName&#xD;
@param nodeName&#xD;
@return the node priority</body>
                </ownedComment>
                <ownedParameter xmi:id="_ZbzLcagmEe-9tYVtpMatrg" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ZbzLcqgmEe-9tYVtpMatrg" name="nodeName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ZbzLc6gmEe-9tYVtpMatrg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_ZbzLdKgmEe-9tYVtpMatrg" name="setFlowPriority" method="_ZugsFKgmEe-9tYVtpMatrg">
                <ownedComment xmi:id="_ZuwjwqgmEe-9tYVtpMatrg">
                  <body>Sets the flow node and makes it priority&#xD;
   * @param flowName&#xD;
   * @param priority</body>
                </ownedComment>
                <ownedParameter xmi:id="_ZbzLdagmEe-9tYVtpMatrg" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ZbzLdqgmEe-9tYVtpMatrg" name="priority">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_ZbzLd6gmEe-9tYVtpMatrg" name="setFlowPeriod" method="_ZugsF6gmEe-9tYVtpMatrg">
                <ownedComment xmi:id="_Zuwjw6gmEe-9tYVtpMatrg">
                  <body>Takes in the flowNode and sets the period&#xD;
	 * @param flowName&#xD;
	 * @param period</body>
                </ownedComment>
                <ownedParameter xmi:id="_ZbzLeKgmEe-9tYVtpMatrg" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ZbzLeagmEe-9tYVtpMatrg" name="period">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_ZbzygKgmEe-9tYVtpMatrg" name="setFlowDeadline" method="_ZugsGqgmEe-9tYVtpMatrg">
                <ownedComment xmi:id="_ZuwjxKgmEe-9tYVtpMatrg">
                  <body>Gets the flow Node and sets the deadline &#xD;
   * @param flowName&#xD;
   * @param deadline</body>
                </ownedComment>
                <ownedParameter xmi:id="_ZbzygagmEe-9tYVtpMatrg" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ZbzygqgmEe-9tYVtpMatrg" name="deadline">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_Zbzyg6gmEe-9tYVtpMatrg" name="setFlowPhase" method="_ZugsHagmEe-9tYVtpMatrg">
                <ownedComment xmi:id="_ZuwjxagmEe-9tYVtpMatrg">
                  <body>Gets the flow Node and sets the Phase&#xD;
   * @param flowName&#xD;
   * @param phase</body>
                </ownedComment>
                <ownedParameter xmi:id="_ZbzyhKgmEe-9tYVtpMatrg" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ZbzyhagmEe-9tYVtpMatrg" name="phase">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_ZbzyhqgmEe-9tYVtpMatrg" name="getFlowIndex" method="_ZugsIKgmEe-9tYVtpMatrg">
                <ownedComment xmi:id="_ZuwjxqgmEe-9tYVtpMatrg">
                  <body>Sets the flowNode with the flowName and Returns the Nodes Index&#xD;
   * @param flowName&#xD;
   * @return flowNode Index</body>
                </ownedComment>
                <ownedParameter xmi:id="_Zbzyh6gmEe-9tYVtpMatrg" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ZbzyiKgmEe-9tYVtpMatrg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_ZbzyiagmEe-9tYVtpMatrg" name="getFlowPriority" method="_ZugsI6gmEe-9tYVtpMatrg">
                <ownedComment xmi:id="_Zuwjx6gmEe-9tYVtpMatrg">
                  <body>Takes in the flowName, sets it to flowNode, and returns the Node Priority&#xD;
   * @param flowName&#xD;
   * @return flowNode Priority</body>
                </ownedComment>
                <ownedParameter xmi:id="_ZbzyiqgmEe-9tYVtpMatrg" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Zb0ZkKgmEe-9tYVtpMatrg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_Zb0ZkagmEe-9tYVtpMatrg" name="getFlowPeriod" method="_ZugsJqgmEe-9tYVtpMatrg">
                <ownedComment xmi:id="_ZuwjyKgmEe-9tYVtpMatrg">
                  <body>Takes in flowName, sets it to flowNode, and returns the Nodes Period&#xD;
   * @param flowName&#xD;
   * @return flowNode Period</body>
                </ownedComment>
                <ownedParameter xmi:id="_Zb0ZkqgmEe-9tYVtpMatrg" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Zb0Zk6gmEe-9tYVtpMatrg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_Zb0ZlKgmEe-9tYVtpMatrg" name="getFlowDeadline" method="_ZugsKagmEe-9tYVtpMatrg">
                <ownedComment xmi:id="_ZuwjyagmEe-9tYVtpMatrg">
                  <body>gets flow deadline from flowname&#xD;
   * @param flowName&#xD;
   * @return flowDeadline</body>
                </ownedComment>
                <ownedParameter xmi:id="_Zb0ZlagmEe-9tYVtpMatrg" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Zb0ZlqgmEe-9tYVtpMatrg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_Zb0Zl6gmEe-9tYVtpMatrg" name="getFlowPhase" method="_ZugsLKgmEe-9tYVtpMatrg">
                <ownedComment xmi:id="_ZuwjyqgmEe-9tYVtpMatrg">
                  <body>Retrieves the phase of a flow node based on the specified flow name.&#xD;
   * @param flowName&#xD;
   * @return Flow node</body>
                </ownedComment>
                <ownedParameter xmi:id="_Zb0ZmKgmEe-9tYVtpMatrg" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Zb0ZmagmEe-9tYVtpMatrg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_Zb1AoKgmEe-9tYVtpMatrg" name="getFlowTxAttemptsPerLink" method="_ZugsL6gmEe-9tYVtpMatrg">
                <ownedComment xmi:id="_Zuwjy6gmEe-9tYVtpMatrg">
                  <body>Retrieves priority of a specified node within a given flow&#xD;
   * @param flowName&#xD;
   * @return flow node</body>
                </ownedComment>
                <ownedParameter xmi:id="_Zb1AoagmEe-9tYVtpMatrg" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Zb1AoqgmEe-9tYVtpMatrg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_Zb1Ao6gmEe-9tYVtpMatrg" name="setFlowsInPriorityOrder" method="_ZugsMqgmEe-9tYVtpMatrg">
                <ownedComment xmi:id="_ZuxKwKgmEe-9tYVtpMatrg">
                  <body>Sorts the flows in priority order and updates the flow names list accordingly.</body>
                </ownedComment>
              </ownedOperation>
              <ownedOperation xmi:id="_Zb1ApKgmEe-9tYVtpMatrg" name="setFlowsInDMorder" method="_ZugsM6gmEe-9tYVtpMatrg">
                <ownedComment xmi:id="_ZuxKwagmEe-9tYVtpMatrg">
                  <body>Sorts the flows in Deadline-Monotonic (DM) order and updates the flow names list accordingly.</body>
                </ownedComment>
              </ownedOperation>
              <ownedOperation xmi:id="_Zb1ApagmEe-9tYVtpMatrg" name="setFlowsInRMorder" method="_ZugsNKgmEe-9tYVtpMatrg">
                <ownedComment xmi:id="_ZuxKwqgmEe-9tYVtpMatrg">
                  <body>Create list Flow objects and sort them by the secondary key (Priority)&#xD;
   * Next sort them by the primary key (Period) and create flowNamesInPriority Order&#xD;
   * With names in requested order</body>
                </ownedComment>
              </ownedOperation>
              <ownedOperation xmi:id="_Zb1ApqgmEe-9tYVtpMatrg" name="setFlowsInRealTimeHARTorder" method="_ZugsNagmEe-9tYVtpMatrg">
                <ownedComment xmi:id="_ZuxKw6gmEe-9tYVtpMatrg">
                  <body>*</body>
                </ownedComment>
              </ownedOperation>
              <ownedOperation xmi:id="_Zb1Ap6gmEe-9tYVtpMatrg" name="finalizeCurrentFlow" method="_ZugsNqgmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_Zb1AqKgmEe-9tYVtpMatrg" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_Zb1AqagmEe-9tYVtpMatrg" name="nextReleaseTime" method="_ZuhTIKgmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_Zb1nsKgmEe-9tYVtpMatrg" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Zb1nsagmEe-9tYVtpMatrg" name="currentTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Zb1nsqgmEe-9tYVtpMatrg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_Zb1ns6gmEe-9tYVtpMatrg" name="nextAbsoluteDeadline" method="_ZuhTJKgmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_Zb1ntKgmEe-9tYVtpMatrg" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Zb1ntagmEe-9tYVtpMatrg" name="currentTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Zb1ntqgmEe-9tYVtpMatrg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_Zb1nt6gmEe-9tYVtpMatrg" name="finalizeFlowWithE2eParameters" visibility="private" method="_ZuhTKKgmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_Zb1nuKgmEe-9tYVtpMatrg" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_Zb1nuagmEe-9tYVtpMatrg" name="finalizeFlowWithFixedFaultTolerance" visibility="private" method="_ZuhTKqgmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_Zb1nuqgmEe-9tYVtpMatrg" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_Zb1nu6gmEe-9tYVtpMatrg" name="getNodeNamesOrderedAlphabetically" method="_ZuhTLKgmEe-9tYVtpMatrg">
                <ownedComment xmi:id="_ZuxKxKgmEe-9tYVtpMatrg">
                  <body>Retrieves and returns an array of node names sorted alphabetically or numerically if the names represent integers.&#xD;
   * @return nodeNames</body>
                </ownedComment>
                <ownedParameter xmi:id="_Zb2OwKgmEe-9tYVtpMatrg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Zb2OwagmEe-9tYVtpMatrg" value="*"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_Zb2Ow6gmEe-9tYVtpMatrg" name="getFlow" visibility="private" method="_ZuhTL6gmEe-9tYVtpMatrg">
                <ownedParameter xmi:id="_Zb2OxKgmEe-9tYVtpMatrg" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ZrhCcKgmEe-9tYVtpMatrg" type="_ZZWUYKgmEe-9tYVtpMatrg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_Zb2OxagmEe-9tYVtpMatrg" name="getFlowNames" method="_ZuhTMqgmEe-9tYVtpMatrg">
                <ownedComment xmi:id="_ZuxKxagmEe-9tYVtpMatrg">
                  <body>to return an array of flow names in the order they were read from the graph file&#xD;
   * @return Flow Names in Original Order</body>
                </ownedComment>
                <ownedParameter xmi:id="_Zb2OxqgmEe-9tYVtpMatrg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Zb2Ox6gmEe-9tYVtpMatrg" value="*"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_Zb210KgmEe-9tYVtpMatrg" name="getNodeIndex" method="_ZuhTNagmEe-9tYVtpMatrg">
                <ownedComment xmi:id="_ZuxKxqgmEe-9tYVtpMatrg">
                  <body>return the dictionary of nodes&#xD;
   * @param nodeName&#xD;
   * @return node index</body>
                </ownedComment>
                <ownedParameter xmi:id="_Zb210agmEe-9tYVtpMatrg" name="nodeName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Zb210qgmEe-9tYVtpMatrg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_Zb2106gmEe-9tYVtpMatrg" name="getNodesInFlow" method="_ZuhTOKgmEe-9tYVtpMatrg">
                <ownedComment xmi:id="_ZuxKx6gmEe-9tYVtpMatrg">
                  <body>Returns an array of node names for the specified flow in the order they appear in the flow specification.&#xD;
   * @param flowName&#xD;
   * @return Array of node names</body>
                </ownedComment>
                <ownedParameter xmi:id="_Zb211KgmEe-9tYVtpMatrg" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Zb211agmEe-9tYVtpMatrg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Zb211qgmEe-9tYVtpMatrg" value="*"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_Zb3c4agmEe-9tYVtpMatrg" name="getHyperPeriod" method="_ZuhTPKgmEe-9tYVtpMatrg">
                <ownedComment xmi:id="_ZuxKyKgmEe-9tYVtpMatrg">
                  <body>Set hyperPeriods to 1 and find the LCM and update the hyperPeriod&#xD;
   * @return the HyperPeriod</body>
                </ownedComment>
                <ownedParameter xmi:id="_Zb3c4qgmEe-9tYVtpMatrg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_Zb3c46gmEe-9tYVtpMatrg" name="getTotalTxAttemptsInFlow" method="_ZuhTPqgmEe-9tYVtpMatrg">
                <ownedComment xmi:id="_ZuxKyagmEe-9tYVtpMatrg">
                  <body>Gets the total transmission attempts for the specified flow and returns it as total cost&#xD;
   * @param flowName&#xD;
   * @return totalCost</body>
                </ownedComment>
                <ownedParameter xmi:id="_Zb3c5KgmEe-9tYVtpMatrg" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Zb3c5agmEe-9tYVtpMatrg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_Zb3c5qgmEe-9tYVtpMatrg" name="getNumTxAttemptsPerLink" method="_ZuhTQagmEe-9tYVtpMatrg">
                <ownedComment xmi:id="_ZuxKyqgmEe-9tYVtpMatrg">
                  <body>Retrieves the number of transmission attempts for each link in the specified flow.&#xD;
   * @param flowName&#xD;
   * @return return an array of the number of transmission needed for each</body>
                </ownedComment>
                <ownedParameter xmi:id="_Zb3c56gmEe-9tYVtpMatrg" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Zb3c6KgmEe-9tYVtpMatrg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Zb3c6agmEe-9tYVtpMatrg" value="*"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_Zb4D8agmEe-9tYVtpMatrg" name="maxFlowLength" method="_Zuh6MKgmEe-9tYVtpMatrg">
                <ownedComment xmi:id="_ZuxKzKgmEe-9tYVtpMatrg">
                  <body>Start with the max flow length to 0 return the max length of flow Nodes&#xD;
   * @return maxLength</body>
                </ownedComment>
                <ownedParameter xmi:id="_Zb4D8qgmEe-9tYVtpMatrg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_ZrhCcagmEe-9tYVtpMatrg" name="addEdge" method="_ZuhTRagmEe-9tYVtpMatrg">
                <ownedComment xmi:id="_ZuxKy6gmEe-9tYVtpMatrg">
                  <body>Get the node object and add it to the edge &#xD;
   * @param nodeName&#xD;
   * @param edge</body>
                </ownedComment>
                <ownedParameter xmi:id="_ZrhCcqgmEe-9tYVtpMatrg" name="nodeName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ZrhCc6gmEe-9tYVtpMatrg" name="edge" type="_ZZMjY6gmEe-9tYVtpMatrg"/>
              </ownedOperation>
              <ownedOperation xmi:id="_ZsnOoKgmEe-9tYVtpMatrg" name="WorkLoad" visibility="package" method="_Zufd9agmEe-9tYVtpMatrg">
                <eAnnotations xmi:id="_Zsn1sKgmEe-9tYVtpMatrg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_Zsn1sagmEe-9tYVtpMatrg" key="create"/>
                </eAnnotations>
                <ownedComment xmi:id="_ZuwjsKgmEe-9tYVtpMatrg">
                  <body>Constructs a WorkLoad object by reading and processing an input file to build node and flow data.&#xD;
   * @param m&#xD;
   * @param e2e&#xD;
   * @param inputFileName</body>
                </ownedComment>
                <ownedParameter xmi:id="_ZsnOoagmEe-9tYVtpMatrg" name="m" type="_ZsQpUKgmEe-9tYVtpMatrg"/>
                <ownedParameter xmi:id="_ZsnOoqgmEe-9tYVtpMatrg" name="e2e" type="_ZsQpUKgmEe-9tYVtpMatrg"/>
                <ownedParameter xmi:id="_ZsnOo6gmEe-9tYVtpMatrg" name="inputFileName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Zsn1sqgmEe-9tYVtpMatrg" type="_Zbu6AqgmEe-9tYVtpMatrg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_Zsn1s6gmEe-9tYVtpMatrg" name="WorkLoad" visibility="package" method="_Zufd-qgmEe-9tYVtpMatrg">
                <eAnnotations xmi:id="_Zsn1uKgmEe-9tYVtpMatrg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_Zsn1uagmEe-9tYVtpMatrg" key="create"/>
                </eAnnotations>
                <ownedComment xmi:id="_ZuwjsagmEe-9tYVtpMatrg">
                  <body>Constructs a WorkLoad object with specified fault tolerance parameters by reading and processing an input file.&#xD;
   * @param numFaults&#xD;
   * @param m&#xD;
   * @param e2e&#xD;
   * @param inputFileName</body>
                </ownedComment>
                <ownedParameter xmi:id="_Zsn1tKgmEe-9tYVtpMatrg" name="numFaults">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Zsn1tagmEe-9tYVtpMatrg" name="m" type="_ZsQpUKgmEe-9tYVtpMatrg"/>
                <ownedParameter xmi:id="_Zsn1tqgmEe-9tYVtpMatrg" name="e2e" type="_ZsQpUKgmEe-9tYVtpMatrg"/>
                <ownedParameter xmi:id="_Zsn1t6gmEe-9tYVtpMatrg" name="inputFileName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Zsn1uqgmEe-9tYVtpMatrg" type="_Zbu6AqgmEe-9tYVtpMatrg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_ZsocwagmEe-9tYVtpMatrg" name="setMinPacketReceptionRate" method="_ZugFB6gmEe-9tYVtpMatrg">
                <ownedComment xmi:id="_ZuwjtqgmEe-9tYVtpMatrg">
                  <body>@param minPacketReceptionRate the minPacketReceptionRate to set</body>
                </ownedComment>
                <ownedParameter xmi:id="_ZsocwqgmEe-9tYVtpMatrg" name="minPacketReceptionRate" type="_ZsQpUKgmEe-9tYVtpMatrg"/>
              </ownedOperation>
              <ownedOperation xmi:id="_Zsocw6gmEe-9tYVtpMatrg" name="setE2e" method="_ZugFDagmEe-9tYVtpMatrg">
                <ownedComment xmi:id="_ZuwjuagmEe-9tYVtpMatrg">
                  <body>@param e2e the e2e to set</body>
                </ownedComment>
                <ownedParameter xmi:id="_ZsocxKgmEe-9tYVtpMatrg" name="e2e" type="_ZsQpUKgmEe-9tYVtpMatrg"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_Zb7uUKgmEe-9tYVtpMatrg" name="WorkLoadTest">
              <eAnnotations xmi:id="_Zb8VYKgmEe-9tYVtpMatrg" source="http://ns.yatta.de/umllab">
                <contents xmi:type="ecore:EAnnotation" xmi:id="_Zb8VYagmEe-9tYVtpMatrg" source="codegen">
                  <details xmi:id="_Zb8VYqgmEe-9tYVtpMatrg" key="codegenDirectory" value="/cs2820-fall24/test"/>
                </contents>
              </eAnnotations>
              <ownedAttribute xmi:id="_Zt5BAKgmEe-9tYVtpMatrg" name="workload" visibility="private" type="_Zbu6AqgmEe-9tYVtpMatrg" association="_Zvj09KgmEe-9tYVtpMatrg"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Zuh6MqgmEe-9tYVtpMatrg" name="setUp" specification="_Zb8VY6gmEe-9tYVtpMatrg">
                <language>java</language>
                <body>workload = new WorkLoad(0.9, 0.99, &quot;StressTest4.txt&quot;);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Zuh6M6gmEe-9tYVtpMatrg" name="addFlowAddTest" specification="_Zb88dqgmEe-9tYVtpMatrg">
                <language>java</language>
                <body>workload.addFlow(&quot;F11&quot;);&#xD;
		// ArrayList of actual flow names in original order of &quot;StressTest4.txt&quot;&#xD;
		ArrayList&lt;String> actual = workload.getFlowNamesInOriginalOrder();&#xD;
		// new ArrayList of expected flows in expected order of &quot;StressTest4.txt&quot;&#xD;
		ArrayList&lt;String> exp = new ArrayList&lt;> (Arrays.asList(&quot;F1&quot;, &quot;F5&quot;, &quot;F2&quot;, &quot;F4&quot;, &quot;F3&quot;,&#xD;
				&quot;F6&quot;, &quot;F7&quot;, &quot;F8&quot;, &quot;F9&quot;, &quot;F10&quot;, &quot;F11&quot;));&#xD;
		/*&#xD;
		 * Tests that the expected flow names with an additional flow are in the same order as &#xD;
		 * the actual flow names in the original order &#xD;
		 */&#xD;
		assertEquals(exp, actual, &quot;Did not correctly add a flow&quot;);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Zuh6NKgmEe-9tYVtpMatrg" name="addFlowOverridingTest" specification="_Zb9jg6gmEe-9tYVtpMatrg">
                <language>java</language>
                <body>workload.addFlow(&quot;F9&quot;);&#xD;
		ArrayList&lt;String> actual = workload.getFlowNamesInOriginalOrder();&#xD;
		ArrayList&lt;String> exp = new ArrayList&lt;> (Arrays.asList(&quot;F1&quot;, &quot;F5&quot;, &quot;F2&quot;, &quot;F4&quot;, &quot;F3&quot;,&#xD;
				&quot;F6&quot;, &quot;F7&quot;, &quot;F8&quot;, &quot;F9&quot;, &quot;F10&quot;, &quot;F9&quot;));&#xD;
		/*&#xD;
		 * Tests that the expected ArrayList of flows with a repeated flow are in the same order&#xD;
		 * as the actual flow names with the repeated flow&#xD;
		 */&#xD;
		assertEquals(exp, actual, &quot;Did not override new flow correctly&quot;);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Zuh6NagmEe-9tYVtpMatrg" name="addFlowMultipleAddsTest" specification="_Zb9jh6gmEe-9tYVtpMatrg">
                <language>java</language>
                <body>workload.addFlow(&quot;F11&quot;);&#xD;
		// adds second new flow &#xD;
		workload.addFlow(&quot;F12&quot;);&#xD;
		// adds third new flow &#xD;
		workload.addFlow(&quot;F13&quot;);&#xD;
		// adds fourth new flow&#xD;
		workload.addFlow(&quot;F14&quot;);&#xD;
		ArrayList&lt;String> actual = workload.getFlowNamesInOriginalOrder();&#xD;
		ArrayList&lt;String> exp = new ArrayList&lt;> (Arrays.asList(&quot;F1&quot;, &quot;F5&quot;, &quot;F2&quot;, &quot;F4&quot;, &quot;F3&quot;,&#xD;
				&quot;F6&quot;, &quot;F7&quot;, &quot;F8&quot;, &quot;F9&quot;, &quot;F10&quot;, &quot;F11&quot;, &quot;F12&quot;, &quot;F13&quot;, &quot;F14&quot;));&#xD;
		/*&#xD;
		 * Tests that the expected ArrayList with an addition of multiple flows is equal&#xD;
		 * to the actual ArrayList with the new flows&#xD;
		 */&#xD;
		assertEquals(exp, actual, &quot;Did not correctly add multiple flows&quot;);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Zuh6NqgmEe-9tYVtpMatrg" name="addNodeToFlowExistsTest" specification="_Zb9ji6gmEe-9tYVtpMatrg">
                <language>java</language>
                <body>workload.addNodeToFlow(&quot;F1&quot;, &quot;E&quot;);&#xD;
		String[] actual = workload.getNodesInFlow(&quot;F1&quot;);&#xD;
		String[] exp = {&quot;B&quot;, &quot;C&quot;, &quot;D&quot;, &quot;E&quot;};&#xD;
		/*&#xD;
		 * Tests that each element of the expected array of &quot;F1&quot; with the addition of a new &#xD;
		 * node to &quot;F1&quot; but that already exists within &quot;StressTest4.txt&quot; is equal to the &#xD;
		 * corresponding elements in the actual &quot;F1&quot; array when calling getNodesInFlow()&#xD;
		 */&#xD;
		assertArrayEquals(exp, actual, &quot;Incorrectly inserted existing node into existing flow&quot;);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ZuihQKgmEe-9tYVtpMatrg" name="addNodeToFlowDoesntExistTest" specification="_Zb-Kk6gmEe-9tYVtpMatrg">
                <language>java</language>
                <body>workload.addNodeToFlow(&quot;F1&quot;, &quot;newNode&quot;);&#xD;
		String[] actual = workload.getNodesInFlow(&quot;F1&quot;);&#xD;
		String[] exp = {&quot;B&quot;, &quot;C&quot;, &quot;D&quot;, &quot;newNode&quot;};&#xD;
		/*&#xD;
		 * Tests that each element of the expected array of &quot;F1&quot; with the addition of a new &#xD;
		 * node new to the file is equal to the actual array elements when calling getNodesInFLow()&#xD;
		 */&#xD;
		assertArrayEquals(exp, actual, &quot;Incorrectly inserted new node into existing flow&quot;);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ZuihQagmEe-9tYVtpMatrg" name="getTotalTxAttemptsInFlowOneFlowTest" specification="_Zb-Kl6gmEe-9tYVtpMatrg">
                <language>java</language>
                <body>Integer actual = workload.getTotalTxAttemptsInFlow(&quot;F1&quot;);&#xD;
		Integer exp = 4;&#xD;
		/*&#xD;
		 * Tests that the expected totalCost of &quot;F1&quot; is equal to the actual cost as found with&#xD;
		 * getTotalTxAttemptsInFlow()&#xD;
		 */&#xD;
		assertEquals(exp, actual, &quot;Produces the incorrect total cost&quot;);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ZuihQqgmEe-9tYVtpMatrg" name="getTotalTxAttemptsInFlowMultiFlowsTest" specification="_Zb-Km6gmEe-9tYVtpMatrg">
                <language>java</language>
                <body>Integer flowOneCost = workload.getTotalTxAttemptsInFlow(&quot;F1&quot;);&#xD;
		// finds number of transmission attempts for &quot;F2&quot; and returns as totalCost&#xD;
		Integer flowTwoCost = workload.getTotalTxAttemptsInFlow(&quot;F2&quot;);&#xD;
		// finds number of transmission attempts for &quot;F3&quot; and returns as totalCost&#xD;
		Integer flowThreeCost = workload.getTotalTxAttemptsInFlow(&quot;F3&quot;);&#xD;
		// sum of &quot;F1&quot;, &quot;F2&quot;, and &quot;F3&quot; total cost&#xD;
		Integer actual = flowOneCost + flowTwoCost + flowThreeCost;&#xD;
		Integer exp = 21;&#xD;
		/* &#xD;
		 * Tests that the expected sum of multiple flows' costs is equal to the actual sum as&#xD;
		 * found with getTotalTxAttemptsInFlow() to conclude that the method can accurately find&#xD;
		 * multiple flows' costs&#xD;
		 */&#xD;
		assertEquals(exp, actual, &quot;Incorrectly adds total cost of multiple flows&quot;);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ZuihQ6gmEe-9tYVtpMatrg" name="getFlowPriorityTest" specification="_Zb-xo6gmEe-9tYVtpMatrg">
                <language>java</language>
                <body>var actual = workload.getFlowPriority(&quot;F1&quot;, &quot;C&quot;);&#xD;
		var exp = 0;&#xD;
		/*&#xD;
		 * Tests that the expected priority of node &quot;C&quot; in &quot;F1&quot; is equal to the actual&#xD;
		 * priority as found with getFlowPriority()&#xD;
		 */&#xD;
		assertEquals(exp, actual, &quot;Returns incorrect priority for src node&quot;);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ZuihRKgmEe-9tYVtpMatrg" name="setFlowPriorityTest" specification="_Zb-xp6gmEe-9tYVtpMatrg">
                <language>java</language>
                <body>workload.setFlowPriority(&quot;F1&quot;, 5);&#xD;
		Integer actual = workload.getFlowPriority(&quot;F1&quot;);&#xD;
		Integer exp = 5;&#xD;
		/*&#xD;
		 * Tests that the expected priority of flow node in &quot;F1&quot; is equal to the actual&#xD;
		 * priority as set with setFlowPriority()&#xD;
		 */&#xD;
		assertEquals(exp, actual, &quot;Does not set current flow priority&quot;);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ZuihRagmEe-9tYVtpMatrg" name="getFlowTxAttemptsPerLinkTest" specification="_Zb-xq6gmEe-9tYVtpMatrg">
                <language>java</language>
                <body>Integer actual = workload.getFlowTxAttemptsPerLink(&quot;F1&quot;);&#xD;
		Integer exp = 3;&#xD;
		/* &#xD;
		 * Tests that the expected priority of flow &quot;F1&quot; is equal to the actual priority&#xD;
		 * found with getFlowTxAttemptsPerLink()&#xD;
		 */&#xD;
		assertEquals(exp, actual, &quot;Returns incorrect priority of specified flow&quot;);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ZuihRqgmEe-9tYVtpMatrg" name="getFlowTxAttemptsPerLinkEmptyTest" specification="_Zb_Ys6gmEe-9tYVtpMatrg">
                <language>java</language>
                <body>Integer actual = workload.getFlowTxAttemptsPerLink(null);&#xD;
		Integer exp = 1;&#xD;
		/*&#xD;
		 * Tests that the expected priority of a null input, an empty list, is equal to &#xD;
		 * the actual priority of an empty list found with getFlowTxAttemptsPerLink()&#xD;
		 */&#xD;
		assertEquals(exp, actual, &quot;Returns incorrect default priority of flow&quot;);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ZuihR6gmEe-9tYVtpMatrg" name="setFlowsInRMorderCorrectOrderTest" specification="_Zb_Yt6gmEe-9tYVtpMatrg">
                <language>java</language>
                <body>String[] actual = workload.getFlowNames();&#xD;
		String[] exp = {&quot;F1&quot;, &quot;F5&quot;, &quot;F2&quot;, &quot;F4&quot;, &quot;F3&quot;, &quot;F6&quot;, &quot;F7&quot;, &quot;F8&quot;, &quot;F9&quot;, &quot;F10&quot;};&#xD;
		/*&#xD;
		 * Tests that the expected array of ordered flow names in &quot;StressTest4.txt&quot; is &#xD;
		 * equal to the actual order of flow names in this file as found with getFlowNames()&#xD;
		 */&#xD;
		assertArrayEquals(actual, exp, &quot;Does not correctly order flows&quot;);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ZuihSKgmEe-9tYVtpMatrg" name="setFlowsInRMorderAddFlowsTest" specification="_Zb_Yu6gmEe-9tYVtpMatrg">
                <language>java</language>
                <body>workload.addFlow(&quot;F11&quot;);&#xD;
		// adds new flow &quot;F12&quot; to &quot;StressTest4.txt&quot;&#xD;
		workload.addFlow(&quot;F12&quot;);&#xD;
		// adds new flow &quot;F13&quot; to &quot;StressTest4.txt&quot;&#xD;
		workload.addFlow(&quot;F13&quot;);&#xD;
		// orders flow names with three new flows&#xD;
		String[] actual = workload.getFlowNames();&#xD;
		String[] exp = {&quot;F1&quot;, &quot;F5&quot;, &quot;F2&quot;, &quot;F4&quot;, &quot;F3&quot;, &quot;F6&quot;, &quot;F7&quot;, &quot;F8&quot;, &quot;F9&quot;, &quot;F10&quot;, &quot;F11&quot;, &quot;F12&quot;, &quot;F13&quot;};&#xD;
		/*&#xD;
		 * Tests that the expected array of ordered flows of &quot;StressTest4.txt&quot; with three new flows&#xD;
		 * is equivalent to the actual ordered array with getFlowNames()&#xD;
		 */&#xD;
		assertArrayEquals(actual, exp, &quot;Does not correctly order flows with new additional flows&quot;);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ZuihSagmEe-9tYVtpMatrg" name="getNodeNamesOrderedAlphabeticallyTest" specification="_Zb_Yv6gmEe-9tYVtpMatrg">
                <language>java</language>
                <body>String[] actual = workload.getFlowNames();&#xD;
		String[] exp = {&quot;F1&quot;, &quot;F5&quot;, &quot;F2&quot;, &quot;F4&quot;, &quot;F3&quot;, &quot;F6&quot;, &quot;F7&quot;, &quot;F8&quot;, &quot;F9&quot;, &quot;F10&quot;};&#xD;
		/*&#xD;
		 * Tests that the expected array of alphabetically ordered flows is equivalent to the &#xD;
		 * actual array order using getFlowNames() to find actual order&#xD;
		 */&#xD;
		assertArrayEquals(exp, actual, &quot;Incorrectly orders flows alphabetically with new flows&quot;);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ZuihSqgmEe-9tYVtpMatrg" name="getNodeNamesOrderedAlphabeticallyAdditionalFlowsTest" specification="_Zb_Yw6gmEe-9tYVtpMatrg">
                <language>java</language>
                <body>workload.addFlow(&quot;F11&quot;);&#xD;
		// adds new flow &quot;F12&quot; to &quot;StressTest4.txt&quot;&#xD;
		workload.addFlow(&quot;F12&quot;);&#xD;
		// adds new flow &quot;F13&quot; to &quot;StressTest4.txt&quot;&#xD;
		workload.addFlow(&quot;F13&quot;);&#xD;
		// alphabetically ordered array of flow names in &quot;StressTest4.txt&quot; with three new flows&#xD;
		String[] actual = workload.getFlowNames();&#xD;
		String[] exp = {&quot;F1&quot;, &quot;F5&quot;, &quot;F2&quot;, &quot;F4&quot;, &quot;F3&quot;, &quot;F6&quot;, &quot;F7&quot;, &quot;F8&quot;, &quot;F9&quot;, &quot;F10&quot;, &quot;F11&quot;, &quot;F12&quot;, &quot;F13&quot;};&#xD;
		/*&#xD;
		 * Tests that the expected alphabetically ordered array of flows in &quot;StressTest4.txt&quot; with &#xD;
		 * three new flows is equal to the actual alphabetical order of flows using getFlowNames()&#xD;
		 */&#xD;
		assertArrayEquals(exp, actual, &quot;Incorrectly orders flows alphabetically with new flows&quot;);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ZuihS6gmEe-9tYVtpMatrg" name="testGetFlowNames" specification="_ZcAm06gmEe-9tYVtpMatrg">
                <language>java</language>
                <body>workload.addFlow(&quot;Flow1&quot;);&#xD;
		workload.addFlow(&quot;Flow2&quot;);&#xD;
		workload.addFlow(&quot;Flow3&quot;);&#xD;
		// Expected array after adding new flows&#xD;
		String[] expectedFlowNames = {&quot;F1&quot;, &quot;F5&quot;, &quot;F2&quot;, &quot;F4&quot;, &quot;F3&quot;, &quot;F6&quot;, &quot;F7&quot;, &quot;F8&quot;, &quot;F9&quot;, &quot;F10&quot;, &quot;Flow1&quot;, &quot;Flow2&quot;, &quot;Flow3&quot;};&#xD;
		// Get actual flow names from workload&#xD;
		String[] actualFlowNames = workload.getFlowNames();&#xD;
		// Assert actual flow names match expected names&#xD;
		assertArrayEquals(expectedFlowNames, actualFlowNames, &quot;FlowNames are incorrect&quot;);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ZuihTKgmEe-9tYVtpMatrg" name="testGetFlowNamesEmpty" specification="_ZcAm16gmEe-9tYVtpMatrg">
                <language>java</language>
                <body>WorkLoad emptyWorkload = new WorkLoad(0.9, 0.99, &quot;Test1.txt&quot;);&#xD;
		// Get flow names from the empty workload&#xD;
		String[] actualFlowNames = emptyWorkload.getFlowNames();&#xD;
		// Assert the array of flow names is empty&#xD;
		assertEquals(0, actualFlowNames.length, &quot;Array is not empty!&quot;);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ZuihTagmEe-9tYVtpMatrg" name="testGetNodeIndexNonExistentNode" specification="_ZcAm26gmEe-9tYVtpMatrg">
                <language>java</language>
                <body>Integer expectedIndex = 0;&#xD;
		// Get the actual index of a non-existent node &quot;Z&quot;&#xD;
		Integer actualIndex = workload.getNodeIndex(&quot;Z&quot;);&#xD;
		// Assert that the actual index matches the expected index&#xD;
		assertEquals(expectedIndex, actualIndex, &quot;The method should return 0 for a non-existent node&quot;);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ZuihTqgmEe-9tYVtpMatrg" name="testGetNodeIndexExistingNode" specification="_ZcBN46gmEe-9tYVtpMatrg">
                <language>java</language>
                <body>Integer actualIndex = workload.getNodeIndex(&quot;C&quot;);&#xD;
		// Assert that the actual index of node &quot;C&quot; is correct&#xD;
		assertEquals(1, actualIndex, &quot;The index for node C is incorrect&quot;);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ZuihT6gmEe-9tYVtpMatrg" name="testGetNodesInFlowValidFlowF1" specification="_ZcBN56gmEe-9tYVtpMatrg">
                <language>java</language>
                <body>String[] expectedNodes = {&quot;B&quot;, &quot;C&quot;, &quot;D&quot;};&#xD;
		// Getting the actual nodes in the flow &quot;F1&quot;&#xD;
		String[] actualNodes = workload.getNodesInFlow(&quot;F1&quot;);&#xD;
		// Assert that the actual nodes match the expected nodes&#xD;
		assertArrayEquals(expectedNodes, actualNodes, &quot;Incorrect nodes for flow F1&quot;);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ZuihUKgmEe-9tYVtpMatrg" name="testGetNodesInFlowNonExistentFlow" specification="_ZcB08KgmEe-9tYVtpMatrg">
                <language>java</language>
                <body>String[] expectedNodes = new String[0];  &#xD;
		// Getting the actual nodes in the non-existent flow &quot;F99&quot;&#xD;
     String[] actualNodes = workload.getNodesInFlow(&quot;F99&quot;);&#xD;
     // Asserting that the actual nodes match the expected empty array&#xD;
     assertArrayEquals(expectedNodes, actualNodes, &quot;Expected empty array for non-existent flow F99&quot;);&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ZuihUagmEe-9tYVtpMatrg" name="testGetNodesInFlowNullFlow" specification="_ZcB09KgmEe-9tYVtpMatrg">
                <language>java</language>
                <body>String[] expectedNodes = new String[0];&#xD;
     // Getting the actual nodes in a null flow&#xD;
     String[] actualNodes = workload.getNodesInFlow(null);&#xD;
     // Asserting that the actual nodes match the expected empty array&#xD;
     assertArrayEquals(expectedNodes, actualNodes, &quot;Expected empty array for null flow name&quot;);&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ZuihUqgmEe-9tYVtpMatrg" name="testGetHyperPeriodValidFlows" specification="_ZcB0-KgmEe-9tYVtpMatrg">
                <language>java</language>
                <body>int expectedHyperPeriod = 300;&#xD;
		// Getting the actual hyper period from the workload&#xD;
     int actualHyperPeriod = workload.getHyperPeriod();&#xD;
     // Asserting that the actual hyper period matches the expected value&#xD;
     assertEquals(expectedHyperPeriod, actualHyperPeriod, &quot;HyperPeriod calculation is incorrect for valid flows&quot;);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ZuihU6gmEe-9tYVtpMatrg" name="testGetHyperPeriodEmptyFlow" specification="_ZcCcAKgmEe-9tYVtpMatrg">
                <language>java</language>
                <body>workload = new WorkLoad(0.9, 0.99, &quot;Test1.txt&quot;);  &#xD;
     // Expected hyper period when no flows exist&#xD;
     int expectedHyperPeriod = 1;&#xD;
     // Getting the actual hyper period from the empty workload&#xD;
     int actualHyperPeriod = workload.getHyperPeriod();&#xD;
     // Asserting that the actual hyper period matches the expected value&#xD;
     assertEquals(expectedHyperPeriod, actualHyperPeriod, &quot;HyperPeriod should be 1 when no flows exist&quot;);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ZuihVKgmEe-9tYVtpMatrg" name="testMaxFlowLengthStressTest4" specification="_ZcCcBKgmEe-9tYVtpMatrg">
                <language>java</language>
                <body>Integer expectedMaxFlowLength = 8;&#xD;
		// Getting the actual max flow length from the workload&#xD;
		Integer actualMaxFlowLength = workload.maxFlowLength();&#xD;
		// Asserting that the actual max flow length matches the expected value&#xD;
		assertEquals(expectedMaxFlowLength, actualMaxFlowLength, &quot;Max flow length is incorrect for StressTest4.&quot;);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ZuihVagmEe-9tYVtpMatrg" name="testMaxFlowLengthNoFlows" specification="_ZcCcCKgmEe-9tYVtpMatrg">
                <language>java</language>
                <body>WorkLoad emptyWorkload = new WorkLoad(0.9, 0.99, &quot;Test1.txt&quot;);&#xD;
		// Expected max flow length when there are no flows&#xD;
		Integer expectedMaxFlowLength = 0;&#xD;
		// Getting the actual max flow length from the empty workload&#xD;
		Integer actualMaxFlowLength = emptyWorkload.maxFlowLength();&#xD;
		// Asserting that the actual max flow length matches the expected value&#xD;
		assertEquals(expectedMaxFlowLength, actualMaxFlowLength, &quot;Max flow length should be 0 for no flows.&quot;);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ZuihVqgmEe-9tYVtpMatrg" name="testGetFlowDeadlineValidFlow" specification="_ZcDDEagmEe-9tYVtpMatrg">
                <language>java</language>
                <body>Integer expectedDeadline = 20;&#xD;
     // Getting the actual deadline for the flow &quot;F1&quot;&#xD;
     Integer actualDeadline = workload.getFlowDeadline(&quot;F1&quot;);&#xD;
     // Asserting that the actual deadline matches the expected value&#xD;
     assertEquals(expectedDeadline, actualDeadline, &quot;The deadline for flow F1 should be 20.&quot;);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ZujIUKgmEe-9tYVtpMatrg" name="testGetFlowDeadlineInvalidFlow" specification="_ZcDDFagmEe-9tYVtpMatrg">
                <language>java</language>
                <body>Integer actualDeadline = workload.getFlowDeadline(&quot;InvalidFlow&quot;);&#xD;
		// Expected deadline for a non-existent flow&#xD;
		Integer expectedDeadline = 100;&#xD;
		// Asserting that the actual deadline matches the expected value&#xD;
		assertEquals(expectedDeadline, actualDeadline, &quot;The deadline for a non-existent flow should be 100.&quot;);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ZujIUagmEe-9tYVtpMatrg" name="testSetFlowDeadlineValidFlow" specification="_ZcDDGagmEe-9tYVtpMatrg">
                <language>java</language>
                <body>Integer newDeadline = 50;&#xD;
		// Setting the new deadline for the flow &quot;F1&quot;&#xD;
		workload.setFlowDeadline(&quot;F1&quot;, newDeadline);&#xD;
		// Getting the actual deadline after setting the new value&#xD;
		Integer actualDeadline = workload.getFlowDeadline(&quot;F1&quot;);&#xD;
		// Asserting that the actual deadline matches the new deadline&#xD;
		assertEquals(newDeadline, actualDeadline, &quot;The deadline for flow F1 should be set to 50.&quot;);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ZujIUqgmEe-9tYVtpMatrg" name="testSetFlowDeadlineUpdateExistingFlow" specification="_ZcDDHagmEe-9tYVtpMatrg">
                <language>java</language>
                <body>Integer initialDeadline = 30;&#xD;
		workload.setFlowDeadline(&quot;F1&quot;, initialDeadline);&#xD;
		// Updated deadline to set for the flow &quot;F1&quot;&#xD;
		Integer updatedDeadline = 75;&#xD;
		// Setting the updated deadline for the flow &quot;F1&quot;&#xD;
		workload.setFlowDeadline(&quot;F1&quot;, updatedDeadline);&#xD;
		// Getting the actual deadline after updating the value&#xD;
		Integer actualDeadline = workload.getFlowDeadline(&quot;F1&quot;);&#xD;
		// Asserting that the actual deadline matches the updated deadline&#xD;
		assertEquals(updatedDeadline, actualDeadline, &quot;The deadline for flow F1 should be updated to 75.&quot;);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ZujIU6gmEe-9tYVtpMatrg" name="testGetNumTxAttemptsPerLink_ExistingFlow" specification="_ZcDqI6gmEe-9tYVtpMatrg">
                <language>java</language>
                <body>String flowName = &quot;F1&quot;;&#xD;
		// Getting the transmission attempts per link for the existing flow&#xD;
		Integer[] txAttemptsPerLink = workload.getNumTxAttemptsPerLink(flowName);&#xD;
		// Asserting that the array is not null for an existing flow&#xD;
		assertNotNull(txAttemptsPerLink, &quot;The Tx attempts per link array should not be null for an existing flow.&quot;);&#xD;
		// Asserting that the array size is as expected&#xD;
		assertEquals(3, txAttemptsPerLink.length, &quot;The array size should be equal to the number of links in the flow minus the total cost.&quot;);&#xD;
		// Asserting that the Tx attempts per link match expected values&#xD;
		assertArrayEquals(new Integer[]{3, 3, 0}, txAttemptsPerLink, &quot;The Tx attempts per link should match expected values.&quot;);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ZujIVKgmEe-9tYVtpMatrg" name="testGetNumTxAttemptsPerLink_MultipleFlows" specification="_ZcDqJ6gmEe-9tYVtpMatrg">
                <language>java</language>
                <body>String flowName1 = &quot;F1&quot;;  &#xD;
		String flowName2 = &quot;F5&quot;;&#xD;
		// Getting the transmission attempts per link for both flows&#xD;
		Integer[] txAttemptsFlow1 = workload.getNumTxAttemptsPerLink(flowName1);&#xD;
		Integer[] txAttemptsFlow2 = workload.getNumTxAttemptsPerLink(flowName2);&#xD;
		// Asserting that the arrays are not null&#xD;
		assertNotNull(txAttemptsFlow1, &quot;The Tx attempts per link for F1 should not be null.&quot;);&#xD;
		assertNotNull(txAttemptsFlow2, &quot;The Tx attempts per link for F5 should not be null.&quot;);&#xD;
		// Asserting that the array sizes are as expected&#xD;
		assertEquals(3, txAttemptsFlow1.length, &quot;The array size for F1 should match the number of links minus the total cost.&quot;);&#xD;
		assertEquals(5, txAttemptsFlow2.length, &quot;The array size for F5 should match the number of links minus the total cost.&quot;);&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_Zb8VY6gmEe-9tYVtpMatrg" name="setUp" visibility="package" method="_Zuh6MqgmEe-9tYVtpMatrg" raisedException="_ZsqR8KgmEe-9tYVtpMatrg"/>
              <ownedOperation xmi:id="_Zb88cqgmEe-9tYVtpMatrg" name="tearDown" visibility="package" raisedException="_ZsqR8KgmEe-9tYVtpMatrg"/>
              <ownedOperation xmi:id="_Zb88dqgmEe-9tYVtpMatrg" name="addFlowAddTest" visibility="package" method="_Zuh6M6gmEe-9tYVtpMatrg"/>
              <ownedOperation xmi:id="_Zb9jg6gmEe-9tYVtpMatrg" name="addFlowOverridingTest" visibility="package" method="_Zuh6NKgmEe-9tYVtpMatrg"/>
              <ownedOperation xmi:id="_Zb9jh6gmEe-9tYVtpMatrg" name="addFlowMultipleAddsTest" visibility="package" method="_Zuh6NagmEe-9tYVtpMatrg"/>
              <ownedOperation xmi:id="_Zb9ji6gmEe-9tYVtpMatrg" name="addNodeToFlowExistsTest" visibility="package" method="_Zuh6NqgmEe-9tYVtpMatrg"/>
              <ownedOperation xmi:id="_Zb-Kk6gmEe-9tYVtpMatrg" name="addNodeToFlowDoesntExistTest" visibility="package" method="_ZuihQKgmEe-9tYVtpMatrg"/>
              <ownedOperation xmi:id="_Zb-Kl6gmEe-9tYVtpMatrg" name="getTotalTxAttemptsInFlowOneFlowTest" visibility="package" method="_ZuihQagmEe-9tYVtpMatrg"/>
              <ownedOperation xmi:id="_Zb-Km6gmEe-9tYVtpMatrg" name="getTotalTxAttemptsInFlowMultiFlowsTest" visibility="package" method="_ZuihQqgmEe-9tYVtpMatrg"/>
              <ownedOperation xmi:id="_Zb-xo6gmEe-9tYVtpMatrg" name="getFlowPriorityTest" visibility="package" method="_ZuihQ6gmEe-9tYVtpMatrg"/>
              <ownedOperation xmi:id="_Zb-xp6gmEe-9tYVtpMatrg" name="setFlowPriorityTest" visibility="package" method="_ZuihRKgmEe-9tYVtpMatrg"/>
              <ownedOperation xmi:id="_Zb-xq6gmEe-9tYVtpMatrg" name="getFlowTxAttemptsPerLinkTest" visibility="package" method="_ZuihRagmEe-9tYVtpMatrg"/>
              <ownedOperation xmi:id="_Zb_Ys6gmEe-9tYVtpMatrg" name="getFlowTxAttemptsPerLinkEmptyTest" visibility="package" method="_ZuihRqgmEe-9tYVtpMatrg"/>
              <ownedOperation xmi:id="_Zb_Yt6gmEe-9tYVtpMatrg" name="setFlowsInRMorderCorrectOrderTest" visibility="package" method="_ZuihR6gmEe-9tYVtpMatrg"/>
              <ownedOperation xmi:id="_Zb_Yu6gmEe-9tYVtpMatrg" name="setFlowsInRMorderAddFlowsTest" visibility="package" method="_ZuihSKgmEe-9tYVtpMatrg"/>
              <ownedOperation xmi:id="_Zb_Yv6gmEe-9tYVtpMatrg" name="getNodeNamesOrderedAlphabeticallyTest" visibility="package" method="_ZuihSagmEe-9tYVtpMatrg"/>
              <ownedOperation xmi:id="_Zb_Yw6gmEe-9tYVtpMatrg" name="getNodeNamesOrderedAlphabeticallyAdditionalFlowsTest" visibility="package" method="_ZuihSqgmEe-9tYVtpMatrg"/>
              <ownedOperation xmi:id="_ZcAm06gmEe-9tYVtpMatrg" name="testGetFlowNames" visibility="package" method="_ZuihS6gmEe-9tYVtpMatrg"/>
              <ownedOperation xmi:id="_ZcAm16gmEe-9tYVtpMatrg" name="testGetFlowNamesEmpty" visibility="package" method="_ZuihTKgmEe-9tYVtpMatrg"/>
              <ownedOperation xmi:id="_ZcAm26gmEe-9tYVtpMatrg" name="testGetNodeIndexNonExistentNode" visibility="package" method="_ZuihTagmEe-9tYVtpMatrg"/>
              <ownedOperation xmi:id="_ZcBN46gmEe-9tYVtpMatrg" name="testGetNodeIndexExistingNode" visibility="package" method="_ZuihTqgmEe-9tYVtpMatrg"/>
              <ownedOperation xmi:id="_ZcBN56gmEe-9tYVtpMatrg" name="testGetNodesInFlowValidFlowF1" visibility="package" method="_ZuihT6gmEe-9tYVtpMatrg"/>
              <ownedOperation xmi:id="_ZcB08KgmEe-9tYVtpMatrg" name="testGetNodesInFlowNonExistentFlow" visibility="package" method="_ZuihUKgmEe-9tYVtpMatrg"/>
              <ownedOperation xmi:id="_ZcB09KgmEe-9tYVtpMatrg" name="testGetNodesInFlowNullFlow" visibility="package" method="_ZuihUagmEe-9tYVtpMatrg"/>
              <ownedOperation xmi:id="_ZcB0-KgmEe-9tYVtpMatrg" name="testGetHyperPeriodValidFlows" visibility="package" method="_ZuihUqgmEe-9tYVtpMatrg"/>
              <ownedOperation xmi:id="_ZcCcAKgmEe-9tYVtpMatrg" name="testGetHyperPeriodEmptyFlow" visibility="package" method="_ZuihU6gmEe-9tYVtpMatrg"/>
              <ownedOperation xmi:id="_ZcCcBKgmEe-9tYVtpMatrg" name="testMaxFlowLengthStressTest4" visibility="package" method="_ZuihVKgmEe-9tYVtpMatrg"/>
              <ownedOperation xmi:id="_ZcCcCKgmEe-9tYVtpMatrg" name="testMaxFlowLengthNoFlows" visibility="package" method="_ZuihVagmEe-9tYVtpMatrg"/>
              <ownedOperation xmi:id="_ZcDDEagmEe-9tYVtpMatrg" name="testGetFlowDeadlineValidFlow" visibility="package" method="_ZuihVqgmEe-9tYVtpMatrg"/>
              <ownedOperation xmi:id="_ZcDDFagmEe-9tYVtpMatrg" name="testGetFlowDeadlineInvalidFlow" visibility="package" method="_ZujIUKgmEe-9tYVtpMatrg"/>
              <ownedOperation xmi:id="_ZcDDGagmEe-9tYVtpMatrg" name="testSetFlowDeadlineValidFlow" visibility="package" method="_ZujIUagmEe-9tYVtpMatrg"/>
              <ownedOperation xmi:id="_ZcDDHagmEe-9tYVtpMatrg" name="testSetFlowDeadlineUpdateExistingFlow" visibility="package" method="_ZujIUqgmEe-9tYVtpMatrg"/>
              <ownedOperation xmi:id="_ZcDqI6gmEe-9tYVtpMatrg" name="testGetNumTxAttemptsPerLink_ExistingFlow" method="_ZujIU6gmEe-9tYVtpMatrg"/>
              <ownedOperation xmi:id="_ZcDqJ6gmEe-9tYVtpMatrg" name="testGetNumTxAttemptsPerLink_MultipleFlows" method="_ZujIVKgmEe-9tYVtpMatrg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_Zr9HUKgmEe-9tYVtpMatrg" name="T"/>
            <packagedElement xmi:type="uml:Class" xmi:id="_ZsMX4KgmEe-9tYVtpMatrg" name="ScheduleLocation"/>
            <packagedElement xmi:type="uml:Class" xmi:id="_ZsO0IKgmEe-9tYVtpMatrg" name="ScheduleChoices"/>
            <packagedElement xmi:type="uml:Class" xmi:id="_ZscPgKgmEe-9tYVtpMatrg" name="SystemChoices"/>
            <packagedElement xmi:type="uml:Class" xmi:id="_Zsc2k6gmEe-9tYVtpMatrg" name="WorkLoadChoices"/>
            <packagedElement xmi:type="uml:Association" xmi:id="_ZuoA16gmEe-9tYVtpMatrg" name="" memberEnd="_ZtJaI6gmEe-9tYVtpMatrg _Zuon4KgmEe-9tYVtpMatrg">
              <ownedEnd xmi:id="_Zuon4KgmEe-9tYVtpMatrg" name="" type="_ZZMjY6gmEe-9tYVtpMatrg" association="_ZuoA16gmEe-9tYVtpMatrg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_Zus5UKgmEe-9tYVtpMatrg" name="" memberEnd="_ZtgmhqgmEe-9tYVtpMatrg _Zus5UagmEe-9tYVtpMatrg">
              <ownedEnd xmi:id="_Zus5UagmEe-9tYVtpMatrg" name="" type="_ZakcZKgmEe-9tYVtpMatrg" association="_Zus5UKgmEe-9tYVtpMatrg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_Zuv8oagmEe-9tYVtpMatrg" name="" memberEnd="_Zt2kxqgmEe-9tYVtpMatrg _Zuv8oqgmEe-9tYVtpMatrg">
              <ownedEnd xmi:id="_Zuv8oqgmEe-9tYVtpMatrg" name="" type="_Zbu6AqgmEe-9tYVtpMatrg" association="_Zuv8oagmEe-9tYVtpMatrg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_Zuv8o6gmEe-9tYVtpMatrg" name="" memberEnd="_Zt2kx6gmEe-9tYVtpMatrg _Zuv8pKgmEe-9tYVtpMatrg">
              <ownedEnd xmi:id="_Zuv8pKgmEe-9tYVtpMatrg" name="" type="_Zbu6AqgmEe-9tYVtpMatrg" association="_Zuv8o6gmEe-9tYVtpMatrg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_ZvPr4KgmEe-9tYVtpMatrg" name="" memberEnd="_ZvPr4agmEe-9tYVtpMatrg _Zs2fMagmEe-9tYVtpMatrg">
              <ownedEnd xmi:id="_ZvPr4agmEe-9tYVtpMatrg" name="" type="_ZYoisKgmEe-9tYVtpMatrg" association="_ZvPr4KgmEe-9tYVtpMatrg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_ZvQS8KgmEe-9tYVtpMatrg" name="" memberEnd="_ZvQS8agmEe-9tYVtpMatrg _Zs3GQagmEe-9tYVtpMatrg">
              <ownedEnd xmi:id="_ZvQS8agmEe-9tYVtpMatrg" name="" type="_ZYoisKgmEe-9tYVtpMatrg" association="_ZvQS8KgmEe-9tYVtpMatrg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_ZvQS86gmEe-9tYVtpMatrg" name="" memberEnd="_ZvQS9KgmEe-9tYVtpMatrg _Zs4UYKgmEe-9tYVtpMatrg">
              <ownedEnd xmi:id="_ZvQS9KgmEe-9tYVtpMatrg" name="" type="_ZYoisKgmEe-9tYVtpMatrg" association="_ZvQS86gmEe-9tYVtpMatrg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_ZvQS9qgmEe-9tYVtpMatrg" name="" memberEnd="_ZvQS96gmEe-9tYVtpMatrg _Zs_CEagmEe-9tYVtpMatrg">
              <ownedEnd xmi:id="_ZvQS96gmEe-9tYVtpMatrg" name="" type="_ZY3MMKgmEe-9tYVtpMatrg" association="_ZvQS9qgmEe-9tYVtpMatrg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_ZvQ6AagmEe-9tYVtpMatrg" name="" memberEnd="_ZvQ6AqgmEe-9tYVtpMatrg _Zs_pIKgmEe-9tYVtpMatrg">
              <ownedEnd xmi:id="_ZvQ6AqgmEe-9tYVtpMatrg" name="" type="_ZY3MMKgmEe-9tYVtpMatrg" association="_ZvQ6AagmEe-9tYVtpMatrg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_ZvQ6BKgmEe-9tYVtpMatrg" name="" memberEnd="_ZvQ6BagmEe-9tYVtpMatrg _ZtA3QKgmEe-9tYVtpMatrg">
              <ownedEnd xmi:id="_ZvQ6BagmEe-9tYVtpMatrg" name="" type="_ZY5ocKgmEe-9tYVtpMatrg" association="_ZvQ6BKgmEe-9tYVtpMatrg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_ZvRhEagmEe-9tYVtpMatrg" name="" memberEnd="_ZvRhEqgmEe-9tYVtpMatrg _ZtA3QqgmEe-9tYVtpMatrg">
              <ownedEnd xmi:id="_ZvRhEqgmEe-9tYVtpMatrg" name="" type="_ZY5ocKgmEe-9tYVtpMatrg" association="_ZvRhEagmEe-9tYVtpMatrg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_ZvRhFKgmEe-9tYVtpMatrg" name="" memberEnd="_ZvRhFagmEe-9tYVtpMatrg _ZtBeVagmEe-9tYVtpMatrg">
              <ownedEnd xmi:id="_ZvRhFagmEe-9tYVtpMatrg" name="" type="_ZY6PgKgmEe-9tYVtpMatrg" association="_ZvRhFKgmEe-9tYVtpMatrg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_ZvRhF6gmEe-9tYVtpMatrg" name="" memberEnd="_ZvRhGKgmEe-9tYVtpMatrg _ZtCscqgmEe-9tYVtpMatrg">
              <ownedEnd xmi:id="_ZvRhGKgmEe-9tYVtpMatrg" name="" type="_ZY_IAKgmEe-9tYVtpMatrg" association="_ZvRhF6gmEe-9tYVtpMatrg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_ZvSIIagmEe-9tYVtpMatrg" name="" memberEnd="_ZvSIIqgmEe-9tYVtpMatrg _ZtDThKgmEe-9tYVtpMatrg">
              <ownedEnd xmi:id="_ZvSIIqgmEe-9tYVtpMatrg" name="" type="_ZY_IAKgmEe-9tYVtpMatrg" association="_ZvSIIagmEe-9tYVtpMatrg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_ZvSIJKgmEe-9tYVtpMatrg" name="" memberEnd="_ZvSIJagmEe-9tYVtpMatrg _ZtHk8KgmEe-9tYVtpMatrg">
              <ownedEnd xmi:id="_ZvSIJagmEe-9tYVtpMatrg" name="" type="_ZZFOoKgmEe-9tYVtpMatrg" association="_ZvSIJKgmEe-9tYVtpMatrg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_ZvSvMagmEe-9tYVtpMatrg" name="" memberEnd="_ZvSvMqgmEe-9tYVtpMatrg _ZtIMBKgmEe-9tYVtpMatrg">
              <ownedEnd xmi:id="_ZvSvMqgmEe-9tYVtpMatrg" name="" type="_ZZFOoKgmEe-9tYVtpMatrg" association="_ZvSvMagmEe-9tYVtpMatrg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_ZvSvNKgmEe-9tYVtpMatrg" name="" memberEnd="_ZvSvNagmEe-9tYVtpMatrg _ZtLPUagmEe-9tYVtpMatrg">
              <ownedEnd xmi:id="_ZvSvNagmEe-9tYVtpMatrg" name="" type="_ZZWUYKgmEe-9tYVtpMatrg" association="_ZvSvNKgmEe-9tYVtpMatrg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_ZvSvN6gmEe-9tYVtpMatrg" name="" memberEnd="_ZvSvOKgmEe-9tYVtpMatrg _ZtLPVKgmEe-9tYVtpMatrg">
              <ownedEnd xmi:id="_ZvSvOKgmEe-9tYVtpMatrg" name="" type="_ZZWUYKgmEe-9tYVtpMatrg" association="_ZvSvN6gmEe-9tYVtpMatrg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_ZvTWQagmEe-9tYVtpMatrg" name="" memberEnd="_ZvTWQqgmEe-9tYVtpMatrg _ZtL2YqgmEe-9tYVtpMatrg">
              <ownedEnd xmi:id="_ZvTWQqgmEe-9tYVtpMatrg" name="" type="_ZZWUYKgmEe-9tYVtpMatrg" association="_ZvTWQagmEe-9tYVtpMatrg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_ZvTWRKgmEe-9tYVtpMatrg" name="" memberEnd="_ZvTWRagmEe-9tYVtpMatrg _ZtL2ZagmEe-9tYVtpMatrg">
              <ownedEnd xmi:id="_ZvTWRagmEe-9tYVtpMatrg" name="" type="_ZZWUYKgmEe-9tYVtpMatrg" association="_ZvTWRKgmEe-9tYVtpMatrg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_ZvT9UagmEe-9tYVtpMatrg" name="" memberEnd="_ZvT9UqgmEe-9tYVtpMatrg _ZtMdcagmEe-9tYVtpMatrg">
              <ownedEnd xmi:id="_ZvT9UqgmEe-9tYVtpMatrg" name="" type="_ZZWUYKgmEe-9tYVtpMatrg" association="_ZvT9UagmEe-9tYVtpMatrg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_ZvT9VKgmEe-9tYVtpMatrg" name="" memberEnd="_ZvT9VagmEe-9tYVtpMatrg _ZtNrkagmEe-9tYVtpMatrg">
              <ownedEnd xmi:id="_ZvT9VagmEe-9tYVtpMatrg" name="" type="_ZZe3QKgmEe-9tYVtpMatrg" association="_ZvT9VKgmEe-9tYVtpMatrg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_ZvT9V6gmEe-9tYVtpMatrg" name="" memberEnd="_ZvT9WKgmEe-9tYVtpMatrg _ZtNrl6gmEe-9tYVtpMatrg">
              <ownedEnd xmi:id="_ZvT9WKgmEe-9tYVtpMatrg" name="" type="_ZZe3QKgmEe-9tYVtpMatrg" association="_ZvT9V6gmEe-9tYVtpMatrg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_ZvUkYagmEe-9tYVtpMatrg" name="" memberEnd="_ZvUkYqgmEe-9tYVtpMatrg _ZtOSoagmEe-9tYVtpMatrg">
              <ownedEnd xmi:id="_ZvUkYqgmEe-9tYVtpMatrg" name="" type="_ZZjvwKgmEe-9tYVtpMatrg" association="_ZvUkYagmEe-9tYVtpMatrg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_ZvUkZKgmEe-9tYVtpMatrg" name="" memberEnd="_ZvUkZagmEe-9tYVtpMatrg _ZtOSo6gmEe-9tYVtpMatrg">
              <ownedEnd xmi:id="_ZvUkZagmEe-9tYVtpMatrg" name="" type="_ZZlk8KgmEe-9tYVtpMatrg" association="_ZvUkZKgmEe-9tYVtpMatrg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_ZvVLcagmEe-9tYVtpMatrg" name="" memberEnd="_ZvVLcqgmEe-9tYVtpMatrg _ZtO5sagmEe-9tYVtpMatrg">
              <ownedEnd xmi:id="_ZvVLcqgmEe-9tYVtpMatrg" name="" type="_ZZlk8KgmEe-9tYVtpMatrg" association="_ZvVLcagmEe-9tYVtpMatrg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_ZvVLdKgmEe-9tYVtpMatrg" name="" memberEnd="_ZvVLdagmEe-9tYVtpMatrg _ZtO5tagmEe-9tYVtpMatrg">
              <ownedEnd xmi:id="_ZvVLdagmEe-9tYVtpMatrg" name="" type="_ZZnaIKgmEe-9tYVtpMatrg" association="_ZvVLdKgmEe-9tYVtpMatrg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_ZvVLd6gmEe-9tYVtpMatrg" name="" memberEnd="_ZvVLeKgmEe-9tYVtpMatrg _ZtQu4KgmEe-9tYVtpMatrg">
              <ownedEnd xmi:id="_ZvVLeKgmEe-9tYVtpMatrg" name="" type="_ZZsSqagmEe-9tYVtpMatrg" association="_ZvVLd6gmEe-9tYVtpMatrg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_ZvVygagmEe-9tYVtpMatrg" name="" memberEnd="_ZvVygqgmEe-9tYVtpMatrg _ZtQu4qgmEe-9tYVtpMatrg">
              <ownedEnd xmi:id="_ZvVygqgmEe-9tYVtpMatrg" name="" type="_ZZsSqagmEe-9tYVtpMatrg" association="_ZvVygagmEe-9tYVtpMatrg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_ZvVyhKgmEe-9tYVtpMatrg" name="" memberEnd="_ZvVyhagmEe-9tYVtpMatrg _ZtQu5KgmEe-9tYVtpMatrg">
              <ownedEnd xmi:id="_ZvVyhagmEe-9tYVtpMatrg" name="" type="_ZZsSqagmEe-9tYVtpMatrg" association="_ZvVyhKgmEe-9tYVtpMatrg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_ZvWZkKgmEe-9tYVtpMatrg" name="" memberEnd="_ZvWZkagmEe-9tYVtpMatrg _ZtQu5qgmEe-9tYVtpMatrg">
              <ownedEnd xmi:id="_ZvWZkagmEe-9tYVtpMatrg" name="" type="_ZZsSqagmEe-9tYVtpMatrg" association="_ZvWZkKgmEe-9tYVtpMatrg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_ZvWZk6gmEe-9tYVtpMatrg" name="" memberEnd="_ZvWZlKgmEe-9tYVtpMatrg _ZtRV8KgmEe-9tYVtpMatrg">
              <ownedEnd xmi:id="_ZvWZlKgmEe-9tYVtpMatrg" name="" type="_ZZsSqagmEe-9tYVtpMatrg" association="_ZvWZk6gmEe-9tYVtpMatrg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_ZvXAoKgmEe-9tYVtpMatrg" name="" memberEnd="_ZvXAoagmEe-9tYVtpMatrg _ZtR9AqgmEe-9tYVtpMatrg">
              <ownedEnd xmi:id="_ZvXAoagmEe-9tYVtpMatrg" name="" type="_ZZuu4KgmEe-9tYVtpMatrg" association="_ZvXAoKgmEe-9tYVtpMatrg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_ZvXAo6gmEe-9tYVtpMatrg" name="" memberEnd="_ZvXApKgmEe-9tYVtpMatrg _ZtR9BKgmEe-9tYVtpMatrg">
              <ownedEnd xmi:id="_ZvXApKgmEe-9tYVtpMatrg" name="" type="_ZZuu4KgmEe-9tYVtpMatrg" association="_ZvXAo6gmEe-9tYVtpMatrg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_ZvXApqgmEe-9tYVtpMatrg" name="" memberEnd="_ZvXAp6gmEe-9tYVtpMatrg _ZtSkEqgmEe-9tYVtpMatrg">
              <ownedEnd xmi:id="_ZvXAp6gmEe-9tYVtpMatrg" name="" type="_ZZxLIKgmEe-9tYVtpMatrg" association="_ZvXApqgmEe-9tYVtpMatrg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_ZvXnsagmEe-9tYVtpMatrg" name="" memberEnd="_ZvXnsqgmEe-9tYVtpMatrg _ZtTyMKgmEe-9tYVtpMatrg">
              <ownedEnd xmi:id="_ZvXnsqgmEe-9tYVtpMatrg" name="" type="_ZZ4f4KgmEe-9tYVtpMatrg" association="_ZvXnsagmEe-9tYVtpMatrg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_ZvXntKgmEe-9tYVtpMatrg" name="" memberEnd="_ZvXntagmEe-9tYVtpMatrg _ZtTyMqgmEe-9tYVtpMatrg">
              <ownedEnd xmi:id="_ZvXntagmEe-9tYVtpMatrg" name="" type="_ZZ4f4KgmEe-9tYVtpMatrg" association="_ZvXntKgmEe-9tYVtpMatrg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_ZvYOwagmEe-9tYVtpMatrg" name="" memberEnd="_ZvYOwqgmEe-9tYVtpMatrg _ZtTyNKgmEe-9tYVtpMatrg">
              <ownedEnd xmi:id="_ZvYOwqgmEe-9tYVtpMatrg" name="" type="_ZZ4f4KgmEe-9tYVtpMatrg" association="_ZvYOwagmEe-9tYVtpMatrg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_ZvYOxKgmEe-9tYVtpMatrg" name="" memberEnd="_ZvYOxagmEe-9tYVtpMatrg _ZtUZQagmEe-9tYVtpMatrg">
              <ownedEnd xmi:id="_ZvYOxagmEe-9tYVtpMatrg" name="" type="_ZZ4f4KgmEe-9tYVtpMatrg" association="_ZvYOxKgmEe-9tYVtpMatrg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_ZvY10agmEe-9tYVtpMatrg" name="" memberEnd="_ZvY10qgmEe-9tYVtpMatrg _ZtVAU6gmEe-9tYVtpMatrg">
              <ownedEnd xmi:id="_ZvY10qgmEe-9tYVtpMatrg" name="" type="_ZZ4f4KgmEe-9tYVtpMatrg" association="_ZvY10agmEe-9tYVtpMatrg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_ZvY11KgmEe-9tYVtpMatrg" name="" memberEnd="_ZvY11agmEe-9tYVtpMatrg _ZtVAVagmEe-9tYVtpMatrg">
              <ownedEnd xmi:id="_ZvY11agmEe-9tYVtpMatrg" name="" type="_ZZ4f4KgmEe-9tYVtpMatrg" association="_ZvY11KgmEe-9tYVtpMatrg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_ZvZc4agmEe-9tYVtpMatrg" name="" memberEnd="_ZvZc4qgmEe-9tYVtpMatrg _ZtVnYqgmEe-9tYVtpMatrg">
              <ownedEnd xmi:id="_ZvZc4qgmEe-9tYVtpMatrg" name="" type="_ZZ4f4KgmEe-9tYVtpMatrg" association="_ZvZc4agmEe-9tYVtpMatrg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_ZvZc5KgmEe-9tYVtpMatrg" name="" memberEnd="_ZvZc5agmEe-9tYVtpMatrg _ZtWOcKgmEe-9tYVtpMatrg">
              <ownedEnd xmi:id="_ZvZc5agmEe-9tYVtpMatrg" name="" type="_ZZ4f4KgmEe-9tYVtpMatrg" association="_ZvZc5KgmEe-9tYVtpMatrg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_ZvaD8agmEe-9tYVtpMatrg" name="" memberEnd="_ZvaD8qgmEe-9tYVtpMatrg _ZtXckagmEe-9tYVtpMatrg">
              <ownedEnd xmi:id="_ZvaD8qgmEe-9tYVtpMatrg" name="" type="_ZaCQ4KgmEe-9tYVtpMatrg" association="_ZvaD8agmEe-9tYVtpMatrg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_ZvaD9KgmEe-9tYVtpMatrg" name="" memberEnd="_ZvaD9agmEe-9tYVtpMatrg _ZtXck6gmEe-9tYVtpMatrg">
              <ownedEnd xmi:id="_ZvaD9agmEe-9tYVtpMatrg" name="" type="_ZaCQ4KgmEe-9tYVtpMatrg" association="_ZvaD9KgmEe-9tYVtpMatrg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_ZvarAagmEe-9tYVtpMatrg" name="" memberEnd="_ZvarAqgmEe-9tYVtpMatrg _ZtXclagmEe-9tYVtpMatrg">
              <ownedEnd xmi:id="_ZvarAqgmEe-9tYVtpMatrg" name="" type="_ZaCQ4KgmEe-9tYVtpMatrg" association="_ZvarAagmEe-9tYVtpMatrg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_ZvarBKgmEe-9tYVtpMatrg" name="" memberEnd="_ZvarBagmEe-9tYVtpMatrg _ZtYDqKgmEe-9tYVtpMatrg">
              <ownedEnd xmi:id="_ZvarBagmEe-9tYVtpMatrg" name="" type="_ZaCQ4KgmEe-9tYVtpMatrg" association="_ZvarBKgmEe-9tYVtpMatrg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_ZvarB6gmEe-9tYVtpMatrg" name="" memberEnd="_ZvarCKgmEe-9tYVtpMatrg _ZtZRwagmEe-9tYVtpMatrg">
              <ownedEnd xmi:id="_ZvarCKgmEe-9tYVtpMatrg" name="" type="_ZaCQ4KgmEe-9tYVtpMatrg" association="_ZvarB6gmEe-9tYVtpMatrg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_ZvbSEagmEe-9tYVtpMatrg" name="" memberEnd="_ZvbSEqgmEe-9tYVtpMatrg _ZtbG86gmEe-9tYVtpMatrg">
              <ownedEnd xmi:id="_ZvbSEqgmEe-9tYVtpMatrg" name="" type="_ZaPsQKgmEe-9tYVtpMatrg" association="_ZvbSEagmEe-9tYVtpMatrg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_Zvb5IagmEe-9tYVtpMatrg" name="" memberEnd="_Zvb5IqgmEe-9tYVtpMatrg _ZtbuAagmEe-9tYVtpMatrg">
              <ownedEnd xmi:id="_Zvb5IqgmEe-9tYVtpMatrg" name="" type="_ZaPsQKgmEe-9tYVtpMatrg" association="_Zvb5IagmEe-9tYVtpMatrg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_Zvb5JKgmEe-9tYVtpMatrg" name="" memberEnd="_Zvb5JagmEe-9tYVtpMatrg _ZtdjN6gmEe-9tYVtpMatrg">
              <ownedEnd xmi:id="_Zvb5JagmEe-9tYVtpMatrg" name="" type="_ZadHoagmEe-9tYVtpMatrg" association="_Zvb5JKgmEe-9tYVtpMatrg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_ZvcgMKgmEe-9tYVtpMatrg" name="" memberEnd="_ZvcgMagmEe-9tYVtpMatrg _ZteKQKgmEe-9tYVtpMatrg">
              <ownedEnd xmi:id="_ZvcgMagmEe-9tYVtpMatrg" name="" type="_ZadHoagmEe-9tYVtpMatrg" association="_ZvcgMKgmEe-9tYVtpMatrg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_ZvcgM6gmEe-9tYVtpMatrg" name="" memberEnd="_ZvcgNKgmEe-9tYVtpMatrg _ZteKRKgmEe-9tYVtpMatrg">
              <ownedEnd xmi:id="_ZvcgNKgmEe-9tYVtpMatrg" name="" type="_ZahZEKgmEe-9tYVtpMatrg" association="_ZvcgM6gmEe-9tYVtpMatrg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_ZvdHQKgmEe-9tYVtpMatrg" name="" memberEnd="_ZvdHQagmEe-9tYVtpMatrg _ZthNkKgmEe-9tYVtpMatrg">
              <ownedEnd xmi:id="_ZvdHQagmEe-9tYVtpMatrg" name="" type="_ZakcZKgmEe-9tYVtpMatrg" association="_ZvdHQKgmEe-9tYVtpMatrg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_ZvdHQ6gmEe-9tYVtpMatrg" name="" memberEnd="_ZvdHRKgmEe-9tYVtpMatrg _ZthNk6gmEe-9tYVtpMatrg">
              <ownedEnd xmi:id="_ZvdHRKgmEe-9tYVtpMatrg" name="" type="_ZakcZKgmEe-9tYVtpMatrg" association="_ZvdHQ6gmEe-9tYVtpMatrg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_ZvdHRqgmEe-9tYVtpMatrg" name="" memberEnd="_ZvdHR6gmEe-9tYVtpMatrg _ZtjCxqgmEe-9tYVtpMatrg">
              <ownedEnd xmi:id="_ZvdHR6gmEe-9tYVtpMatrg" name="" type="_Zax3wagmEe-9tYVtpMatrg" association="_ZvdHRqgmEe-9tYVtpMatrg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_ZvduUagmEe-9tYVtpMatrg" name="" memberEnd="_ZvduUqgmEe-9tYVtpMatrg _ZtjCyKgmEe-9tYVtpMatrg">
              <ownedEnd xmi:id="_ZvduUqgmEe-9tYVtpMatrg" name="" type="_Zax3wagmEe-9tYVtpMatrg" association="_ZvduUagmEe-9tYVtpMatrg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_ZvduVKgmEe-9tYVtpMatrg" name="" memberEnd="_ZvduVagmEe-9tYVtpMatrg _Ztk39KgmEe-9tYVtpMatrg">
              <ownedEnd xmi:id="_ZvduVagmEe-9tYVtpMatrg" name="" type="_ZbEysKgmEe-9tYVtpMatrg" association="_ZvduVKgmEe-9tYVtpMatrg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_ZveVYagmEe-9tYVtpMatrg" name="" memberEnd="_ZveVYqgmEe-9tYVtpMatrg _ZtlfAagmEe-9tYVtpMatrg">
              <ownedEnd xmi:id="_ZveVYqgmEe-9tYVtpMatrg" name="" type="_ZbEysKgmEe-9tYVtpMatrg" association="_ZveVYagmEe-9tYVtpMatrg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_ZveVZKgmEe-9tYVtpMatrg" name="" memberEnd="_ZveVZagmEe-9tYVtpMatrg _ZtlfA6gmEe-9tYVtpMatrg">
              <ownedEnd xmi:id="_ZveVZagmEe-9tYVtpMatrg" name="" type="_ZbEysKgmEe-9tYVtpMatrg" association="_ZveVZKgmEe-9tYVtpMatrg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_ZveVZ6gmEe-9tYVtpMatrg" name="" memberEnd="_ZveVaKgmEe-9tYVtpMatrg _ZtmGEqgmEe-9tYVtpMatrg">
              <ownedEnd xmi:id="_ZveVaKgmEe-9tYVtpMatrg" name="" type="_ZbEysKgmEe-9tYVtpMatrg" association="_ZveVZ6gmEe-9tYVtpMatrg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_Zve8cagmEe-9tYVtpMatrg" name="" memberEnd="_Zve8cqgmEe-9tYVtpMatrg _ZtmGFagmEe-9tYVtpMatrg">
              <ownedEnd xmi:id="_Zve8cqgmEe-9tYVtpMatrg" name="" type="_ZbEysKgmEe-9tYVtpMatrg" association="_Zve8cagmEe-9tYVtpMatrg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_Zve8dKgmEe-9tYVtpMatrg" name="" memberEnd="_Zve8dagmEe-9tYVtpMatrg _ZtmGGKgmEe-9tYVtpMatrg">
              <ownedEnd xmi:id="_Zve8dagmEe-9tYVtpMatrg" name="" type="_ZbEysKgmEe-9tYVtpMatrg" association="_Zve8dKgmEe-9tYVtpMatrg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_ZvfjgagmEe-9tYVtpMatrg" name="" memberEnd="_ZvfjgqgmEe-9tYVtpMatrg _ZtmtIKgmEe-9tYVtpMatrg">
              <ownedEnd xmi:id="_ZvfjgqgmEe-9tYVtpMatrg" name="" type="_ZbEysKgmEe-9tYVtpMatrg" association="_ZvfjgagmEe-9tYVtpMatrg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_ZvfjhKgmEe-9tYVtpMatrg" name="" memberEnd="_ZvfjhagmEe-9tYVtpMatrg _ZtmtIqgmEe-9tYVtpMatrg">
              <ownedEnd xmi:id="_ZvfjhagmEe-9tYVtpMatrg" name="" type="_ZbJEIKgmEe-9tYVtpMatrg" association="_ZvfjhKgmEe-9tYVtpMatrg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_ZvgKkKgmEe-9tYVtpMatrg" name="" memberEnd="_ZvgKkagmEe-9tYVtpMatrg _ZtweIagmEe-9tYVtpMatrg">
              <ownedEnd xmi:id="_ZvgKkagmEe-9tYVtpMatrg" name="" type="_ZbaJ4KgmEe-9tYVtpMatrg" association="_ZvgKkKgmEe-9tYVtpMatrg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_ZvgKk6gmEe-9tYVtpMatrg" name="" memberEnd="_ZvgKlKgmEe-9tYVtpMatrg _ZtxFMKgmEe-9tYVtpMatrg">
              <ownedEnd xmi:id="_ZvgKlKgmEe-9tYVtpMatrg" name="" type="_ZbaJ4KgmEe-9tYVtpMatrg" association="_ZvgKk6gmEe-9tYVtpMatrg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_ZvgKlqgmEe-9tYVtpMatrg" name="" memberEnd="_ZvgKl6gmEe-9tYVtpMatrg _ZtxsQKgmEe-9tYVtpMatrg">
              <ownedEnd xmi:id="_ZvgKl6gmEe-9tYVtpMatrg" name="" type="_ZbgQgKgmEe-9tYVtpMatrg" association="_ZvgKlqgmEe-9tYVtpMatrg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_ZvgxoagmEe-9tYVtpMatrg" name="" memberEnd="_ZvgxoqgmEe-9tYVtpMatrg _ZtxsQqgmEe-9tYVtpMatrg">
              <ownedEnd xmi:id="_ZvgxoqgmEe-9tYVtpMatrg" name="" type="_ZbgQgKgmEe-9tYVtpMatrg" association="_ZvgxoagmEe-9tYVtpMatrg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_ZvhYsKgmEe-9tYVtpMatrg" name="" memberEnd="_ZvhYsagmEe-9tYVtpMatrg _ZtxsRKgmEe-9tYVtpMatrg">
              <ownedEnd xmi:id="_ZvhYsagmEe-9tYVtpMatrg" name="" type="_ZbgQgKgmEe-9tYVtpMatrg" association="_ZvhYsKgmEe-9tYVtpMatrg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_ZvhYs6gmEe-9tYVtpMatrg" name="" memberEnd="_ZvhYtKgmEe-9tYVtpMatrg _ZtxsRqgmEe-9tYVtpMatrg">
              <ownedEnd xmi:id="_ZvhYtKgmEe-9tYVtpMatrg" name="" type="_ZbgQgKgmEe-9tYVtpMatrg" association="_ZvhYs6gmEe-9tYVtpMatrg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_Zvh_wKgmEe-9tYVtpMatrg" name="" memberEnd="_Zvh_wagmEe-9tYVtpMatrg _ZtyTUagmEe-9tYVtpMatrg">
              <ownedEnd xmi:id="_Zvh_wagmEe-9tYVtpMatrg" name="" type="_ZbgQgKgmEe-9tYVtpMatrg" association="_Zvh_wKgmEe-9tYVtpMatrg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_Zvh_w6gmEe-9tYVtpMatrg" name="" memberEnd="_Zvh_xKgmEe-9tYVtpMatrg _ZtzhdKgmEe-9tYVtpMatrg">
              <ownedEnd xmi:id="_Zvh_xKgmEe-9tYVtpMatrg" name="" type="_ZbozYKgmEe-9tYVtpMatrg" association="_Zvh_w6gmEe-9tYVtpMatrg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_Zvh_xqgmEe-9tYVtpMatrg" name="" memberEnd="_Zvh_x6gmEe-9tYVtpMatrg _Zt0IgKgmEe-9tYVtpMatrg">
              <ownedEnd xmi:id="_Zvh_x6gmEe-9tYVtpMatrg" name="" type="_ZbozYKgmEe-9tYVtpMatrg" association="_Zvh_xqgmEe-9tYVtpMatrg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_Zvim0agmEe-9tYVtpMatrg" name="" memberEnd="_Zvim0qgmEe-9tYVtpMatrg _Zt0Ig6gmEe-9tYVtpMatrg">
              <ownedEnd xmi:id="_Zvim0qgmEe-9tYVtpMatrg" name="" type="_ZbrPoKgmEe-9tYVtpMatrg" association="_Zvim0agmEe-9tYVtpMatrg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_Zvim1KgmEe-9tYVtpMatrg" name="" memberEnd="_Zvim1agmEe-9tYVtpMatrg _Zt0vkagmEe-9tYVtpMatrg">
              <ownedEnd xmi:id="_Zvim1agmEe-9tYVtpMatrg" name="" type="_ZbtE0KgmEe-9tYVtpMatrg" association="_Zvim1KgmEe-9tYVtpMatrg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_ZvjN4agmEe-9tYVtpMatrg" name="" memberEnd="_ZvjN4qgmEe-9tYVtpMatrg _Zt0vlagmEe-9tYVtpMatrg">
              <ownedEnd xmi:id="_ZvjN4qgmEe-9tYVtpMatrg" name="" type="_ZbtE0KgmEe-9tYVtpMatrg" association="_ZvjN4agmEe-9tYVtpMatrg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_ZvjN5KgmEe-9tYVtpMatrg" name="" memberEnd="_ZvjN5agmEe-9tYVtpMatrg _Zt1WoagmEe-9tYVtpMatrg">
              <ownedEnd xmi:id="_ZvjN5agmEe-9tYVtpMatrg" name="" type="_ZbtE0KgmEe-9tYVtpMatrg" association="_ZvjN5KgmEe-9tYVtpMatrg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_ZvjN56gmEe-9tYVtpMatrg" name="" memberEnd="_ZvjN6KgmEe-9tYVtpMatrg _Zt3L0qgmEe-9tYVtpMatrg">
              <ownedEnd xmi:id="_ZvjN6KgmEe-9tYVtpMatrg" name="" type="_Zbu6AqgmEe-9tYVtpMatrg" association="_ZvjN56gmEe-9tYVtpMatrg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_Zvj08agmEe-9tYVtpMatrg" name="" memberEnd="_Zvj08qgmEe-9tYVtpMatrg _Zt3L1agmEe-9tYVtpMatrg">
              <ownedEnd xmi:id="_Zvj08qgmEe-9tYVtpMatrg" name="" type="_Zbu6AqgmEe-9tYVtpMatrg" association="_Zvj08agmEe-9tYVtpMatrg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_Zvj09KgmEe-9tYVtpMatrg" name="" memberEnd="_Zvj09agmEe-9tYVtpMatrg _Zt5BAKgmEe-9tYVtpMatrg">
              <ownedEnd xmi:id="_Zvj09agmEe-9tYVtpMatrg" name="" type="_Zb7uUKgmEe-9tYVtpMatrg" association="_Zvj09KgmEe-9tYVtpMatrg"/>
            </packagedElement>
          </packagedElement>
          <packagedElement xmi:type="uml:Package" xmi:id="_ZVZBdKgmEe-9tYVtpMatrg" name="warpdsls">
            <packagedElement xmi:type="uml:Class" xmi:id="_ZqaPM6gmEe-9tYVtpMatrg" name="WARPBaseListener"/>
            <packagedElement xmi:type="uml:Class" xmi:id="_Zqa2QagmEe-9tYVtpMatrg" name="WARPLexer"/>
            <packagedElement xmi:type="uml:Class" xmi:id="_Zqa2Q6gmEe-9tYVtpMatrg" name="WARPParser"/>
            <packagedElement xmi:type="uml:Class" xmi:id="_Zsgg8KgmEe-9tYVtpMatrg" name="WARPdslBaseListener"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Package" xmi:id="_ZVzRIKgmEe-9tYVtpMatrg" name="utilities">
            <packagedElement xmi:type="uml:Class" xmi:id="_Zqw0gKgmEe-9tYVtpMatrg" name="Utilities"/>
          </packagedElement>
        </packagedElement>
      </packagedElement>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_ZUwIQKgmEe-9tYVtpMatrg" name="java">
      <packagedElement xmi:type="uml:Package" xmi:id="_ZUwvUKgmEe-9tYVtpMatrg" name="util">
        <packagedElement xmi:type="uml:Package" xmi:id="_ZU-xwKgmEe-9tYVtpMatrg" name="regex">
          <packagedElement xmi:type="uml:Class" xmi:id="_ZqIiYKgmEe-9tYVtpMatrg" name="Pattern"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Package" xmi:id="_ZXEccKgmEe-9tYVtpMatrg" name="stream">
          <packagedElement xmi:type="uml:Class" xmi:id="_Zrf0UagmEe-9tYVtpMatrg" name="Collectors"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_ZaVL0KgmEe-9tYVtpMatrg" name="PriorityQueue"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_Zp_YcKgmEe-9tYVtpMatrg" name="HashMap"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_Zp__gKgmEe-9tYVtpMatrg" name="ArrayList"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_ZqAmkagmEe-9tYVtpMatrg" name="HashSet"/>
        <packagedElement xmi:type="uml:Interface" xmi:id="_ZqBNoagmEe-9tYVtpMatrg" name="Iterator"/>
        <packagedElement xmi:type="uml:Interface" xmi:id="_ZqBNo6gmEe-9tYVtpMatrg" name="Set"/>
        <packagedElement xmi:type="uml:Interface" xmi:id="_ZqOB9qgmEe-9tYVtpMatrg" name="Comparator"/>
        <packagedElement xmi:type="uml:Interface" xmi:id="_Zqqt4KgmEe-9tYVtpMatrg" name="Collection"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_Zqw0gqgmEe-9tYVtpMatrg" name="Arrays"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_Zq4JQagmEe-9tYVtpMatrg" name="Collections"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_Zq9o0KgmEe-9tYVtpMatrg" name="LinkedList"/>
        <packagedElement xmi:type="uml:Interface" xmi:id="_Zq9o0qgmEe-9tYVtpMatrg" name="Queue"/>
        <packagedElement xmi:type="uml:Interface" xmi:id="_ZrfNQKgmEe-9tYVtpMatrg" name="List"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Package" xmi:id="_ZVMNIqgmEe-9tYVtpMatrg" name="io">
        <packagedElement xmi:type="uml:Class" xmi:id="_ZqRsUKgmEe-9tYVtpMatrg" name="File"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_ZqRsUqgmEe-9tYVtpMatrg" name="IOException"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_ZqjZIKgmEe-9tYVtpMatrg" name="BufferedReader"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_ZqjZIqgmEe-9tYVtpMatrg" name="InputStreamReader"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Package" xmi:id="_ZVMNI6gmEe-9tYVtpMatrg" name="nio">
        <packagedElement xmi:type="uml:Package" xmi:id="_ZVM0MKgmEe-9tYVtpMatrg" name="file">
          <packagedElement xmi:type="uml:Class" xmi:id="_ZqSTYagmEe-9tYVtpMatrg" name="Files"/>
          <packagedElement xmi:type="uml:Interface" xmi:id="_ZqSTY6gmEe-9tYVtpMatrg" name="Path"/>
          <packagedElement xmi:type="uml:Class" xmi:id="_ZqS6cagmEe-9tYVtpMatrg" name="Paths"/>
        </packagedElement>
      </packagedElement>
      <packagedElement xmi:type="uml:Package" xmi:id="_ZVehAKgmEe-9tYVtpMatrg" name="awt">
        <packagedElement xmi:type="uml:Class" xmi:id="_Zqg84KgmEe-9tYVtpMatrg" name="Component"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Package" xmi:id="_Zrw6EKgmEe-9tYVtpMatrg" name="lang">
        <packagedElement xmi:type="uml:Interface" xmi:id="_Zrw6EagmEe-9tYVtpMatrg" name="Comparable"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_ZsEcEKgmEe-9tYVtpMatrg" name="RuntimeException"/>
        <packagedElement xmi:type="uml:DataType" xmi:id="_ZsQpUKgmEe-9tYVtpMatrg" name="Double"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_ZsqR8KgmEe-9tYVtpMatrg" name="Exception"/>
      </packagedElement>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_ZVLmEKgmEe-9tYVtpMatrg" name="com">
      <packagedElement xmi:type="uml:Package" xmi:id="_ZVMNIKgmEe-9tYVtpMatrg" name="mkyong">
        <packagedElement xmi:type="uml:Package" xmi:id="_ZVMNIagmEe-9tYVtpMatrg" name="system">
          <packagedElement xmi:type="uml:Class" xmi:id="_ZqRFQKgmEe-9tYVtpMatrg" name="OSValidator"/>
        </packagedElement>
      </packagedElement>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_ZVM0MagmEe-9tYVtpMatrg" name="javax">
      <packagedElement xmi:type="uml:Package" xmi:id="_ZVM0MqgmEe-9tYVtpMatrg" name="swing">
        <packagedElement xmi:type="uml:Package" xmi:id="_ZVehAagmEe-9tYVtpMatrg" name="table">
          <packagedElement xmi:type="uml:Interface" xmi:id="_Zqhj9agmEe-9tYVtpMatrg" name="TableCellRenderer"/>
          <packagedElement xmi:type="uml:Interface" xmi:id="_ZqiyEKgmEe-9tYVtpMatrg" name="TableColumnModel"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_ZqS6c6gmEe-9tYVtpMatrg" name="JFileChooser"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_Zqg84qgmEe-9tYVtpMatrg" name="JFrame"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_Zqhj8agmEe-9tYVtpMatrg" name="JScrollPane"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_Zqhj86gmEe-9tYVtpMatrg" name="JTable"/>
      </packagedElement>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_ZVYaYKgmEe-9tYVtpMatrg" name="org">
      <packagedElement xmi:type="uml:Package" xmi:id="_ZVZBcKgmEe-9tYVtpMatrg" name="antlr">
        <packagedElement xmi:type="uml:Package" xmi:id="_ZVZBcagmEe-9tYVtpMatrg" name="v4">
          <packagedElement xmi:type="uml:Package" xmi:id="_ZVZBcqgmEe-9tYVtpMatrg" name="runtime">
            <packagedElement xmi:type="uml:Package" xmi:id="_ZVZBc6gmEe-9tYVtpMatrg" name="tree">
              <packagedElement xmi:type="uml:Interface" xmi:id="_ZqZoIagmEe-9tYVtpMatrg" name="ParseTree"/>
              <packagedElement xmi:type="uml:Class" xmi:id="_ZqaPMagmEe-9tYVtpMatrg" name="ParseTreeWalker"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Interface" xmi:id="_ZqYaAKgmEe-9tYVtpMatrg" name="CharStream"/>
            <packagedElement xmi:type="uml:Class" xmi:id="_ZqZBEKgmEe-9tYVtpMatrg" name="CharStreams"/>
            <packagedElement xmi:type="uml:Class" xmi:id="_ZqZBEqgmEe-9tYVtpMatrg" name="CommonTokenStream"/>
          </packagedElement>
        </packagedElement>
      </packagedElement>
      <packagedElement xmi:type="uml:Package" xmi:id="_ZW9HsKgmEe-9tYVtpMatrg" name="junit">
        <packagedElement xmi:type="uml:Package" xmi:id="_ZW9HsagmEe-9tYVtpMatrg" name="jupiter">
          <packagedElement xmi:type="uml:Package" xmi:id="_ZW9HsqgmEe-9tYVtpMatrg" name="api">
            <packagedElement xmi:type="uml:Class" xmi:id="_ZrXRcKgmEe-9tYVtpMatrg" name="Assertions"/>
            <packagedElement xmi:type="uml:Interface" xmi:id="_ZrXRcqgmEe-9tYVtpMatrg" name="Test"/>
            <packagedElement xmi:type="uml:Interface" xmi:id="_Zrd_IagmEe-9tYVtpMatrg" name="BeforeEach"/>
            <packagedElement xmi:type="uml:Interface" xmi:id="_Zrks0KgmEe-9tYVtpMatrg" name="AfterEach"/>
          </packagedElement>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_ZrdYEKgmEe-9tYVtpMatrg" name="Assert"/>
      </packagedElement>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_ZVbdsKgmEe-9tYVtpMatrg" name="WARPParser">
      <packagedElement xmi:type="uml:Class" xmi:id="_ZqcEYagmEe-9tYVtpMatrg" name="WarpNameContext"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_Zqcrc6gmEe-9tYVtpMatrg" name="WarpContext"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_ZqdShqgmEe-9tYVtpMatrg" name="FlowNameContext"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_Zqd5lqgmEe-9tYVtpMatrg" name="SrcNodeContext"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_ZqfHsqgmEe-9tYVtpMatrg" name="SnkNodeContext"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_ZqfuwqgmEe-9tYVtpMatrg" name="FlowContext"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_ZrZtsqgmEe-9tYVtpMatrg" name="PriorityContext"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_ZraUwqgmEe-9tYVtpMatrg" name="PeriodContext"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_Zra70qgmEe-9tYVtpMatrg" name="DeadlineContext"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_Zrbi4KgmEe-9tYVtpMatrg" name="PhaseContext"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_ZWl7UKgmEe-9tYVtpMatrg" name="argparser">
      <packagedElement xmi:type="uml:Class" xmi:id="_ZrMSUKgmEe-9tYVtpMatrg" name="ArgParser"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_ZrM5YKgmEe-9tYVtpMatrg" name="BooleanHolder"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_ZrM5YqgmEe-9tYVtpMatrg" name="DoubleHolder"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_ZrM5ZKgmEe-9tYVtpMatrg" name="IntHolder"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_ZrNgcagmEe-9tYVtpMatrg" name="StringHolder"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_ZWz9wKgmEe-9tYVtpMatrg" name="WARPdslParser">
      <packagedElement xmi:type="uml:Class" xmi:id="_ZrQjwKgmEe-9tYVtpMatrg" name="ActionContext"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_ZrRx56gmEe-9tYVtpMatrg" name="FlowNameContext"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_ZrSY9agmEe-9tYVtpMatrg" name="CmdContext"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_ZrTAA6gmEe-9tYVtpMatrg" name="SrcNodeContext"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_ZrTnEKgmEe-9tYVtpMatrg" name="SnkNodeContext"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_ZrUOIKgmEe-9tYVtpMatrg" name="ChannelContext"/>
    </packagedElement>
    <profileApplication xmi:id="_XhsPMKgmEe-9tYVtpMatrg">
      <eAnnotations xmi:id="_Xhs2QKgmEe-9tYVtpMatrg" source="http://www.eclipse.org/uml2/2.0.0/UML">
        <references xmi:type="ecore:EPackage" href="pathmap://UMLLAB_PROFILES/UMLLab.profile.uml#UMLLabProfile-Annotation_2-UMLLabProfile"/>
      </eAnnotations>
      <appliedProfile href="pathmap://UMLLAB_PROFILES/UMLLab.profile.uml#UMLLabProfile"/>
    </profileApplication>
  </uml:Model>
  <UMLLabProfile:TargetLanguage xmi:id="_Xhv5kKgmEe-9tYVtpMatrg" base_Package="_XcyhEKgmEe-9tYVtpMatrg">
    <languageName>java</languageName>
  </UMLLabProfile:TargetLanguage>
  <UMLLabProfile:Generics xmi:id="_ZYk4UKgmEe-9tYVtpMatrg" genericsValue="T,E" base_Element="_ZYh1AKgmEe-9tYVtpMatrg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ZYqX4agmEe-9tYVtpMatrg" base_Element="_ZYqX4KgmEe-9tYVtpMatrg"/>
  <UMLLabProfile:Annotations xmi:id="_ZYq-8KgmEe-9tYVtpMatrg" base_Element="_ZYqX4KgmEe-9tYVtpMatrg">
    <annotations xmi:id="_ZYq-8agmEe-9tYVtpMatrg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_ZYsNEKgmEe-9tYVtpMatrg" genericsValue="Edge" base_Element="_ZYrmAKgmEe-9tYVtpMatrg"/>
  <UMLLabProfile:Generics xmi:id="_ZYs0IKgmEe-9tYVtpMatrg" genericsValue="Edge" base_Element="_ZYsNEagmEe-9tYVtpMatrg"/>
  <UMLLabProfile:Generics xmi:id="_ZYtbMKgmEe-9tYVtpMatrg" genericsValue="Edge" base_Element="_ZYs0IagmEe-9tYVtpMatrg"/>
  <UMLLabProfile:Generics xmi:id="_ZYuCQKgmEe-9tYVtpMatrg" genericsValue="Edge" base_Element="_ZYtbMagmEe-9tYVtpMatrg"/>
  <UMLLabProfile:Generics xmi:id="_ZYupUKgmEe-9tYVtpMatrg" genericsValue="Edge" base_Element="_ZYuCQagmEe-9tYVtpMatrg"/>
  <UMLLabProfile:Generics xmi:id="_ZY8rwqgmEe-9tYVtpMatrg" genericsValue="String" base_Element="_ZY8rwKgmEe-9tYVtpMatrg"/>
  <UMLLabProfile:Generics xmi:id="_ZZA9MKgmEe-9tYVtpMatrg" genericsValue="String" base_Element="_ZZAWIqgmEe-9tYVtpMatrg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ZZGcwagmEe-9tYVtpMatrg" base_Element="_ZZGcwKgmEe-9tYVtpMatrg"/>
  <UMLLabProfile:Annotations xmi:id="_ZZGcwqgmEe-9tYVtpMatrg" base_Element="_ZZGcwKgmEe-9tYVtpMatrg">
    <annotations xmi:id="_ZZGcw6gmEe-9tYVtpMatrg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ZZHD0KgmEe-9tYVtpMatrg" base_Element="_ZZGcxKgmEe-9tYVtpMatrg"/>
  <UMLLabProfile:Annotations xmi:id="_ZZHD0agmEe-9tYVtpMatrg" base_Element="_ZZGcxKgmEe-9tYVtpMatrg">
    <annotations xmi:id="_ZZHD0qgmEe-9tYVtpMatrg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ZZHD1KgmEe-9tYVtpMatrg" base_Element="_ZZHD06gmEe-9tYVtpMatrg"/>
  <UMLLabProfile:Annotations xmi:id="_ZZHD1agmEe-9tYVtpMatrg" base_Element="_ZZHD06gmEe-9tYVtpMatrg">
    <annotations xmi:id="_ZZHD1qgmEe-9tYVtpMatrg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_ZZKuMKgmEe-9tYVtpMatrg" genericsValue="T extends SchedulableObject" base_Element="_ZZKHIKgmEe-9tYVtpMatrg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ZZMjYKgmEe-9tYVtpMatrg" base_Element="_ZZL8VagmEe-9tYVtpMatrg"/>
  <UMLLabProfile:Annotations xmi:id="_ZZMjYagmEe-9tYVtpMatrg" base_Element="_ZZL8VagmEe-9tYVtpMatrg">
    <annotations xmi:id="_ZZMjYqgmEe-9tYVtpMatrg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ZZNxgagmEe-9tYVtpMatrg" base_Element="_ZZNxgKgmEe-9tYVtpMatrg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ZZQNwKgmEe-9tYVtpMatrg" base_Element="_ZZPmsqgmEe-9tYVtpMatrg"/>
  <UMLLabProfile:Annotations xmi:id="_ZZQNwagmEe-9tYVtpMatrg" base_Element="_ZZPmsqgmEe-9tYVtpMatrg">
    <annotations xmi:id="_ZZQNwqgmEe-9tYVtpMatrg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ZZQNxagmEe-9tYVtpMatrg" base_Element="_ZZQNw6gmEe-9tYVtpMatrg"/>
  <UMLLabProfile:Annotations xmi:id="_ZZQ00KgmEe-9tYVtpMatrg" base_Element="_ZZQNw6gmEe-9tYVtpMatrg">
    <annotations xmi:id="_ZZQ00agmEe-9tYVtpMatrg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ZZQ006gmEe-9tYVtpMatrg" base_Element="_ZZQ00qgmEe-9tYVtpMatrg"/>
  <UMLLabProfile:Annotations xmi:id="_ZZQ01KgmEe-9tYVtpMatrg" base_Element="_ZZQ00qgmEe-9tYVtpMatrg">
    <annotations xmi:id="_ZZQ01agmEe-9tYVtpMatrg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_ZZYwoKgmEe-9tYVtpMatrg" genericsValue="Node" base_Element="_ZZYJmKgmEe-9tYVtpMatrg"/>
  <UMLLabProfile:Generics xmi:id="_ZZZXsKgmEe-9tYVtpMatrg" genericsValue="Edge" base_Element="_ZZYwoagmEe-9tYVtpMatrg"/>
  <UMLLabProfile:Generics xmi:id="_ZZZXsqgmEe-9tYVtpMatrg" genericsValue="Integer" base_Element="_ZZZXsagmEe-9tYVtpMatrg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ZZal0qgmEe-9tYVtpMatrg" base_Element="_ZZal0KgmEe-9tYVtpMatrg"/>
  <UMLLabProfile:Annotations xmi:id="_ZZal06gmEe-9tYVtpMatrg" base_Element="_ZZal0KgmEe-9tYVtpMatrg">
    <annotations xmi:id="_ZZal1KgmEe-9tYVtpMatrg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ZZgFYKgmEe-9tYVtpMatrg" base_Element="_ZZfeUKgmEe-9tYVtpMatrg"/>
  <UMLLabProfile:Annotations xmi:id="_ZZgFYagmEe-9tYVtpMatrg" base_Element="_ZZfeUKgmEe-9tYVtpMatrg">
    <annotations xmi:id="_ZZgFYqgmEe-9tYVtpMatrg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Array xmi:id="_ZZmzEagmEe-9tYVtpMatrg" dimensions="2" base_Element="_ZZmMA6gmEe-9tYVtpMatrg"/>
  <UMLLabProfile:Generics xmi:id="_ZZv9AKgmEe-9tYVtpMatrg" genericsValue="T extends SchedulableObject" base_Element="_ZZvV8KgmEe-9tYVtpMatrg"/>
  <UMLLabProfile:Generics xmi:id="_ZZwkEagmEe-9tYVtpMatrg" genericsValue="T extends SchedulableObject" base_Element="_ZZwkEKgmEe-9tYVtpMatrg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ZZyZQqgmEe-9tYVtpMatrg" base_Element="_ZZyZQKgmEe-9tYVtpMatrg"/>
  <UMLLabProfile:Annotations xmi:id="_ZZzAUKgmEe-9tYVtpMatrg" base_Element="_ZZyZQKgmEe-9tYVtpMatrg">
    <annotations xmi:id="_ZZzAUagmEe-9tYVtpMatrg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ZZznYKgmEe-9tYVtpMatrg" base_Element="_ZZzAVqgmEe-9tYVtpMatrg"/>
  <UMLLabProfile:Annotations xmi:id="_ZZznYagmEe-9tYVtpMatrg" base_Element="_ZZzAVqgmEe-9tYVtpMatrg">
    <annotations xmi:id="_ZZznYqgmEe-9tYVtpMatrg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ZZznZKgmEe-9tYVtpMatrg" base_Element="_ZZznY6gmEe-9tYVtpMatrg"/>
  <UMLLabProfile:Annotations xmi:id="_ZZznZagmEe-9tYVtpMatrg" base_Element="_ZZznY6gmEe-9tYVtpMatrg">
    <annotations xmi:id="_ZZznZqgmEe-9tYVtpMatrg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ZZ2quqgmEe-9tYVtpMatrg" base_Element="_ZZ2quagmEe-9tYVtpMatrg"/>
  <UMLLabProfile:Annotations xmi:id="_ZZ2qu6gmEe-9tYVtpMatrg" base_Element="_ZZ2quagmEe-9tYVtpMatrg">
    <annotations xmi:id="_ZZ2qvKgmEe-9tYVtpMatrg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_ZZ340KgmEe-9tYVtpMatrg" genericsValue="T extends SchedulableObject" base_Element="_ZZ3RwKgmEe-9tYVtpMatrg"/>
  <UMLLabProfile:Generics xmi:id="_ZZ5G8agmEe-9tYVtpMatrg" genericsValue="String, Integer" base_Element="_ZZ5G8KgmEe-9tYVtpMatrg"/>
  <UMLLabProfile:Generics xmi:id="_ZZ5uAKgmEe-9tYVtpMatrg" genericsValue="String" base_Element="_ZZ5G8qgmEe-9tYVtpMatrg"/>
  <UMLLabProfile:Array xmi:id="_ZZ5uBKgmEe-9tYVtpMatrg" base_Element="_ZZ5uAagmEe-9tYVtpMatrg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ZZ_NkKgmEe-9tYVtpMatrg" base_Element="_ZZ-mgKgmEe-9tYVtpMatrg"/>
  <UMLLabProfile:Annotations xmi:id="_ZZ_NkagmEe-9tYVtpMatrg" base_Element="_ZZ-mgKgmEe-9tYVtpMatrg">
    <annotations xmi:id="_ZZ_NkqgmEe-9tYVtpMatrg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_ZaBp0KgmEe-9tYVtpMatrg" genericsValue="T extends SchedulableObject" base_Element="_ZaBCwKgmEe-9tYVtpMatrg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ZaHJYKgmEe-9tYVtpMatrg" base_Element="_ZaGiVagmEe-9tYVtpMatrg"/>
  <UMLLabProfile:Annotations xmi:id="_ZaHJYagmEe-9tYVtpMatrg" base_Element="_ZaGiVagmEe-9tYVtpMatrg">
    <annotations xmi:id="_ZaHJYqgmEe-9tYVtpMatrg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ZaHJZ6gmEe-9tYVtpMatrg" base_Element="_ZaHJZagmEe-9tYVtpMatrg"/>
  <UMLLabProfile:Annotations xmi:id="_ZaHwcKgmEe-9tYVtpMatrg" base_Element="_ZaHJZagmEe-9tYVtpMatrg">
    <annotations xmi:id="_ZaHwcagmEe-9tYVtpMatrg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ZaHwdKgmEe-9tYVtpMatrg" base_Element="_ZaHwcqgmEe-9tYVtpMatrg"/>
  <UMLLabProfile:Annotations xmi:id="_ZaHwdagmEe-9tYVtpMatrg" base_Element="_ZaHwcqgmEe-9tYVtpMatrg">
    <annotations xmi:id="_ZaHwdqgmEe-9tYVtpMatrg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ZaIXg6gmEe-9tYVtpMatrg" base_Element="_ZaIXgqgmEe-9tYVtpMatrg"/>
  <UMLLabProfile:Annotations xmi:id="_ZaIXhKgmEe-9tYVtpMatrg" base_Element="_ZaIXgqgmEe-9tYVtpMatrg">
    <annotations xmi:id="_ZaIXhagmEe-9tYVtpMatrg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ZaIXh6gmEe-9tYVtpMatrg" base_Element="_ZaIXhqgmEe-9tYVtpMatrg"/>
  <UMLLabProfile:Annotations xmi:id="_ZaI-kKgmEe-9tYVtpMatrg" base_Element="_ZaIXhqgmEe-9tYVtpMatrg">
    <annotations xmi:id="_ZaI-kagmEe-9tYVtpMatrg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ZaI-lKgmEe-9tYVtpMatrg" base_Element="_ZaI-kqgmEe-9tYVtpMatrg"/>
  <UMLLabProfile:Annotations xmi:id="_ZaI-lagmEe-9tYVtpMatrg" base_Element="_ZaI-kqgmEe-9tYVtpMatrg">
    <annotations xmi:id="_ZaI-lqgmEe-9tYVtpMatrg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ZaI-magmEe-9tYVtpMatrg" base_Element="_ZaI-l6gmEe-9tYVtpMatrg"/>
  <UMLLabProfile:Annotations xmi:id="_ZaJloKgmEe-9tYVtpMatrg" base_Element="_ZaI-l6gmEe-9tYVtpMatrg">
    <annotations xmi:id="_ZaJloagmEe-9tYVtpMatrg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ZaJlpagmEe-9tYVtpMatrg" base_Element="_ZaJlo6gmEe-9tYVtpMatrg"/>
  <UMLLabProfile:Annotations xmi:id="_ZaJlpqgmEe-9tYVtpMatrg" base_Element="_ZaJlo6gmEe-9tYVtpMatrg">
    <annotations xmi:id="_ZaJlp6gmEe-9tYVtpMatrg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_ZaKMsKgmEe-9tYVtpMatrg" genericsValue="String, Integer" base_Element="_ZaJlqKgmEe-9tYVtpMatrg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ZaQTUKgmEe-9tYVtpMatrg" base_Element="_ZaPsQagmEe-9tYVtpMatrg"/>
  <UMLLabProfile:Annotations xmi:id="_ZaQTUagmEe-9tYVtpMatrg" base_Element="_ZaPsQagmEe-9tYVtpMatrg">
    <annotations xmi:id="_ZaQTUqgmEe-9tYVtpMatrg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ZaQTVKgmEe-9tYVtpMatrg" base_Element="_ZaQTU6gmEe-9tYVtpMatrg"/>
  <UMLLabProfile:Annotations xmi:id="_ZaQ6YKgmEe-9tYVtpMatrg" base_Element="_ZaQTU6gmEe-9tYVtpMatrg">
    <annotations xmi:id="_ZaQ6YagmEe-9tYVtpMatrg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ZaQ6Y6gmEe-9tYVtpMatrg" base_Element="_ZaQ6YqgmEe-9tYVtpMatrg"/>
  <UMLLabProfile:Annotations xmi:id="_ZaQ6ZKgmEe-9tYVtpMatrg" base_Element="_ZaQ6YqgmEe-9tYVtpMatrg">
    <annotations xmi:id="_ZaQ6ZagmEe-9tYVtpMatrg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Array xmi:id="_ZaQ6aagmEe-9tYVtpMatrg" base_Element="_ZaQ6ZqgmEe-9tYVtpMatrg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ZaRhcKgmEe-9tYVtpMatrg" base_Element="_ZaQ6ZqgmEe-9tYVtpMatrg"/>
  <UMLLabProfile:Annotations xmi:id="_ZaRhcagmEe-9tYVtpMatrg" base_Element="_ZaQ6ZqgmEe-9tYVtpMatrg">
    <annotations xmi:id="_ZaRhcqgmEe-9tYVtpMatrg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Array xmi:id="_ZaRhdqgmEe-9tYVtpMatrg" dimensions="2" base_Element="_ZaRhc6gmEe-9tYVtpMatrg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ZaRhd6gmEe-9tYVtpMatrg" base_Element="_ZaRhc6gmEe-9tYVtpMatrg"/>
  <UMLLabProfile:Annotations xmi:id="_ZaRheKgmEe-9tYVtpMatrg" base_Element="_ZaRhc6gmEe-9tYVtpMatrg">
    <annotations xmi:id="_ZaRheagmEe-9tYVtpMatrg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_ZaTWoKgmEe-9tYVtpMatrg" genericsValue="T extends SchedulableObject" base_Element="_ZaSvkKgmEe-9tYVtpMatrg"/>
  <UMLLabProfile:Generics xmi:id="_ZaUkwKgmEe-9tYVtpMatrg" genericsValue="T extends SchedulableObject" base_Element="_ZaT9sKgmEe-9tYVtpMatrg"/>
  <UMLLabProfile:Reference xmi:id="_ZaVL0agmEe-9tYVtpMatrg" base_Element="_ZaVL0KgmEe-9tYVtpMatrg"/>
  <UMLLabProfile:Generics xmi:id="_ZaVy4agmEe-9tYVtpMatrg" genericsValue="T" base_Element="_ZaVy4KgmEe-9tYVtpMatrg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ZaeVwKgmEe-9tYVtpMatrg" base_Element="_ZadusqgmEe-9tYVtpMatrg"/>
  <UMLLabProfile:Annotations xmi:id="_ZaeVwagmEe-9tYVtpMatrg" base_Element="_ZadusqgmEe-9tYVtpMatrg">
    <annotations xmi:id="_ZaeVwqgmEe-9tYVtpMatrg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ZaeVxKgmEe-9tYVtpMatrg" base_Element="_ZaeVw6gmEe-9tYVtpMatrg"/>
  <UMLLabProfile:Annotations xmi:id="_ZaeVxagmEe-9tYVtpMatrg" base_Element="_ZaeVw6gmEe-9tYVtpMatrg">
    <annotations xmi:id="_ZaeVxqgmEe-9tYVtpMatrg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Array xmi:id="_Zae806gmEe-9tYVtpMatrg" dimensions="1" base_Element="_Zae80KgmEe-9tYVtpMatrg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Zae81KgmEe-9tYVtpMatrg" base_Element="_Zae80KgmEe-9tYVtpMatrg"/>
  <UMLLabProfile:Annotations xmi:id="_Zae81agmEe-9tYVtpMatrg" base_Element="_Zae80KgmEe-9tYVtpMatrg">
    <annotations xmi:id="_Zae81qgmEe-9tYVtpMatrg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Array xmi:id="_Zae82qgmEe-9tYVtpMatrg" dimensions="2" base_Element="_Zae816gmEe-9tYVtpMatrg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Zafj4KgmEe-9tYVtpMatrg" base_Element="_Zae816gmEe-9tYVtpMatrg"/>
  <UMLLabProfile:Annotations xmi:id="_Zafj4agmEe-9tYVtpMatrg" base_Element="_Zae816gmEe-9tYVtpMatrg">
    <annotations xmi:id="_Zafj4qgmEe-9tYVtpMatrg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Zafj5KgmEe-9tYVtpMatrg" base_Element="_Zafj46gmEe-9tYVtpMatrg"/>
  <UMLLabProfile:Annotations xmi:id="_Zafj5agmEe-9tYVtpMatrg" base_Element="_Zafj46gmEe-9tYVtpMatrg">
    <annotations xmi:id="_Zafj5qgmEe-9tYVtpMatrg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ZaiAIagmEe-9tYVtpMatrg" base_Element="_ZaiAIKgmEe-9tYVtpMatrg"/>
  <UMLLabProfile:Annotations xmi:id="_ZaiAIqgmEe-9tYVtpMatrg" base_Element="_ZaiAIKgmEe-9tYVtpMatrg">
    <annotations xmi:id="_ZaiAI6gmEe-9tYVtpMatrg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_ZajOQagmEe-9tYVtpMatrg" genericsValue="T" base_Element="_ZajOQKgmEe-9tYVtpMatrg"/>
  <UMLLabProfile:Generics xmi:id="_Zam4qagmEe-9tYVtpMatrg" genericsValue="Integer" base_Element="_Zam4qKgmEe-9tYVtpMatrg"/>
  <UMLLabProfile:Generics xmi:id="_ZawpoKgmEe-9tYVtpMatrg" genericsValue="T extends SchedulableObject" base_Element="_ZawCkKgmEe-9tYVtpMatrg"/>
  <UMLLabProfile:Generics xmi:id="_Zax3wKgmEe-9tYVtpMatrg" genericsValue="T" base_Element="_ZaxQsKgmEe-9tYVtpMatrg"/>
  <UMLLabProfile:Generics xmi:id="_Za8P0KgmEe-9tYVtpMatrg" genericsValue="T extends SchedulableObject" base_Element="_Za7owagmEe-9tYVtpMatrg"/>
  <UMLLabProfile:Generics xmi:id="_Za9d8KgmEe-9tYVtpMatrg" genericsValue="T" base_Element="_Za8246gmEe-9tYVtpMatrg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Za-FAagmEe-9tYVtpMatrg" base_Element="_Za-FAKgmEe-9tYVtpMatrg"/>
  <UMLLabProfile:Generics xmi:id="_ZbBIUKgmEe-9tYVtpMatrg" genericsValue="T,E extends ArrayList&lt;T>" base_Element="_ZbAhQKgmEe-9tYVtpMatrg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ZbC9gagmEe-9tYVtpMatrg" base_Element="_ZbC9gKgmEe-9tYVtpMatrg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ZbDkkagmEe-9tYVtpMatrg" base_Element="_ZbDkkKgmEe-9tYVtpMatrg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ZbGA0agmEe-9tYVtpMatrg" base_Element="_ZbGA0KgmEe-9tYVtpMatrg"/>
  <UMLLabProfile:Annotations xmi:id="_ZbGn4KgmEe-9tYVtpMatrg" base_Element="_ZbGA0KgmEe-9tYVtpMatrg">
    <annotations xmi:id="_ZbGn4agmEe-9tYVtpMatrg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ZbGn46gmEe-9tYVtpMatrg" base_Element="_ZbGn4qgmEe-9tYVtpMatrg"/>
  <UMLLabProfile:Annotations xmi:id="_ZbGn5KgmEe-9tYVtpMatrg" base_Element="_ZbGn4qgmEe-9tYVtpMatrg">
    <annotations xmi:id="_ZbGn5agmEe-9tYVtpMatrg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ZbGn6KgmEe-9tYVtpMatrg" base_Element="_ZbGn5qgmEe-9tYVtpMatrg"/>
  <UMLLabProfile:Annotations xmi:id="_ZbGn6agmEe-9tYVtpMatrg" base_Element="_ZbGn5qgmEe-9tYVtpMatrg">
    <annotations xmi:id="_ZbHO8KgmEe-9tYVtpMatrg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Array xmi:id="_ZbMHdKgmEe-9tYVtpMatrg" base_Element="_ZbMHcagmEe-9tYVtpMatrg"/>
  <UMLLabProfile:Array xmi:id="_ZbMHeKgmEe-9tYVtpMatrg" dimensions="2" base_Element="_ZbMHdagmEe-9tYVtpMatrg"/>
  <UMLLabProfile:Array xmi:id="_ZbS1I6gmEe-9tYVtpMatrg" base_Element="_ZbS1IagmEe-9tYVtpMatrg"/>
  <UMLLabProfile:Generics xmi:id="_ZbZi0qgmEe-9tYVtpMatrg" genericsValue="InstructionParameters" base_Element="_ZbZi0KgmEe-9tYVtpMatrg"/>
  <UMLLabProfile:Generics xmi:id="_Zbaw8agmEe-9tYVtpMatrg" genericsValue="InstructionParameters" base_Element="_Zbaw8KgmEe-9tYVtpMatrg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Zbg3kagmEe-9tYVtpMatrg" base_Element="_Zbg3kKgmEe-9tYVtpMatrg"/>
  <UMLLabProfile:Annotations xmi:id="_ZbheoKgmEe-9tYVtpMatrg" base_Element="_Zbg3kKgmEe-9tYVtpMatrg">
    <annotations xmi:id="_ZbheoagmEe-9tYVtpMatrg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Zbheo6gmEe-9tYVtpMatrg" base_Element="_ZbheoqgmEe-9tYVtpMatrg"/>
  <UMLLabProfile:Annotations xmi:id="_ZbhepKgmEe-9tYVtpMatrg" base_Element="_ZbheoqgmEe-9tYVtpMatrg">
    <annotations xmi:id="_ZbhepagmEe-9tYVtpMatrg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ZbiFsKgmEe-9tYVtpMatrg" base_Element="_ZbhepqgmEe-9tYVtpMatrg"/>
  <UMLLabProfile:Annotations xmi:id="_ZbiFsagmEe-9tYVtpMatrg" base_Element="_ZbhepqgmEe-9tYVtpMatrg">
    <annotations xmi:id="_ZbiFsqgmEe-9tYVtpMatrg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ZbiFtKgmEe-9tYVtpMatrg" base_Element="_ZbiFs6gmEe-9tYVtpMatrg"/>
  <UMLLabProfile:Annotations xmi:id="_ZbiFtagmEe-9tYVtpMatrg" base_Element="_ZbiFs6gmEe-9tYVtpMatrg">
    <annotations xmi:id="_ZbiFtqgmEe-9tYVtpMatrg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ZbiFuKgmEe-9tYVtpMatrg" base_Element="_ZbiFt6gmEe-9tYVtpMatrg"/>
  <UMLLabProfile:Annotations xmi:id="_ZbiFuagmEe-9tYVtpMatrg" base_Element="_ZbiFt6gmEe-9tYVtpMatrg">
    <annotations xmi:id="_ZbiFuqgmEe-9tYVtpMatrg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ZbiswKgmEe-9tYVtpMatrg" base_Element="_ZbiFu6gmEe-9tYVtpMatrg"/>
  <UMLLabProfile:Annotations xmi:id="_ZbiswagmEe-9tYVtpMatrg" base_Element="_ZbiFu6gmEe-9tYVtpMatrg">
    <annotations xmi:id="_ZbiswqgmEe-9tYVtpMatrg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ZbisxagmEe-9tYVtpMatrg" base_Element="_Zbisw6gmEe-9tYVtpMatrg"/>
  <UMLLabProfile:Annotations xmi:id="_ZbisxqgmEe-9tYVtpMatrg" base_Element="_Zbisw6gmEe-9tYVtpMatrg">
    <annotations xmi:id="_Zbisx6gmEe-9tYVtpMatrg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ZbjT0KgmEe-9tYVtpMatrg" base_Element="_ZbisyKgmEe-9tYVtpMatrg"/>
  <UMLLabProfile:Annotations xmi:id="_ZbjT0agmEe-9tYVtpMatrg" base_Element="_ZbisyKgmEe-9tYVtpMatrg">
    <annotations xmi:id="_ZbjT0qgmEe-9tYVtpMatrg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ZbjT1agmEe-9tYVtpMatrg" base_Element="_ZbjT06gmEe-9tYVtpMatrg"/>
  <UMLLabProfile:Annotations xmi:id="_ZbjT1qgmEe-9tYVtpMatrg" base_Element="_ZbjT06gmEe-9tYVtpMatrg">
    <annotations xmi:id="_ZbjT16gmEe-9tYVtpMatrg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Zbj64KgmEe-9tYVtpMatrg" base_Element="_ZbjT2KgmEe-9tYVtpMatrg"/>
  <UMLLabProfile:Annotations xmi:id="_Zbj64agmEe-9tYVtpMatrg" base_Element="_ZbjT2KgmEe-9tYVtpMatrg">
    <annotations xmi:id="_Zbj64qgmEe-9tYVtpMatrg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Zbj65KgmEe-9tYVtpMatrg" base_Element="_Zbj646gmEe-9tYVtpMatrg"/>
  <UMLLabProfile:Annotations xmi:id="_Zbj65agmEe-9tYVtpMatrg" base_Element="_Zbj646gmEe-9tYVtpMatrg">
    <annotations xmi:id="_Zbj65qgmEe-9tYVtpMatrg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Zbkh8KgmEe-9tYVtpMatrg" base_Element="_Zbj656gmEe-9tYVtpMatrg"/>
  <UMLLabProfile:Annotations xmi:id="_Zbkh8agmEe-9tYVtpMatrg" base_Element="_Zbj656gmEe-9tYVtpMatrg">
    <annotations xmi:id="_Zbkh8qgmEe-9tYVtpMatrg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Zbkh9agmEe-9tYVtpMatrg" base_Element="_Zbkh86gmEe-9tYVtpMatrg"/>
  <UMLLabProfile:Annotations xmi:id="_Zbkh9qgmEe-9tYVtpMatrg" base_Element="_Zbkh86gmEe-9tYVtpMatrg">
    <annotations xmi:id="_Zbkh96gmEe-9tYVtpMatrg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Zbkh-qgmEe-9tYVtpMatrg" base_Element="_Zbkh-KgmEe-9tYVtpMatrg"/>
  <UMLLabProfile:Annotations xmi:id="_ZblJAKgmEe-9tYVtpMatrg" base_Element="_Zbkh-KgmEe-9tYVtpMatrg">
    <annotations xmi:id="_ZblJAagmEe-9tYVtpMatrg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ZblJBKgmEe-9tYVtpMatrg" base_Element="_ZblJAqgmEe-9tYVtpMatrg"/>
  <UMLLabProfile:Annotations xmi:id="_ZblJBagmEe-9tYVtpMatrg" base_Element="_ZblJAqgmEe-9tYVtpMatrg">
    <annotations xmi:id="_ZblJBqgmEe-9tYVtpMatrg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ZblJCKgmEe-9tYVtpMatrg" base_Element="_ZblJB6gmEe-9tYVtpMatrg"/>
  <UMLLabProfile:Annotations xmi:id="_ZblJCagmEe-9tYVtpMatrg" base_Element="_ZblJB6gmEe-9tYVtpMatrg">
    <annotations xmi:id="_ZblJCqgmEe-9tYVtpMatrg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ZboMUagmEe-9tYVtpMatrg" base_Element="_ZboMUKgmEe-9tYVtpMatrg"/>
  <UMLLabProfile:Annotations xmi:id="_ZboMUqgmEe-9tYVtpMatrg" base_Element="_ZboMUKgmEe-9tYVtpMatrg">
    <annotations xmi:id="_ZboMU6gmEe-9tYVtpMatrg" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ZbpadKgmEe-9tYVtpMatrg" base_Element="_Zbpac6gmEe-9tYVtpMatrg"/>
  <UMLLabProfile:Annotations xmi:id="_ZbpadagmEe-9tYVtpMatrg" base_Element="_Zbpac6gmEe-9tYVtpMatrg">
    <annotations xmi:id="_ZbpadqgmEe-9tYVtpMatrg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ZbpaeKgmEe-9tYVtpMatrg" base_Element="_Zbpad6gmEe-9tYVtpMatrg"/>
  <UMLLabProfile:Annotations xmi:id="_ZbqBgKgmEe-9tYVtpMatrg" base_Element="_Zbpad6gmEe-9tYVtpMatrg">
    <annotations xmi:id="_ZbqBgagmEe-9tYVtpMatrg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ZbqBhKgmEe-9tYVtpMatrg" base_Element="_ZbqBgqgmEe-9tYVtpMatrg"/>
  <UMLLabProfile:Annotations xmi:id="_ZbqBhagmEe-9tYVtpMatrg" base_Element="_ZbqBgqgmEe-9tYVtpMatrg">
    <annotations xmi:id="_ZbqBhqgmEe-9tYVtpMatrg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ZbuS8KgmEe-9tYVtpMatrg" base_Element="_Zbtr46gmEe-9tYVtpMatrg"/>
  <UMLLabProfile:Annotations xmi:id="_ZbuS8agmEe-9tYVtpMatrg" base_Element="_Zbtr46gmEe-9tYVtpMatrg">
    <annotations xmi:id="_ZbuS8qgmEe-9tYVtpMatrg" name="BeforeEach"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ZbuS9KgmEe-9tYVtpMatrg" base_Element="_ZbuS86gmEe-9tYVtpMatrg"/>
  <UMLLabProfile:Annotations xmi:id="_ZbuS9agmEe-9tYVtpMatrg" base_Element="_ZbuS86gmEe-9tYVtpMatrg">
    <annotations xmi:id="_ZbuS9qgmEe-9tYVtpMatrg" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ZbuS-KgmEe-9tYVtpMatrg" base_Element="_ZbuS96gmEe-9tYVtpMatrg"/>
  <UMLLabProfile:Annotations xmi:id="_Zbu6AKgmEe-9tYVtpMatrg" base_Element="_ZbuS96gmEe-9tYVtpMatrg">
    <annotations xmi:id="_Zbu6AagmEe-9tYVtpMatrg" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Array xmi:id="_Zb2OwqgmEe-9tYVtpMatrg" base_Element="_Zb1nu6gmEe-9tYVtpMatrg"/>
  <UMLLabProfile:Array xmi:id="_Zb2OyKgmEe-9tYVtpMatrg" base_Element="_Zb2OxagmEe-9tYVtpMatrg"/>
  <UMLLabProfile:Array xmi:id="_Zb3c4KgmEe-9tYVtpMatrg" base_Element="_Zb2106gmEe-9tYVtpMatrg"/>
  <UMLLabProfile:Array xmi:id="_Zb4D8KgmEe-9tYVtpMatrg" dimensions="1" base_Element="_Zb3c5qgmEe-9tYVtpMatrg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Zb8VZKgmEe-9tYVtpMatrg" base_Element="_Zb8VY6gmEe-9tYVtpMatrg"/>
  <UMLLabProfile:Annotations xmi:id="_Zb88cKgmEe-9tYVtpMatrg" base_Element="_Zb8VY6gmEe-9tYVtpMatrg">
    <annotations xmi:id="_Zb88cagmEe-9tYVtpMatrg" name="BeforeEach"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Zb88c6gmEe-9tYVtpMatrg" base_Element="_Zb88cqgmEe-9tYVtpMatrg"/>
  <UMLLabProfile:Annotations xmi:id="_Zb88dKgmEe-9tYVtpMatrg" base_Element="_Zb88cqgmEe-9tYVtpMatrg">
    <annotations xmi:id="_Zb88dagmEe-9tYVtpMatrg" name="AfterEach"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Zb9jgKgmEe-9tYVtpMatrg" base_Element="_Zb88dqgmEe-9tYVtpMatrg"/>
  <UMLLabProfile:Annotations xmi:id="_Zb9jgagmEe-9tYVtpMatrg" base_Element="_Zb88dqgmEe-9tYVtpMatrg">
    <annotations xmi:id="_Zb9jgqgmEe-9tYVtpMatrg" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Zb9jhKgmEe-9tYVtpMatrg" base_Element="_Zb9jg6gmEe-9tYVtpMatrg"/>
  <UMLLabProfile:Annotations xmi:id="_Zb9jhagmEe-9tYVtpMatrg" base_Element="_Zb9jg6gmEe-9tYVtpMatrg">
    <annotations xmi:id="_Zb9jhqgmEe-9tYVtpMatrg" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Zb9jiKgmEe-9tYVtpMatrg" base_Element="_Zb9jh6gmEe-9tYVtpMatrg"/>
  <UMLLabProfile:Annotations xmi:id="_Zb9jiagmEe-9tYVtpMatrg" base_Element="_Zb9jh6gmEe-9tYVtpMatrg">
    <annotations xmi:id="_Zb9jiqgmEe-9tYVtpMatrg" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Zb-KkKgmEe-9tYVtpMatrg" base_Element="_Zb9ji6gmEe-9tYVtpMatrg"/>
  <UMLLabProfile:Annotations xmi:id="_Zb-KkagmEe-9tYVtpMatrg" base_Element="_Zb9ji6gmEe-9tYVtpMatrg">
    <annotations xmi:id="_Zb-KkqgmEe-9tYVtpMatrg" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Zb-KlKgmEe-9tYVtpMatrg" base_Element="_Zb-Kk6gmEe-9tYVtpMatrg"/>
  <UMLLabProfile:Annotations xmi:id="_Zb-KlagmEe-9tYVtpMatrg" base_Element="_Zb-Kk6gmEe-9tYVtpMatrg">
    <annotations xmi:id="_Zb-KlqgmEe-9tYVtpMatrg" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Zb-KmKgmEe-9tYVtpMatrg" base_Element="_Zb-Kl6gmEe-9tYVtpMatrg"/>
  <UMLLabProfile:Annotations xmi:id="_Zb-KmagmEe-9tYVtpMatrg" base_Element="_Zb-Kl6gmEe-9tYVtpMatrg">
    <annotations xmi:id="_Zb-KmqgmEe-9tYVtpMatrg" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Zb-xoKgmEe-9tYVtpMatrg" base_Element="_Zb-Km6gmEe-9tYVtpMatrg"/>
  <UMLLabProfile:Annotations xmi:id="_Zb-xoagmEe-9tYVtpMatrg" base_Element="_Zb-Km6gmEe-9tYVtpMatrg">
    <annotations xmi:id="_Zb-xoqgmEe-9tYVtpMatrg" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Zb-xpKgmEe-9tYVtpMatrg" base_Element="_Zb-xo6gmEe-9tYVtpMatrg"/>
  <UMLLabProfile:Annotations xmi:id="_Zb-xpagmEe-9tYVtpMatrg" base_Element="_Zb-xo6gmEe-9tYVtpMatrg">
    <annotations xmi:id="_Zb-xpqgmEe-9tYVtpMatrg" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Zb-xqKgmEe-9tYVtpMatrg" base_Element="_Zb-xp6gmEe-9tYVtpMatrg"/>
  <UMLLabProfile:Annotations xmi:id="_Zb-xqagmEe-9tYVtpMatrg" base_Element="_Zb-xp6gmEe-9tYVtpMatrg">
    <annotations xmi:id="_Zb-xqqgmEe-9tYVtpMatrg" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Zb_YsKgmEe-9tYVtpMatrg" base_Element="_Zb-xq6gmEe-9tYVtpMatrg"/>
  <UMLLabProfile:Annotations xmi:id="_Zb_YsagmEe-9tYVtpMatrg" base_Element="_Zb-xq6gmEe-9tYVtpMatrg">
    <annotations xmi:id="_Zb_YsqgmEe-9tYVtpMatrg" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Zb_YtKgmEe-9tYVtpMatrg" base_Element="_Zb_Ys6gmEe-9tYVtpMatrg"/>
  <UMLLabProfile:Annotations xmi:id="_Zb_YtagmEe-9tYVtpMatrg" base_Element="_Zb_Ys6gmEe-9tYVtpMatrg">
    <annotations xmi:id="_Zb_YtqgmEe-9tYVtpMatrg" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Zb_YuKgmEe-9tYVtpMatrg" base_Element="_Zb_Yt6gmEe-9tYVtpMatrg"/>
  <UMLLabProfile:Annotations xmi:id="_Zb_YuagmEe-9tYVtpMatrg" base_Element="_Zb_Yt6gmEe-9tYVtpMatrg">
    <annotations xmi:id="_Zb_YuqgmEe-9tYVtpMatrg" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Zb_YvKgmEe-9tYVtpMatrg" base_Element="_Zb_Yu6gmEe-9tYVtpMatrg"/>
  <UMLLabProfile:Annotations xmi:id="_Zb_YvagmEe-9tYVtpMatrg" base_Element="_Zb_Yu6gmEe-9tYVtpMatrg">
    <annotations xmi:id="_Zb_YvqgmEe-9tYVtpMatrg" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Zb_YwKgmEe-9tYVtpMatrg" base_Element="_Zb_Yv6gmEe-9tYVtpMatrg"/>
  <UMLLabProfile:Annotations xmi:id="_Zb_YwagmEe-9tYVtpMatrg" base_Element="_Zb_Yv6gmEe-9tYVtpMatrg">
    <annotations xmi:id="_Zb_YwqgmEe-9tYVtpMatrg" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ZcAm0KgmEe-9tYVtpMatrg" base_Element="_Zb_Yw6gmEe-9tYVtpMatrg"/>
  <UMLLabProfile:Annotations xmi:id="_ZcAm0agmEe-9tYVtpMatrg" base_Element="_Zb_Yw6gmEe-9tYVtpMatrg">
    <annotations xmi:id="_ZcAm0qgmEe-9tYVtpMatrg" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ZcAm1KgmEe-9tYVtpMatrg" base_Element="_ZcAm06gmEe-9tYVtpMatrg"/>
  <UMLLabProfile:Annotations xmi:id="_ZcAm1agmEe-9tYVtpMatrg" base_Element="_ZcAm06gmEe-9tYVtpMatrg">
    <annotations xmi:id="_ZcAm1qgmEe-9tYVtpMatrg" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ZcAm2KgmEe-9tYVtpMatrg" base_Element="_ZcAm16gmEe-9tYVtpMatrg"/>
  <UMLLabProfile:Annotations xmi:id="_ZcAm2agmEe-9tYVtpMatrg" base_Element="_ZcAm16gmEe-9tYVtpMatrg">
    <annotations xmi:id="_ZcAm2qgmEe-9tYVtpMatrg" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ZcBN4KgmEe-9tYVtpMatrg" base_Element="_ZcAm26gmEe-9tYVtpMatrg"/>
  <UMLLabProfile:Annotations xmi:id="_ZcBN4agmEe-9tYVtpMatrg" base_Element="_ZcAm26gmEe-9tYVtpMatrg">
    <annotations xmi:id="_ZcBN4qgmEe-9tYVtpMatrg" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ZcBN5KgmEe-9tYVtpMatrg" base_Element="_ZcBN46gmEe-9tYVtpMatrg"/>
  <UMLLabProfile:Annotations xmi:id="_ZcBN5agmEe-9tYVtpMatrg" base_Element="_ZcBN46gmEe-9tYVtpMatrg">
    <annotations xmi:id="_ZcBN5qgmEe-9tYVtpMatrg" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ZcBN6KgmEe-9tYVtpMatrg" base_Element="_ZcBN56gmEe-9tYVtpMatrg"/>
  <UMLLabProfile:Annotations xmi:id="_ZcBN6agmEe-9tYVtpMatrg" base_Element="_ZcBN56gmEe-9tYVtpMatrg">
    <annotations xmi:id="_ZcBN6qgmEe-9tYVtpMatrg" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ZcB08agmEe-9tYVtpMatrg" base_Element="_ZcB08KgmEe-9tYVtpMatrg"/>
  <UMLLabProfile:Annotations xmi:id="_ZcB08qgmEe-9tYVtpMatrg" base_Element="_ZcB08KgmEe-9tYVtpMatrg">
    <annotations xmi:id="_ZcB086gmEe-9tYVtpMatrg" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ZcB09agmEe-9tYVtpMatrg" base_Element="_ZcB09KgmEe-9tYVtpMatrg"/>
  <UMLLabProfile:Annotations xmi:id="_ZcB09qgmEe-9tYVtpMatrg" base_Element="_ZcB09KgmEe-9tYVtpMatrg">
    <annotations xmi:id="_ZcB096gmEe-9tYVtpMatrg" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ZcB0-agmEe-9tYVtpMatrg" base_Element="_ZcB0-KgmEe-9tYVtpMatrg"/>
  <UMLLabProfile:Annotations xmi:id="_ZcB0-qgmEe-9tYVtpMatrg" base_Element="_ZcB0-KgmEe-9tYVtpMatrg">
    <annotations xmi:id="_ZcB0-6gmEe-9tYVtpMatrg" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ZcCcAagmEe-9tYVtpMatrg" base_Element="_ZcCcAKgmEe-9tYVtpMatrg"/>
  <UMLLabProfile:Annotations xmi:id="_ZcCcAqgmEe-9tYVtpMatrg" base_Element="_ZcCcAKgmEe-9tYVtpMatrg">
    <annotations xmi:id="_ZcCcA6gmEe-9tYVtpMatrg" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ZcCcBagmEe-9tYVtpMatrg" base_Element="_ZcCcBKgmEe-9tYVtpMatrg"/>
  <UMLLabProfile:Annotations xmi:id="_ZcCcBqgmEe-9tYVtpMatrg" base_Element="_ZcCcBKgmEe-9tYVtpMatrg">
    <annotations xmi:id="_ZcCcB6gmEe-9tYVtpMatrg" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ZcCcCagmEe-9tYVtpMatrg" base_Element="_ZcCcCKgmEe-9tYVtpMatrg"/>
  <UMLLabProfile:Annotations xmi:id="_ZcCcCqgmEe-9tYVtpMatrg" base_Element="_ZcCcCKgmEe-9tYVtpMatrg">
    <annotations xmi:id="_ZcDDEKgmEe-9tYVtpMatrg" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ZcDDEqgmEe-9tYVtpMatrg" base_Element="_ZcDDEagmEe-9tYVtpMatrg"/>
  <UMLLabProfile:Annotations xmi:id="_ZcDDE6gmEe-9tYVtpMatrg" base_Element="_ZcDDEagmEe-9tYVtpMatrg">
    <annotations xmi:id="_ZcDDFKgmEe-9tYVtpMatrg" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ZcDDFqgmEe-9tYVtpMatrg" base_Element="_ZcDDFagmEe-9tYVtpMatrg"/>
  <UMLLabProfile:Annotations xmi:id="_ZcDDF6gmEe-9tYVtpMatrg" base_Element="_ZcDDFagmEe-9tYVtpMatrg">
    <annotations xmi:id="_ZcDDGKgmEe-9tYVtpMatrg" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ZcDDGqgmEe-9tYVtpMatrg" base_Element="_ZcDDGagmEe-9tYVtpMatrg"/>
  <UMLLabProfile:Annotations xmi:id="_ZcDDG6gmEe-9tYVtpMatrg" base_Element="_ZcDDGagmEe-9tYVtpMatrg">
    <annotations xmi:id="_ZcDDHKgmEe-9tYVtpMatrg" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ZcDqIKgmEe-9tYVtpMatrg" base_Element="_ZcDDHagmEe-9tYVtpMatrg"/>
  <UMLLabProfile:Annotations xmi:id="_ZcDqIagmEe-9tYVtpMatrg" base_Element="_ZcDDHagmEe-9tYVtpMatrg">
    <annotations xmi:id="_ZcDqIqgmEe-9tYVtpMatrg" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ZcDqJKgmEe-9tYVtpMatrg" base_Element="_ZcDqI6gmEe-9tYVtpMatrg"/>
  <UMLLabProfile:Annotations xmi:id="_ZcDqJagmEe-9tYVtpMatrg" base_Element="_ZcDqI6gmEe-9tYVtpMatrg">
    <annotations xmi:id="_ZcDqJqgmEe-9tYVtpMatrg" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ZcDqKKgmEe-9tYVtpMatrg" base_Element="_ZcDqJ6gmEe-9tYVtpMatrg"/>
  <UMLLabProfile:Annotations xmi:id="_ZcDqKagmEe-9tYVtpMatrg" base_Element="_ZcDqJ6gmEe-9tYVtpMatrg">
    <annotations xmi:id="_ZcDqKqgmEe-9tYVtpMatrg" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_Zp_YcagmEe-9tYVtpMatrg" base_Element="_Zp_YcKgmEe-9tYVtpMatrg"/>
  <UMLLabProfile:Reference xmi:id="_ZqAmkKgmEe-9tYVtpMatrg" base_Element="_Zp__gKgmEe-9tYVtpMatrg"/>
  <UMLLabProfile:Reference xmi:id="_ZqBNoKgmEe-9tYVtpMatrg" base_Element="_ZqAmkagmEe-9tYVtpMatrg"/>
  <UMLLabProfile:Reference xmi:id="_ZqBNoqgmEe-9tYVtpMatrg" base_Element="_ZqBNoagmEe-9tYVtpMatrg"/>
  <UMLLabProfile:Reference xmi:id="_ZqBNpKgmEe-9tYVtpMatrg" base_Element="_ZqBNo6gmEe-9tYVtpMatrg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ZqDp4agmEe-9tYVtpMatrg" base_Element="_ZqDC1KgmEe-9tYVtpMatrg"/>
  <UMLLabProfile:Annotations xmi:id="_ZqDp4qgmEe-9tYVtpMatrg" base_Element="_ZqDC1KgmEe-9tYVtpMatrg">
    <annotations xmi:id="_ZqDp46gmEe-9tYVtpMatrg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_ZqEQ9qgmEe-9tYVtpMatrg" genericsValue="Edge" base_Element="_ZqEQ9agmEe-9tYVtpMatrg"/>
  <UMLLabProfile:Generics xmi:id="_ZqE4AagmEe-9tYVtpMatrg" genericsValue="Edge" base_Element="_ZqE4AKgmEe-9tYVtpMatrg"/>
  <UMLLabProfile:Generics xmi:id="_ZqGGIagmEe-9tYVtpMatrg" genericsValue="String, Activation" base_Element="_ZqGGIKgmEe-9tYVtpMatrg"/>
  <UMLLabProfile:Reference xmi:id="_ZqIiYagmEe-9tYVtpMatrg" base_Element="_ZqIiYKgmEe-9tYVtpMatrg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ZqMMyagmEe-9tYVtpMatrg" base_Element="_ZqMMxqgmEe-9tYVtpMatrg"/>
  <UMLLabProfile:Annotations xmi:id="_ZqMz0KgmEe-9tYVtpMatrg" base_Element="_ZqMMxqgmEe-9tYVtpMatrg">
    <annotations xmi:id="_ZqMz0agmEe-9tYVtpMatrg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_ZqOpAKgmEe-9tYVtpMatrg" base_Element="_ZqOB9qgmEe-9tYVtpMatrg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ZqP3IagmEe-9tYVtpMatrg" base_Element="_ZqPQEKgmEe-9tYVtpMatrg"/>
  <UMLLabProfile:Annotations xmi:id="_ZqP3IqgmEe-9tYVtpMatrg" base_Element="_ZqPQEKgmEe-9tYVtpMatrg">
    <annotations xmi:id="_ZqP3I6gmEe-9tYVtpMatrg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_ZqRFQagmEe-9tYVtpMatrg" base_Element="_ZqRFQKgmEe-9tYVtpMatrg"/>
  <UMLLabProfile:Reference xmi:id="_ZqRsUagmEe-9tYVtpMatrg" base_Element="_ZqRsUKgmEe-9tYVtpMatrg"/>
  <UMLLabProfile:Reference xmi:id="_ZqSTYKgmEe-9tYVtpMatrg" base_Element="_ZqRsUqgmEe-9tYVtpMatrg"/>
  <UMLLabProfile:Reference xmi:id="_ZqSTYqgmEe-9tYVtpMatrg" base_Element="_ZqSTYagmEe-9tYVtpMatrg"/>
  <UMLLabProfile:Reference xmi:id="_ZqS6cKgmEe-9tYVtpMatrg" base_Element="_ZqSTY6gmEe-9tYVtpMatrg"/>
  <UMLLabProfile:Reference xmi:id="_ZqS6cqgmEe-9tYVtpMatrg" base_Element="_ZqS6cagmEe-9tYVtpMatrg"/>
  <UMLLabProfile:Reference xmi:id="_ZqS6dKgmEe-9tYVtpMatrg" base_Element="_ZqS6c6gmEe-9tYVtpMatrg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ZqUvo6gmEe-9tYVtpMatrg" base_Element="_ZqUvoKgmEe-9tYVtpMatrg"/>
  <UMLLabProfile:Annotations xmi:id="_ZqUvpKgmEe-9tYVtpMatrg" base_Element="_ZqUvoKgmEe-9tYVtpMatrg">
    <annotations xmi:id="_ZqUvpagmEe-9tYVtpMatrg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_ZqWk0KgmEe-9tYVtpMatrg" genericsValue="String, Flow" base_Element="_ZqV9wKgmEe-9tYVtpMatrg"/>
  <UMLLabProfile:Generics xmi:id="_ZqXL4KgmEe-9tYVtpMatrg" genericsValue="Node, Activation" base_Element="_ZqWk0agmEe-9tYVtpMatrg"/>
  <UMLLabProfile:Reference xmi:id="_ZqYaAagmEe-9tYVtpMatrg" base_Element="_ZqYaAKgmEe-9tYVtpMatrg"/>
  <UMLLabProfile:Reference xmi:id="_ZqZBEagmEe-9tYVtpMatrg" base_Element="_ZqZBEKgmEe-9tYVtpMatrg"/>
  <UMLLabProfile:Reference xmi:id="_ZqZoIKgmEe-9tYVtpMatrg" base_Element="_ZqZBEqgmEe-9tYVtpMatrg"/>
  <UMLLabProfile:Reference xmi:id="_ZqaPMKgmEe-9tYVtpMatrg" base_Element="_ZqZoIagmEe-9tYVtpMatrg"/>
  <UMLLabProfile:Reference xmi:id="_ZqaPMqgmEe-9tYVtpMatrg" base_Element="_ZqaPMagmEe-9tYVtpMatrg"/>
  <UMLLabProfile:Reference xmi:id="_Zqa2QKgmEe-9tYVtpMatrg" base_Element="_ZqaPM6gmEe-9tYVtpMatrg"/>
  <UMLLabProfile:Reference xmi:id="_Zqa2QqgmEe-9tYVtpMatrg" base_Element="_Zqa2QagmEe-9tYVtpMatrg"/>
  <UMLLabProfile:Reference xmi:id="_ZqbdUKgmEe-9tYVtpMatrg" base_Element="_Zqa2Q6gmEe-9tYVtpMatrg"/>
  <UMLLabProfile:Reference xmi:id="_ZqcEYqgmEe-9tYVtpMatrg" base_Element="_ZqcEYagmEe-9tYVtpMatrg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ZqcrcKgmEe-9tYVtpMatrg" base_Element="_ZqcEY6gmEe-9tYVtpMatrg"/>
  <UMLLabProfile:Annotations xmi:id="_ZqcrcagmEe-9tYVtpMatrg" base_Element="_ZqcEY6gmEe-9tYVtpMatrg">
    <annotations xmi:id="_ZqcrcqgmEe-9tYVtpMatrg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_ZqdSgKgmEe-9tYVtpMatrg" base_Element="_Zqcrc6gmEe-9tYVtpMatrg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ZqdSg6gmEe-9tYVtpMatrg" base_Element="_ZqdSgagmEe-9tYVtpMatrg"/>
  <UMLLabProfile:Annotations xmi:id="_ZqdShKgmEe-9tYVtpMatrg" base_Element="_ZqdSgagmEe-9tYVtpMatrg">
    <annotations xmi:id="_ZqdShagmEe-9tYVtpMatrg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_Zqd5kKgmEe-9tYVtpMatrg" base_Element="_ZqdShqgmEe-9tYVtpMatrg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Zqd5k6gmEe-9tYVtpMatrg" base_Element="_Zqd5kagmEe-9tYVtpMatrg"/>
  <UMLLabProfile:Annotations xmi:id="_Zqd5lKgmEe-9tYVtpMatrg" base_Element="_Zqd5kagmEe-9tYVtpMatrg">
    <annotations xmi:id="_Zqd5lagmEe-9tYVtpMatrg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_ZqegoKgmEe-9tYVtpMatrg" base_Element="_Zqd5lqgmEe-9tYVtpMatrg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Zqego6gmEe-9tYVtpMatrg" base_Element="_ZqegoagmEe-9tYVtpMatrg"/>
  <UMLLabProfile:Annotations xmi:id="_ZqfHsKgmEe-9tYVtpMatrg" base_Element="_ZqegoagmEe-9tYVtpMatrg">
    <annotations xmi:id="_ZqfHsagmEe-9tYVtpMatrg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_ZqfHs6gmEe-9tYVtpMatrg" base_Element="_ZqfHsqgmEe-9tYVtpMatrg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ZqfHtqgmEe-9tYVtpMatrg" base_Element="_ZqfHtKgmEe-9tYVtpMatrg"/>
  <UMLLabProfile:Annotations xmi:id="_ZqfuwKgmEe-9tYVtpMatrg" base_Element="_ZqfHtKgmEe-9tYVtpMatrg">
    <annotations xmi:id="_ZqfuwagmEe-9tYVtpMatrg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_Zqfuw6gmEe-9tYVtpMatrg" base_Element="_ZqfuwqgmEe-9tYVtpMatrg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ZqgV0agmEe-9tYVtpMatrg" base_Element="_ZqfuxKgmEe-9tYVtpMatrg"/>
  <UMLLabProfile:Annotations xmi:id="_ZqgV0qgmEe-9tYVtpMatrg" base_Element="_ZqfuxKgmEe-9tYVtpMatrg">
    <annotations xmi:id="_ZqgV06gmEe-9tYVtpMatrg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_Zqg84agmEe-9tYVtpMatrg" base_Element="_Zqg84KgmEe-9tYVtpMatrg"/>
  <UMLLabProfile:Reference xmi:id="_Zqhj8KgmEe-9tYVtpMatrg" base_Element="_Zqg84qgmEe-9tYVtpMatrg"/>
  <UMLLabProfile:Reference xmi:id="_Zqhj8qgmEe-9tYVtpMatrg" base_Element="_Zqhj8agmEe-9tYVtpMatrg"/>
  <UMLLabProfile:Reference xmi:id="_Zqhj9KgmEe-9tYVtpMatrg" base_Element="_Zqhj86gmEe-9tYVtpMatrg"/>
  <UMLLabProfile:Reference xmi:id="_ZqiLAKgmEe-9tYVtpMatrg" base_Element="_Zqhj9agmEe-9tYVtpMatrg"/>
  <UMLLabProfile:Reference xmi:id="_ZqiyEagmEe-9tYVtpMatrg" base_Element="_ZqiyEKgmEe-9tYVtpMatrg"/>
  <UMLLabProfile:Reference xmi:id="_ZqjZIagmEe-9tYVtpMatrg" base_Element="_ZqjZIKgmEe-9tYVtpMatrg"/>
  <UMLLabProfile:Reference xmi:id="_ZqkAMKgmEe-9tYVtpMatrg" base_Element="_ZqjZIqgmEe-9tYVtpMatrg"/>
  <UMLLabProfile:Generics xmi:id="_ZqlOUagmEe-9tYVtpMatrg" genericsValue="String" base_Element="_ZqlOUKgmEe-9tYVtpMatrg"/>
  <UMLLabProfile:Reference xmi:id="_Zql1YKgmEe-9tYVtpMatrg" base_Element="_ZqlOUqgmEe-9tYVtpMatrg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ZqoRoKgmEe-9tYVtpMatrg" base_Element="_ZqnqkKgmEe-9tYVtpMatrg"/>
  <UMLLabProfile:Annotations xmi:id="_ZqoRoagmEe-9tYVtpMatrg" base_Element="_ZqnqkKgmEe-9tYVtpMatrg">
    <annotations xmi:id="_ZqoRoqgmEe-9tYVtpMatrg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_ZqpfwKgmEe-9tYVtpMatrg" genericsValue="String, Node" base_Element="_Zqo4sKgmEe-9tYVtpMatrg"/>
  <UMLLabProfile:Reference xmi:id="_ZqrU8KgmEe-9tYVtpMatrg" base_Element="_Zqqt4KgmEe-9tYVtpMatrg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ZqtxM6gmEe-9tYVtpMatrg" base_Element="_ZqtxMKgmEe-9tYVtpMatrg"/>
  <UMLLabProfile:Annotations xmi:id="_ZquYQKgmEe-9tYVtpMatrg" base_Element="_ZqtxMKgmEe-9tYVtpMatrg">
    <annotations xmi:id="_ZquYQagmEe-9tYVtpMatrg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_Zqu_UKgmEe-9tYVtpMatrg" genericsValue="ScheduleTime" base_Element="_ZquYRqgmEe-9tYVtpMatrg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ZqvmbKgmEe-9tYVtpMatrg" base_Element="_ZqvmaagmEe-9tYVtpMatrg"/>
  <UMLLabProfile:Annotations xmi:id="_ZqwNcKgmEe-9tYVtpMatrg" base_Element="_ZqvmaagmEe-9tYVtpMatrg">
    <annotations xmi:id="_ZqwNcagmEe-9tYVtpMatrg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_Zqw0gagmEe-9tYVtpMatrg" base_Element="_Zqw0gKgmEe-9tYVtpMatrg"/>
  <UMLLabProfile:Reference xmi:id="_ZqxbkKgmEe-9tYVtpMatrg" base_Element="_Zqw0gqgmEe-9tYVtpMatrg"/>
  <UMLLabProfile:Generics xmi:id="_Zq2UEagmEe-9tYVtpMatrg" genericsValue="String,InstructionTimeSlot" base_Element="_Zq2UEKgmEe-9tYVtpMatrg"/>
  <UMLLabProfile:Generics xmi:id="_Zq4JQKgmEe-9tYVtpMatrg" genericsValue="T" base_Element="_Zq3iMagmEe-9tYVtpMatrg"/>
  <UMLLabProfile:Reference xmi:id="_Zq4wUKgmEe-9tYVtpMatrg" base_Element="_Zq4JQagmEe-9tYVtpMatrg"/>
  <UMLLabProfile:Generics xmi:id="_Zq5XYKgmEe-9tYVtpMatrg" genericsValue="Integer" base_Element="_Zq4wVqgmEe-9tYVtpMatrg"/>
  <UMLLabProfile:Generics xmi:id="_Zq5-cagmEe-9tYVtpMatrg" genericsValue="Double" base_Element="_Zq5-cKgmEe-9tYVtpMatrg"/>
  <UMLLabProfile:Generics xmi:id="_Zq6lgagmEe-9tYVtpMatrg" genericsValue="Double,ReliabilityRow" base_Element="_Zq6lgKgmEe-9tYVtpMatrg"/>
  <UMLLabProfile:Reference xmi:id="_Zq9o0agmEe-9tYVtpMatrg" base_Element="_Zq9o0KgmEe-9tYVtpMatrg"/>
  <UMLLabProfile:Reference xmi:id="_Zq-P4KgmEe-9tYVtpMatrg" base_Element="_Zq9o0qgmEe-9tYVtpMatrg"/>
  <UMLLabProfile:Generics xmi:id="_ZrFkoagmEe-9tYVtpMatrg" genericsValue="Activation,Row&lt;Activation>" base_Element="_ZrFkoKgmEe-9tYVtpMatrg"/>
  <UMLLabProfile:Generics xmi:id="_ZrGLtagmEe-9tYVtpMatrg" genericsValue="T" base_Element="_ZrGLsagmEe-9tYVtpMatrg"/>
  <UMLLabProfile:Reference xmi:id="_ZrGywqgmEe-9tYVtpMatrg" base_Element="_ZrGywagmEe-9tYVtpMatrg"/>
  <UMLLabProfile:Reference xmi:id="_ZrIA4KgmEe-9tYVtpMatrg" base_Element="_ZrHZ0agmEe-9tYVtpMatrg"/>
  <UMLLabProfile:Reference xmi:id="_ZrIA4qgmEe-9tYVtpMatrg" base_Element="_ZrIA4agmEe-9tYVtpMatrg"/>
  <UMLLabProfile:Reference xmi:id="_ZrMSUagmEe-9tYVtpMatrg" base_Element="_ZrMSUKgmEe-9tYVtpMatrg"/>
  <UMLLabProfile:Reference xmi:id="_ZrM5YagmEe-9tYVtpMatrg" base_Element="_ZrM5YKgmEe-9tYVtpMatrg"/>
  <UMLLabProfile:Reference xmi:id="_ZrM5Y6gmEe-9tYVtpMatrg" base_Element="_ZrM5YqgmEe-9tYVtpMatrg"/>
  <UMLLabProfile:Reference xmi:id="_ZrNgcKgmEe-9tYVtpMatrg" base_Element="_ZrM5ZKgmEe-9tYVtpMatrg"/>
  <UMLLabProfile:Reference xmi:id="_ZrNgcqgmEe-9tYVtpMatrg" base_Element="_ZrNgcagmEe-9tYVtpMatrg"/>
  <UMLLabProfile:Reference xmi:id="_ZrRK0KgmEe-9tYVtpMatrg" base_Element="_ZrQjwKgmEe-9tYVtpMatrg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ZrRK06gmEe-9tYVtpMatrg" base_Element="_ZrRK0agmEe-9tYVtpMatrg"/>
  <UMLLabProfile:Annotations xmi:id="_ZrRx4KgmEe-9tYVtpMatrg" base_Element="_ZrRK0agmEe-9tYVtpMatrg">
    <annotations xmi:id="_ZrRx4agmEe-9tYVtpMatrg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ZrRx5KgmEe-9tYVtpMatrg" base_Element="_ZrRx4qgmEe-9tYVtpMatrg"/>
  <UMLLabProfile:Annotations xmi:id="_ZrRx5agmEe-9tYVtpMatrg" base_Element="_ZrRx4qgmEe-9tYVtpMatrg">
    <annotations xmi:id="_ZrRx5qgmEe-9tYVtpMatrg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_ZrRx6KgmEe-9tYVtpMatrg" base_Element="_ZrRx56gmEe-9tYVtpMatrg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ZrSY8qgmEe-9tYVtpMatrg" base_Element="_ZrSY8KgmEe-9tYVtpMatrg"/>
  <UMLLabProfile:Annotations xmi:id="_ZrSY86gmEe-9tYVtpMatrg" base_Element="_ZrSY8KgmEe-9tYVtpMatrg">
    <annotations xmi:id="_ZrSY9KgmEe-9tYVtpMatrg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_ZrSY9qgmEe-9tYVtpMatrg" base_Element="_ZrSY9agmEe-9tYVtpMatrg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ZrTAAKgmEe-9tYVtpMatrg" base_Element="_ZrSY96gmEe-9tYVtpMatrg"/>
  <UMLLabProfile:Annotations xmi:id="_ZrTAAagmEe-9tYVtpMatrg" base_Element="_ZrSY96gmEe-9tYVtpMatrg">
    <annotations xmi:id="_ZrTAAqgmEe-9tYVtpMatrg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_ZrTABKgmEe-9tYVtpMatrg" base_Element="_ZrTAA6gmEe-9tYVtpMatrg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ZrTAB6gmEe-9tYVtpMatrg" base_Element="_ZrTABagmEe-9tYVtpMatrg"/>
  <UMLLabProfile:Annotations xmi:id="_ZrTACKgmEe-9tYVtpMatrg" base_Element="_ZrTABagmEe-9tYVtpMatrg">
    <annotations xmi:id="_ZrTACagmEe-9tYVtpMatrg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_ZrTnEagmEe-9tYVtpMatrg" base_Element="_ZrTnEKgmEe-9tYVtpMatrg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ZrTnFKgmEe-9tYVtpMatrg" base_Element="_ZrTnEqgmEe-9tYVtpMatrg"/>
  <UMLLabProfile:Annotations xmi:id="_ZrTnFagmEe-9tYVtpMatrg" base_Element="_ZrTnEqgmEe-9tYVtpMatrg">
    <annotations xmi:id="_ZrTnFqgmEe-9tYVtpMatrg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_ZrUOIagmEe-9tYVtpMatrg" base_Element="_ZrUOIKgmEe-9tYVtpMatrg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ZrUOJKgmEe-9tYVtpMatrg" base_Element="_ZrUOIqgmEe-9tYVtpMatrg"/>
  <UMLLabProfile:Annotations xmi:id="_ZrUOJagmEe-9tYVtpMatrg" base_Element="_ZrUOIqgmEe-9tYVtpMatrg">
    <annotations xmi:id="_ZrUOJqgmEe-9tYVtpMatrg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_ZrXRcagmEe-9tYVtpMatrg" base_Element="_ZrXRcKgmEe-9tYVtpMatrg"/>
  <UMLLabProfile:Reference xmi:id="_ZrX4gKgmEe-9tYVtpMatrg" base_Element="_ZrXRcqgmEe-9tYVtpMatrg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ZrZGoqgmEe-9tYVtpMatrg" base_Element="_ZrZGoKgmEe-9tYVtpMatrg"/>
  <UMLLabProfile:Annotations xmi:id="_ZrZGo6gmEe-9tYVtpMatrg" base_Element="_ZrZGoKgmEe-9tYVtpMatrg">
    <annotations xmi:id="_ZrZGpKgmEe-9tYVtpMatrg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ZrZGp6gmEe-9tYVtpMatrg" base_Element="_ZrZGpagmEe-9tYVtpMatrg"/>
  <UMLLabProfile:Annotations xmi:id="_ZrZtsKgmEe-9tYVtpMatrg" base_Element="_ZrZGpagmEe-9tYVtpMatrg">
    <annotations xmi:id="_ZrZtsagmEe-9tYVtpMatrg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_ZrZts6gmEe-9tYVtpMatrg" base_Element="_ZrZtsqgmEe-9tYVtpMatrg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ZrZttqgmEe-9tYVtpMatrg" base_Element="_ZrZttKgmEe-9tYVtpMatrg"/>
  <UMLLabProfile:Annotations xmi:id="_ZraUwKgmEe-9tYVtpMatrg" base_Element="_ZrZttKgmEe-9tYVtpMatrg">
    <annotations xmi:id="_ZraUwagmEe-9tYVtpMatrg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_ZraUw6gmEe-9tYVtpMatrg" base_Element="_ZraUwqgmEe-9tYVtpMatrg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ZraUxqgmEe-9tYVtpMatrg" base_Element="_ZraUxKgmEe-9tYVtpMatrg"/>
  <UMLLabProfile:Annotations xmi:id="_Zra70KgmEe-9tYVtpMatrg" base_Element="_ZraUxKgmEe-9tYVtpMatrg">
    <annotations xmi:id="_Zra70agmEe-9tYVtpMatrg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_Zra706gmEe-9tYVtpMatrg" base_Element="_Zra70qgmEe-9tYVtpMatrg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Zra71qgmEe-9tYVtpMatrg" base_Element="_Zra71KgmEe-9tYVtpMatrg"/>
  <UMLLabProfile:Annotations xmi:id="_Zra716gmEe-9tYVtpMatrg" base_Element="_Zra71KgmEe-9tYVtpMatrg">
    <annotations xmi:id="_Zra72KgmEe-9tYVtpMatrg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_Zrbi4agmEe-9tYVtpMatrg" base_Element="_Zrbi4KgmEe-9tYVtpMatrg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Zrbi5KgmEe-9tYVtpMatrg" base_Element="_Zrbi4qgmEe-9tYVtpMatrg"/>
  <UMLLabProfile:Annotations xmi:id="_Zrbi5agmEe-9tYVtpMatrg" base_Element="_Zrbi4qgmEe-9tYVtpMatrg">
    <annotations xmi:id="_Zrbi5qgmEe-9tYVtpMatrg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ZrcJ8KgmEe-9tYVtpMatrg" base_Element="_Zrbi56gmEe-9tYVtpMatrg"/>
  <UMLLabProfile:Annotations xmi:id="_ZrcJ8agmEe-9tYVtpMatrg" base_Element="_Zrbi56gmEe-9tYVtpMatrg">
    <annotations xmi:id="_ZrcJ8qgmEe-9tYVtpMatrg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ZrcJ9agmEe-9tYVtpMatrg" base_Element="_ZrcJ86gmEe-9tYVtpMatrg"/>
  <UMLLabProfile:Annotations xmi:id="_ZrcJ9qgmEe-9tYVtpMatrg" base_Element="_ZrcJ86gmEe-9tYVtpMatrg">
    <annotations xmi:id="_ZrcJ96gmEe-9tYVtpMatrg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ZrcxAqgmEe-9tYVtpMatrg" base_Element="_ZrcxAKgmEe-9tYVtpMatrg"/>
  <UMLLabProfile:Annotations xmi:id="_ZrcxA6gmEe-9tYVtpMatrg" base_Element="_ZrcxAKgmEe-9tYVtpMatrg">
    <annotations xmi:id="_ZrcxBKgmEe-9tYVtpMatrg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_Zrd_IKgmEe-9tYVtpMatrg" base_Element="_ZrdYEKgmEe-9tYVtpMatrg"/>
  <UMLLabProfile:Reference xmi:id="_Zrd_IqgmEe-9tYVtpMatrg" base_Element="_Zrd_IagmEe-9tYVtpMatrg"/>
  <UMLLabProfile:Reference xmi:id="_Zrf0UKgmEe-9tYVtpMatrg" base_Element="_ZrfNQKgmEe-9tYVtpMatrg"/>
  <UMLLabProfile:Reference xmi:id="_ZrgbYKgmEe-9tYVtpMatrg" base_Element="_Zrf0UagmEe-9tYVtpMatrg"/>
  <UMLLabProfile:Reference xmi:id="_Zrks0agmEe-9tYVtpMatrg" base_Element="_Zrks0KgmEe-9tYVtpMatrg"/>
  <UMLLabProfile:Generics xmi:id="_ZrwTAKgmEe-9tYVtpMatrg" genericsValue="T, E" base_Element="_Zrvr8KgmEe-9tYVtpMatrg"/>
  <UMLLabProfile:Reference xmi:id="_Zrw6EqgmEe-9tYVtpMatrg" base_Element="_Zrw6EagmEe-9tYVtpMatrg"/>
  <UMLLabProfile:Generics xmi:id="_ZrxhIKgmEe-9tYVtpMatrg" genericsValue="Activation" base_Element="_Zrw6E6gmEe-9tYVtpMatrg"/>
  <UMLLabProfile:Generics xmi:id="_ZryIMqgmEe-9tYVtpMatrg" genericsValue="Edge" base_Element="_ZryIMagmEe-9tYVtpMatrg"/>
  <UMLLabProfile:Generics xmi:id="_ZryvQqgmEe-9tYVtpMatrg" genericsValue="String" base_Element="_ZryvQagmEe-9tYVtpMatrg"/>
  <UMLLabProfile:Generics xmi:id="_ZrzWUqgmEe-9tYVtpMatrg" genericsValue="String" base_Element="_ZrzWUagmEe-9tYVtpMatrg"/>
  <UMLLabProfile:Generics xmi:id="_Zrz9YqgmEe-9tYVtpMatrg" genericsValue="ScheduleTime" base_Element="_Zrz9YagmEe-9tYVtpMatrg"/>
  <UMLLabProfile:Generics xmi:id="_Zr1LgagmEe-9tYVtpMatrg" genericsValue="String" base_Element="_Zr1LgKgmEe-9tYVtpMatrg"/>
  <UMLLabProfile:Generics xmi:id="_Zr3AsKgmEe-9tYVtpMatrg" genericsValue="Edge" base_Element="_Zr2ZoqgmEe-9tYVtpMatrg"/>
  <UMLLabProfile:Generics xmi:id="_Zr3AsagmEe-9tYVtpMatrg" genericsValue="String" base_Element="_Zr2Zo6gmEe-9tYVtpMatrg"/>
  <UMLLabProfile:Generics xmi:id="_Zr3nwqgmEe-9tYVtpMatrg" genericsValue="String" base_Element="_Zr3nwagmEe-9tYVtpMatrg"/>
  <UMLLabProfile:Generics xmi:id="_Zr4O0agmEe-9tYVtpMatrg" genericsValue="String" base_Element="_Zr3nxKgmEe-9tYVtpMatrg"/>
  <UMLLabProfile:Generics xmi:id="_Zr414agmEe-9tYVtpMatrg" genericsValue="Activation" base_Element="_Zr414KgmEe-9tYVtpMatrg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Zr5c86gmEe-9tYVtpMatrg" base_Element="_Zr5c8KgmEe-9tYVtpMatrg"/>
  <UMLLabProfile:Generics xmi:id="_Zr6EAKgmEe-9tYVtpMatrg" genericsValue="Node" base_Element="_Zr5c8agmEe-9tYVtpMatrg"/>
  <UMLLabProfile:Annotations xmi:id="_Zr75MKgmEe-9tYVtpMatrg" base_Element="_Zr5c8KgmEe-9tYVtpMatrg">
    <annotations xmi:id="_Zr75MagmEe-9tYVtpMatrg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_Zr8gQagmEe-9tYVtpMatrg" genericsValue="T" base_Element="_Zr8gQKgmEe-9tYVtpMatrg"/>
  <UMLLabProfile:Reference xmi:id="_Zr9HUagmEe-9tYVtpMatrg" base_Element="_Zr9HUKgmEe-9tYVtpMatrg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Zr9uZKgmEe-9tYVtpMatrg" base_Element="_Zr9uYKgmEe-9tYVtpMatrg"/>
  <UMLLabProfile:Annotations xmi:id="_Zr9uZagmEe-9tYVtpMatrg" base_Element="_Zr9uYKgmEe-9tYVtpMatrg">
    <annotations xmi:id="_Zr9uZqgmEe-9tYVtpMatrg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_Zr-VcagmEe-9tYVtpMatrg" genericsValue="String" base_Element="_Zr-VcKgmEe-9tYVtpMatrg"/>
  <UMLLabProfile:Generics xmi:id="_Zr-8gagmEe-9tYVtpMatrg" genericsValue="Edge" base_Element="_Zr-8gKgmEe-9tYVtpMatrg"/>
  <UMLLabProfile:Generics xmi:id="_ZsAKoKgmEe-9tYVtpMatrg" genericsValue="Flow" base_Element="_Zr_jkKgmEe-9tYVtpMatrg"/>
  <UMLLabProfile:Generics xmi:id="_ZsBYw6gmEe-9tYVtpMatrg" genericsValue="Node" base_Element="_ZsBYwqgmEe-9tYVtpMatrg"/>
  <UMLLabProfile:Generics xmi:id="_ZsB_0KgmEe-9tYVtpMatrg" genericsValue="Integer" base_Element="_ZsBYxagmEe-9tYVtpMatrg"/>
  <UMLLabProfile:Reference xmi:id="_ZsEcEagmEe-9tYVtpMatrg" base_Element="_ZsEcEKgmEe-9tYVtpMatrg"/>
  <UMLLabProfile:Generics xmi:id="_ZsGRQKgmEe-9tYVtpMatrg" genericsValue="T" base_Element="_ZsFqMKgmEe-9tYVtpMatrg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ZsGRRagmEe-9tYVtpMatrg" base_Element="_ZsGRQagmEe-9tYVtpMatrg"/>
  <UMLLabProfile:Annotations xmi:id="_ZsG4UKgmEe-9tYVtpMatrg" base_Element="_ZsGRQagmEe-9tYVtpMatrg">
    <annotations xmi:id="_ZsG4UagmEe-9tYVtpMatrg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_ZsG4U6gmEe-9tYVtpMatrg" genericsValue="T" base_Element="_ZsG4UqgmEe-9tYVtpMatrg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ZsHfY6gmEe-9tYVtpMatrg" base_Element="_ZsG4VKgmEe-9tYVtpMatrg"/>
  <UMLLabProfile:Annotations xmi:id="_ZsHfZKgmEe-9tYVtpMatrg" base_Element="_ZsG4VKgmEe-9tYVtpMatrg">
    <annotations xmi:id="_ZsHfZagmEe-9tYVtpMatrg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_ZsIGcKgmEe-9tYVtpMatrg" genericsValue="Node" base_Element="_ZsHfZqgmEe-9tYVtpMatrg"/>
  <UMLLabProfile:Generics xmi:id="_ZsItgagmEe-9tYVtpMatrg" genericsValue="T" base_Element="_ZsItgKgmEe-9tYVtpMatrg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ZsJUlKgmEe-9tYVtpMatrg" base_Element="_ZsJUkKgmEe-9tYVtpMatrg"/>
  <UMLLabProfile:Annotations xmi:id="_ZsJ7oKgmEe-9tYVtpMatrg" base_Element="_ZsJUkKgmEe-9tYVtpMatrg">
    <annotations xmi:id="_ZsJ7oagmEe-9tYVtpMatrg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_ZsKitKgmEe-9tYVtpMatrg" genericsValue="Node" base_Element="_ZsKisqgmEe-9tYVtpMatrg"/>
  <UMLLabProfile:Array xmi:id="_ZsLJxKgmEe-9tYVtpMatrg" base_Element="_ZsLJwKgmEe-9tYVtpMatrg"/>
  <UMLLabProfile:Generics xmi:id="_ZsLJxagmEe-9tYVtpMatrg" genericsValue="Node" base_Element="_ZsLJwagmEe-9tYVtpMatrg"/>
  <UMLLabProfile:Reference xmi:id="_ZsMX4agmEe-9tYVtpMatrg" base_Element="_ZsMX4KgmEe-9tYVtpMatrg"/>
  <UMLLabProfile:Generics xmi:id="_ZsNmAKgmEe-9tYVtpMatrg" genericsValue="T" base_Element="_ZsM-86gmEe-9tYVtpMatrg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ZsNmBagmEe-9tYVtpMatrg" base_Element="_ZsNmAagmEe-9tYVtpMatrg"/>
  <UMLLabProfile:Annotations xmi:id="_ZsONEKgmEe-9tYVtpMatrg" base_Element="_ZsNmAagmEe-9tYVtpMatrg">
    <annotations xmi:id="_ZsONEagmEe-9tYVtpMatrg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_ZsO0IagmEe-9tYVtpMatrg" base_Element="_ZsO0IKgmEe-9tYVtpMatrg"/>
  <UMLLabProfile:Reference xmi:id="_ZsQpUagmEe-9tYVtpMatrg" base_Element="_ZsQpUKgmEe-9tYVtpMatrg"/>
  <UMLLabProfile:Generics xmi:id="_ZsSegKgmEe-9tYVtpMatrg" genericsValue="T" base_Element="_ZsR3cKgmEe-9tYVtpMatrg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ZsTFlKgmEe-9tYVtpMatrg" base_Element="_ZsTFkKgmEe-9tYVtpMatrg"/>
  <UMLLabProfile:Annotations xmi:id="_ZsTFlagmEe-9tYVtpMatrg" base_Element="_ZsTFkKgmEe-9tYVtpMatrg">
    <annotations xmi:id="_ZsTFlqgmEe-9tYVtpMatrg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_ZsUTsqgmEe-9tYVtpMatrg" genericsValue="Integer" base_Element="_ZsUTsKgmEe-9tYVtpMatrg"/>
  <UMLLabProfile:Generics xmi:id="_ZsU6wKgmEe-9tYVtpMatrg" genericsValue="Node" base_Element="_ZsUTsagmEe-9tYVtpMatrg"/>
  <UMLLabProfile:Generics xmi:id="_ZsU6w6gmEe-9tYVtpMatrg" genericsValue="Integer" base_Element="_ZsU6wagmEe-9tYVtpMatrg"/>
  <UMLLabProfile:Generics xmi:id="_ZsVh0KgmEe-9tYVtpMatrg" genericsValue="Node" base_Element="_ZsU6wqgmEe-9tYVtpMatrg"/>
  <UMLLabProfile:Generics xmi:id="_ZsXXBagmEe-9tYVtpMatrg" genericsValue="T" base_Element="_ZsXXBKgmEe-9tYVtpMatrg"/>
  <UMLLabProfile:Generics xmi:id="_ZsZzQKgmEe-9tYVtpMatrg" genericsValue="T" base_Element="_ZsZMMagmEe-9tYVtpMatrg"/>
  <UMLLabProfile:Generics xmi:id="_ZsaaUKgmEe-9tYVtpMatrg" genericsValue="T" base_Element="_ZsZzQqgmEe-9tYVtpMatrg"/>
  <UMLLabProfile:Generics xmi:id="_ZsaaUagmEe-9tYVtpMatrg" genericsValue="T" base_Element="_ZsZzQ6gmEe-9tYVtpMatrg"/>
  <UMLLabProfile:Generics xmi:id="_ZsbocqgmEe-9tYVtpMatrg" genericsValue="E" base_Element="_ZsbocagmEe-9tYVtpMatrg"/>
  <UMLLabProfile:Reference xmi:id="_ZscPgagmEe-9tYVtpMatrg" base_Element="_ZscPgKgmEe-9tYVtpMatrg"/>
  <UMLLabProfile:Reference xmi:id="_Zsc2lKgmEe-9tYVtpMatrg" base_Element="_Zsc2k6gmEe-9tYVtpMatrg"/>
  <UMLLabProfile:TypeParameterDeclaration xmi:id="_ZsddqagmEe-9tYVtpMatrg" typeParameterDeclarationValue="T extends VisualizationObject" base_Operation="_Zsddp6gmEe-9tYVtpMatrg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ZseEsKgmEe-9tYVtpMatrg" base_Element="_Zsddp6gmEe-9tYVtpMatrg"/>
  <UMLLabProfile:Reference xmi:id="_Zsgg8agmEe-9tYVtpMatrg" base_Element="_Zsgg8KgmEe-9tYVtpMatrg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ZsjkQagmEe-9tYVtpMatrg" base_Element="_Zsi9MKgmEe-9tYVtpMatrg"/>
  <UMLLabProfile:Generics xmi:id="_ZskLUKgmEe-9tYVtpMatrg" genericsValue="Node" base_Element="_Zsi9MagmEe-9tYVtpMatrg"/>
  <UMLLabProfile:Annotations xmi:id="_ZskLUagmEe-9tYVtpMatrg" base_Element="_Zsi9MKgmEe-9tYVtpMatrg">
    <annotations xmi:id="_ZskLUqgmEe-9tYVtpMatrg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_ZsqR8agmEe-9tYVtpMatrg" base_Element="_ZsqR8KgmEe-9tYVtpMatrg"/>
  <UMLLabProfile:Generics xmi:id="_Zs3GQKgmEe-9tYVtpMatrg" genericsValue="String" base_Element="_Zs2fMagmEe-9tYVtpMatrg"/>
  <UMLLabProfile:Generics xmi:id="_Zs3GQqgmEe-9tYVtpMatrg" genericsValue="Edge" base_Element="_Zs3GQagmEe-9tYVtpMatrg"/>
  <UMLLabProfile:Generics xmi:id="_Zs47cKgmEe-9tYVtpMatrg" genericsValue="ScheduleTime" base_Element="_Zs4UYKgmEe-9tYVtpMatrg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Zs_CEqgmEe-9tYVtpMatrg" base_Element="_Zs_CEagmEe-9tYVtpMatrg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Zs_pIagmEe-9tYVtpMatrg" base_Element="_Zs_pIKgmEe-9tYVtpMatrg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Zs_pI6gmEe-9tYVtpMatrg" base_Element="_Zs_pIqgmEe-9tYVtpMatrg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ZtA3QagmEe-9tYVtpMatrg" base_Element="_ZtA3QKgmEe-9tYVtpMatrg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ZtA3Q6gmEe-9tYVtpMatrg" base_Element="_ZtA3QqgmEe-9tYVtpMatrg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ZtBeUqgmEe-9tYVtpMatrg" base_Element="_ZtBeUagmEe-9tYVtpMatrg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ZtBeVKgmEe-9tYVtpMatrg" base_Element="_ZtBeU6gmEe-9tYVtpMatrg"/>
  <UMLLabProfile:Generics xmi:id="_ZtCFYKgmEe-9tYVtpMatrg" genericsValue="ChannelSet" base_Element="_ZtBeVagmEe-9tYVtpMatrg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ZtCFYagmEe-9tYVtpMatrg" base_Element="_ZtBeVagmEe-9tYVtpMatrg"/>
  <UMLLabProfile:Generics xmi:id="_ZtDTgKgmEe-9tYVtpMatrg" genericsValue="Edge" base_Element="_ZtCscqgmEe-9tYVtpMatrg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ZtDTgagmEe-9tYVtpMatrg" base_Element="_ZtCscqgmEe-9tYVtpMatrg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ZtDTg6gmEe-9tYVtpMatrg" base_Element="_ZtDTgqgmEe-9tYVtpMatrg"/>
  <UMLLabProfile:Generics xmi:id="_ZtD6kKgmEe-9tYVtpMatrg" genericsValue="String" base_Element="_ZtDThKgmEe-9tYVtpMatrg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ZtEhoKgmEe-9tYVtpMatrg" base_Element="_ZtDThKgmEe-9tYVtpMatrg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ZtFvwKgmEe-9tYVtpMatrg" base_Element="_ZtEhoagmEe-9tYVtpMatrg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ZtGW0agmEe-9tYVtpMatrg" base_Element="_ZtGW0KgmEe-9tYVtpMatrg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ZtHk8agmEe-9tYVtpMatrg" base_Element="_ZtHk8KgmEe-9tYVtpMatrg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ZtIMAagmEe-9tYVtpMatrg" base_Element="_ZtIMAKgmEe-9tYVtpMatrg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ZtIMA6gmEe-9tYVtpMatrg" base_Element="_ZtIMAqgmEe-9tYVtpMatrg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ZtIMBagmEe-9tYVtpMatrg" base_Element="_ZtIMBKgmEe-9tYVtpMatrg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ZtKBMagmEe-9tYVtpMatrg" base_Element="_ZtKBMKgmEe-9tYVtpMatrg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ZtKoSagmEe-9tYVtpMatrg" base_Element="_ZtKoR6gmEe-9tYVtpMatrg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ZtKoS6gmEe-9tYVtpMatrg" base_Element="_ZtKoSqgmEe-9tYVtpMatrg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ZtLPUKgmEe-9tYVtpMatrg" base_Element="_ZtKoTKgmEe-9tYVtpMatrg"/>
  <UMLLabProfile:Generics xmi:id="_ZtLPUqgmEe-9tYVtpMatrg" genericsValue="Node" base_Element="_ZtLPUagmEe-9tYVtpMatrg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ZtLPU6gmEe-9tYVtpMatrg" base_Element="_ZtLPUagmEe-9tYVtpMatrg"/>
  <UMLLabProfile:Generics xmi:id="_ZtL2YKgmEe-9tYVtpMatrg" genericsValue="Integer" base_Element="_ZtLPVKgmEe-9tYVtpMatrg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ZtL2YagmEe-9tYVtpMatrg" base_Element="_ZtLPVKgmEe-9tYVtpMatrg"/>
  <UMLLabProfile:Generics xmi:id="_ZtL2Y6gmEe-9tYVtpMatrg" genericsValue="Edge" base_Element="_ZtL2YqgmEe-9tYVtpMatrg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ZtL2ZKgmEe-9tYVtpMatrg" base_Element="_ZtL2YqgmEe-9tYVtpMatrg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ZtMdcKgmEe-9tYVtpMatrg" base_Element="_ZtL2ZagmEe-9tYVtpMatrg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ZtMdcqgmEe-9tYVtpMatrg" base_Element="_ZtMdcagmEe-9tYVtpMatrg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ZtNEiKgmEe-9tYVtpMatrg" base_Element="_ZtNEh6gmEe-9tYVtpMatrg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ZtNrkKgmEe-9tYVtpMatrg" base_Element="_ZtNEiagmEe-9tYVtpMatrg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ZtNrkqgmEe-9tYVtpMatrg" base_Element="_ZtNrkagmEe-9tYVtpMatrg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ZtNrlKgmEe-9tYVtpMatrg" base_Element="_ZtNrk6gmEe-9tYVtpMatrg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ZtNrlqgmEe-9tYVtpMatrg" base_Element="_ZtNrlagmEe-9tYVtpMatrg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ZtOSoKgmEe-9tYVtpMatrg" base_Element="_ZtNrl6gmEe-9tYVtpMatrg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ZtOSoqgmEe-9tYVtpMatrg" base_Element="_ZtOSoagmEe-9tYVtpMatrg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ZtO5sKgmEe-9tYVtpMatrg" base_Element="_ZtOSo6gmEe-9tYVtpMatrg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ZtO5sqgmEe-9tYVtpMatrg" base_Element="_ZtO5sagmEe-9tYVtpMatrg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ZtO5tqgmEe-9tYVtpMatrg" base_Element="_ZtO5tagmEe-9tYVtpMatrg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ZtPgwagmEe-9tYVtpMatrg" base_Element="_ZtPgwKgmEe-9tYVtpMatrg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ZtPgxKgmEe-9tYVtpMatrg" base_Element="_ZtPgwqgmEe-9tYVtpMatrg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ZtQH0qgmEe-9tYVtpMatrg" base_Element="_ZtQH0KgmEe-9tYVtpMatrg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ZtQH1KgmEe-9tYVtpMatrg" base_Element="_ZtQH06gmEe-9tYVtpMatrg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ZtQu4agmEe-9tYVtpMatrg" base_Element="_ZtQu4KgmEe-9tYVtpMatrg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ZtQu46gmEe-9tYVtpMatrg" base_Element="_ZtQu4qgmEe-9tYVtpMatrg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ZtQu5agmEe-9tYVtpMatrg" base_Element="_ZtQu5KgmEe-9tYVtpMatrg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ZtQu56gmEe-9tYVtpMatrg" base_Element="_ZtQu5qgmEe-9tYVtpMatrg"/>
  <UMLLabProfile:Generics xmi:id="_ZtRV8agmEe-9tYVtpMatrg" genericsValue="String, Integer" base_Element="_ZtRV8KgmEe-9tYVtpMatrg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ZtRV8qgmEe-9tYVtpMatrg" base_Element="_ZtRV8KgmEe-9tYVtpMatrg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ZtR9A6gmEe-9tYVtpMatrg" base_Element="_ZtR9AqgmEe-9tYVtpMatrg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ZtR9BagmEe-9tYVtpMatrg" base_Element="_ZtR9BKgmEe-9tYVtpMatrg"/>
  <UMLLabProfile:Generics xmi:id="_ZtSkE6gmEe-9tYVtpMatrg" genericsValue="Edge" base_Element="_ZtSkEqgmEe-9tYVtpMatrg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ZtTyMagmEe-9tYVtpMatrg" base_Element="_ZtTyMKgmEe-9tYVtpMatrg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ZtTyM6gmEe-9tYVtpMatrg" base_Element="_ZtTyMqgmEe-9tYVtpMatrg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ZtUZQKgmEe-9tYVtpMatrg" base_Element="_ZtTyNKgmEe-9tYVtpMatrg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ZtVAUqgmEe-9tYVtpMatrg" base_Element="_ZtUZQagmEe-9tYVtpMatrg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ZtVAVKgmEe-9tYVtpMatrg" base_Element="_ZtVAU6gmEe-9tYVtpMatrg"/>
  <UMLLabProfile:Generics xmi:id="_ZtVnYKgmEe-9tYVtpMatrg" genericsValue="Activation" base_Element="_ZtVAVagmEe-9tYVtpMatrg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ZtVnYagmEe-9tYVtpMatrg" base_Element="_ZtVAVagmEe-9tYVtpMatrg"/>
  <UMLLabProfile:Generics xmi:id="_ZtVnY6gmEe-9tYVtpMatrg" genericsValue="String, Integer" base_Element="_ZtVnYqgmEe-9tYVtpMatrg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ZtVnZKgmEe-9tYVtpMatrg" base_Element="_ZtVnYqgmEe-9tYVtpMatrg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ZtWOcagmEe-9tYVtpMatrg" base_Element="_ZtWOcKgmEe-9tYVtpMatrg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ZtXckqgmEe-9tYVtpMatrg" base_Element="_ZtXckagmEe-9tYVtpMatrg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ZtXclKgmEe-9tYVtpMatrg" base_Element="_ZtXck6gmEe-9tYVtpMatrg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ZtXclqgmEe-9tYVtpMatrg" base_Element="_ZtXclagmEe-9tYVtpMatrg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ZtXcmKgmEe-9tYVtpMatrg" base_Element="_ZtXcl6gmEe-9tYVtpMatrg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ZtYDoagmEe-9tYVtpMatrg" base_Element="_ZtYDoKgmEe-9tYVtpMatrg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ZtYDo6gmEe-9tYVtpMatrg" base_Element="_ZtYDoqgmEe-9tYVtpMatrg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ZtYDpagmEe-9tYVtpMatrg" base_Element="_ZtYDpKgmEe-9tYVtpMatrg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ZtYDp6gmEe-9tYVtpMatrg" base_Element="_ZtYDpqgmEe-9tYVtpMatrg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ZtYqsKgmEe-9tYVtpMatrg" base_Element="_ZtYDqKgmEe-9tYVtpMatrg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ZtYqsqgmEe-9tYVtpMatrg" base_Element="_ZtYqsagmEe-9tYVtpMatrg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ZtYqtKgmEe-9tYVtpMatrg" base_Element="_ZtYqs6gmEe-9tYVtpMatrg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ZtZRwKgmEe-9tYVtpMatrg" base_Element="_ZtYqtagmEe-9tYVtpMatrg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ZtZ40KgmEe-9tYVtpMatrg" base_Element="_ZtZRwagmEe-9tYVtpMatrg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ZtbuAKgmEe-9tYVtpMatrg" base_Element="_ZtbG86gmEe-9tYVtpMatrg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ZtbuAqgmEe-9tYVtpMatrg" base_Element="_ZtbuAagmEe-9tYVtpMatrg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ZtcVEKgmEe-9tYVtpMatrg" base_Element="_ZtbuA6gmEe-9tYVtpMatrg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ZtcVFagmEe-9tYVtpMatrg" base_Element="_ZtcVE6gmEe-9tYVtpMatrg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Ztc8IqgmEe-9tYVtpMatrg" base_Element="_Ztc8IKgmEe-9tYVtpMatrg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Ztc8JagmEe-9tYVtpMatrg" base_Element="_Ztc8I6gmEe-9tYVtpMatrg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Ztc8J6gmEe-9tYVtpMatrg" base_Element="_Ztc8JqgmEe-9tYVtpMatrg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ZtdjOKgmEe-9tYVtpMatrg" base_Element="_ZtdjN6gmEe-9tYVtpMatrg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ZteKQagmEe-9tYVtpMatrg" base_Element="_ZteKQKgmEe-9tYVtpMatrg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ZteKRagmEe-9tYVtpMatrg" base_Element="_ZteKRKgmEe-9tYVtpMatrg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ZtexUKgmEe-9tYVtpMatrg" base_Element="_ZteKRqgmEe-9tYVtpMatrg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ZtfYZqgmEe-9tYVtpMatrg" base_Element="_ZtfYZagmEe-9tYVtpMatrg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Ztf_cagmEe-9tYVtpMatrg" base_Element="_Ztf_cKgmEe-9tYVtpMatrg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ZtgmgKgmEe-9tYVtpMatrg" base_Element="_Ztf_cqgmEe-9tYVtpMatrg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ZtgmgqgmEe-9tYVtpMatrg" base_Element="_ZtgmgagmEe-9tYVtpMatrg"/>
  <UMLLabProfile:Generics xmi:id="_ZthNkagmEe-9tYVtpMatrg" genericsValue="Integer" base_Element="_ZthNkKgmEe-9tYVtpMatrg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ZthNkqgmEe-9tYVtpMatrg" base_Element="_ZthNkKgmEe-9tYVtpMatrg"/>
  <UMLLabProfile:Generics xmi:id="_Zth0oKgmEe-9tYVtpMatrg" genericsValue="SchedulableObject" base_Element="_ZthNk6gmEe-9tYVtpMatrg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ZtibtagmEe-9tYVtpMatrg" base_Element="_ZtibtKgmEe-9tYVtpMatrg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ZtjCwKgmEe-9tYVtpMatrg" base_Element="_ZtibtqgmEe-9tYVtpMatrg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ZtjCw6gmEe-9tYVtpMatrg" base_Element="_ZtjCwagmEe-9tYVtpMatrg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ZtjCxagmEe-9tYVtpMatrg" base_Element="_ZtjCxKgmEe-9tYVtpMatrg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ZtjCx6gmEe-9tYVtpMatrg" base_Element="_ZtjCxqgmEe-9tYVtpMatrg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ZtjCyagmEe-9tYVtpMatrg" base_Element="_ZtjCyKgmEe-9tYVtpMatrg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Ztjp0agmEe-9tYVtpMatrg" base_Element="_Ztjp0KgmEe-9tYVtpMatrg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Ztjp06gmEe-9tYVtpMatrg" base_Element="_Ztjp0qgmEe-9tYVtpMatrg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ZtlfAKgmEe-9tYVtpMatrg" base_Element="_Ztk39KgmEe-9tYVtpMatrg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ZtlfAqgmEe-9tYVtpMatrg" base_Element="_ZtlfAagmEe-9tYVtpMatrg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ZtlfBKgmEe-9tYVtpMatrg" base_Element="_ZtlfA6gmEe-9tYVtpMatrg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ZtlfBqgmEe-9tYVtpMatrg" base_Element="_ZtlfBagmEe-9tYVtpMatrg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ZtlfCKgmEe-9tYVtpMatrg" base_Element="_ZtlfB6gmEe-9tYVtpMatrg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ZtmGEagmEe-9tYVtpMatrg" base_Element="_ZtmGEKgmEe-9tYVtpMatrg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ZtmGFKgmEe-9tYVtpMatrg" base_Element="_ZtmGEqgmEe-9tYVtpMatrg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ZtmGF6gmEe-9tYVtpMatrg" base_Element="_ZtmGFagmEe-9tYVtpMatrg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ZtmGGqgmEe-9tYVtpMatrg" base_Element="_ZtmGGKgmEe-9tYVtpMatrg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ZtmtIagmEe-9tYVtpMatrg" base_Element="_ZtmtIKgmEe-9tYVtpMatrg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ZtmtI6gmEe-9tYVtpMatrg" base_Element="_ZtmtIqgmEe-9tYVtpMatrg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ZtmtJagmEe-9tYVtpMatrg" base_Element="_ZtmtJKgmEe-9tYVtpMatrg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ZtnUMagmEe-9tYVtpMatrg" base_Element="_ZtnUMKgmEe-9tYVtpMatrg"/>
  <UMLLabProfile:Array xmi:id="_ZtnUNqgmEe-9tYVtpMatrg" dimensions="2" base_Element="_ZtnUNKgmEe-9tYVtpMatrg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ZtnUN6gmEe-9tYVtpMatrg" base_Element="_ZtnUNKgmEe-9tYVtpMatrg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ZtoiUKgmEe-9tYVtpMatrg" base_Element="_Ztn7TKgmEe-9tYVtpMatrg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ZtoiUqgmEe-9tYVtpMatrg" base_Element="_ZtoiUagmEe-9tYVtpMatrg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ZtoiVKgmEe-9tYVtpMatrg" base_Element="_ZtoiU6gmEe-9tYVtpMatrg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ZtoiVqgmEe-9tYVtpMatrg" base_Element="_ZtoiVagmEe-9tYVtpMatrg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ZtoiWKgmEe-9tYVtpMatrg" base_Element="_ZtoiV6gmEe-9tYVtpMatrg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ZtpJYKgmEe-9tYVtpMatrg" base_Element="_ZtoiWagmEe-9tYVtpMatrg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ZtpJYqgmEe-9tYVtpMatrg" base_Element="_ZtpJYagmEe-9tYVtpMatrg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ZtpJZKgmEe-9tYVtpMatrg" base_Element="_ZtpJY6gmEe-9tYVtpMatrg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ZtpJZqgmEe-9tYVtpMatrg" base_Element="_ZtpJZagmEe-9tYVtpMatrg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ZtpJaKgmEe-9tYVtpMatrg" base_Element="_ZtpJZ6gmEe-9tYVtpMatrg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ZtpwcKgmEe-9tYVtpMatrg" base_Element="_ZtpJaagmEe-9tYVtpMatrg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ZtpwcqgmEe-9tYVtpMatrg" base_Element="_ZtpwcagmEe-9tYVtpMatrg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ZtpwdKgmEe-9tYVtpMatrg" base_Element="_Ztpwc6gmEe-9tYVtpMatrg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ZtsMsKgmEe-9tYVtpMatrg" base_Element="_ZtrloKgmEe-9tYVtpMatrg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ZtszwKgmEe-9tYVtpMatrg" base_Element="_ZtsMsagmEe-9tYVtpMatrg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ZtszwqgmEe-9tYVtpMatrg" base_Element="_ZtszwagmEe-9tYVtpMatrg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Ztta0KgmEe-9tYVtpMatrg" base_Element="_Ztszw6gmEe-9tYVtpMatrg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Ztta0qgmEe-9tYVtpMatrg" base_Element="_Ztta0agmEe-9tYVtpMatrg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Ztv3E6gmEe-9tYVtpMatrg" base_Element="_Ztv3EagmEe-9tYVtpMatrg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ZtweIKgmEe-9tYVtpMatrg" base_Element="_Ztv3FqgmEe-9tYVtpMatrg"/>
  <UMLLabProfile:Generics xmi:id="_ZtweIqgmEe-9tYVtpMatrg" genericsValue="InstructionParameters" base_Element="_ZtweIagmEe-9tYVtpMatrg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ZtweI6gmEe-9tYVtpMatrg" base_Element="_ZtweIagmEe-9tYVtpMatrg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ZtxFMagmEe-9tYVtpMatrg" base_Element="_ZtxFMKgmEe-9tYVtpMatrg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ZtxsQagmEe-9tYVtpMatrg" base_Element="_ZtxsQKgmEe-9tYVtpMatrg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ZtxsQ6gmEe-9tYVtpMatrg" base_Element="_ZtxsQqgmEe-9tYVtpMatrg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ZtxsRagmEe-9tYVtpMatrg" base_Element="_ZtxsRKgmEe-9tYVtpMatrg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ZtyTUKgmEe-9tYVtpMatrg" base_Element="_ZtxsRqgmEe-9tYVtpMatrg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ZtyTUqgmEe-9tYVtpMatrg" base_Element="_ZtyTUagmEe-9tYVtpMatrg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ZtyTVKgmEe-9tYVtpMatrg" base_Element="_ZtyTU6gmEe-9tYVtpMatrg">
    <associatedElement xmi:type="uml:Operation" xmi:id="_ZtyTVagmEe-9tYVtpMatrg" name="getNumChannels" method="_ZudBtqgmEe-9tYVtpMatrg">
      <ownedParameter xmi:id="_ZtyTVqgmEe-9tYVtpMatrg" direction="return">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
      </ownedParameter>
    </associatedElement>
  </UMLLabProfile:LegacyStyledElement>
  <UMLLabProfile:Annotations xmi:id="_Zty6YKgmEe-9tYVtpMatrg" base_Element="_ZtyTVagmEe-9tYVtpMatrg">
    <annotations xmi:id="_Zty6YagmEe-9tYVtpMatrg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Zty6ZKgmEe-9tYVtpMatrg" base_Element="_Zty6YqgmEe-9tYVtpMatrg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Zty6Z6gmEe-9tYVtpMatrg" base_Element="_Zty6ZagmEe-9tYVtpMatrg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ZtzhdagmEe-9tYVtpMatrg" base_Element="_ZtzhdKgmEe-9tYVtpMatrg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Ztzhd6gmEe-9tYVtpMatrg" base_Element="_ZtzhdqgmEe-9tYVtpMatrg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Zt0IgagmEe-9tYVtpMatrg" base_Element="_Zt0IgKgmEe-9tYVtpMatrg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Zt0IhKgmEe-9tYVtpMatrg" base_Element="_Zt0Ig6gmEe-9tYVtpMatrg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Zt0vkKgmEe-9tYVtpMatrg" base_Element="_Zt0IhagmEe-9tYVtpMatrg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Zt0vkqgmEe-9tYVtpMatrg" base_Element="_Zt0vkagmEe-9tYVtpMatrg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Zt0vlKgmEe-9tYVtpMatrg" base_Element="_Zt0vk6gmEe-9tYVtpMatrg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Zt1WoKgmEe-9tYVtpMatrg" base_Element="_Zt0vlagmEe-9tYVtpMatrg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Zt1WoqgmEe-9tYVtpMatrg" base_Element="_Zt1WoagmEe-9tYVtpMatrg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Zt2kwKgmEe-9tYVtpMatrg" base_Element="_Zt19uagmEe-9tYVtpMatrg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Zt2kxagmEe-9tYVtpMatrg" base_Element="_Zt2kw6gmEe-9tYVtpMatrg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Zt3L0agmEe-9tYVtpMatrg" base_Element="_Zt3L0KgmEe-9tYVtpMatrg"/>
  <UMLLabProfile:Generics xmi:id="_Zt3L06gmEe-9tYVtpMatrg" genericsValue="String" base_Element="_Zt3L0qgmEe-9tYVtpMatrg"/>
  <UMLLabProfile:Generics xmi:id="_Zt3y4KgmEe-9tYVtpMatrg" genericsValue="String" base_Element="_Zt3L1agmEe-9tYVtpMatrg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Zt5BAagmEe-9tYVtpMatrg" base_Element="_Zt5BAKgmEe-9tYVtpMatrg"/>
  <uml:OpaqueBehavior xmi:id="_ZudBtqgmEe-9tYVtpMatrg" name="getNumChannels" specification="_ZtyTVagmEe-9tYVtpMatrg">
    <ownedParameter xmi:id="_ZudBt6gmEe-9tYVtpMatrg" direction="return">
      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
    </ownedParameter>
    <language>java</language>
    <body>return numChannels;&#xD;
  </body>
  </uml:OpaqueBehavior>
  <UMLLabProfile:Reference xmi:id="_ZvPr4qgmEe-9tYVtpMatrg" base_Element="_ZvPr4KgmEe-9tYVtpMatrg"/>
  <UMLLabProfile:Reference xmi:id="_ZvQS8qgmEe-9tYVtpMatrg" base_Element="_ZvQS8KgmEe-9tYVtpMatrg"/>
  <UMLLabProfile:Reference xmi:id="_ZvQS9agmEe-9tYVtpMatrg" base_Element="_ZvQS86gmEe-9tYVtpMatrg"/>
  <UMLLabProfile:Reference xmi:id="_ZvQ6AKgmEe-9tYVtpMatrg" base_Element="_ZvQS9qgmEe-9tYVtpMatrg"/>
  <UMLLabProfile:Reference xmi:id="_ZvQ6A6gmEe-9tYVtpMatrg" base_Element="_ZvQ6AagmEe-9tYVtpMatrg"/>
  <UMLLabProfile:Reference xmi:id="_ZvRhEKgmEe-9tYVtpMatrg" base_Element="_ZvQ6BKgmEe-9tYVtpMatrg"/>
  <UMLLabProfile:Reference xmi:id="_ZvRhE6gmEe-9tYVtpMatrg" base_Element="_ZvRhEagmEe-9tYVtpMatrg"/>
  <UMLLabProfile:Reference xmi:id="_ZvRhFqgmEe-9tYVtpMatrg" base_Element="_ZvRhFKgmEe-9tYVtpMatrg"/>
  <UMLLabProfile:Reference xmi:id="_ZvSIIKgmEe-9tYVtpMatrg" base_Element="_ZvRhF6gmEe-9tYVtpMatrg"/>
  <UMLLabProfile:Reference xmi:id="_ZvSII6gmEe-9tYVtpMatrg" base_Element="_ZvSIIagmEe-9tYVtpMatrg"/>
  <UMLLabProfile:Reference xmi:id="_ZvSvMKgmEe-9tYVtpMatrg" base_Element="_ZvSIJKgmEe-9tYVtpMatrg"/>
  <UMLLabProfile:Reference xmi:id="_ZvSvM6gmEe-9tYVtpMatrg" base_Element="_ZvSvMagmEe-9tYVtpMatrg"/>
  <UMLLabProfile:Reference xmi:id="_ZvSvNqgmEe-9tYVtpMatrg" base_Element="_ZvSvNKgmEe-9tYVtpMatrg"/>
  <UMLLabProfile:Reference xmi:id="_ZvTWQKgmEe-9tYVtpMatrg" base_Element="_ZvSvN6gmEe-9tYVtpMatrg"/>
  <UMLLabProfile:Reference xmi:id="_ZvTWQ6gmEe-9tYVtpMatrg" base_Element="_ZvTWQagmEe-9tYVtpMatrg"/>
  <UMLLabProfile:Reference xmi:id="_ZvT9UKgmEe-9tYVtpMatrg" base_Element="_ZvTWRKgmEe-9tYVtpMatrg"/>
  <UMLLabProfile:Reference xmi:id="_ZvT9U6gmEe-9tYVtpMatrg" base_Element="_ZvT9UagmEe-9tYVtpMatrg"/>
  <UMLLabProfile:Reference xmi:id="_ZvT9VqgmEe-9tYVtpMatrg" base_Element="_ZvT9VKgmEe-9tYVtpMatrg"/>
  <UMLLabProfile:Reference xmi:id="_ZvUkYKgmEe-9tYVtpMatrg" base_Element="_ZvT9V6gmEe-9tYVtpMatrg"/>
  <UMLLabProfile:Reference xmi:id="_ZvUkY6gmEe-9tYVtpMatrg" base_Element="_ZvUkYagmEe-9tYVtpMatrg"/>
  <UMLLabProfile:Reference xmi:id="_ZvVLcKgmEe-9tYVtpMatrg" base_Element="_ZvUkZKgmEe-9tYVtpMatrg"/>
  <UMLLabProfile:Reference xmi:id="_ZvVLc6gmEe-9tYVtpMatrg" base_Element="_ZvVLcagmEe-9tYVtpMatrg"/>
  <UMLLabProfile:Reference xmi:id="_ZvVLdqgmEe-9tYVtpMatrg" base_Element="_ZvVLdKgmEe-9tYVtpMatrg"/>
  <UMLLabProfile:Reference xmi:id="_ZvVygKgmEe-9tYVtpMatrg" base_Element="_ZvVLd6gmEe-9tYVtpMatrg"/>
  <UMLLabProfile:Reference xmi:id="_ZvVyg6gmEe-9tYVtpMatrg" base_Element="_ZvVygagmEe-9tYVtpMatrg"/>
  <UMLLabProfile:Reference xmi:id="_ZvVyhqgmEe-9tYVtpMatrg" base_Element="_ZvVyhKgmEe-9tYVtpMatrg"/>
  <UMLLabProfile:Reference xmi:id="_ZvWZkqgmEe-9tYVtpMatrg" base_Element="_ZvWZkKgmEe-9tYVtpMatrg"/>
  <UMLLabProfile:Reference xmi:id="_ZvWZlagmEe-9tYVtpMatrg" base_Element="_ZvWZk6gmEe-9tYVtpMatrg"/>
  <UMLLabProfile:Reference xmi:id="_ZvXAoqgmEe-9tYVtpMatrg" base_Element="_ZvXAoKgmEe-9tYVtpMatrg"/>
  <UMLLabProfile:Reference xmi:id="_ZvXApagmEe-9tYVtpMatrg" base_Element="_ZvXAo6gmEe-9tYVtpMatrg"/>
  <UMLLabProfile:Reference xmi:id="_ZvXnsKgmEe-9tYVtpMatrg" base_Element="_ZvXApqgmEe-9tYVtpMatrg"/>
  <UMLLabProfile:Reference xmi:id="_ZvXns6gmEe-9tYVtpMatrg" base_Element="_ZvXnsagmEe-9tYVtpMatrg"/>
  <UMLLabProfile:Reference xmi:id="_ZvYOwKgmEe-9tYVtpMatrg" base_Element="_ZvXntKgmEe-9tYVtpMatrg"/>
  <UMLLabProfile:Reference xmi:id="_ZvYOw6gmEe-9tYVtpMatrg" base_Element="_ZvYOwagmEe-9tYVtpMatrg"/>
  <UMLLabProfile:Reference xmi:id="_ZvY10KgmEe-9tYVtpMatrg" base_Element="_ZvYOxKgmEe-9tYVtpMatrg"/>
  <UMLLabProfile:Reference xmi:id="_ZvY106gmEe-9tYVtpMatrg" base_Element="_ZvY10agmEe-9tYVtpMatrg"/>
  <UMLLabProfile:Reference xmi:id="_ZvZc4KgmEe-9tYVtpMatrg" base_Element="_ZvY11KgmEe-9tYVtpMatrg"/>
  <UMLLabProfile:Reference xmi:id="_ZvZc46gmEe-9tYVtpMatrg" base_Element="_ZvZc4agmEe-9tYVtpMatrg"/>
  <UMLLabProfile:Reference xmi:id="_ZvaD8KgmEe-9tYVtpMatrg" base_Element="_ZvZc5KgmEe-9tYVtpMatrg"/>
  <UMLLabProfile:Reference xmi:id="_ZvaD86gmEe-9tYVtpMatrg" base_Element="_ZvaD8agmEe-9tYVtpMatrg"/>
  <UMLLabProfile:Reference xmi:id="_ZvarAKgmEe-9tYVtpMatrg" base_Element="_ZvaD9KgmEe-9tYVtpMatrg"/>
  <UMLLabProfile:Reference xmi:id="_ZvarA6gmEe-9tYVtpMatrg" base_Element="_ZvarAagmEe-9tYVtpMatrg"/>
  <UMLLabProfile:Reference xmi:id="_ZvarBqgmEe-9tYVtpMatrg" base_Element="_ZvarBKgmEe-9tYVtpMatrg"/>
  <UMLLabProfile:Reference xmi:id="_ZvbSEKgmEe-9tYVtpMatrg" base_Element="_ZvarB6gmEe-9tYVtpMatrg"/>
  <UMLLabProfile:Reference xmi:id="_Zvb5IKgmEe-9tYVtpMatrg" base_Element="_ZvbSEagmEe-9tYVtpMatrg"/>
  <UMLLabProfile:Reference xmi:id="_Zvb5I6gmEe-9tYVtpMatrg" base_Element="_Zvb5IagmEe-9tYVtpMatrg"/>
  <UMLLabProfile:Reference xmi:id="_Zvb5JqgmEe-9tYVtpMatrg" base_Element="_Zvb5JKgmEe-9tYVtpMatrg"/>
  <UMLLabProfile:Reference xmi:id="_ZvcgMqgmEe-9tYVtpMatrg" base_Element="_ZvcgMKgmEe-9tYVtpMatrg"/>
  <UMLLabProfile:Reference xmi:id="_ZvcgNagmEe-9tYVtpMatrg" base_Element="_ZvcgM6gmEe-9tYVtpMatrg"/>
  <UMLLabProfile:Reference xmi:id="_ZvdHQqgmEe-9tYVtpMatrg" base_Element="_ZvdHQKgmEe-9tYVtpMatrg"/>
  <UMLLabProfile:Reference xmi:id="_ZvdHRagmEe-9tYVtpMatrg" base_Element="_ZvdHQ6gmEe-9tYVtpMatrg"/>
  <UMLLabProfile:Reference xmi:id="_ZvduUKgmEe-9tYVtpMatrg" base_Element="_ZvdHRqgmEe-9tYVtpMatrg"/>
  <UMLLabProfile:Reference xmi:id="_ZvduU6gmEe-9tYVtpMatrg" base_Element="_ZvduUagmEe-9tYVtpMatrg"/>
  <UMLLabProfile:Reference xmi:id="_ZveVYKgmEe-9tYVtpMatrg" base_Element="_ZvduVKgmEe-9tYVtpMatrg"/>
  <UMLLabProfile:Reference xmi:id="_ZveVY6gmEe-9tYVtpMatrg" base_Element="_ZveVYagmEe-9tYVtpMatrg"/>
  <UMLLabProfile:Reference xmi:id="_ZveVZqgmEe-9tYVtpMatrg" base_Element="_ZveVZKgmEe-9tYVtpMatrg"/>
  <UMLLabProfile:Reference xmi:id="_Zve8cKgmEe-9tYVtpMatrg" base_Element="_ZveVZ6gmEe-9tYVtpMatrg"/>
  <UMLLabProfile:Reference xmi:id="_Zve8c6gmEe-9tYVtpMatrg" base_Element="_Zve8cagmEe-9tYVtpMatrg"/>
  <UMLLabProfile:Reference xmi:id="_ZvfjgKgmEe-9tYVtpMatrg" base_Element="_Zve8dKgmEe-9tYVtpMatrg"/>
  <UMLLabProfile:Reference xmi:id="_Zvfjg6gmEe-9tYVtpMatrg" base_Element="_ZvfjgagmEe-9tYVtpMatrg"/>
  <UMLLabProfile:Reference xmi:id="_ZvfjhqgmEe-9tYVtpMatrg" base_Element="_ZvfjhKgmEe-9tYVtpMatrg"/>
  <UMLLabProfile:Reference xmi:id="_ZvgKkqgmEe-9tYVtpMatrg" base_Element="_ZvgKkKgmEe-9tYVtpMatrg"/>
  <UMLLabProfile:Reference xmi:id="_ZvgKlagmEe-9tYVtpMatrg" base_Element="_ZvgKk6gmEe-9tYVtpMatrg"/>
  <UMLLabProfile:Reference xmi:id="_ZvgxoKgmEe-9tYVtpMatrg" base_Element="_ZvgKlqgmEe-9tYVtpMatrg"/>
  <UMLLabProfile:Reference xmi:id="_Zvgxo6gmEe-9tYVtpMatrg" base_Element="_ZvgxoagmEe-9tYVtpMatrg"/>
  <UMLLabProfile:Reference xmi:id="_ZvhYsqgmEe-9tYVtpMatrg" base_Element="_ZvhYsKgmEe-9tYVtpMatrg"/>
  <UMLLabProfile:Reference xmi:id="_ZvhYtagmEe-9tYVtpMatrg" base_Element="_ZvhYs6gmEe-9tYVtpMatrg"/>
  <UMLLabProfile:Reference xmi:id="_Zvh_wqgmEe-9tYVtpMatrg" base_Element="_Zvh_wKgmEe-9tYVtpMatrg"/>
  <UMLLabProfile:Reference xmi:id="_Zvh_xagmEe-9tYVtpMatrg" base_Element="_Zvh_w6gmEe-9tYVtpMatrg"/>
  <UMLLabProfile:Reference xmi:id="_Zvim0KgmEe-9tYVtpMatrg" base_Element="_Zvh_xqgmEe-9tYVtpMatrg"/>
  <UMLLabProfile:Reference xmi:id="_Zvim06gmEe-9tYVtpMatrg" base_Element="_Zvim0agmEe-9tYVtpMatrg"/>
  <UMLLabProfile:Reference xmi:id="_ZvjN4KgmEe-9tYVtpMatrg" base_Element="_Zvim1KgmEe-9tYVtpMatrg"/>
  <UMLLabProfile:Reference xmi:id="_ZvjN46gmEe-9tYVtpMatrg" base_Element="_ZvjN4agmEe-9tYVtpMatrg"/>
  <UMLLabProfile:Reference xmi:id="_ZvjN5qgmEe-9tYVtpMatrg" base_Element="_ZvjN5KgmEe-9tYVtpMatrg"/>
  <UMLLabProfile:Reference xmi:id="_Zvj08KgmEe-9tYVtpMatrg" base_Element="_ZvjN56gmEe-9tYVtpMatrg"/>
  <UMLLabProfile:Reference xmi:id="_Zvj086gmEe-9tYVtpMatrg" base_Element="_Zvj08agmEe-9tYVtpMatrg"/>
  <UMLLabProfile:Reference xmi:id="_ZvkcAKgmEe-9tYVtpMatrg" base_Element="_Zvj09KgmEe-9tYVtpMatrg"/>
  <UMLLabProfile:Patch xmi:id="_ad13QKgmEe-9tYVtpMatrg" base_Element="_ZZMjY6gmEe-9tYVtpMatrg" patchText="@@ -351,26 +351,24 @@&#xA; um EdgeState&#xA;-()&#xA;  %7B%0D%0A%09%09RELEAS&#xA;" conflicting="false"/>
  <UMLLabProfile:Patch xmi:id="_ad2eUKgmEe-9tYVtpMatrg" base_Element="_ZZsSqagmEe-9tYVtpMatrg" patchText="@@ -254,22 +254,25 @@&#xA; MISS%22;%0D%0A&#xA;-public&#xA;+  private&#xA;  static &#xA;" conflicting="false"/>
  <UMLLabProfile:Patch xmi:id="_ad3FYKgmEe-9tYVtpMatrg" base_Element="_Za9d8agmEe-9tYVtpMatrg" patchText="@@ -113,18 +113,16 @@&#xA; eChoices&#xA;-()&#xA;  %7B%0D%0A%09   &#xA;" conflicting="false"/>
  <UMLLabProfile:Patch xmi:id="_ad3FYagmEe-9tYVtpMatrg" base_Element="_ZbCWcKgmEe-9tYVtpMatrg" patchText="@@ -145,26 +145,24 @@&#xA; ystemChoices&#xA;-()&#xA;  %7B%0D%0A    SOUR&#xA;@@ -284,18 +284,16 @@&#xA; dChoices&#xA;-()&#xA;  %7B%0D%0A    &#xA;" conflicting="false"/>
  <UMLLabProfile:Patch xmi:id="_ad5hoKgmEe-9tYVtpMatrg" base_Element="_ZbPKwKgmEe-9tYVtpMatrg" patchText="@@ -4237,22 +4237,25 @@&#xA; f, ra)%0D%0A&#xA;-public&#xA;+  private&#xA;  static &#xA;" conflicting="false"/>
</xmi:XMI>
