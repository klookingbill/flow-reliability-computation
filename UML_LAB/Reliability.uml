<?xml version="1.0" encoding="UTF-8"?>
<xmi:XMI xmi:version="20131001" xmlns:xmi="http://www.omg.org/spec/XMI/20131001" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:UMLLabProfile="http:///schemas/UMLLabProfile/NS/0" xmlns:ecore="http://www.eclipse.org/emf/2002/Ecore" xmlns:uml="http://www.eclipse.org/uml2/5.0.0/UML" xsi:schemaLocation="http:///schemas/UMLLabProfile/NS/0 pathmap://UMLLAB_PROFILES/UMLLab.profile.uml#UMLLabProfile-Annotation_2-UMLLabProfile">
  <uml:Model xmi:id="_isivoKk6Ee-lntgJ_JlK2w" name="Reliability">
    <eAnnotations xmi:id="_l3YT8Kk6Ee-lntgJ_JlK2w" source="http://ns.yatta.de/umllab">
      <contents xmi:type="ecore:EAnnotation" xmi:id="_l3eakKk6Ee-lntgJ_JlK2w" source="codegen">
        <details xmi:id="_l3fosKk6Ee-lntgJ_JlK2w" key="codegenDirectory" value="/cs2820-fall24/src"/>
        <details xmi:id="_p9Dv4Kk6Ee-lntgJ_JlK2w" key="AssociatedSourceCode" value="/cs2820-fall24/src/edu/uiowa/cs/warp/AbstractMap.java;2633489473/1;/cs2820-fall24/src/edu/uiowa/cs/warp/Activation.java;3634548837/1;/cs2820-fall24/src/edu/uiowa/cs/warp/Activations.java;2300806511/1;/cs2820-fall24/src/edu/uiowa/cs/warp/BasicPoset.java;268475576/1;/cs2820-fall24/src/edu/uiowa/cs/warp/ChannelAnalysis.java;1217720653/1;/cs2820-fall24/src/edu/uiowa/cs/warp/ChannelVisualization.java;2873127052/1;/cs2820-fall24/src/edu/uiowa/cs/warp/Channels.java;3701064188/1;/cs2820-fall24/src/edu/uiowa/cs/warp/CodeFragment.java;2722026516/1;/cs2820-fall24/src/edu/uiowa/cs/warp/CombinedActivation.java;3978818808/1;/cs2820-fall24/src/edu/uiowa/cs/warp/CommunicationGraph.java;724670632/1;/cs2820-fall24/src/edu/uiowa/cs/warp/ConnectivityPoset.java;2099482678/1;/cs2820-fall24/src/edu/uiowa/cs/warp/DeadlineComparator.java;492899634/1;/cs2820-fall24/src/edu/uiowa/cs/warp/Description.java;2596849957/1;/cs2820-fall24/src/edu/uiowa/cs/warp/Edge.java;1242144003/1;/cs2820-fall24/src/edu/uiowa/cs/warp/FileManager.java;1791012323/1;/cs2820-fall24/src/edu/uiowa/cs/warp/Flow.java;3107512261/1;/cs2820-fall24/src/edu/uiowa/cs/warp/FlowMap.java;3735737588/1;/cs2820-fall24/src/edu/uiowa/cs/warp/FlowNodeToActivationMap.java;4234899521/1;/cs2820-fall24/src/edu/uiowa/cs/warp/GraphViz.java;1071888484/1;/cs2820-fall24/src/edu/uiowa/cs/warp/GraphVizListener.java;2126849807/1;/cs2820-fall24/src/edu/uiowa/cs/warp/GuiVisualization.java;654882569/1;/cs2820-fall24/src/edu/uiowa/cs/warp/InputGraphFile.java;937049578/1;/cs2820-fall24/src/edu/uiowa/cs/warp/InstructionTimeSlot.java;3408505142/1;/cs2820-fall24/src/edu/uiowa/cs/warp/LatencyAnalysis.java;2064230864/1;/cs2820-fall24/src/edu/uiowa/cs/warp/LatencyVisualization.java;2426998793/1;/cs2820-fall24/src/edu/uiowa/cs/warp/LatestReleaseTimeComparator.java;1106993157/1;/cs2820-fall24/src/edu/uiowa/cs/warp/MaxPhaseComparator.java;1745026972/1;/cs2820-fall24/src/edu/uiowa/cs/warp/Node.java;1243472081/1;/cs2820-fall24/src/edu/uiowa/cs/warp/NodeMap.java;2177811796/1;/cs2820-fall24/src/edu/uiowa/cs/warp/NonPreemptiveSchedule.java;387408079/1;/cs2820-fall24/src/edu/uiowa/cs/warp/NotImplentedVisualization.java;3646556153/1;/cs2820-fall24/src/edu/uiowa/cs/warp/PeriodComparator.java;3057078727/1;/cs2820-fall24/src/edu/uiowa/cs/warp/Poset.java;4263200805/1;/cs2820-fall24/src/edu/uiowa/cs/warp/PreemptiveSchedule.java;3080876127/1;/cs2820-fall24/src/edu/uiowa/cs/warp/PriorityComparator.java;349151360/1;/cs2820-fall24/src/edu/uiowa/cs/warp/Program.java;3432907115/1;/cs2820-fall24/src/edu/uiowa/cs/warp/ProgramSchedule.java;1770485609/1;/cs2820-fall24/src/edu/uiowa/cs/warp/ProgramVisualization.java;2898426153/1;/cs2820-fall24/src/edu/uiowa/cs/warp/ReleaseTimeComparator.java;2065273961/1;/cs2820-fall24/src/edu/uiowa/cs/warp/ReleaseTimeQueue.java;1776494724/1;/cs2820-fall24/src/edu/uiowa/cs/warp/ReliabilityAnalysis.java;3226899471/1;/cs2820-fall24/src/edu/uiowa/cs/warp/ReliabilityParameters.java;2925534695/1;/cs2820-fall24/src/edu/uiowa/cs/warp/ReliabilityRow.java;3195166460/1;/cs2820-fall24/src/edu/uiowa/cs/warp/ReliabilityTable.java;2918095589/1;/cs2820-fall24/src/edu/uiowa/cs/warp/ReliabilityVisualization.java;3316971108/1;/cs2820-fall24/src/edu/uiowa/cs/warp/ReportVisualization.java;2571131140/1;/cs2820-fall24/src/edu/uiowa/cs/warp/Row.java;3413533457/1;/cs2820-fall24/src/edu/uiowa/cs/warp/SchedulableObject.java;2451757979/1;/cs2820-fall24/src/edu/uiowa/cs/warp/SchedulableObjectQueue.java;3263525257/1;/cs2820-fall24/src/edu/uiowa/cs/warp/Schedule.java;3152618411/1;/cs2820-fall24/src/edu/uiowa/cs/warp/ScheduleTable.java;970860350/1;/cs2820-fall24/src/edu/uiowa/cs/warp/ScheduleTime.java;2579980776/1;/cs2820-fall24/src/edu/uiowa/cs/warp/SimulatorInput.java;3699590899/1;/cs2820-fall24/src/edu/uiowa/cs/warp/SortedPeriodQueue.java;3537725478/1;/cs2820-fall24/src/edu/uiowa/cs/warp/SystemAttributes.java;876440066/1;/cs2820-fall24/src/edu/uiowa/cs/warp/SystemFactory.java;4134708055/1;/cs2820-fall24/src/edu/uiowa/cs/warp/Table.java;2577872269/1;/cs2820-fall24/src/edu/uiowa/cs/warp/Visualization.java;2548788944/1;/cs2820-fall24/src/edu/uiowa/cs/warp/VisualizationFactory.java;3425614056/1;/cs2820-fall24/src/edu/uiowa/cs/warp/VisualizationImplementation.java;1230127619/1;/cs2820-fall24/src/edu/uiowa/cs/warp/VisualizationObject.java;1022989847/1;/cs2820-fall24/src/edu/uiowa/cs/warp/Warp.java;2989994810/1;/cs2820-fall24/src/edu/uiowa/cs/warp/WarpDSL.java;1986156920/1;/cs2820-fall24/src/edu/uiowa/cs/warp/WarpInterface.java;2926400465/1;/cs2820-fall24/src/edu/uiowa/cs/warp/WarpPoset.java;4000167019/1;/cs2820-fall24/src/edu/uiowa/cs/warp/WarpSystem.java;1603794739/1;/cs2820-fall24/src/edu/uiowa/cs/warp/WorkLoadDescription.java;756529537/1;/cs2820-fall24/src/edu/uiowa/cs/warp/WorkLoadListener.java;195958787/1;/cs2820-fall24/src/edu/uiowa/cs/warp/WorkLoad.java;3899137012/1;/cs2820-fall24/test/edu/uiowa/cs/warp/ReliabilityVisualizationTest.java;1295433628/1;/cs2820-fall24/test/edu/uiowa/cs/warp/WorkLoadTest.java;3954342433/1;"/>
      </contents>
    </eAnnotations>
    <elementImport xmi:id="_nrk1cKk6Ee-lntgJ_JlK2w">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
    </elementImport>
    <elementImport xmi:id="_nrlcgKk6Ee-lntgJ_JlK2w">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#byte"/>
    </elementImport>
    <elementImport xmi:id="_nrlcgak6Ee-lntgJ_JlK2w">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#char"/>
    </elementImport>
    <elementImport xmi:id="_nrlcgqk6Ee-lntgJ_JlK2w">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
    </elementImport>
    <elementImport xmi:id="_nrlcg6k6Ee-lntgJ_JlK2w">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#float"/>
    </elementImport>
    <elementImport xmi:id="_nrlchKk6Ee-lntgJ_JlK2w">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
    </elementImport>
    <elementImport xmi:id="_nrlchak6Ee-lntgJ_JlK2w">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
    </elementImport>
    <elementImport xmi:id="_nrmDkKk6Ee-lntgJ_JlK2w">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#short"/>
    </elementImport>
    <elementImport xmi:id="_nrmDkak6Ee-lntgJ_JlK2w">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
    </elementImport>
    <packagedElement xmi:type="uml:Package" xmi:id="_np2-MKk6Ee-lntgJ_JlK2w" name="edu">
      <packagedElement xmi:type="uml:Package" xmi:id="_np3lQKk6Ee-lntgJ_JlK2w" name="uiowa">
        <packagedElement xmi:type="uml:Package" xmi:id="_np3lQak6Ee-lntgJ_JlK2w" name="cs">
          <packagedElement xmi:type="uml:Package" xmi:id="_np9r4Kk6Ee-lntgJ_JlK2w" name="warp">
            <packagedElement xmi:type="uml:Package" xmi:id="_nr0tEKk6Ee-lntgJ_JlK2w" name="WarpDSL">
              <packagedElement xmi:type="uml:Class" xmi:id="_obyKYak6Ee-lntgJ_JlK2w" name="InstructionParameters"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Package" xmi:id="_ntHtkKk6Ee-lntgJ_JlK2w" name="SystemAttributes">
              <packagedElement xmi:type="uml:Enumeration" xmi:id="_oc8oAKk6Ee-lntgJ_JlK2w" name="ScheduleChoices"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Package" xmi:id="_ntL_AKk6Ee-lntgJ_JlK2w" name="Visualization">
              <packagedElement xmi:type="uml:Enumeration" xmi:id="_oc92IKk6Ee-lntgJ_JlK2w" name="SystemChoices"/>
              <packagedElement xmi:type="uml:Enumeration" xmi:id="_oc-dMak6Ee-lntgJ_JlK2w" name="WorkLoadChoices"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_nxRNwKk6Ee-lntgJ_JlK2w" name="AbstractMap" isAbstract="true">
              <generalization xmi:id="_oeBmEKk6Ee-lntgJ_JlK2w" general="_oatzYKk6Ee-lntgJ_JlK2w"/>
              <ownedAttribute xmi:id="_oftBEKk6Ee-lntgJ_JlK2w" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_oftoIKk6Ee-lntgJ_JlK2w" value="1L"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ohg-8Kk6Ee-lntgJ_JlK2w" name="AbstractMap" specification="_nxcM4Kk6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_ohhmAKk6Ee-lntgJ_JlK2w" type="_nxRNwKk6Ee-lntgJ_JlK2w" direction="return"/>
                <language>java</language>
                <body>super();&#xD;
		</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_nxcM4Kk6Ee-lntgJ_JlK2w" name="AbstractMap" method="_ohg-8Kk6Ee-lntgJ_JlK2w">
                <eAnnotations xmi:id="_nxeCEKk6Ee-lntgJ_JlK2w" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_nxeCEak6Ee-lntgJ_JlK2w" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_nxepIKk6Ee-lntgJ_JlK2w" type="_nxRNwKk6Ee-lntgJ_JlK2w" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_nxhscKk6Ee-lntgJ_JlK2w" name="Activation">
              <generalization xmi:id="_oa6nsak6Ee-lntgJ_JlK2w" general="_n4iTYKk6Ee-lntgJ_JlK2w"/>
              <ownedAttribute xmi:id="_ofuPMKk6Ee-lntgJ_JlK2w" name="coordinators" type="_oawPoKk6Ee-lntgJ_JlK2w" isReadOnly="true" association="_oj16MKk6Ee-lntgJ_JlK2w"/>
              <ownedAttribute xmi:id="_ofu2Qak6Ee-lntgJ_JlK2w" name="edges" type="_oawPoKk6Ee-lntgJ_JlK2w" isReadOnly="true" association="_oj3IUKk6Ee-lntgJ_JlK2w"/>
              <ownedAttribute xmi:id="_ofwEYKk6Ee-lntgJ_JlK2w" name="additionalScheduleTimes" type="_oawPoKk6Ee-lntgJ_JlK2w" isReadOnly="true" association="_oj3vYKk6Ee-lntgJ_JlK2w"/>
              <ownedAttribute xmi:id="_ofygoak6Ee-lntgJ_JlK2w" name="conflicts">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ofzHsKk6Ee-lntgJ_JlK2w" value="*"/>
              </ownedAttribute>
              <interfaceRealization xmi:id="_oeDbQak6Ee-lntgJ_JlK2w" client="_nxhscKk6Ee-lntgJ_JlK2w" supplier="_oeC0Mak6Ee-lntgJ_JlK2w" contract="_oeC0Mak6Ee-lntgJ_JlK2w"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ohlQYKk6Ee-lntgJ_JlK2w" name="Activation" specification="_nxkvwKk6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_ohlQYak6Ee-lntgJ_JlK2w" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ohlQYqk6Ee-lntgJ_JlK2w" type="_nxhscKk6Ee-lntgJ_JlK2w" direction="return"/>
                <language>java</language>
                <body>super();&#xD;
		setName(name);&#xD;
		this.edges = new ArrayList&lt;Edge>();&#xD;
		this.coordinators = new ArrayList&lt;String>();&#xD;
		this.conflicts = new HashSet&lt;String>();&#xD;
		this.additionalScheduleTimes = new ArrayList&lt;ScheduleTime>();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ohlQY6k6Ee-lntgJ_JlK2w" name="Activation" specification="_oayr4Kk6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_ohlQZKk6Ee-lntgJ_JlK2w" name="elem" type="_nxhscKk6Ee-lntgJ_JlK2w"/>
                <ownedParameter xmi:id="_ohlQZak6Ee-lntgJ_JlK2w" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ohlQZqk6Ee-lntgJ_JlK2w" type="_nxhscKk6Ee-lntgJ_JlK2w" direction="return"/>
                <language>java</language>
                <body>super(elem, time);&#xD;
		this.edges = new ArrayList&lt;Edge>();&#xD;
		this.edges.addAll(elem.getEdges());&#xD;
		this.coordinators = new ArrayList&lt;String>();&#xD;
		this.coordinators.addAll(elem.getCoordinators());&#xD;
		// conflicts = new Set&lt;String>();&#xD;
		this.conflicts = new HashSet&lt;String>();&#xD;
		this.conflicts.addAll(elem.getConflicts());&#xD;
		this.additionalScheduleTimes = new ArrayList&lt;ScheduleTime>();&#xD;
		this.additionalScheduleTimes.addAll(elem.getAdditionalScheduleTimes());&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ohl3cKk6Ee-lntgJ_JlK2w" name="clone" specification="_nxmk8Kk6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_ohl3cak6Ee-lntgJ_JlK2w" type="_nxhscKk6Ee-lntgJ_JlK2w" direction="return"/>
                <language>java</language>
                <body>var time = getLastUpdateTime();&#xD;
		var clone = new Activation(this, time);&#xD;
		return clone;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ohl3cqk6Ee-lntgJ_JlK2w" name="getEdgesByReleaseTime" specification="_nx440Kk6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_ohl3c6k6Ee-lntgJ_JlK2w" type="_n2zOAKk6Ee-lntgJ_JlK2w" direction="return"/>
                <language>java</language>
                <body>return new &#xD;
		SchedulableObjectQueue&lt;Edge>(new ReleaseTimeComparator&lt;Edge>(),this.edges);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ohl3dKk6Ee-lntgJ_JlK2w" name="getEdgesByLatestReleaseTime" specification="_nx7VEKk6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_ohl3dak6Ee-lntgJ_JlK2w" type="_n2zOAKk6Ee-lntgJ_JlK2w" direction="return"/>
                <language>java</language>
                <body>return new &#xD;
		SchedulableObjectQueue&lt;Edge>(new LatestReleaseTimeComparator&lt;Edge>(),this.edges);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ohmegKk6Ee-lntgJ_JlK2w" name="getEdgesByPeriod" specification="_nx9xUKk6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_ohmegak6Ee-lntgJ_JlK2w" type="_n2zOAKk6Ee-lntgJ_JlK2w" direction="return"/>
                <language>java</language>
                <body>return new &#xD;
		SchedulableObjectQueue&lt;Edge>(new PeriodComparator&lt;Edge>(),this.edges);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ohmegqk6Ee-lntgJ_JlK2w" name="getEdgesByDeadline" specification="_nyCCwKk6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_ohmeg6k6Ee-lntgJ_JlK2w" type="_n2zOAKk6Ee-lntgJ_JlK2w" direction="return"/>
                <language>java</language>
                <body>return new &#xD;
		SchedulableObjectQueue&lt;Edge>(new DeadlineComparator&lt;Edge>(),this.edges);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ohnFkKk6Ee-lntgJ_JlK2w" name="getEdgesByPriority" specification="_nyEfAKk6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_ohnFkak6Ee-lntgJ_JlK2w" type="_n2zOAKk6Ee-lntgJ_JlK2w" direction="return"/>
                <language>java</language>
                <body>return new &#xD;
			SchedulableObjectQueue&lt;Edge>(new PriorityComparator&lt;Edge>(),this.edges);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ohnsoKk6Ee-lntgJ_JlK2w" name="addEdges" specification="_oeEpYKk6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_ohnsoak6Ee-lntgJ_JlK2w" name="edges" type="_oawPoKk6Ee-lntgJ_JlK2w"/>
                <language>java</language>
                <body>this.edges.addAll(edges);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ohnsoqk6Ee-lntgJ_JlK2w" name="addEdge" specification="_oa0hEKk6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_ohnso6k6Ee-lntgJ_JlK2w" name="edge" type="_nz2AoKk6Ee-lntgJ_JlK2w"/>
                <language>java</language>
                <body>this.edges.add(edge);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ohoTsKk6Ee-lntgJ_JlK2w" name="increaseEdgePhases" specification="_nyHiUKk6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_ohoTsak6Ee-lntgJ_JlK2w" name="additionalOffset">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>if (additionalOffset > 0) { // make sure increase is needed&#xD;
			for (Edge edge: this.edges) {&#xD;
				var oldPhase = edge.getPhase();&#xD;
				edge.setPhase(oldPhase+additionalOffset);&#xD;
			}&#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ohoTsqk6Ee-lntgJ_JlK2w" name="updatePriorityAndRelease" specification="_nyIJYKk6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_ohoTs6k6Ee-lntgJ_JlK2w" name="currentTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var lastUpdateTime = getLastUpdateTime();&#xD;
		if (currentTime >= lastUpdateTime) {&#xD;
			for(Edge edge: edges) {&#xD;
				edge.setNextReleaseTime(currentTime);&#xD;
			}&#xD;
			&#xD;
			/* get the edges with earliest release time and &#xD;
			 * highest priority ==> get head of the queue just built&#xD;
			 */&#xD;
			var edgesByReleaseTime = getEdgesByReleaseTime();&#xD;
			var firstEdge = edgesByReleaseTime.element();&#xD;
			setPhase(firstEdge.getPhase()); &#xD;
			var edgesByPeriod = getEdgesByPeriod();&#xD;
			firstEdge = edgesByPeriod.element();&#xD;
			setPeriod(firstEdge.getPeriod()); // shortest period &#xD;
			var edgesByDeadline = getEdgesByDeadline();&#xD;
			firstEdge = edgesByDeadline.element();&#xD;
			setDeadline(firstEdge.getDeadline()); // earliest deadline&#xD;
			var edgesByPrioriy = getEdgesByPriority();&#xD;
			firstEdge = edgesByPrioriy.element();&#xD;
			setPriority(firstEdge.getPriority());&#xD;
			&#xD;
			/* With the partition scheduling parameters set to match  &#xD;
			 * the highest priority edge with respect to the parameter, &#xD;
			 * we can now set the next release time based on the&#xD;
			 * current time.&#xD;
			 * */&#xD;
			setNextReleaseTime(currentTime);&#xD;
			&#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ohoTtKk6Ee-lntgJ_JlK2w" name="addConflict" specification="_nyIwcKk6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_ohoTtak6Ee-lntgJ_JlK2w" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>conflicts.add(name);&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oho6wKk6Ee-lntgJ_JlK2w" name="addConflicts" specification="_oeFQcak6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_oho6wak6Ee-lntgJ_JlK2w" name="conflicts" type="_oayE0ak6Ee-lntgJ_JlK2w"/>
                <language>java</language>
                <body>this.conflicts.addAll(conflicts);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oho6wqk6Ee-lntgJ_JlK2w" name="addCoordinator" specification="_nyJ-kKk6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_oho6w6k6Ee-lntgJ_JlK2w" name="coordinator">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>coordinators.add(coordinator);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oho6xKk6Ee-lntgJ_JlK2w" name="addCoordinators" specification="_oeF3gKk6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_oho6xak6Ee-lntgJ_JlK2w" name="coordinators" type="_oawPoKk6Ee-lntgJ_JlK2w"/>
                <language>java</language>
                <body>this.coordinators.addAll(coordinators);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ohph0Kk6Ee-lntgJ_JlK2w" name="addScheduleTimes" specification="_oeGekKk6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_ohph0ak6Ee-lntgJ_JlK2w" name="scheduleTime" type="_oawPoKk6Ee-lntgJ_JlK2w"/>
                <language>java</language>
                <body>this.additionalScheduleTimes.addAll(scheduleTime);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ohph0qk6Ee-lntgJ_JlK2w" name="getNextScheduleTime" specification="_nyMa0Kk6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_ohph06k6Ee-lntgJ_JlK2w" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ohph1Kk6Ee-lntgJ_JlK2w" type="_n5jAAKk6Ee-lntgJ_JlK2w" direction="return"/>
                <language>java</language>
                <body>var result = new ScheduleTime(Integer.MAX_VALUE, Integer.MAX_VALUE);&#xD;
		var moreScheduleTimes = getAdditionalScheduleTimes();&#xD;
		Iterator&lt;ScheduleTime> iter = moreScheduleTimes.iterator();&#xD;
		while (iter.hasNext() ) {&#xD;
			var next = iter.next();&#xD;
			if (next.getStartTime() > time) {&#xD;
				result = next;&#xD;
				break;&#xD;
			}&#xD;
		}&#xD;
		return result;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ohph1ak6Ee-lntgJ_JlK2w" name="getMatchingEndTime" specification="_nyNo8Kk6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_ohph1qk6Ee-lntgJ_JlK2w" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ohph16k6Ee-lntgJ_JlK2w" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var result = Integer.MAX_VALUE;&#xD;
		var moreScheduleTimes = getAdditionalScheduleTimes();&#xD;
		Iterator&lt;ScheduleTime> iter = moreScheduleTimes.iterator();&#xD;
		// var nextEndTime = time;&#xD;
		while (iter.hasNext()) { //  &amp;&amp; nextEndTime &lt;= time  ) {&#xD;
			// nextEndTime = iter.next().getEndTime();&#xD;
			var scheduleTime = iter.next();&#xD;
			if (time == scheduleTime.getStartTime()) {&#xD;
				result = scheduleTime.getEndTime();&#xD;
				break;&#xD;
			}&#xD;
		}&#xD;
		&#xD;
		return result;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ohqI4Kk6Ee-lntgJ_JlK2w" name="getNextStartTime" specification="_nyPeIKk6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_ohqI4ak6Ee-lntgJ_JlK2w" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ohqI4qk6Ee-lntgJ_JlK2w" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var moreScheduleTimes = getAdditionalScheduleTimes();&#xD;
		Iterator&lt;ScheduleTime> iter = moreScheduleTimes.iterator();&#xD;
		var nextStartTime = time;&#xD;
		while (iter.hasNext() &amp;&amp; nextStartTime &lt;= time  ) {&#xD;
			nextStartTime = iter.next().getStartTime();&#xD;
		}&#xD;
		if (nextStartTime == time) {&#xD;
			/* no next StartTime found &#xD;
			 * could be an error &#xD;
			 */&#xD;
			nextStartTime = Integer.MAX_VALUE;&#xD;
			&#xD;
		}&#xD;
		return nextStartTime;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ohqI46k6Ee-lntgJ_JlK2w" name="getNextEndTime" specification="_nyRTUKk6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_ohqI5Kk6Ee-lntgJ_JlK2w" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ohqI5ak6Ee-lntgJ_JlK2w" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var moreScheduleTimes = getAdditionalScheduleTimes();&#xD;
		Iterator&lt;ScheduleTime> iter = moreScheduleTimes.iterator();&#xD;
		var nextEndTime = time;&#xD;
		while (iter.hasNext() &amp;&amp; nextEndTime &lt;= time  ) {&#xD;
			nextEndTime = iter.next().getEndTime();&#xD;
		}&#xD;
		if (nextEndTime == time) {&#xD;
			/* no next StartTime found &#xD;
			 * could be an error &#xD;
			 */&#xD;
			nextEndTime = Integer.MAX_VALUE;&#xD;
			&#xD;
		}&#xD;
		return nextEndTime;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ohqI5qk6Ee-lntgJ_JlK2w" name="getNumEdges" specification="_nyShcak6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_ohqI56k6Ee-lntgJ_JlK2w" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>return edges.size();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ohqv8Kk6Ee-lntgJ_JlK2w" name="compareTo" specification="_oa1IIak6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_ohqv8ak6Ee-lntgJ_JlK2w" name="obj" type="_nxhscKk6Ee-lntgJ_JlK2w"/>
                <ownedParameter xmi:id="_ohqv8qk6Ee-lntgJ_JlK2w" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>return priorityComparison(obj);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ohqv86k6Ee-lntgJ_JlK2w" name="conflictExists" specification="_oa4Lcqk6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_ohqv9Kk6Ee-lntgJ_JlK2w" name="obj" type="_nxhscKk6Ee-lntgJ_JlK2w"/>
                <ownedParameter xmi:id="_ohqv9ak6Ee-lntgJ_JlK2w" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>Boolean result = false;&#xD;
		/* create a copy of this.conflicts and obj.conflicts&#xD;
		 * and then check the intersection of the two &#xD;
		 * sets. &#xD;
		 * Conflicts exists if |intersection| > 0&#xD;
		 */&#xD;
		var conflicts = new HashSet&lt;String>();&#xD;
		conflicts.addAll(getConflicts());&#xD;
		var objConflicts = new HashSet&lt;String>();&#xD;
		objConflicts.addAll(obj.getConflicts());&#xD;
		conflicts.retainAll(objConflicts); // get the intersection&#xD;
		if (conflicts.size() > 0) {&#xD;
			result = true; // |intersection| > 0 => conflict&#xD;
		}&#xD;
		return result;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ohqv9qk6Ee-lntgJ_JlK2w" name="canCombine" specification="_oa4ygak6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_ohqv96k6Ee-lntgJ_JlK2w" name="a2" type="_nxhscKk6Ee-lntgJ_JlK2w"/>
                <ownedParameter xmi:id="_ohqv-Kk6Ee-lntgJ_JlK2w" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>Boolean result = false;&#xD;
		/* make sure a2 is not null */&#xD;
		if (a2 != null) {&#xD;
			var newEntryCoordinator = a2.getCoordinators().get(0);&#xD;
			if (getCoordinators().contains(newEntryCoordinator)) {&#xD;
				/* The (first) coordinator of the newEntry&#xD;
				 * is in the list of coordinators of the prior entry.&#xD;
				 * Thus, these two can be combined for efficiency.&#xD;
				 */&#xD;
				result = true;&#xD;
			}&#xD;
		}&#xD;
		return result;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ohrXAKk6Ee-lntgJ_JlK2w" name="getDelta" specification="_nyU9sKk6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_ohrXAak6Ee-lntgJ_JlK2w" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>Integer maxTxPerLink = 0;&#xD;
		for (Edge edge: getEdges()) {&#xD;
			maxTxPerLink = Math.max(maxTxPerLink, edge.getNumTx());&#xD;
		}&#xD;
		return maxTxPerLink;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ohrXAqk6Ee-lntgJ_JlK2w" name="getExecutionDuration" specification="_nyVkwak6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_ohrXA6k6Ee-lntgJ_JlK2w" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>/* Each edge requires delta time units. However, assuming &#xD;
		 * the WARP pipeline scheduling approach, the activation only&#xD;
		 * executes for Delta + (numEdges - 1) time units, because&#xD;
		 * a new edge will be added to the pipeline every time unit&#xD;
		 * it executes.&#xD;
		 */&#xD;
		return getDelta() + (getNumEdges() - 1);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ohrXBKk6Ee-lntgJ_JlK2w" name="getCombinedExecutionDuration" specification="_oa4yhKk6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_ohrXBak6Ee-lntgJ_JlK2w" name="a2" type="_nxhscKk6Ee-lntgJ_JlK2w"/>
                <ownedParameter xmi:id="_ohrXBqk6Ee-lntgJ_JlK2w" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>/* Each edge requires delta time units. However, assuming &#xD;
		 * the WARP pipeline scheduling approach, the activation only&#xD;
		 * executes for Delta + (numEdges - 1) time units, because&#xD;
		 * a new edge will be added to the pipeline every time unit&#xD;
		 * it executes.&#xD;
		 * So, if combined, we consider edges in both activations&#xD;
		 */&#xD;
		var result = 0;&#xD;
		if (a2 != null) {&#xD;
			result = Math.max(getDelta(), a2.getDelta()) + (getNumEdges() + a2.getNumEdges() - 1);&#xD;
		}&#xD;
		return result;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ohr-EKk6Ee-lntgJ_JlK2w" name="printAll" specification="_nyWy4Kk6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_ohr-Eak6Ee-lntgJ_JlK2w" name="headerMsg">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>System.out.printf(&quot;\n%s&quot;,headerMsg);&#xD;
		this.printAll();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ohr-Eqk6Ee-lntgJ_JlK2w" name="printAll" specification="_nyXZ8ak6Ee-lntgJ_JlK2w">
                <language>java</language>
                <body>super.print();&#xD;
		printEdges(&quot;Parition &quot;+getName(),new ReleaseTimeQueue&lt;Edge>(edges));&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ohr-E6k6Ee-lntgJ_JlK2w" name="printEdges" specification="_oa5Zkqk6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_ohr-FKk6Ee-lntgJ_JlK2w" name="header">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ohr-Fak6Ee-lntgJ_JlK2w" name="edges" type="_n2wxwKk6Ee-lntgJ_JlK2w"/>
                <language>java</language>
                <body>System.out.printf(&quot;\n%s\nEdges in edge list:&quot;, header);&#xD;
		printEdges(edges);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ohr-Fqk6Ee-lntgJ_JlK2w" name="printEdges" specification="_oa6Aoak6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_ohr-F6k6Ee-lntgJ_JlK2w" name="edges" type="_n2wxwKk6Ee-lntgJ_JlK2w"/>
                <language>java</language>
                <body>var q = new ReleaseTimeQueue&lt;Edge>();&#xD;
 		q.addAll(edges);&#xD;
 		Iterator&lt;Edge> qValue = q.iterator();&#xD;
         while (qValue.hasNext()) {&#xD;
         	var next = q.poll();&#xD;
         	next.print();&#xD;
         }&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_nxkvwKk6Ee-lntgJ_JlK2w" name="Activation" visibility="package" method="_ohlQYKk6Ee-lntgJ_JlK2w">
                <eAnnotations xmi:id="_nxlW0Kk6Ee-lntgJ_JlK2w" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_nxlW0ak6Ee-lntgJ_JlK2w" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_nxkvwak6Ee-lntgJ_JlK2w" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_nxlW0qk6Ee-lntgJ_JlK2w" type="_nxhscKk6Ee-lntgJ_JlK2w" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_nxmk8Kk6Ee-lntgJ_JlK2w" name="clone" method="_ohl3cKk6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_oaz6AKk6Ee-lntgJ_JlK2w" type="_nxhscKk6Ee-lntgJ_JlK2w" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_nx440Kk6Ee-lntgJ_JlK2w" name="getEdgesByReleaseTime" method="_ohl3cqk6Ee-lntgJ_JlK2w">
                <ownedComment xmi:id="_oi438Kk6Ee-lntgJ_JlK2w">
                  <body>@return the edgesByReleaseTime</body>
                </ownedComment>
                <ownedParameter xmi:id="_oaz6Aak6Ee-lntgJ_JlK2w" type="_n2zOAKk6Ee-lntgJ_JlK2w" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_nx7VEKk6Ee-lntgJ_JlK2w" name="getEdgesByLatestReleaseTime" method="_ohl3dKk6Ee-lntgJ_JlK2w">
                <ownedComment xmi:id="_oi438ak6Ee-lntgJ_JlK2w">
                  <body>@return the edgesByReleaseTime</body>
                </ownedComment>
                <ownedParameter xmi:id="_oaz6Aqk6Ee-lntgJ_JlK2w" type="_n2zOAKk6Ee-lntgJ_JlK2w" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_nx9xUKk6Ee-lntgJ_JlK2w" name="getEdgesByPeriod" method="_ohmegKk6Ee-lntgJ_JlK2w">
                <ownedComment xmi:id="_oi438qk6Ee-lntgJ_JlK2w">
                  <body>@return the edgesByPeriod</body>
                </ownedComment>
                <ownedParameter xmi:id="_oaz6A6k6Ee-lntgJ_JlK2w" type="_n2zOAKk6Ee-lntgJ_JlK2w" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_nyCCwKk6Ee-lntgJ_JlK2w" name="getEdgesByDeadline" method="_ohmegqk6Ee-lntgJ_JlK2w">
                <ownedComment xmi:id="_oi4386k6Ee-lntgJ_JlK2w">
                  <body>@return the edgesByDeadline</body>
                </ownedComment>
                <ownedParameter xmi:id="_oaz6BKk6Ee-lntgJ_JlK2w" type="_n2zOAKk6Ee-lntgJ_JlK2w" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_nyEfAKk6Ee-lntgJ_JlK2w" name="getEdgesByPriority" method="_ohnFkKk6Ee-lntgJ_JlK2w">
                <ownedComment xmi:id="_oi439Kk6Ee-lntgJ_JlK2w">
                  <body>@return the edgesByPriority</body>
                </ownedComment>
                <ownedParameter xmi:id="_oaz6Bak6Ee-lntgJ_JlK2w" type="_n2zOAKk6Ee-lntgJ_JlK2w" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_nyHiUKk6Ee-lntgJ_JlK2w" name="increaseEdgePhases" method="_ohoTsKk6Ee-lntgJ_JlK2w">
                <ownedComment xmi:id="_oi439ak6Ee-lntgJ_JlK2w">
                  <body>Increase the phase of each edge by the input parameter.&#xD;
	 * &#xD;
	 * @param additionalOffset</body>
                </ownedComment>
                <ownedParameter xmi:id="_nyHiUak6Ee-lntgJ_JlK2w" name="additionalOffset">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_nyIJYKk6Ee-lntgJ_JlK2w" name="updatePriorityAndRelease" method="_ohoTsqk6Ee-lntgJ_JlK2w">
                <ownedComment xmi:id="_oi5fAKk6Ee-lntgJ_JlK2w">
                  <body>Updates priority and release time of &#xD;
	 * this activation.&lt;br>&#xD;
	 * &#xD;
	 * The priority of the element is equal to the&#xD;
	 * edge priority with the earliest release time.&#xD;
	 * Thus, it can change dynamically. &lt;br>&#xD;
	 *&#xD;
	 * The release time of the element is equal to the&#xD;
	 * edge priority with the earliest release time.&#xD;
	 * Thus, it can change dynamically. &lt;br></body>
                </ownedComment>
                <ownedParameter xmi:id="_nyIJYak6Ee-lntgJ_JlK2w" name="currentTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_nyIwcKk6Ee-lntgJ_JlK2w" name="addConflict" method="_ohoTtKk6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_nyJXgKk6Ee-lntgJ_JlK2w" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_nyJ-kKk6Ee-lntgJ_JlK2w" name="addCoordinator" method="_oho6wqk6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_nyJ-kak6Ee-lntgJ_JlK2w" name="coordinator">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_nyMa0Kk6Ee-lntgJ_JlK2w" name="getNextScheduleTime" method="_ohph0qk6Ee-lntgJ_JlK2w">
                <ownedComment xmi:id="_oi5fAqk6Ee-lntgJ_JlK2w">
                  <body>getNextScheduleTime returns the next entry in the additional&#xD;
	 * schedule time array list whose start time is greater than the input&#xD;
	 * parameter time. MAX_INT is returned if such a time&#xD;
	 * is not found&#xD;
	 * @param next&#xD;
	 * @param time&#xD;
	 * @return next schedule time or MAX_VALUEs if not found</body>
                </ownedComment>
                <ownedParameter xmi:id="_nyMa0ak6Ee-lntgJ_JlK2w" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_oa1IIKk6Ee-lntgJ_JlK2w" type="_n5jAAKk6Ee-lntgJ_JlK2w" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_nyNo8Kk6Ee-lntgJ_JlK2w" name="getMatchingEndTime" method="_ohph1ak6Ee-lntgJ_JlK2w">
                <ownedComment xmi:id="_oi5fA6k6Ee-lntgJ_JlK2w">
                  <body>getMatchingEndTime returns the next end time in the additional&#xD;
	 * schedule time array list that is greater than the input&#xD;
	 * parameter time. MAX_INT is returned if such a time&#xD;
	 * is not found&#xD;
	 * @param next&#xD;
	 * @param time&#xD;
	 * @return next start time or MAX_VALUE if not found</body>
                </ownedComment>
                <ownedParameter xmi:id="_nyOQAKk6Ee-lntgJ_JlK2w" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_nyOQAak6Ee-lntgJ_JlK2w" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_nyPeIKk6Ee-lntgJ_JlK2w" name="getNextStartTime" method="_ohqI4Kk6Ee-lntgJ_JlK2w">
                <ownedComment xmi:id="_oi5fBKk6Ee-lntgJ_JlK2w">
                  <body>getNextStartTime returns the next start time in the additional&#xD;
	 * schedule time array list that is greater than the input&#xD;
	 * parameter time. MAX_INT is returned if such a time&#xD;
	 * is not found&#xD;
	 * @param next&#xD;
	 * @param time&#xD;
	 * @return next start time or MAX_VALUE if not found</body>
                </ownedComment>
                <ownedParameter xmi:id="_nyPeIak6Ee-lntgJ_JlK2w" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_nyQFMKk6Ee-lntgJ_JlK2w" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_nyRTUKk6Ee-lntgJ_JlK2w" name="getNextEndTime" method="_ohqI46k6Ee-lntgJ_JlK2w">
                <ownedComment xmi:id="_oi5fBak6Ee-lntgJ_JlK2w">
                  <body>getNextEndTime returns the next end time in the additional&#xD;
	 * schedule time array list that is greater than the input&#xD;
	 * parameter time. MAX_INT is returned if such a time&#xD;
	 * is not found&#xD;
	 * @param next&#xD;
	 * @param time&#xD;
	 * @return next start time or MAX_VALUE if not found</body>
                </ownedComment>
                <ownedParameter xmi:id="_nyR6YKk6Ee-lntgJ_JlK2w" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_nyShcKk6Ee-lntgJ_JlK2w" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_nyShcak6Ee-lntgJ_JlK2w" name="getNumEdges" method="_ohqI5qk6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_nyTIgKk6Ee-lntgJ_JlK2w" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_nyU9sKk6Ee-lntgJ_JlK2w" name="getDelta" method="_ohrXAKk6Ee-lntgJ_JlK2w">
                <ownedComment xmi:id="_oi5fBqk6Ee-lntgJ_JlK2w">
                  <body>Returns the maximum number of transmissions&#xD;
	 * needed on any link in activation to ensure e2e &#xD;
	 * reliability is met.</body>
                </ownedComment>
                <ownedParameter xmi:id="_nyVkwKk6Ee-lntgJ_JlK2w" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_nyVkwak6Ee-lntgJ_JlK2w" name="getExecutionDuration" method="_ohrXAqk6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_nyWL0Kk6Ee-lntgJ_JlK2w" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_nyWy4Kk6Ee-lntgJ_JlK2w" name="printAll" method="_ohr-EKk6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_nyXZ8Kk6Ee-lntgJ_JlK2w" name="headerMsg">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_nyXZ8ak6Ee-lntgJ_JlK2w" name="printAll" method="_ohr-Eqk6Ee-lntgJ_JlK2w"/>
              <ownedOperation xmi:id="_oayr4Kk6Ee-lntgJ_JlK2w" name="Activation" visibility="package" method="_ohlQY6k6Ee-lntgJ_JlK2w">
                <eAnnotations xmi:id="_oazS8ak6Ee-lntgJ_JlK2w" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_oazS8qk6Ee-lntgJ_JlK2w" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_oayr4ak6Ee-lntgJ_JlK2w" name="elem" type="_nxhscKk6Ee-lntgJ_JlK2w"/>
                <ownedParameter xmi:id="_oazS8Kk6Ee-lntgJ_JlK2w" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_oazS86k6Ee-lntgJ_JlK2w" type="_nxhscKk6Ee-lntgJ_JlK2w" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_oa0hEKk6Ee-lntgJ_JlK2w" name="addEdge" method="_ohnsoqk6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_oa0hEak6Ee-lntgJ_JlK2w" name="edge" type="_nz2AoKk6Ee-lntgJ_JlK2w"/>
              </ownedOperation>
              <ownedOperation xmi:id="_oa1IIak6Ee-lntgJ_JlK2w" name="compareTo" method="_ohqv8Kk6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_oa1IIqk6Ee-lntgJ_JlK2w" name="obj" type="_nxhscKk6Ee-lntgJ_JlK2w"/>
                <ownedParameter xmi:id="_oa1II6k6Ee-lntgJ_JlK2w" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_oa4Lcqk6Ee-lntgJ_JlK2w" name="conflictExists" method="_ohqv86k6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_oa4Lc6k6Ee-lntgJ_JlK2w" name="obj" type="_nxhscKk6Ee-lntgJ_JlK2w"/>
                <ownedParameter xmi:id="_oa4ygKk6Ee-lntgJ_JlK2w" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_oa4ygak6Ee-lntgJ_JlK2w" name="canCombine" method="_ohqv9qk6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_oa4ygqk6Ee-lntgJ_JlK2w" name="a2" type="_nxhscKk6Ee-lntgJ_JlK2w"/>
                <ownedParameter xmi:id="_oa4yg6k6Ee-lntgJ_JlK2w" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_oa4yhKk6Ee-lntgJ_JlK2w" name="getCombinedExecutionDuration" method="_ohrXBKk6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_oa5ZkKk6Ee-lntgJ_JlK2w" name="a2" type="_nxhscKk6Ee-lntgJ_JlK2w"/>
                <ownedParameter xmi:id="_oa5Zkak6Ee-lntgJ_JlK2w" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_oa5Zkqk6Ee-lntgJ_JlK2w" name="printEdges" visibility="private" method="_ohr-E6k6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_oa5Zk6k6Ee-lntgJ_JlK2w" name="header">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_oa5ZlKk6Ee-lntgJ_JlK2w" name="edges" type="_n2wxwKk6Ee-lntgJ_JlK2w"/>
              </ownedOperation>
              <ownedOperation xmi:id="_oa6Aoak6Ee-lntgJ_JlK2w" name="printEdges" visibility="private" method="_ohr-Fqk6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_oa6Aoqk6Ee-lntgJ_JlK2w" name="edges" type="_n2wxwKk6Ee-lntgJ_JlK2w"/>
              </ownedOperation>
              <ownedOperation xmi:id="_oeEpYKk6Ee-lntgJ_JlK2w" name="addEdges" method="_ohnsoKk6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_oeEpYak6Ee-lntgJ_JlK2w" name="edges" type="_oawPoKk6Ee-lntgJ_JlK2w"/>
              </ownedOperation>
              <ownedOperation xmi:id="_oeFQcak6Ee-lntgJ_JlK2w" name="addConflicts" method="_oho6wKk6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_oeFQcqk6Ee-lntgJ_JlK2w" name="conflicts" type="_oayE0ak6Ee-lntgJ_JlK2w"/>
              </ownedOperation>
              <ownedOperation xmi:id="_oeF3gKk6Ee-lntgJ_JlK2w" name="addCoordinators" method="_oho6xKk6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_oeF3gak6Ee-lntgJ_JlK2w" name="coordinators" type="_oawPoKk6Ee-lntgJ_JlK2w"/>
              </ownedOperation>
              <ownedOperation xmi:id="_oeGekKk6Ee-lntgJ_JlK2w" name="addScheduleTimes" method="_ohph0Kk6Ee-lntgJ_JlK2w">
                <ownedComment xmi:id="_oi5fAak6Ee-lntgJ_JlK2w">
                  <body>@param additionalScheduleTimes</body>
                </ownedComment>
                <ownedParameter xmi:id="_oeGekak6Ee-lntgJ_JlK2w" name="scheduleTime" type="_oawPoKk6Ee-lntgJ_JlK2w"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_nymDcKk6Ee-lntgJ_JlK2w" name="Activations">
              <generalization xmi:id="_oa9rAKk6Ee-lntgJ_JlK2w" general="_nxRNwKk6Ee-lntgJ_JlK2w"/>
              <ownedAttribute xmi:id="_of0V0Kk6Ee-lntgJ_JlK2w" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_of0V0ak6Ee-lntgJ_JlK2w" value="1L"/>
              </ownedAttribute>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_nyn4oKk6Ee-lntgJ_JlK2w" name="BasicPoset">
              <ownedComment xmi:id="_oi5fB6k6Ee-lntgJ_JlK2w">
                <body>ConnectivityPoset extends Poset by selecting&#xD;
primary coordinator in the flow based on highest&#xD;
local connectivity.&#xD;
&#xD;
@author sgoddard</body>
              </ownedComment>
              <generalization xmi:id="_oa-5Jak6Ee-lntgJ_JlK2w" general="_n1m7MKk6Ee-lntgJ_JlK2w"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ohslIKk6Ee-lntgJ_JlK2w" name="BasicPoset" specification="_oa-5IKk6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_ohslIak6Ee-lntgJ_JlK2w" name="workload" type="_n8NScKk6Ee-lntgJ_JlK2w"/>
                <ownedParameter xmi:id="_ohslIqk6Ee-lntgJ_JlK2w" type="_nyn4oKk6Ee-lntgJ_JlK2w" direction="return"/>
                <language>java</language>
                <body>super(workload);&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_oa-5IKk6Ee-lntgJ_JlK2w" name="BasicPoset" visibility="package" method="_ohslIKk6Ee-lntgJ_JlK2w">
                <eAnnotations xmi:id="_oa-5Iqk6Ee-lntgJ_JlK2w" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_oa-5I6k6Ee-lntgJ_JlK2w" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_oa-5Iak6Ee-lntgJ_JlK2w" name="workload" type="_n8NScKk6Ee-lntgJ_JlK2w"/>
                <ownedParameter xmi:id="_oa-5JKk6Ee-lntgJ_JlK2w" type="_nyn4oKk6Ee-lntgJ_JlK2w" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_nyqU4Kk6Ee-lntgJ_JlK2w" name="ChannelAnalysis">
              <ownedComment xmi:id="_oi5fCKk6Ee-lntgJ_JlK2w">
                <body>@author sgoddard&#xD;
@version 1.4&#xD;
 *</body>
              </ownedComment>
              <ownedAttribute xmi:id="_of084Kk6Ee-lntgJ_JlK2w" name="program" visibility="private" type="_n2BK4Kk6Ee-lntgJ_JlK2w" association="_oj4Wcak6Ee-lntgJ_JlK2w"/>
              <ownedAttribute xmi:id="_of1j8ak6Ee-lntgJ_JlK2w" name="programTable" visibility="private" type="_n2hhMKk6Ee-lntgJ_JlK2w" association="_oj6LoKk6Ee-lntgJ_JlK2w"/>
              <ownedAttribute xmi:id="_of2LAak6Ee-lntgJ_JlK2w" name="conflictExists" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ohtMMKk6Ee-lntgJ_JlK2w" name="ChannelAnalysis" specification="_obAHQKk6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_ohtMMak6Ee-lntgJ_JlK2w" name="warp" type="_n7T6kKk6Ee-lntgJ_JlK2w"/>
                <ownedParameter xmi:id="_ohtMMqk6Ee-lntgJ_JlK2w" type="_nyqU4Kk6Ee-lntgJ_JlK2w" direction="return"/>
                <language>java</language>
                <body>this.program = warp.toProgram();&#xD;
 this.programTable = program.getSchedule();&#xD;
 conflictExists = false;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ohtMM6k6Ee-lntgJ_JlK2w" name="ChannelAnalysis" specification="_obAuUKk6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_ohtMNKk6Ee-lntgJ_JlK2w" name="program" type="_n2BK4Kk6Ee-lntgJ_JlK2w"/>
                <ownedParameter xmi:id="_ohtMNak6Ee-lntgJ_JlK2w" type="_nyqU4Kk6Ee-lntgJ_JlK2w" direction="return"/>
                <language>java</language>
                <body>this.program = program;&#xD;
 this.programTable = program.getSchedule();&#xD;
 conflictExists = false;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ohtMNqk6Ee-lntgJ_JlK2w" name="isChannelConflict" specification="_nysKEKk6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_ohtMN6k6Ee-lntgJ_JlK2w" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>return conflictExists;&#xD;
  </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_nysKEKk6Ee-lntgJ_JlK2w" name="isChannelConflict" method="_ohtMNqk6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_nysxIKk6Ee-lntgJ_JlK2w" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_obAHQKk6Ee-lntgJ_JlK2w" name="ChannelAnalysis" visibility="package" method="_ohtMMKk6Ee-lntgJ_JlK2w">
                <eAnnotations xmi:id="_obAHQqk6Ee-lntgJ_JlK2w" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_obAHQ6k6Ee-lntgJ_JlK2w" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_obAHQak6Ee-lntgJ_JlK2w" name="warp" type="_n7T6kKk6Ee-lntgJ_JlK2w"/>
                <ownedParameter xmi:id="_obAHRKk6Ee-lntgJ_JlK2w" type="_nyqU4Kk6Ee-lntgJ_JlK2w" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_obAuUKk6Ee-lntgJ_JlK2w" name="ChannelAnalysis" visibility="package" method="_ohtMM6k6Ee-lntgJ_JlK2w">
                <eAnnotations xmi:id="_obAuUqk6Ee-lntgJ_JlK2w" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_obAuU6k6Ee-lntgJ_JlK2w" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_obAuUak6Ee-lntgJ_JlK2w" name="program" type="_n2BK4Kk6Ee-lntgJ_JlK2w"/>
                <ownedParameter xmi:id="_obAuVKk6Ee-lntgJ_JlK2w" type="_nyqU4Kk6Ee-lntgJ_JlK2w" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_nyumUKk6Ee-lntgJ_JlK2w" name="ChannelVisualization">
              <ownedComment xmi:id="_oi6GEKk6Ee-lntgJ_JlK2w">
                <body>ChannelVisualization creates the visualizations for the channel analysis of the WARP program.&#xD;
&lt;p>&#xD;
&#xD;
CS2820 Fall 2022 Project: Implement this class to create the file visualization that is requested&#xD;
in Warp.&#xD;
&#xD;
@author sgoddard&#xD;
@version 1.4&#xD;
 *</body>
              </ownedComment>
              <generalization xmi:id="_obB8cKk6Ee-lntgJ_JlK2w" general="_n6jsoKk6Ee-lntgJ_JlK2w"/>
              <ownedAttribute xmi:id="_of2yEKk6Ee-lntgJ_JlK2w" name="SOURCE_SUFFIX" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_of2yEak6Ee-lntgJ_JlK2w" value="&quot;.ch&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_of2yEqk6Ee-lntgJ_JlK2w" name="OBJECT_NAME" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_of2yE6k6Ee-lntgJ_JlK2w" value="&quot;Channel Analysis&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_of3ZIKk6Ee-lntgJ_JlK2w" name="warp" visibility="private" type="_n7T6kKk6Ee-lntgJ_JlK2w" association="_oj7ZwKk6Ee-lntgJ_JlK2w"/>
              <ownedAttribute xmi:id="_of3ZIqk6Ee-lntgJ_JlK2w" name="ca" visibility="private" type="_nyqU4Kk6Ee-lntgJ_JlK2w" association="_oj8A0Kk6Ee-lntgJ_JlK2w"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ohtzQKk6Ee-lntgJ_JlK2w" name="ChannelVisualization" specification="_obBVYKk6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_ohtzQak6Ee-lntgJ_JlK2w" name="warp" type="_n7T6kKk6Ee-lntgJ_JlK2w"/>
                <ownedParameter xmi:id="_ohtzQqk6Ee-lntgJ_JlK2w" type="_nyumUKk6Ee-lntgJ_JlK2w" direction="return"/>
                <language>java</language>
                <body>super(new FileManager(), warp, SOURCE_SUFFIX);&#xD;
 this.warp = warp;&#xD;
 this.ca = warp.toChannelAnalysis();&#xD;
  </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_obBVYKk6Ee-lntgJ_JlK2w" name="ChannelVisualization" visibility="package" method="_ohtzQKk6Ee-lntgJ_JlK2w">
                <eAnnotations xmi:id="_obBVYqk6Ee-lntgJ_JlK2w" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_obBVY6k6Ee-lntgJ_JlK2w" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_obBVYak6Ee-lntgJ_JlK2w" name="warp" type="_n7T6kKk6Ee-lntgJ_JlK2w"/>
                <ownedParameter xmi:id="_obBVZKk6Ee-lntgJ_JlK2w" type="_nyumUKk6Ee-lntgJ_JlK2w" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_nyze0Kk6Ee-lntgJ_JlK2w" name="Channels">
              <ownedComment xmi:id="_oi6GEak6Ee-lntgJ_JlK2w">
                <body>@author sgoddard&#xD;
@version 1.4&#xD;
 *</body>
              </ownedComment>
              <ownedAttribute xmi:id="_of4nQqk6Ee-lntgJ_JlK2w" name="nChannels" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_of5OUak6Ee-lntgJ_JlK2w" name="verbose" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_of5OU6k6Ee-lntgJ_JlK2w" name="channelsAvailable" visibility="package" type="_oawPoKk6Ee-lntgJ_JlK2w" association="_oj8A06k6Ee-lntgJ_JlK2w"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ohuaUKk6Ee-lntgJ_JlK2w" name="Channels" specification="_ny5lcKk6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_ohuaUak6Ee-lntgJ_JlK2w" name="nChannels">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ohuaUqk6Ee-lntgJ_JlK2w" name="verbose">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ohuaU6k6Ee-lntgJ_JlK2w" type="_nyze0Kk6Ee-lntgJ_JlK2w" direction="return"/>
                <language>java</language>
                <body>this.nChannels = nChannels;&#xD;
 this.verbose = verbose;&#xD;
 this.channelsAvailable = new ArrayList&lt;ChannelSet>();&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ohuaVKk6Ee-lntgJ_JlK2w" name="getChannelSet" specification="_ny6zkKk6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_ohuaVak6Ee-lntgJ_JlK2w" name="timeSlot">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ohuaVqk6Ee-lntgJ_JlK2w" type="_oaw2sak6Ee-lntgJ_JlK2w" direction="return"/>
                <language>java</language>
                <body>/* get the channel set for this timeSlot */&#xD;
 HashSet&lt;String> channelSet = new HashSet&lt;String>(channelsAvailable.get(timeSlot));&#xD;
 return channelSet;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ohuaV6k6Ee-lntgJ_JlK2w" name="addNewChannelSet" specification="_nzA6MKk6Ee-lntgJ_JlK2w">
                <language>java</language>
                <body>var channels = new ChannelSet(nChannels);&#xD;
 channelsAvailable.add(channels);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ohuaWKk6Ee-lntgJ_JlK2w" name="isEmpty" specification="_nzBhQKk6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_ohuaWak6Ee-lntgJ_JlK2w" name="timeSlot">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ohuaWqk6Ee-lntgJ_JlK2w" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>ChannelSet channelSet = channelsAvailable.get(timeSlot); // get the channel set for this&#xD;
                                                          // timeSlot&#xD;
 return channelSet.isEmpty(); // returns true channel set is empty and false if not&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ohvBYKk6Ee-lntgJ_JlK2w" name="removeChannel" specification="_nzCvYKk6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_ohvBYak6Ee-lntgJ_JlK2w" name="timeSlot">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ohvBYqk6Ee-lntgJ_JlK2w" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ohvBY6k6Ee-lntgJ_JlK2w" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>Boolean result;&#xD;
 ChannelSet channels = channelsAvailable.get(timeSlot);&#xD;
 result = channels.remove(channel);&#xD;
 return result;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ohvBZKk6Ee-lntgJ_JlK2w" name="addChannel" specification="_nzD9gKk6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_ohvBZak6Ee-lntgJ_JlK2w" name="timeSlot">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ohvBZqk6Ee-lntgJ_JlK2w" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ohvBZ6k6Ee-lntgJ_JlK2w" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>Boolean result;&#xD;
 ChannelSet channels = channelsAvailable.get(timeSlot); // get a pointer to the channel set&#xD;
 result = channels.add(channel); // remove the channel, returning the result&#xD;
 return result;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ohvBaKk6Ee-lntgJ_JlK2w" name="getNumChannels" specification="_nzFLoak6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_ohvBaak6Ee-lntgJ_JlK2w" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>return nChannels;&#xD;
  </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_ny5lcKk6Ee-lntgJ_JlK2w" name="Channels" visibility="package" method="_ohuaUKk6Ee-lntgJ_JlK2w">
                <eAnnotations xmi:id="_ny5lc6k6Ee-lntgJ_JlK2w" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_ny6MgKk6Ee-lntgJ_JlK2w" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_ny5lcak6Ee-lntgJ_JlK2w" name="nChannels">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ny5lcqk6Ee-lntgJ_JlK2w" name="verbose">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ny6Mgak6Ee-lntgJ_JlK2w" type="_nyze0Kk6Ee-lntgJ_JlK2w" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_ny6zkKk6Ee-lntgJ_JlK2w" name="getChannelSet" method="_ohuaVKk6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_ny6zkak6Ee-lntgJ_JlK2w" name="timeSlot">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_oeI60Kk6Ee-lntgJ_JlK2w" type="_oaw2sak6Ee-lntgJ_JlK2w" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_nzA6MKk6Ee-lntgJ_JlK2w" name="addNewChannelSet" method="_ohuaV6k6Ee-lntgJ_JlK2w"/>
              <ownedOperation xmi:id="_nzBhQKk6Ee-lntgJ_JlK2w" name="isEmpty" method="_ohuaWKk6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_nzCIUKk6Ee-lntgJ_JlK2w" name="timeSlot">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_nzCIUak6Ee-lntgJ_JlK2w" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_nzCvYKk6Ee-lntgJ_JlK2w" name="removeChannel" method="_ohvBYKk6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_nzDWcKk6Ee-lntgJ_JlK2w" name="timeSlot">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_nzDWcak6Ee-lntgJ_JlK2w" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_nzDWcqk6Ee-lntgJ_JlK2w" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_nzD9gKk6Ee-lntgJ_JlK2w" name="addChannel" method="_ohvBZKk6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_nzEkkKk6Ee-lntgJ_JlK2w" name="timeSlot">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_nzEkkak6Ee-lntgJ_JlK2w" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_nzFLoKk6Ee-lntgJ_JlK2w" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_nzFLoak6Ee-lntgJ_JlK2w" name="getNumChannels" method="_ohvBaKk6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_nzFysKk6Ee-lntgJ_JlK2w" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <nestedClassifier xmi:type="uml:Class" xmi:id="_ny1UAKk6Ee-lntgJ_JlK2w" name="ChannelSet" visibility="private">
                <generalization xmi:id="_oeHssKk6Ee-lntgJ_JlK2w" general="_oaw2sak6Ee-lntgJ_JlK2w"/>
                <ownedAttribute xmi:id="_of4nQKk6Ee-lntgJ_JlK2w" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                  <defaultValue xmi:type="uml:LiteralString" xmi:id="_of4nQak6Ee-lntgJ_JlK2w" value="6725256944325470867L"/>
                </ownedAttribute>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ohtzQ6k6Ee-lntgJ_JlK2w" name="ChannelSet" specification="_ny17EKk6Ee-lntgJ_JlK2w">
                  <ownedParameter xmi:id="_ohtzRKk6Ee-lntgJ_JlK2w" type="_ny1UAKk6Ee-lntgJ_JlK2w" direction="return"/>
                  <language>java</language>
                  <body>super();&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ohtzRak6Ee-lntgJ_JlK2w" name="ChannelSet" specification="_ny3JMKk6Ee-lntgJ_JlK2w">
                  <ownedParameter xmi:id="_ohtzRqk6Ee-lntgJ_JlK2w" name="nChannels">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_ohtzR6k6Ee-lntgJ_JlK2w" type="_ny1UAKk6Ee-lntgJ_JlK2w" direction="return"/>
                  <language>java</language>
                  <body>super();&#xD;
   for (int i = 0; i &lt; nChannels; i++) { // ASSUMES channels range from 0 to nChannels-1&#xD;
     this.add(String.valueOf(i));&#xD;
   }&#xD;
 </body>
                </ownedBehavior>
                <ownedOperation xmi:id="_ny17EKk6Ee-lntgJ_JlK2w" name="ChannelSet" visibility="private" method="_ohtzQ6k6Ee-lntgJ_JlK2w">
                  <eAnnotations xmi:id="_ny2iIKk6Ee-lntgJ_JlK2w" source="http://www.eclipse.org/uml2/2.0.0/UML">
                    <details xmi:id="_ny2iIak6Ee-lntgJ_JlK2w" key="create"/>
                  </eAnnotations>
                  <ownedParameter xmi:id="_ny2iIqk6Ee-lntgJ_JlK2w" type="_ny1UAKk6Ee-lntgJ_JlK2w" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_ny3JMKk6Ee-lntgJ_JlK2w" name="ChannelSet" visibility="private" method="_ohtzRak6Ee-lntgJ_JlK2w">
                  <eAnnotations xmi:id="_ny3JMqk6Ee-lntgJ_JlK2w" source="http://www.eclipse.org/uml2/2.0.0/UML">
                    <details xmi:id="_ny3JM6k6Ee-lntgJ_JlK2w" key="create"/>
                  </eAnnotations>
                  <ownedParameter xmi:id="_ny3JMak6Ee-lntgJ_JlK2w" name="nChannels">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_ny3JNKk6Ee-lntgJ_JlK2w" type="_ny1UAKk6Ee-lntgJ_JlK2w" direction="return"/>
                </ownedOperation>
              </nestedClassifier>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_nzIO8Kk6Ee-lntgJ_JlK2w" name="CodeFragment">
              <ownedAttribute xmi:id="_of7DgKk6Ee-lntgJ_JlK2w" name="SLEEP" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_of7qkKk6Ee-lntgJ_JlK2w" value="&quot;sleep&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_of7qkak6Ee-lntgJ_JlK2w" name="edges" visibility="package" type="_oawPoKk6Ee-lntgJ_JlK2w" association="_oj8n4ak6Ee-lntgJ_JlK2w"/>
              <ownedAttribute xmi:id="_of84sKk6Ee-lntgJ_JlK2w" name="coordinator" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_of9fwak6Ee-lntgJ_JlK2w" name="codeFragment" visibility="package" type="_oawPoKk6Ee-lntgJ_JlK2w" association="_oj9O8ak6Ee-lntgJ_JlK2w"/>
              <ownedAttribute xmi:id="_of-t4Kk6Ee-lntgJ_JlK2w" name="delta" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_of_U8ak6Ee-lntgJ_JlK2w" name="channel" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ohvocKk6Ee-lntgJ_JlK2w" name="CodeFragment" specification="_nzKrMKk6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_ohvocak6Ee-lntgJ_JlK2w" type="_nzIO8Kk6Ee-lntgJ_JlK2w" direction="return"/>
                <language>java</language>
                <body>this.delta = 0;&#xD;
		this.channel = 0;&#xD;
		this.edges = null;&#xD;
		this.coordinator = null;&#xD;
		this.codeFragment = new ArrayList&lt;String>();&#xD;
		this.codeFragment.add(SLEEP);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ohvocqk6Ee-lntgJ_JlK2w" name="CodeFragment" specification="_oeJh4Kk6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_ohvoc6k6Ee-lntgJ_JlK2w" name="delta">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ohvodKk6Ee-lntgJ_JlK2w" name="edges" type="_oawPoKk6Ee-lntgJ_JlK2w"/>
                <ownedParameter xmi:id="_ohvodak6Ee-lntgJ_JlK2w" name="coordinators" type="_oawPoKk6Ee-lntgJ_JlK2w"/>
                <ownedParameter xmi:id="_ohvodqk6Ee-lntgJ_JlK2w" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ohvod6k6Ee-lntgJ_JlK2w" type="_nzIO8Kk6Ee-lntgJ_JlK2w" direction="return"/>
                <language>java</language>
                <body>this.delta = delta;&#xD;
		this.channel = channel;&#xD;
		this.edges = edges;&#xD;
		this.coordinator = coordinators.get(0);&#xD;
		this.codeFragment = new ArrayList&lt;String>();&#xD;
		if (multipleCoordinators(coordinators)) {&#xD;
			reportIfDifferentCoordinators(coordinators);&#xD;
		}	&#xD;
		generateCodeFragment();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ohwPgKk6Ee-lntgJ_JlK2w" name="getCoordinator" specification="_nzNHcKk6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_ohwPgak6Ee-lntgJ_JlK2w" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return coordinator;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ohwPgqk6Ee-lntgJ_JlK2w" name="instructions" specification="_nzNugak6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_ohwPg6k6Ee-lntgJ_JlK2w" type="_oawPoKk6Ee-lntgJ_JlK2w" direction="return"/>
                <language>java</language>
                <body>return codeFragment;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ohwPhKk6Ee-lntgJ_JlK2w" name="size" specification="_nzPjsKk6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_ohwPhak6Ee-lntgJ_JlK2w" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>return codeFragment.size();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ohwPhqk6Ee-lntgJ_JlK2w" name="generateCodeFragment" specification="_nzQKwak6Ee-lntgJ_JlK2w">
                <language>java</language>
                <body>var edgeQueue = new SchedulableObjectQueue&lt;Edge>(new &#xD;
				PriorityComparator&lt;Edge>(),this.edges);&#xD;
		Iterator&lt;Edge> q = edgeQueue.iterator();&#xD;
		var size = edgeQueue.size();&#xD;
		/* the code length will be equal to &#xD;
		 * delta + #edges -1&#xD;
		 */&#xD;
		var codeLength = delta + size -1;&#xD;
		var basicInstructions = new ArrayList&lt;String>();&#xD;
		/* create basic instructions for each edge &#xD;
		 * and initial receiver set for each instruction&#xD;
		 * */&#xD;
		while(q.hasNext()) {&#xD;
			var edge = edgeQueue.poll();&#xD;
			var src = edge.getSrc();&#xD;
			var snk = edge.getSnk();&#xD;
			var flow = edge.getFlow();&#xD;
			var instr = getBaseInstruction(flow,src,snk);&#xD;
			basicInstructions.add(instr);&#xD;
		}&#xD;
		/* start building code fragments */&#xD;
		&#xD;
		codeFragment.add(basicInstructions.get(0));&#xD;
		&#xD;
		/* when size &lt; delta, we need to repeat the&#xD;
		 * middle stage delta - size times&#xD;
		 */&#xD;
		var numRepeatStages = Math.max(0, delta - size);&#xD;
		if (size &lt; delta) {&#xD;
			numRepeatStages = delta - size;&#xD;
		}&#xD;
		&#xD;
		/* build the initial code fragment */&#xD;
		Integer localDelta = Math.min(size, delta);&#xD;
		var instr = new String();&#xD;
		var dropInstr = new String();&#xD;
		var priorInstr = new String();&#xD;
		for (int i = 1; i &lt; localDelta ; i++) { &#xD;
			instr = codeFragment.get(i-1) +&#xD;
					&quot; else &quot; + basicInstructions.get(i);&#xD;
			codeFragment.add(instr);&#xD;
		}&#xD;
		/* now repeat middle stage if size &lt; delta &#xD;
		 * otherwise, this for loop will be skipped&#xD;
		 */&#xD;
		for (int i = localDelta; (i &lt; localDelta + numRepeatStages) &amp;&amp; i &lt; codeLength ; i++) { &#xD;
			instr = codeFragment.get(i-1);&#xD;
			codeFragment.add(instr);&#xD;
		}&#xD;
		/* The first Instruction has been repeated&#xD;
		 * delta times. Now it gets removed from&#xD;
		 * the pipeline. E.g., with delta = 3 and&#xD;
		 * size = 3&#xD;
		 *  a &lt;-- dropInstr&#xD;
		 *  ab&#xD;
		 *  abc &lt;-- priorInstr&#xD;
		 *  bc &lt;-- instr&#xD;
		 */&#xD;
&#xD;
		/* Now loop through dropping old instructions&#xD;
		 * and adding new ones for size - localDelta times.&#xD;
		 * This loop will be skipped if size = localDelta.&#xD;
		 */&#xD;
		for (int i = localDelta + numRepeatStages; (i &lt; numRepeatStages + size)  &amp;&amp; i &lt; codeLength ; i++) { &#xD;
			priorInstr = codeFragment.get(i-1);&#xD;
			dropInstr =  basicInstructions.get(i-(localDelta + numRepeatStages)) + &quot; else &quot;;&#xD;
			instr = priorInstr.replaceFirst(Pattern.quote(dropInstr),&quot;&quot;);&#xD;
			instr += &quot; else &quot; + basicInstructions.get(i-numRepeatStages);&#xD;
			codeFragment.add(instr);&#xD;
		}&#xD;
		/* Now loop through dropping old instructions, draining&#xD;
		 * the pipleline.&#xD;
		 */&#xD;
		for (int i = numRepeatStages + size; i &lt; codeLength ; i++) { &#xD;
			priorInstr = codeFragment.get(i-1);&#xD;
			dropInstr =  basicInstructions.get(i-delta)  + &quot; else &quot;;&#xD;
			instr = priorInstr.replaceFirst(Pattern.quote(dropInstr),&quot;&quot;);&#xD;
			codeFragment.add(instr);&#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ohwPh6k6Ee-lntgJ_JlK2w" name="getBaseInstruction" specification="_nzQx0Kk6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_ohwPiKk6Ee-lntgJ_JlK2w" name="flow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ohwPiak6Ee-lntgJ_JlK2w" name="src">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ohwPiqk6Ee-lntgJ_JlK2w" name="snk">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ohwPi6k6Ee-lntgJ_JlK2w" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>var instr = new String();&#xD;
		if (coordinator.equals(src)) {&#xD;
			/* push instruction */&#xD;
			instr += ifHas(flow,src,snk) + push(flow,src,snk);&#xD;
		} else {&#xD;
			/* pull instruction */&#xD;
			instr += ifNotHas(flow,src,snk) + pull(flow,src,snk);&#xD;
		}&#xD;
		return instr;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ohw2kKk6Ee-lntgJ_JlK2w" name="push" specification="_nzRY4ak6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_ohw2kak6Ee-lntgJ_JlK2w" name="flow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ohw2kqk6Ee-lntgJ_JlK2w" name="src">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ohw2k6k6Ee-lntgJ_JlK2w" name="snk">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ohw2lKk6Ee-lntgJ_JlK2w" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>var instruction = String.format(&quot;push(%s: %s -> %s, #%d)&quot;, flow, src, snk, channel);&#xD;
		return instruction;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ohw2lak6Ee-lntgJ_JlK2w" name="pull" specification="_nzSnAKk6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_ohw2lqk6Ee-lntgJ_JlK2w" name="flow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ohw2l6k6Ee-lntgJ_JlK2w" name="src">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ohw2mKk6Ee-lntgJ_JlK2w" name="snk">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ohw2mak6Ee-lntgJ_JlK2w" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>var instruction = String.format(&quot;pull(%s: %s -> %s, #%d)&quot;, flow, src, snk, channel);&#xD;
		return instruction;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ohw2mqk6Ee-lntgJ_JlK2w" name="ifHas" specification="_nzT1IKk6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_ohw2m6k6Ee-lntgJ_JlK2w" name="flow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ohw2nKk6Ee-lntgJ_JlK2w" name="src">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ohw2nak6Ee-lntgJ_JlK2w" name="snk">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ohw2nqk6Ee-lntgJ_JlK2w" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>var instruction = String.format(&quot;if has(%s: %s -> %s) &quot;, flow, src, snk);&#xD;
		return instruction;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ohw2n6k6Ee-lntgJ_JlK2w" name="ifNotHas" specification="_nzVDQKk6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_ohw2oKk6Ee-lntgJ_JlK2w" name="flow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ohw2oak6Ee-lntgJ_JlK2w" name="src">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ohw2oqk6Ee-lntgJ_JlK2w" name="snk">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ohw2o6k6Ee-lntgJ_JlK2w" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>var instruction = String.format(&quot;if !has(%s: %s -> %s) &quot;, flow, src, snk);&#xD;
		return instruction;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ohxdoKk6Ee-lntgJ_JlK2w" name="wait" specification="_nzWRYKk6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_ohxdoak6Ee-lntgJ_JlK2w" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ohxdoqk6Ee-lntgJ_JlK2w" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>var instruction = String.format(&quot;wait(#%d)&quot;, channel);&#xD;
		return instruction;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ohxdo6k6Ee-lntgJ_JlK2w" name="sleep" specification="_nzW4cKk6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_ohxdpKk6Ee-lntgJ_JlK2w" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>var instruction = SLEEP;&#xD;
		return instruction;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ohxdpak6Ee-lntgJ_JlK2w" name="reportIfDifferentCoordinators" specification="_oeKwAqk6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_ohxdpqk6Ee-lntgJ_JlK2w" name="coordinators" type="_oawPoKk6Ee-lntgJ_JlK2w"/>
                <language>java</language>
                <body>var numUniqueCoordinators = 1;&#xD;
		var coordinatorNames = this.coordinator;&#xD;
		if (coordinators.size() > 1) {&#xD;
			for (int i = 1 ; i &lt; coordinators.size(); i++) {&#xD;
				if (!this.coordinator.equals(coordinators.get(i))) {&#xD;
					coordinatorNames += &quot;, &quot; + coordinators.get(i);&#xD;
					numUniqueCoordinators++;&#xD;
				}&#xD;
			}&#xD;
			if (numUniqueCoordinators > 1) {&#xD;
				System.err.printf(&quot;\n%d Coordinators: %s\n&quot;, &#xD;
						numUniqueCoordinators, this.coordinator, coordinatorNames);&#xD;
			}&#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ohxdp6k6Ee-lntgJ_JlK2w" name="multipleCoordinators" specification="_oeLXEak6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_ohxdqKk6Ee-lntgJ_JlK2w" name="coordinators" type="_oawPoKk6Ee-lntgJ_JlK2w"/>
                <ownedParameter xmi:id="_ohxdqak6Ee-lntgJ_JlK2w" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>var result = false;&#xD;
		if (coordinators.size() > 1) {&#xD;
			for (int i = 1 ; i &lt; coordinators.size(); i++) {&#xD;
				if (!this.coordinator.equals(coordinators.get(i))) {&#xD;
					result = true;&#xD;
				}&#xD;
			}&#xD;
		}&#xD;
		return result;&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_nzKrMKk6Ee-lntgJ_JlK2w" name="CodeFragment" visibility="package" method="_ohvocKk6Ee-lntgJ_JlK2w">
                <eAnnotations xmi:id="_nzLSQKk6Ee-lntgJ_JlK2w" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_nzLSQak6Ee-lntgJ_JlK2w" key="create"/>
                </eAnnotations>
                <ownedComment xmi:id="_oi6GEqk6Ee-lntgJ_JlK2w">
                  <body>Constructor generates a SLEEP instruction for the&#xD;
	 * code fragment.</body>
                </ownedComment>
                <ownedParameter xmi:id="_nzLSQqk6Ee-lntgJ_JlK2w" type="_nzIO8Kk6Ee-lntgJ_JlK2w" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_nzNHcKk6Ee-lntgJ_JlK2w" name="getCoordinator" method="_ohwPgKk6Ee-lntgJ_JlK2w">
                <ownedComment xmi:id="_oi6GFKk6Ee-lntgJ_JlK2w">
                  <body>@return the coordinator</body>
                </ownedComment>
                <ownedParameter xmi:id="_nzNugKk6Ee-lntgJ_JlK2w" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_nzNugak6Ee-lntgJ_JlK2w" name="instructions" method="_ohwPgqk6Ee-lntgJ_JlK2w">
                <ownedComment xmi:id="_oi6GFak6Ee-lntgJ_JlK2w">
                  <body>@return the codeFragment</body>
                </ownedComment>
                <ownedParameter xmi:id="_oeKwAak6Ee-lntgJ_JlK2w" type="_oawPoKk6Ee-lntgJ_JlK2w" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_nzPjsKk6Ee-lntgJ_JlK2w" name="size" method="_ohwPhKk6Ee-lntgJ_JlK2w">
                <ownedComment xmi:id="_oi6GFqk6Ee-lntgJ_JlK2w">
                  <body>@return the size</body>
                </ownedComment>
                <ownedParameter xmi:id="_nzQKwKk6Ee-lntgJ_JlK2w" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_nzQKwak6Ee-lntgJ_JlK2w" name="generateCodeFragment" visibility="private" method="_ohwPhqk6Ee-lntgJ_JlK2w"/>
              <ownedOperation xmi:id="_nzQx0Kk6Ee-lntgJ_JlK2w" name="getBaseInstruction" visibility="private" method="_ohwPh6k6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_nzQx0ak6Ee-lntgJ_JlK2w" name="flow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_nzQx0qk6Ee-lntgJ_JlK2w" name="src">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_nzQx06k6Ee-lntgJ_JlK2w" name="snk">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_nzRY4Kk6Ee-lntgJ_JlK2w" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_nzRY4ak6Ee-lntgJ_JlK2w" name="push" visibility="private" method="_ohw2kKk6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_nzRY4qk6Ee-lntgJ_JlK2w" name="flow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_nzR_8Kk6Ee-lntgJ_JlK2w" name="src">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_nzR_8ak6Ee-lntgJ_JlK2w" name="snk">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_nzR_8qk6Ee-lntgJ_JlK2w" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_nzSnAKk6Ee-lntgJ_JlK2w" name="pull" visibility="private" method="_ohw2lak6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_nzTOEKk6Ee-lntgJ_JlK2w" name="flow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_nzTOEak6Ee-lntgJ_JlK2w" name="src">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_nzTOEqk6Ee-lntgJ_JlK2w" name="snk">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_nzTOE6k6Ee-lntgJ_JlK2w" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_nzT1IKk6Ee-lntgJ_JlK2w" name="ifHas" visibility="private" method="_ohw2mqk6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_nzUcMKk6Ee-lntgJ_JlK2w" name="flow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_nzUcMak6Ee-lntgJ_JlK2w" name="src">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_nzUcMqk6Ee-lntgJ_JlK2w" name="snk">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_nzUcM6k6Ee-lntgJ_JlK2w" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_nzVDQKk6Ee-lntgJ_JlK2w" name="ifNotHas" visibility="private" method="_ohw2n6k6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_nzVDQak6Ee-lntgJ_JlK2w" name="flow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_nzVqUKk6Ee-lntgJ_JlK2w" name="src">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_nzVqUak6Ee-lntgJ_JlK2w" name="snk">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_nzVqUqk6Ee-lntgJ_JlK2w" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_nzWRYKk6Ee-lntgJ_JlK2w" name="wait" method="_ohxdoKk6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_nzWRYak6Ee-lntgJ_JlK2w" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_nzWRYqk6Ee-lntgJ_JlK2w" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_nzW4cKk6Ee-lntgJ_JlK2w" name="sleep" isStatic="true" method="_ohxdo6k6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_nzXfgKk6Ee-lntgJ_JlK2w" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_oeJh4Kk6Ee-lntgJ_JlK2w" name="CodeFragment" visibility="package" method="_ohvocqk6Ee-lntgJ_JlK2w">
                <eAnnotations xmi:id="_oeJh5ak6Ee-lntgJ_JlK2w" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_oeJh5qk6Ee-lntgJ_JlK2w" key="create"/>
                </eAnnotations>
                <ownedComment xmi:id="_oi6GE6k6Ee-lntgJ_JlK2w">
                  <body>Constructor generates DSL instructions to transmit&#xD;
	 * the data over edges using the coordinator and channel&#xD;
	 * to determine the type of instruction and delta to &#xD;
	 * determine the number of times each instructions must&#xD;
	 * be attempted.&#xD;
	 * &#xD;
	 * @param delta&#xD;
	 * @param edges&#xD;
	 * @param coordinators&#xD;
	 * @param channel</body>
                </ownedComment>
                <ownedParameter xmi:id="_oeJh4ak6Ee-lntgJ_JlK2w" name="delta">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_oeJh4qk6Ee-lntgJ_JlK2w" name="edges" type="_oawPoKk6Ee-lntgJ_JlK2w"/>
                <ownedParameter xmi:id="_oeJh46k6Ee-lntgJ_JlK2w" name="coordinators" type="_oawPoKk6Ee-lntgJ_JlK2w"/>
                <ownedParameter xmi:id="_oeJh5Kk6Ee-lntgJ_JlK2w" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_oeJh56k6Ee-lntgJ_JlK2w" type="_nzIO8Kk6Ee-lntgJ_JlK2w" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_oeKwAqk6Ee-lntgJ_JlK2w" name="reportIfDifferentCoordinators" visibility="private" method="_ohxdpak6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_oeKwA6k6Ee-lntgJ_JlK2w" name="coordinators" type="_oawPoKk6Ee-lntgJ_JlK2w"/>
              </ownedOperation>
              <ownedOperation xmi:id="_oeLXEak6Ee-lntgJ_JlK2w" name="multipleCoordinators" visibility="private" method="_ohxdp6k6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_oeLXEqk6Ee-lntgJ_JlK2w" name="coordinators" type="_oawPoKk6Ee-lntgJ_JlK2w"/>
                <ownedParameter xmi:id="_oeLXE6k6Ee-lntgJ_JlK2w" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_nzcYAKk6Ee-lntgJ_JlK2w" name="CombinedActivation">
              <generalization xmi:id="_obHcA6k6Ee-lntgJ_JlK2w" general="_nxhscKk6Ee-lntgJ_JlK2w"/>
              <interfaceRealization xmi:id="_oeMlMKk6Ee-lntgJ_JlK2w" client="_nzcYAKk6Ee-lntgJ_JlK2w" supplier="_oeC0Mak6Ee-lntgJ_JlK2w" contract="_oeC0Mak6Ee-lntgJ_JlK2w"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ohyEsKk6Ee-lntgJ_JlK2w" name="CombinedActivation" specification="_nzdmIKk6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_ohyEsak6Ee-lntgJ_JlK2w" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ohyEsqk6Ee-lntgJ_JlK2w" type="_nzcYAKk6Ee-lntgJ_JlK2w" direction="return"/>
                <language>java</language>
                <body>super(name);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ohyEs6k6Ee-lntgJ_JlK2w" name="CombinedActivation" specification="_obGN4Kk6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_ohyEtKk6Ee-lntgJ_JlK2w" name="elem" type="_nxhscKk6Ee-lntgJ_JlK2w"/>
                <ownedParameter xmi:id="_ohyEtak6Ee-lntgJ_JlK2w" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ohyEtqk6Ee-lntgJ_JlK2w" type="_nzcYAKk6Ee-lntgJ_JlK2w" direction="return"/>
                <language>java</language>
                <body>super(elem, time);	&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ohyrwKk6Ee-lntgJ_JlK2w" name="CombinedActivation" specification="_obG08Kk6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_ohyrwak6Ee-lntgJ_JlK2w" name="priorEntry" type="_nxhscKk6Ee-lntgJ_JlK2w"/>
                <ownedParameter xmi:id="_ohyrwqk6Ee-lntgJ_JlK2w" name="next" type="_nxhscKk6Ee-lntgJ_JlK2w"/>
                <ownedParameter xmi:id="_ohyrw6k6Ee-lntgJ_JlK2w" type="_nzcYAKk6Ee-lntgJ_JlK2w" direction="return"/>
                <language>java</language>
                <body>/* create a new this and add priorEntry &#xD;
		 * and next as subObjects. The new name is &#xD;
		 * &quot;PriorName + NextName&quot;. &#xD;
		 */&#xD;
		super(priorEntry,next.getLastUpdateTime());&#xD;
		String combinedName = &#xD;
				priorEntry.getName() + &quot;+&quot; + next.getName();&#xD;
		/* initially, this will be a clone of priorEntry */;&#xD;
		/* now update its name and add relevant attributes from next */&#xD;
		this.setName(combinedName);&#xD;
		this.addSubObject(priorEntry);&#xD;
		this.addSubObject(next);&#xD;
		var endTime = Math.max(priorEntry.getEndTime(), next.getEndTime());&#xD;
		this.setEndTime(endTime);&#xD;
		var startTime = Math.min(priorEntry.getStartTime(), next.getStartTime());&#xD;
		this.setStartTime(startTime);&#xD;
		this.addEdges(next.getEdges());&#xD;
		this.addCoordinators(next.getCoordinators());&#xD;
		this.addConflicts(next.getConflicts());&#xD;
		&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ohyrxKk6Ee-lntgJ_JlK2w" name="canCombine" specification="_obG09qk6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_ohyrxak6Ee-lntgJ_JlK2w" name="a2" type="_nxhscKk6Ee-lntgJ_JlK2w"/>
                <ownedParameter xmi:id="_ohyrxqk6Ee-lntgJ_JlK2w" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>Boolean result = false;&#xD;
		/* make sure a2 is not null */&#xD;
		if (a2 != null) {&#xD;
			var newEntryCoordinator = a2.getCoordinators().get(0);&#xD;
			if (getCoordinators().contains(newEntryCoordinator)) {&#xD;
				/* The (first) coordinator of the newEntry&#xD;
				 * is in the list of coordinators of the prior entry.&#xD;
				 * Thus, these two can be combined for efficiency &#xD;
				 */&#xD;
&#xD;
				result = true;&#xD;
			}&#xD;
		}&#xD;
		return result;&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_nzdmIKk6Ee-lntgJ_JlK2w" name="CombinedActivation" visibility="package" method="_ohyEsKk6Ee-lntgJ_JlK2w">
                <eAnnotations xmi:id="_nzeNMKk6Ee-lntgJ_JlK2w" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_nzeNMak6Ee-lntgJ_JlK2w" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_nzdmIak6Ee-lntgJ_JlK2w" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_nzeNMqk6Ee-lntgJ_JlK2w" type="_nzcYAKk6Ee-lntgJ_JlK2w" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_obGN4Kk6Ee-lntgJ_JlK2w" name="CombinedActivation" visibility="package" method="_ohyEs6k6Ee-lntgJ_JlK2w">
                <eAnnotations xmi:id="_obGN46k6Ee-lntgJ_JlK2w" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_obGN5Kk6Ee-lntgJ_JlK2w" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_obGN4ak6Ee-lntgJ_JlK2w" name="elem" type="_nxhscKk6Ee-lntgJ_JlK2w"/>
                <ownedParameter xmi:id="_obGN4qk6Ee-lntgJ_JlK2w" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_obGN5ak6Ee-lntgJ_JlK2w" type="_nzcYAKk6Ee-lntgJ_JlK2w" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_obG08Kk6Ee-lntgJ_JlK2w" name="CombinedActivation" visibility="package" method="_ohyrwKk6Ee-lntgJ_JlK2w">
                <eAnnotations xmi:id="_obG086k6Ee-lntgJ_JlK2w" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_obG09Kk6Ee-lntgJ_JlK2w" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_obG08ak6Ee-lntgJ_JlK2w" name="priorEntry" type="_nxhscKk6Ee-lntgJ_JlK2w"/>
                <ownedParameter xmi:id="_obG08qk6Ee-lntgJ_JlK2w" name="next" type="_nxhscKk6Ee-lntgJ_JlK2w"/>
                <ownedParameter xmi:id="_obG09ak6Ee-lntgJ_JlK2w" type="_nzcYAKk6Ee-lntgJ_JlK2w" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_obG09qk6Ee-lntgJ_JlK2w" name="canCombine" method="_ohyrxKk6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_obG096k6Ee-lntgJ_JlK2w" name="a2" type="_nxhscKk6Ee-lntgJ_JlK2w"/>
                <ownedParameter xmi:id="_obG0-Kk6Ee-lntgJ_JlK2w" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_nzgpcKk6Ee-lntgJ_JlK2w" name="CommunicationGraph">
              <ownedComment xmi:id="_oi6tIKk6Ee-lntgJ_JlK2w">
                <body>@author sgoddard2&#xD;
 *</body>
              </ownedComment>
              <generalization xmi:id="_obJ4Qqk6Ee-lntgJ_JlK2w" general="_n6jsoKk6Ee-lntgJ_JlK2w"/>
              <ownedAttribute xmi:id="_ogAjEKk6Ee-lntgJ_JlK2w" name="wfm" visibility="package" type="_n0HGYKk6Ee-lntgJ_JlK2w" association="_oj9O9Kk6Ee-lntgJ_JlK2w"/>
              <ownedAttribute xmi:id="_ogCYQKk6Ee-lntgJ_JlK2w" name="graphFileName" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_ogCYQqk6Ee-lntgJ_JlK2w" name="verbose" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_ogC_Uak6Ee-lntgJ_JlK2w" name="workLoad" visibility="package" type="_n8NScKk6Ee-lntgJ_JlK2w" association="_oj92Aak6Ee-lntgJ_JlK2w"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ohzS0Kk6Ee-lntgJ_JlK2w" name="CommunicationGraph" specification="_obIDEKk6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_ohzS0ak6Ee-lntgJ_JlK2w" name="fm" type="_n0HGYKk6Ee-lntgJ_JlK2w"/>
                <ownedParameter xmi:id="_ohzS0qk6Ee-lntgJ_JlK2w" name="workLoad" type="_n8NScKk6Ee-lntgJ_JlK2w"/>
                <ownedParameter xmi:id="_ohzS06k6Ee-lntgJ_JlK2w" type="_nzgpcKk6Ee-lntgJ_JlK2w" direction="return"/>
                <language>java</language>
                <body>// constructor for GraphFile class&#xD;
		super(fm, workLoad, &quot;.wf&quot;);&#xD;
		this.wfm = fm;&#xD;
		this.workLoad = workLoad;&#xD;
		verbose = false; // initialize verbose to false&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ohzS1Kk6Ee-lntgJ_JlK2w" name="CommunicationGraph" specification="_obIqIqk6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_ohzS1ak6Ee-lntgJ_JlK2w" name="fm" type="_n0HGYKk6Ee-lntgJ_JlK2w"/>
                <ownedParameter xmi:id="_ohzS1qk6Ee-lntgJ_JlK2w" name="workLoad" type="_n8NScKk6Ee-lntgJ_JlK2w"/>
                <ownedParameter xmi:id="_ohzS16k6Ee-lntgJ_JlK2w" name="verbose">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ohzS2Kk6Ee-lntgJ_JlK2w" type="_nzgpcKk6Ee-lntgJ_JlK2w" direction="return"/>
                <language>java</language>
                <body>// constructor for GraphFile class&#xD;
		super(fm, workLoad, &quot;.wf&quot;);&#xD;
		this.wfm = fm;&#xD;
		this.workLoad = workLoad;&#xD;
		this.verbose = verbose; // initialize verbose to false&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ohz54Kk6Ee-lntgJ_JlK2w" name="createHeader" specification="_nzieoKk6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_ohz54ak6Ee-lntgJ_JlK2w" type="_nzwhEKk6Ee-lntgJ_JlK2w" direction="return"/>
                <language>java</language>
                <body>Description header = new Description();&#xD;
		header.add(String.format(&quot;WARP_%s{\n&quot;,workLoad.getName()));&#xD;
		return header;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ohz54qk6Ee-lntgJ_JlK2w" name="createFooter" specification="_nzkT0ak6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_ohz546k6Ee-lntgJ_JlK2w" type="_nzwhEKk6Ee-lntgJ_JlK2w" direction="return"/>
                <language>java</language>
                <body>Description footer = new Description();&#xD;
		footer.add(&quot;}\n&quot;);&#xD;
		return footer;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ohz55Kk6Ee-lntgJ_JlK2w" name="visualization" specification="_nzmJAKk6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_ohz55ak6Ee-lntgJ_JlK2w" type="_nzwhEKk6Ee-lntgJ_JlK2w" direction="return"/>
                <language>java</language>
                <body>Description content = new Description();&#xD;
     String line = String.format(&#xD;
     	&quot;// M = %s and End-to-End reliability = %s\n&quot;,&#xD;
     	String.valueOf(workLoad.getMinPacketReceptionRate()),&#xD;
     	String.valueOf(workLoad.getE2e()));&#xD;
     content.add(line);&#xD;
     var flowNames = workLoad.getFlowNames();&#xD;
     for (int flowIndex = 0; flowIndex &lt; flowNames.length; flowIndex++) {&#xD;
         var flowName = flowNames[flowIndex];&#xD;
         var nodesInFlow = workLoad.getNodesInFlow(flowName);&#xD;
         var nNodesInFlow = (nodesInFlow.length);&#xD;
         /* array of communications costs per link */&#xD;
         var linkCostArray = workLoad.getNumTxAttemptsPerLink(flowName); &#xD;
         var totalCost = workLoad.getTotalTxAttemptsInFlow(flowName);&#xD;
         var minCost = nNodesInFlow - 1 ;&#xD;
         /*&#xD;
          * nEdges in the flow is the minimum communication cost, &#xD;
          * i.e., min nTx to go E2E with no errors&#xD;
          */&#xD;
         line = String.format(&#xD;
         		&quot;// Flow %s has a minimum communication cost of %d &quot;&#xD;
         		+ &quot;and a worst-case communication cost of %d\n&quot;, &#xD;
         		flowName, minCost, totalCost);&#xD;
         content.add(line);&#xD;
         line = String.format(&#xD;
         		&quot; %s (%d,%d,%d,%d) : &quot;, flowName, &#xD;
         		workLoad.getFlowPriority(flowName), workLoad.getFlowPeriod(flowName), &#xD;
         		workLoad.getFlowDeadline(flowName), workLoad.getFlowPhase(flowName)); &#xD;
         String nodeName;&#xD;
         for (int i = 0; i &lt; nNodesInFlow-1; i++) {  &#xD;
             nodeName = nodesInFlow[i];&#xD;
             var nTx = linkCostArray[i];&#xD;
             line = String.format(line + &quot;%s -%d-> &quot;,nodeName,nTx); &#xD;
             /* This version of the file has nTx in the edges of the flow */&#xD;
         }&#xD;
         nodeName = nodesInFlow[nNodesInFlow-1];&#xD;
         line = String.format(line + &quot;%s\n&quot;,nodeName); // add last node on the flow&#xD;
         content.add(line);&#xD;
     }&#xD;
     return content;&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oh0g8Kk6Ee-lntgJ_JlK2w" name="createWarpFileContent" specification="_nzmwEqk6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_oh0g8ak6Ee-lntgJ_JlK2w" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>String wfFileContents = fileVisualization().toString();&#xD;
     if (verbose) {&#xD;
     	System.out.println(&quot;************************************&quot;);&#xD;
     	System.out.println(&quot;Warp File Contents:&quot;);&#xD;
     	System.out.println(wfFileContents);&#xD;
     	System.out.println(&quot;************************************\n&quot;);&#xD;
     }&#xD;
     return wfFileContents;&#xD;
 </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_nzieoKk6Ee-lntgJ_JlK2w" name="createHeader" method="_ohz54Kk6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_obJRNak6Ee-lntgJ_JlK2w" type="_nzwhEKk6Ee-lntgJ_JlK2w" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_nzkT0ak6Ee-lntgJ_JlK2w" name="createFooter" method="_ohz54qk6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_obJ4QKk6Ee-lntgJ_JlK2w" type="_nzwhEKk6Ee-lntgJ_JlK2w" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_nzmJAKk6Ee-lntgJ_JlK2w" name="visualization" method="_ohz55Kk6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_obJ4Qak6Ee-lntgJ_JlK2w" type="_nzwhEKk6Ee-lntgJ_JlK2w" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_nzmwEqk6Ee-lntgJ_JlK2w" name="createWarpFileContent" method="_oh0g8Kk6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_nznXIKk6Ee-lntgJ_JlK2w" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_obIDEKk6Ee-lntgJ_JlK2w" name="CommunicationGraph" method="_ohzS0Kk6Ee-lntgJ_JlK2w">
                <eAnnotations xmi:id="_obIDE6k6Ee-lntgJ_JlK2w" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_obIqIKk6Ee-lntgJ_JlK2w" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_obIDEak6Ee-lntgJ_JlK2w" name="fm" type="_n0HGYKk6Ee-lntgJ_JlK2w"/>
                <ownedParameter xmi:id="_obIDEqk6Ee-lntgJ_JlK2w" name="workLoad" type="_n8NScKk6Ee-lntgJ_JlK2w"/>
                <ownedParameter xmi:id="_obIqIak6Ee-lntgJ_JlK2w" type="_nzgpcKk6Ee-lntgJ_JlK2w" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_obIqIqk6Ee-lntgJ_JlK2w" name="CommunicationGraph" method="_ohzS1Kk6Ee-lntgJ_JlK2w">
                <eAnnotations xmi:id="_obJRMqk6Ee-lntgJ_JlK2w" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_obJRM6k6Ee-lntgJ_JlK2w" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_obIqI6k6Ee-lntgJ_JlK2w" name="fm" type="_n0HGYKk6Ee-lntgJ_JlK2w"/>
                <ownedParameter xmi:id="_obJRMKk6Ee-lntgJ_JlK2w" name="workLoad" type="_n8NScKk6Ee-lntgJ_JlK2w"/>
                <ownedParameter xmi:id="_obJRMak6Ee-lntgJ_JlK2w" name="verbose">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_obJRNKk6Ee-lntgJ_JlK2w" type="_nzgpcKk6Ee-lntgJ_JlK2w" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_nzqacKk6Ee-lntgJ_JlK2w" name="ConnectivityPoset">
              <ownedComment xmi:id="_oi6tIak6Ee-lntgJ_JlK2w">
                <body>ConnectivityPoset extends Poset by selecting&#xD;
primary coordinator in the flow based on highest&#xD;
global connectivity.&#xD;
&#xD;
@author sgoddard</body>
              </ownedComment>
              <generalization xmi:id="_obLtcKk6Ee-lntgJ_JlK2w" general="_n1m7MKk6Ee-lntgJ_JlK2w"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oh0g8qk6Ee-lntgJ_JlK2w" name="ConnectivityPoset" specification="_obKfUKk6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_oh0g86k6Ee-lntgJ_JlK2w" name="workload" type="_n8NScKk6Ee-lntgJ_JlK2w"/>
                <ownedParameter xmi:id="_oh0g9Kk6Ee-lntgJ_JlK2w" type="_nzqacKk6Ee-lntgJ_JlK2w" direction="return"/>
                <language>java</language>
                <body>super(workload);&#xD;
		&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oh0g9ak6Ee-lntgJ_JlK2w" name="findCoordinator" specification="_oeOaYKk6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_oh0g9qk6Ee-lntgJ_JlK2w" name="nodesInFlow" type="_oawPoKk6Ee-lntgJ_JlK2w"/>
                <ownedParameter xmi:id="_oh0g96k6Ee-lntgJ_JlK2w" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var coordinatorIndex = 0;&#xD;
		var maxConnections = 0;&#xD;
		var size = nodesInFlow.size();&#xD;
		for (Integer i = 0; i &lt; size; i++) {&#xD;
			/* get the #connections for this node from the&#xD;
			 * connectivity Map and see if it is the max so far&#xD;
			 * if so, store its index in the flow&#xD;
			 */&#xD;
			var node = nodesInFlow.get(i);&#xD;
			var numConnections = nodeConnectivityMap.get(node.getName());&#xD;
			if (numConnections > maxConnections) {&#xD;
				maxConnections = numConnections;&#xD;
				coordinatorIndex = i;&#xD;
			}&#xD;
		}	&#xD;
		/* return the index with the largest connectivity */&#xD;
		return coordinatorIndex;&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_obKfUKk6Ee-lntgJ_JlK2w" name="ConnectivityPoset" visibility="package" method="_oh0g8qk6Ee-lntgJ_JlK2w">
                <eAnnotations xmi:id="_obLGYak6Ee-lntgJ_JlK2w" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_obLGYqk6Ee-lntgJ_JlK2w" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_obLGYKk6Ee-lntgJ_JlK2w" name="workload" type="_n8NScKk6Ee-lntgJ_JlK2w"/>
                <ownedParameter xmi:id="_obLGY6k6Ee-lntgJ_JlK2w" type="_nzqacKk6Ee-lntgJ_JlK2w" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_oeOaYKk6Ee-lntgJ_JlK2w" name="findCoordinator" visibility="protected" method="_oh0g9ak6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_oeOaYak6Ee-lntgJ_JlK2w" name="nodesInFlow" type="_oawPoKk6Ee-lntgJ_JlK2w"/>
                <ownedParameter xmi:id="_oeOaYqk6Ee-lntgJ_JlK2w" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_nzs2sKk6Ee-lntgJ_JlK2w" name="DeadlineComparator">
              <interfaceRealization xmi:id="_oePogKk6Ee-lntgJ_JlK2w" client="_nzs2sKk6Ee-lntgJ_JlK2w" supplier="_obMUgKk6Ee-lntgJ_JlK2w" contract="_obMUgKk6Ee-lntgJ_JlK2w"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oh1IAKk6Ee-lntgJ_JlK2w" name="compare" specification="_oeQ2oak6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_oh1IAak6Ee-lntgJ_JlK2w" name="obj1" type="_oeQPkak6Ee-lntgJ_JlK2w"/>
                <ownedParameter xmi:id="_oh1IAqk6Ee-lntgJ_JlK2w" name="obj2" type="_oeQPkak6Ee-lntgJ_JlK2w"/>
                <ownedParameter xmi:id="_oh1IA6k6Ee-lntgJ_JlK2w" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>return obj1.deadlineComparison(obj2); &#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_oeQ2oak6Ee-lntgJ_JlK2w" name="compare" method="_oh1IAKk6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_oeQ2oqk6Ee-lntgJ_JlK2w" name="obj1" type="_oeQPkak6Ee-lntgJ_JlK2w"/>
                <ownedParameter xmi:id="_oeQ2o6k6Ee-lntgJ_JlK2w" name="obj2" type="_oeQPkak6Ee-lntgJ_JlK2w"/>
                <ownedParameter xmi:id="_oeQ2pKk6Ee-lntgJ_JlK2w" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_nzwhEKk6Ee-lntgJ_JlK2w" name="Description">
              <ownedComment xmi:id="_oi6tIqk6Ee-lntgJ_JlK2w">
                <body>@author sgoddard&#xD;
 *</body>
              </ownedComment>
              <generalization xmi:id="_oeSEwKk6Ee-lntgJ_JlK2w" general="_oawPoKk6Ee-lntgJ_JlK2w"/>
              <ownedAttribute xmi:id="_ogDmYKk6Ee-lntgJ_JlK2w" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_ogDmYak6Ee-lntgJ_JlK2w" value="1L"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oh1vEKk6Ee-lntgJ_JlK2w" name="Description" specification="_nzxvMKk6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_oh1vEak6Ee-lntgJ_JlK2w" type="_nzwhEKk6Ee-lntgJ_JlK2w" direction="return"/>
                <language>java</language>
                <body>super();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oh1vEqk6Ee-lntgJ_JlK2w" name="Description" specification="_nzyWQKk6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_oh1vE6k6Ee-lntgJ_JlK2w" name="descriptionString">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_oh1vFKk6Ee-lntgJ_JlK2w" type="_nzwhEKk6Ee-lntgJ_JlK2w" direction="return"/>
                <language>java</language>
                <body>super();&#xD;
		String[] lines = descriptionString.split(&quot;\\r?\\n&quot;);&#xD;
		for (String line : lines) {&#xD;
			this.add(line+&quot;\n&quot;);&#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oh1vFak6Ee-lntgJ_JlK2w" name="toString" specification="_nzy9VKk6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_oh1vFqk6Ee-lntgJ_JlK2w" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>StringBuffer sb = new StringBuffer();&#xD;
		for (String row: this) { &#xD;
			sb.append(row);&#xD;
		}&#xD;
		return sb.toString();&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_nzxvMKk6Ee-lntgJ_JlK2w" name="Description" method="_oh1vEKk6Ee-lntgJ_JlK2w">
                <eAnnotations xmi:id="_nzxvMak6Ee-lntgJ_JlK2w" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_nzxvMqk6Ee-lntgJ_JlK2w" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_nzxvM6k6Ee-lntgJ_JlK2w" type="_nzwhEKk6Ee-lntgJ_JlK2w" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_nzyWQKk6Ee-lntgJ_JlK2w" name="Description" method="_oh1vEqk6Ee-lntgJ_JlK2w">
                <eAnnotations xmi:id="_nzy9Uak6Ee-lntgJ_JlK2w" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_nzy9Uqk6Ee-lntgJ_JlK2w" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_nzy9UKk6Ee-lntgJ_JlK2w" name="descriptionString">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_nzy9U6k6Ee-lntgJ_JlK2w" type="_nzwhEKk6Ee-lntgJ_JlK2w" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_nzy9VKk6Ee-lntgJ_JlK2w" name="toString" method="_oh1vFak6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_nzzkYKk6Ee-lntgJ_JlK2w" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_nz2AoKk6Ee-lntgJ_JlK2w" name="Edge">
              <generalization xmi:id="_obOwxak6Ee-lntgJ_JlK2w" general="_n4iTYKk6Ee-lntgJ_JlK2w"/>
              <ownedAttribute xmi:id="_ogDmYqk6Ee-lntgJ_JlK2w" name="UNKNOWN" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_ogENcKk6Ee-lntgJ_JlK2w" value="&quot;Unknown&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_ogENcak6Ee-lntgJ_JlK2w" name="flow">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_ogENcqk6Ee-lntgJ_JlK2w" name="src">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_ogENc6k6Ee-lntgJ_JlK2w" name="snk">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_ogENdKk6Ee-lntgJ_JlK2w" name="instance">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_ogENdak6Ee-lntgJ_JlK2w" name="coordinator">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_ogENdqk6Ee-lntgJ_JlK2w" name="state" type="_nz4c4Kk6Ee-lntgJ_JlK2w" association="_oi77QKk6Ee-lntgJ_JlK2w"/>
              <ownedAttribute xmi:id="_ogE0gKk6Ee-lntgJ_JlK2w" name="numTx" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <interfaceRealization xmi:id="_oeSr0Kk6Ee-lntgJ_JlK2w" client="_nz2AoKk6Ee-lntgJ_JlK2w" supplier="_oeC0Mak6Ee-lntgJ_JlK2w" contract="_oeC0Mak6Ee-lntgJ_JlK2w"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oh2WIKk6Ee-lntgJ_JlK2w" name="Edge" specification="_nz6SEKk6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_oh2WIak6Ee-lntgJ_JlK2w" type="_nz2AoKk6Ee-lntgJ_JlK2w" direction="return"/>
                <language>java</language>
                <body>super();&#xD;
		this.flow = UNKNOWN;&#xD;
		this.src = UNKNOWN;&#xD;
		this.snk = UNKNOWN;&#xD;
		this.instance = 0;&#xD;
		this.coordinator = UNKNOWN;&#xD;
		this.state = EdgeState.NOT_READY;&#xD;
		this.numTx = 0;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oh2WIqk6Ee-lntgJ_JlK2w" name="Edge" specification="_nz8HQKk6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_oh2WI6k6Ee-lntgJ_JlK2w" name="flow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_oh2WJKk6Ee-lntgJ_JlK2w" name="src">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_oh2WJak6Ee-lntgJ_JlK2w" name="snk">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_oh2WJqk6Ee-lntgJ_JlK2w" name="priority">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_oh2WJ6k6Ee-lntgJ_JlK2w" name="period">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_oh2WKKk6Ee-lntgJ_JlK2w" name="deadline">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_oh2WKak6Ee-lntgJ_JlK2w" name="phase">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_oh2WKqk6Ee-lntgJ_JlK2w" name="numTx">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_oh2WK6k6Ee-lntgJ_JlK2w" type="_nz2AoKk6Ee-lntgJ_JlK2w" direction="return"/>
                <language>java</language>
                <body>super(priority, period, deadline, phase);&#xD;
		this.flow = flow;&#xD;
		this.src =src;&#xD;
		this.snk = snk;&#xD;
		this.instance = 0;&#xD;
		this.coordinator = UNKNOWN;&#xD;
		this.state = EdgeState.NOT_READY;	&#xD;
		this.numTx = numTx;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oh2WLKk6Ee-lntgJ_JlK2w" name="compareTo" specification="_obOJsKk6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_oh2WLak6Ee-lntgJ_JlK2w" name="edge" type="_nz2AoKk6Ee-lntgJ_JlK2w"/>
                <ownedParameter xmi:id="_oh2WLqk6Ee-lntgJ_JlK2w" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>return edge.getPriority() > this.getPriority() ? 1 : -1;&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oh29MKk6Ee-lntgJ_JlK2w" name="toString" specification="_nz9VYKk6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_oh29Mak6Ee-lntgJ_JlK2w" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>String result = String.format(&quot;%s:(%s,%s)&quot;, &#xD;
 			this.flow, this.src, this.snk);&#xD;
     return result;&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oh29Mqk6Ee-lntgJ_JlK2w" name="print" specification="_nz_Kkak6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_oh29M6k6Ee-lntgJ_JlK2w" name="headerMsg">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>System.out.printf(&quot;\n%s&quot;,headerMsg);&#xD;
		this.print();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oh29NKk6Ee-lntgJ_JlK2w" name="print" specification="_n0Bm0Kk6Ee-lntgJ_JlK2w">
                <language>java</language>
                <body>super.print();&#xD;
		System.out.printf(&quot;\tFlow:%s\n&quot;, this.flow);&#xD;
		System.out.printf(&quot;\tSrc:%s\n&quot;, this.src);&#xD;
		System.out.printf(&quot;\tSnk:%s\n&quot;, this.snk);&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_nz6SEKk6Ee-lntgJ_JlK2w" name="Edge" visibility="package" method="_oh2WIKk6Ee-lntgJ_JlK2w">
                <eAnnotations xmi:id="_nz6SEak6Ee-lntgJ_JlK2w" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_nz6SEqk6Ee-lntgJ_JlK2w" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_nz6SE6k6Ee-lntgJ_JlK2w" type="_nz2AoKk6Ee-lntgJ_JlK2w" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_nz8HQKk6Ee-lntgJ_JlK2w" name="Edge" visibility="package" method="_oh2WIqk6Ee-lntgJ_JlK2w">
                <eAnnotations xmi:id="_nz8uVKk6Ee-lntgJ_JlK2w" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_nz8uVak6Ee-lntgJ_JlK2w" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_nz8HQak6Ee-lntgJ_JlK2w" name="flow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_nz8HQqk6Ee-lntgJ_JlK2w" name="src">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_nz8HQ6k6Ee-lntgJ_JlK2w" name="snk">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_nz8HRKk6Ee-lntgJ_JlK2w" name="priority">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_nz8uUKk6Ee-lntgJ_JlK2w" name="period">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_nz8uUak6Ee-lntgJ_JlK2w" name="deadline">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_nz8uUqk6Ee-lntgJ_JlK2w" name="phase">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_nz8uU6k6Ee-lntgJ_JlK2w" name="numTx">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_nz8uVqk6Ee-lntgJ_JlK2w" type="_nz2AoKk6Ee-lntgJ_JlK2w" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_nz9VYKk6Ee-lntgJ_JlK2w" name="toString" method="_oh29MKk6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_nz98cKk6Ee-lntgJ_JlK2w" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_nz_Kkak6Ee-lntgJ_JlK2w" name="print" method="_oh29Mqk6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_nz_Kkqk6Ee-lntgJ_JlK2w" name="headerMsg">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_n0Bm0Kk6Ee-lntgJ_JlK2w" name="print" method="_oh29NKk6Ee-lntgJ_JlK2w"/>
              <ownedOperation xmi:id="_obOJsKk6Ee-lntgJ_JlK2w" name="compareTo" method="_oh2WLKk6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_obOwwKk6Ee-lntgJ_JlK2w" name="edge" type="_nz2AoKk6Ee-lntgJ_JlK2w"/>
                <ownedParameter xmi:id="_obOwwak6Ee-lntgJ_JlK2w" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <nestedClassifier xmi:type="uml:Enumeration" xmi:id="_nz4c4Kk6Ee-lntgJ_JlK2w" name="EdgeState" visibility="private">
                <ownedLiteral xmi:id="_nz5rAKk6Ee-lntgJ_JlK2w" name="RELEASED"/>
                <ownedLiteral xmi:id="_nz5rAak6Ee-lntgJ_JlK2w" name="EXECUTING"/>
                <ownedLiteral xmi:id="_nz5rAqk6Ee-lntgJ_JlK2w" name="NOT_READY"/>
              </nestedClassifier>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_n0HGYKk6Ee-lntgJ_JlK2w" name="FileManager">
              <ownedComment xmi:id="_oi8iUKk6Ee-lntgJ_JlK2w">
                <body>@author sgoddard&#xD;
@version 1.5&#xD;
 *</body>
              </ownedComment>
              <ownedAttribute xmi:id="_ogE0gak6Ee-lntgJ_JlK2w" name="baseDirectory">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_ogFbkKk6Ee-lntgJ_JlK2w" name="verbose" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oh29Nak6Ee-lntgJ_JlK2w" name="FileManager" specification="_n0IUgKk6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_oh29Nqk6Ee-lntgJ_JlK2w" type="_n0HGYKk6Ee-lntgJ_JlK2w" direction="return"/>
                <language>java</language>
                <body>baseDirectory = System.getProperty(&quot;user.dir&quot;); // Get current directory path and set to the&#xD;
                                                 // base directory&#xD;
 // constructor for this class&#xD;
 verbose = false; // initialize verbose to false&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oh3kQKk6Ee-lntgJ_JlK2w" name="FileManager" specification="_n0I7kak6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_oh3kQak6Ee-lntgJ_JlK2w" name="verbose">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_oh3kQqk6Ee-lntgJ_JlK2w" type="_n0HGYKk6Ee-lntgJ_JlK2w" direction="return"/>
                <language>java</language>
                <body>baseDirectory = System.getProperty(&quot;user.dir&quot;); // Get current directory path and set to the&#xD;
                                                 // base directory&#xD;
 // constructor for this class&#xD;
 this.verbose = verbose; // initialize verbose as specified&#xD;
&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oh3kQ6k6Ee-lntgJ_JlK2w" name="getDocumentsDirectory" specification="_n0JipKk6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_oh3kRKk6Ee-lntgJ_JlK2w" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>// return the 'Documents Directory' for the appropriate OS&#xD;
 String documentsDirectory;&#xD;
 if (OSValidator.isWindows()) {&#xD;
   documentsDirectory = new JFileChooser().getFileSystemView().getDefaultDirectory().toString();&#xD;
 } else if (OSValidator.isMac()) {&#xD;
   documentsDirectory = System.getProperty(&quot;user.home&quot;) + File.separator + &quot;Documents&quot;;&#xD;
 } else { // for all other Unix systems&#xD;
   documentsDirectory = System.getProperty(&quot;user.home&quot;); // assume $HOME for Unix systems (not&#xD;
                                                         // MACOS)&#xD;
 }&#xD;
 return documentsDirectory;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oh3kRak6Ee-lntgJ_JlK2w" name="getCurrentDirectory" specification="_n0KJsak6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_oh3kRqk6Ee-lntgJ_JlK2w" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return System.getProperty(&quot;user.dir&quot;);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oh3kR6k6Ee-lntgJ_JlK2w" name="createFile" specification="_n0LX0Kk6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_oh3kSKk6Ee-lntgJ_JlK2w" name="file">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_oh3kSak6Ee-lntgJ_JlK2w" name="nameExtension">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_oh3kSqk6Ee-lntgJ_JlK2w" name="suffix">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_oh3kS6k6Ee-lntgJ_JlK2w" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>/*&#xD;
  * we don't actually create the file...it will be created when written to this routine really&#xD;
  * just creates the file name ;-)&#xD;
  */&#xD;
 Integer suffixIndex = file.lastIndexOf('.');&#xD;
 String fileString = file;&#xD;
 if (suffixIndex > 0) { // if a suffix exists, index will be > 0&#xD;
   fileString = file.substring(0, suffixIndex); // get the file string sans the suffix&#xD;
 }&#xD;
 /*&#xD;
  * fileString has no suffix at this point (removed if it existed) Now add file name extension&#xD;
  * and suffix&#xD;
  */&#xD;
 fileString = fileString + nameExtension + suffix;&#xD;
&#xD;
 if (verbose) {&#xD;
   System.out.println(&quot;File &quot; + fileString + &quot; is created!&quot;);&#xD;
 }&#xD;
 return fileString;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oh4LUKk6Ee-lntgJ_JlK2w" name="createFile" specification="_n0Ml8Kk6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_oh4LUak6Ee-lntgJ_JlK2w" name="file">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_oh4LUqk6Ee-lntgJ_JlK2w" name="suffix">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_oh4LU6k6Ee-lntgJ_JlK2w" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>Integer suffixIndex = file.lastIndexOf('.');&#xD;
 String fileString = file;&#xD;
 if (suffixIndex > 0) { // if a suffix exists, index will be > 0&#xD;
   fileString = file.substring(0, suffixIndex - 1); // get the file string sans the suffix&#xD;
 }&#xD;
 // fileString has no suffix at this point (removed if it existed)&#xD;
 // Now add file name extension and suffix&#xD;
 fileString = fileString + suffix;&#xD;
 // we don't actually create the file...it will be created when written to&#xD;
 // this routine really just creates the file name ;-)&#xD;
 if (verbose) {&#xD;
   System.out.println(&quot;File &quot; + fileString + &quot; is created!&quot;);&#xD;
 }&#xD;
 return fileString;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oh4LVKk6Ee-lntgJ_JlK2w" name="createDirectory" specification="_n0NNAKk6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_oh4LVak6Ee-lntgJ_JlK2w" name="directory">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_oh4LVqk6Ee-lntgJ_JlK2w" name="subDirectory">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_oh4LV6k6Ee-lntgJ_JlK2w" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>String newDirectory;&#xD;
 if (subDirectory.startsWith(&quot;/&quot;)) { // check if full path provided&#xD;
   newDirectory = subDirectory; // if subDirectory is a full path, use it.&#xD;
 } else { // subDirectory has relative path, so just append&#xD;
   newDirectory = directory + File.separator + subDirectory;&#xD;
 }&#xD;
 try {&#xD;
   Path path = Paths.get(newDirectory);&#xD;
   Files.createDirectories(path);&#xD;
   if (verbose) {&#xD;
     System.out.println(&quot;Directory &quot; + newDirectory + &quot; is created!&quot;);&#xD;
   }&#xD;
 } catch (IOException e) {&#xD;
   System.err.println(&quot;Failed to create directory!&quot; + e.getMessage());&#xD;
   newDirectory = directory; // in case of error, just use the initial directory&#xD;
 }&#xD;
 return newDirectory;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oh4LWKk6Ee-lntgJ_JlK2w" name="writeFile" specification="_n0ObIKk6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_oh4LWak6Ee-lntgJ_JlK2w" name="file">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_oh4LWqk6Ee-lntgJ_JlK2w" name="fileContents">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>// Authentication tag = new Authentication(COURSE_TAG);&#xD;
 Path fileName = Path.of(file);&#xD;
 try {&#xD;
   // Files.writeString(fileName, tag.sign(fileContents)); // uncomment to tag course file&#xD;
   Files.writeString(fileName, fileContents); // comment out if tag is being used (line above)&#xD;
 } catch (IOException e) {&#xD;
   // handle error&#xD;
   System.err.println(&quot;Error on writing file contents to file&quot; + file + &quot;: &quot; + e.getMessage());&#xD;
 } // the file will be closed automatically upon exit of this try block&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oh4LW6k6Ee-lntgJ_JlK2w" name="readFile" specification="_n0PCMKk6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_oh4LXKk6Ee-lntgJ_JlK2w" name="file">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_oh4LXak6Ee-lntgJ_JlK2w" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>// String contents = null;&#xD;
 Path fileName = Path.of(file);&#xD;
 String contents = null;&#xD;
 try {&#xD;
   contents = Files.readString(fileName);&#xD;
 } catch (IOException e) {&#xD;
   // handle error&#xD;
   System.err.println(&quot;Error on reading file&quot; + file + &quot;: &quot; + e.getMessage());&#xD;
 } // the file will be closed automatically upon exit of this try block&#xD;
 return contents;&#xD;
  </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_n0IUgKk6Ee-lntgJ_JlK2w" name="FileManager" method="_oh29Nak6Ee-lntgJ_JlK2w">
                <eAnnotations xmi:id="_n0IUgak6Ee-lntgJ_JlK2w" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_n0IUgqk6Ee-lntgJ_JlK2w" key="create"/>
                </eAnnotations>
                <ownedComment xmi:id="_oi8iUak6Ee-lntgJ_JlK2w">
                  <body>@param args</body>
                </ownedComment>
                <ownedParameter xmi:id="_n0I7kKk6Ee-lntgJ_JlK2w" type="_n0HGYKk6Ee-lntgJ_JlK2w" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_n0I7kak6Ee-lntgJ_JlK2w" name="FileManager" method="_oh3kQKk6Ee-lntgJ_JlK2w">
                <eAnnotations xmi:id="_n0Jioak6Ee-lntgJ_JlK2w" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_n0Jioqk6Ee-lntgJ_JlK2w" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_n0JioKk6Ee-lntgJ_JlK2w" name="verbose">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_n0Jio6k6Ee-lntgJ_JlK2w" type="_n0HGYKk6Ee-lntgJ_JlK2w" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_n0JipKk6Ee-lntgJ_JlK2w" name="getDocumentsDirectory" method="_oh3kQ6k6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_n0KJsKk6Ee-lntgJ_JlK2w" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_n0KJsak6Ee-lntgJ_JlK2w" name="getCurrentDirectory" method="_oh3kRak6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_n0KJsqk6Ee-lntgJ_JlK2w" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_n0LX0Kk6Ee-lntgJ_JlK2w" name="createFile" method="_oh3kR6k6Ee-lntgJ_JlK2w">
                <ownedComment xmi:id="_oi8iUqk6Ee-lntgJ_JlK2w">
                  <body>Build the name extension used for all files created by this tool. The nameExtension will be&#xD;
   * added to the base input file name so that all of the output files can be associated with the&#xD;
   * input file The file naming pattern is: baseFileNameFileType-NonDefaultParameterList where&#xD;
   * FileType is Schedule, SimInput, ReliabilityMatrix, or ReliabilityArray Default parameters are&#xD;
   * not identified in the NameExtension All parameters used to create the file, should be listed&#xD;
   * near the top of the file in the Parameter Section, followed by the file contents.&#xD;
   *</body>
                </ownedComment>
                <ownedParameter xmi:id="_n0LX0ak6Ee-lntgJ_JlK2w" name="file">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_n0LX0qk6Ee-lntgJ_JlK2w" name="nameExtension">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_n0L-4Kk6Ee-lntgJ_JlK2w" name="suffix">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_n0L-4ak6Ee-lntgJ_JlK2w" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_n0Ml8Kk6Ee-lntgJ_JlK2w" name="createFile" method="_oh4LUKk6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_n0Ml8ak6Ee-lntgJ_JlK2w" name="file">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_n0Ml8qk6Ee-lntgJ_JlK2w" name="suffix">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_n0Ml86k6Ee-lntgJ_JlK2w" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_n0NNAKk6Ee-lntgJ_JlK2w" name="createDirectory" method="_oh4LVKk6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_n0NNAak6Ee-lntgJ_JlK2w" name="directory">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_n0N0EKk6Ee-lntgJ_JlK2w" name="subDirectory">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_n0N0Eak6Ee-lntgJ_JlK2w" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_n0ObIKk6Ee-lntgJ_JlK2w" name="writeFile" method="_oh4LWKk6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_n0ObIak6Ee-lntgJ_JlK2w" name="file">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_n0ObIqk6Ee-lntgJ_JlK2w" name="fileContents">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_n0PCMKk6Ee-lntgJ_JlK2w" name="readFile" method="_oh4LW6k6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_n0PCMak6Ee-lntgJ_JlK2w" name="file">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_n0PpQKk6Ee-lntgJ_JlK2w" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_n0QQUKk6Ee-lntgJ_JlK2w" name="Flow">
              <ownedComment xmi:id="_oi8iU6k6Ee-lntgJ_JlK2w">
                <body>@author sgoddard&#xD;
@author jcbates&#xD;
Allows for Schedulable Objects to be compared to flow charataristics and tracks faults  &#xD;
 *</body>
              </ownedComment>
              <generalization xmi:id="_obXToak6Ee-lntgJ_JlK2w" general="_n4iTYKk6Ee-lntgJ_JlK2w"/>
              <ownedAttribute xmi:id="_ogFbkqk6Ee-lntgJ_JlK2w" name="UNDEFINED" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_ogGCoKk6Ee-lntgJ_JlK2w" value="-1"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_ogGCoak6Ee-lntgJ_JlK2w" name="DEFAULT_FAULTS_TOLERATED" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_ogGCoqk6Ee-lntgJ_JlK2w" value="0"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_ogGCo6k6Ee-lntgJ_JlK2w" name="DEFAULT_INDEX" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_ogGCpKk6Ee-lntgJ_JlK2w" value="0"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_ogGCpak6Ee-lntgJ_JlK2w" name="DEFAULT_PERIOD" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_ogGCpqk6Ee-lntgJ_JlK2w" value="100"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_ogGCp6k6Ee-lntgJ_JlK2w" name="DEFAULT_DEADLINE" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_ogGCqKk6Ee-lntgJ_JlK2w" value="100"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_ogGpsKk6Ee-lntgJ_JlK2w" name="DEFAULT_PHASE" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_ogGpsak6Ee-lntgJ_JlK2w" value="0"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_ogGpsqk6Ee-lntgJ_JlK2w" name="initialPriority" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_ogGps6k6Ee-lntgJ_JlK2w" value="UNDEFINED"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_ogHQwKk6Ee-lntgJ_JlK2w" name="index" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_ogHQwqk6Ee-lntgJ_JlK2w" name="numTxPerLink" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_ogH30ak6Ee-lntgJ_JlK2w" name="nodes" visibility="package" type="_oawPoKk6Ee-lntgJ_JlK2w" association="_oj92BKk6Ee-lntgJ_JlK2w"/>
              <ownedAttribute xmi:id="_ogJF8Kk6Ee-lntgJ_JlK2w" name="linkTxAndTotalCost" visibility="package" type="_oawPoKk6Ee-lntgJ_JlK2w" association="_oj-dEak6Ee-lntgJ_JlK2w"/>
              <ownedAttribute xmi:id="_ogJtAak6Ee-lntgJ_JlK2w" name="edges" visibility="package" type="_oawPoKk6Ee-lntgJ_JlK2w" association="_oj_EIKk6Ee-lntgJ_JlK2w"/>
              <ownedAttribute xmi:id="_ogKUEqk6Ee-lntgJ_JlK2w" name="nodePredecessor" visibility="package" type="_n1UAQKk6Ee-lntgJ_JlK2w" association="_oj_EI6k6Ee-lntgJ_JlK2w"/>
              <ownedAttribute xmi:id="_ogK7Iak6Ee-lntgJ_JlK2w" name="edgePredecessor" visibility="package" type="_nz2AoKk6Ee-lntgJ_JlK2w" association="_oj_rMak6Ee-lntgJ_JlK2w"/>
              <interfaceRealization xmi:id="_oeT58Kk6Ee-lntgJ_JlK2w" client="_n0QQUKk6Ee-lntgJ_JlK2w" supplier="_oeC0Mak6Ee-lntgJ_JlK2w" contract="_oeC0Mak6Ee-lntgJ_JlK2w"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oh4yYKk6Ee-lntgJ_JlK2w" name="Flow" specification="_n0TToKk6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_oh4yYak6Ee-lntgJ_JlK2w" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_oh4yYqk6Ee-lntgJ_JlK2w" name="priority">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_oh4yY6k6Ee-lntgJ_JlK2w" name="index">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_oh4yZKk6Ee-lntgJ_JlK2w" type="_n0QQUKk6Ee-lntgJ_JlK2w" direction="return"/>
                <language>java</language>
                <body>super(name, priority, DEFAULT_PERIOD, DEFAULT_DEADLINE, DEFAULT_PHASE);&#xD;
 	this.index = index;&#xD;
     /*&#xD;
      *  Default numTxPerLink is 1 transmission per link. Will be updated based&#xD;
      *  on flow updated based on flow length and reliability parameters&#xD;
      */&#xD;
     this.numTxPerLink = DEFAULT_FAULTS_TOLERATED + 1; &#xD;
     this.nodes = new ArrayList&lt;>();&#xD;
     this.edges  = new ArrayList&lt;>();&#xD;
     this.linkTxAndTotalCost = new ArrayList&lt;>();&#xD;
     this.edges = new ArrayList&lt;>();	&#xD;
     this.nodePredecessor = null;&#xD;
     this.edgePredecessor = null;&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oh4yZak6Ee-lntgJ_JlK2w" name="Flow" specification="_n0UhwKk6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_oh4yZqk6Ee-lntgJ_JlK2w" type="_n0QQUKk6Ee-lntgJ_JlK2w" direction="return"/>
                <language>java</language>
                <body>super();&#xD;
 	this.index = DEFAULT_INDEX;&#xD;
 	/*&#xD;
 	 *  Default numTxPerLink is 1 transmission per link. Will be updated based&#xD;
 	 *  on flow updated based on flow length and reliability parameters&#xD;
 	 */&#xD;
 	this.numTxPerLink = DEFAULT_FAULTS_TOLERATED + 1; &#xD;
 	this.nodes = new ArrayList&lt;>();&#xD;
 	this.linkTxAndTotalCost = new ArrayList&lt;>();&#xD;
 	this.edges = new ArrayList&lt;>();&#xD;
 	this.nodePredecessor = null;&#xD;
     this.edgePredecessor = null;&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oh4yZ6k6Ee-lntgJ_JlK2w" name="getInitialPriority" specification="_n0UhxKk6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_oh4yaKk6Ee-lntgJ_JlK2w" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>return initialPriority;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oh4yaak6Ee-lntgJ_JlK2w" name="getIndex" specification="_n0VI0Kk6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_oh4yaqk6Ee-lntgJ_JlK2w" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>return index;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oh5ZcKk6Ee-lntgJ_JlK2w" name="getNumTxPerLink" specification="_n0Vv4Kk6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_oh5Zcak6Ee-lntgJ_JlK2w" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>return numTxPerLink;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oh5Zcqk6Ee-lntgJ_JlK2w" name="getNodes" specification="_n0Vv4qk6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_oh5Zc6k6Ee-lntgJ_JlK2w" type="_oawPoKk6Ee-lntgJ_JlK2w" direction="return"/>
                <language>java</language>
                <body>return nodes;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oh5ZdKk6Ee-lntgJ_JlK2w" name="getEdges" specification="_n0XlEKk6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_oh5Zdak6Ee-lntgJ_JlK2w" type="_oawPoKk6Ee-lntgJ_JlK2w" direction="return"/>
                <language>java</language>
                <body>return edges;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oh5Zdqk6Ee-lntgJ_JlK2w" name="addEdge" specification="_obVecKk6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_oh5Zd6k6Ee-lntgJ_JlK2w" name="edge" type="_nz2AoKk6Ee-lntgJ_JlK2w"/>
                <language>java</language>
                <body>/* set predecessor and add edge to flow */&#xD;
		edge.setPredecessor(edgePredecessor);&#xD;
		edges.add(edge);&#xD;
		/* update predecessor for next edge added */&#xD;
		edgePredecessor = edge;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oh5ZeKk6Ee-lntgJ_JlK2w" name="addNode" specification="_obWFgKk6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_oh5Zeak6Ee-lntgJ_JlK2w" name="node" type="_n1UAQKk6Ee-lntgJ_JlK2w"/>
                <language>java</language>
                <body>/* set predecessor and add edge to flow */&#xD;
		node.setPredecessor(nodePredecessor);&#xD;
		nodes.add(node);&#xD;
		/* update predecessor for next edge added */&#xD;
		nodePredecessor = node;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oh6AgKk6Ee-lntgJ_JlK2w" name="getLinkTxAndTotalCost" specification="_n0ZaQKk6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_oh6Agak6Ee-lntgJ_JlK2w" type="_oawPoKk6Ee-lntgJ_JlK2w" direction="return"/>
                <language>java</language>
                <body>return linkTxAndTotalCost;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oh6Agqk6Ee-lntgJ_JlK2w" name="setInitialPriority" specification="_n0b2gKk6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_oh6Ag6k6Ee-lntgJ_JlK2w" name="initialPriority">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>this.initialPriority = initialPriority;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oh6AhKk6Ee-lntgJ_JlK2w" name="setIndex" specification="_n0cdkKk6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_oh6Ahak6Ee-lntgJ_JlK2w" name="index">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>this.index = index;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oh6Ahqk6Ee-lntgJ_JlK2w" name="setNumTxPerLink" specification="_n0dEoak6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_oh6Ah6k6Ee-lntgJ_JlK2w" name="numTxPerLink">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>this.numTxPerLink = numTxPerLink;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oh6AiKk6Ee-lntgJ_JlK2w" name="setNodes" specification="_oeVvI6k6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_oh6Aiak6Ee-lntgJ_JlK2w" name="nodes" type="_oawPoKk6Ee-lntgJ_JlK2w"/>
                <language>java</language>
                <body>this.nodes = nodes;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oh6Aiqk6Ee-lntgJ_JlK2w" name="setLinkTxAndTotalCost" specification="_oeWWMqk6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_oh6Ai6k6Ee-lntgJ_JlK2w" name="linkTxAndTotalCost" type="_oawPoKk6Ee-lntgJ_JlK2w"/>
                <language>java</language>
                <body>this.linkTxAndTotalCost = linkTxAndTotalCost;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oh6nkKk6Ee-lntgJ_JlK2w" name="compareTo" specification="_obWFgqk6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_oh6nkak6Ee-lntgJ_JlK2w" name="flow" type="_n0QQUKk6Ee-lntgJ_JlK2w"/>
                <ownedParameter xmi:id="_oh6nkqk6Ee-lntgJ_JlK2w" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>return flow.getPriority() > this.getPriority() ? -1 : 1;&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oh6nk6k6Ee-lntgJ_JlK2w" name="toString" specification="_n0eSwKk6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_oh6nlKk6Ee-lntgJ_JlK2w" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return getName();&#xD;
 </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_n0TToKk6Ee-lntgJ_JlK2w" name="Flow" visibility="package" method="_oh4yYKk6Ee-lntgJ_JlK2w">
                <eAnnotations xmi:id="_n0T6sKk6Ee-lntgJ_JlK2w" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_n0T6sak6Ee-lntgJ_JlK2w" key="create"/>
                </eAnnotations>
                <ownedComment xmi:id="_oi8iVKk6Ee-lntgJ_JlK2w">
                  <body>Constructor that sets name, priority, and index</body>
                </ownedComment>
                <ownedParameter xmi:id="_n0TToak6Ee-lntgJ_JlK2w" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_n0TToqk6Ee-lntgJ_JlK2w" name="priority">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_n0TTo6k6Ee-lntgJ_JlK2w" name="index">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_n0T6sqk6Ee-lntgJ_JlK2w" type="_n0QQUKk6Ee-lntgJ_JlK2w" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_n0UhwKk6Ee-lntgJ_JlK2w" name="Flow" visibility="package" method="_oh4yZak6Ee-lntgJ_JlK2w">
                <eAnnotations xmi:id="_n0Uhwak6Ee-lntgJ_JlK2w" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_n0Uhwqk6Ee-lntgJ_JlK2w" key="create"/>
                </eAnnotations>
                <ownedComment xmi:id="_oi8iVak6Ee-lntgJ_JlK2w">
                  <body>Constructor</body>
                </ownedComment>
                <ownedParameter xmi:id="_n0Uhw6k6Ee-lntgJ_JlK2w" type="_n0QQUKk6Ee-lntgJ_JlK2w" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_n0UhxKk6Ee-lntgJ_JlK2w" name="getInitialPriority" method="_oh4yZ6k6Ee-lntgJ_JlK2w">
                <ownedComment xmi:id="_oi8iVqk6Ee-lntgJ_JlK2w">
                  <body>@return the initialPriority</body>
                </ownedComment>
                <ownedParameter xmi:id="_n0Uhxak6Ee-lntgJ_JlK2w" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_n0VI0Kk6Ee-lntgJ_JlK2w" name="getIndex" method="_oh4yaak6Ee-lntgJ_JlK2w">
                <ownedComment xmi:id="_oi8iV6k6Ee-lntgJ_JlK2w">
                  <body>@return the index</body>
                </ownedComment>
                <ownedParameter xmi:id="_n0VI0ak6Ee-lntgJ_JlK2w" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_n0Vv4Kk6Ee-lntgJ_JlK2w" name="getNumTxPerLink" method="_oh5ZcKk6Ee-lntgJ_JlK2w">
                <ownedComment xmi:id="_oi8iWKk6Ee-lntgJ_JlK2w">
                  <body>@return the numTxPerLink</body>
                </ownedComment>
                <ownedParameter xmi:id="_n0Vv4ak6Ee-lntgJ_JlK2w" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_n0Vv4qk6Ee-lntgJ_JlK2w" name="getNodes" method="_oh5Zcqk6Ee-lntgJ_JlK2w">
                <ownedComment xmi:id="_oi8iWak6Ee-lntgJ_JlK2w">
                  <body>@return the nodes</body>
                </ownedComment>
                <ownedParameter xmi:id="_oeVvIKk6Ee-lntgJ_JlK2w" type="_oawPoKk6Ee-lntgJ_JlK2w" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_n0XlEKk6Ee-lntgJ_JlK2w" name="getEdges" method="_oh5ZdKk6Ee-lntgJ_JlK2w">
                <ownedComment xmi:id="_oi8iWqk6Ee-lntgJ_JlK2w">
                  <body>@return the nodes</body>
                </ownedComment>
                <ownedParameter xmi:id="_oeVvIak6Ee-lntgJ_JlK2w" type="_oawPoKk6Ee-lntgJ_JlK2w" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_n0ZaQKk6Ee-lntgJ_JlK2w" name="getLinkTxAndTotalCost" method="_oh6AgKk6Ee-lntgJ_JlK2w">
                <ownedComment xmi:id="_oi9JYqk6Ee-lntgJ_JlK2w">
                  <body>@return the linkTxAndTotalCost</body>
                </ownedComment>
                <ownedParameter xmi:id="_oeVvIqk6Ee-lntgJ_JlK2w" type="_oawPoKk6Ee-lntgJ_JlK2w" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_n0b2gKk6Ee-lntgJ_JlK2w" name="setInitialPriority" method="_oh6Agqk6Ee-lntgJ_JlK2w">
                <ownedComment xmi:id="_oi9JY6k6Ee-lntgJ_JlK2w">
                  <body>@param initialPriority the initialPriority to set</body>
                </ownedComment>
                <ownedParameter xmi:id="_n0b2gak6Ee-lntgJ_JlK2w" name="initialPriority">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_n0cdkKk6Ee-lntgJ_JlK2w" name="setIndex" method="_oh6AhKk6Ee-lntgJ_JlK2w">
                <ownedComment xmi:id="_oi9JZKk6Ee-lntgJ_JlK2w">
                  <body>@param index the index to set</body>
                </ownedComment>
                <ownedParameter xmi:id="_n0dEoKk6Ee-lntgJ_JlK2w" name="index">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_n0dEoak6Ee-lntgJ_JlK2w" name="setNumTxPerLink" method="_oh6Ahqk6Ee-lntgJ_JlK2w">
                <ownedComment xmi:id="_oi9JZak6Ee-lntgJ_JlK2w">
                  <body>@param numTxPerLink the numTxPerLink to set</body>
                </ownedComment>
                <ownedParameter xmi:id="_n0dEoqk6Ee-lntgJ_JlK2w" name="numTxPerLink">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_n0eSwKk6Ee-lntgJ_JlK2w" name="toString" method="_oh6nk6k6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_n0eSwak6Ee-lntgJ_JlK2w" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_obVecKk6Ee-lntgJ_JlK2w" name="addEdge" method="_oh5Zdqk6Ee-lntgJ_JlK2w">
                <ownedComment xmi:id="_oi9JYKk6Ee-lntgJ_JlK2w">
                  <body>@param takes in an edge &#xD;
	 * Add and edge to the flow.</body>
                </ownedComment>
                <ownedParameter xmi:id="_obVecak6Ee-lntgJ_JlK2w" name="edge" type="_nz2AoKk6Ee-lntgJ_JlK2w"/>
              </ownedOperation>
              <ownedOperation xmi:id="_obWFgKk6Ee-lntgJ_JlK2w" name="addNode" method="_oh5ZeKk6Ee-lntgJ_JlK2w">
                <ownedComment xmi:id="_oi9JYak6Ee-lntgJ_JlK2w">
                  <body>@param takes in a node&#xD;
	 * Add and edge to the flow.</body>
                </ownedComment>
                <ownedParameter xmi:id="_obWFgak6Ee-lntgJ_JlK2w" name="node" type="_n1UAQKk6Ee-lntgJ_JlK2w"/>
              </ownedOperation>
              <ownedOperation xmi:id="_obWFgqk6Ee-lntgJ_JlK2w" name="compareTo" method="_oh6nkKk6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_obWFg6k6Ee-lntgJ_JlK2w" name="flow" type="_n0QQUKk6Ee-lntgJ_JlK2w"/>
                <ownedParameter xmi:id="_obWskKk6Ee-lntgJ_JlK2w" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_oeVvI6k6Ee-lntgJ_JlK2w" name="setNodes" method="_oh6AiKk6Ee-lntgJ_JlK2w">
                <ownedComment xmi:id="_oi9JZqk6Ee-lntgJ_JlK2w">
                  <body>@param nodes the nodes to set</body>
                </ownedComment>
                <ownedParameter xmi:id="_oeWWMKk6Ee-lntgJ_JlK2w" name="nodes" type="_oawPoKk6Ee-lntgJ_JlK2w"/>
              </ownedOperation>
              <ownedOperation xmi:id="_oeWWMqk6Ee-lntgJ_JlK2w" name="setLinkTxAndTotalCost" method="_oh6Aiqk6Ee-lntgJ_JlK2w">
                <ownedComment xmi:id="_oi9JZ6k6Ee-lntgJ_JlK2w">
                  <body>@param linkTxAndTotalCost the linkTxAndTotalCost to set</body>
                </ownedComment>
                <ownedParameter xmi:id="_oeW9QKk6Ee-lntgJ_JlK2w" name="linkTxAndTotalCost" type="_oawPoKk6Ee-lntgJ_JlK2w"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_n0jyUKk6Ee-lntgJ_JlK2w" name="FlowMap">
              <ownedComment xmi:id="_oi9JaKk6Ee-lntgJ_JlK2w">
                <body>FlowMap creates a mapping from flow name to &#xD;
flow object (&lt;name, Flow>).&#xD;
&#xD;
@author sgoddard2&#xD;
 *</body>
              </ownedComment>
              <generalization xmi:id="_obZv4Kk6Ee-lntgJ_JlK2w" general="_nxRNwKk6Ee-lntgJ_JlK2w"/>
              <ownedAttribute xmi:id="_ogLiMKk6Ee-lntgJ_JlK2w" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_ogLiMak6Ee-lntgJ_JlK2w" value="1L"/>
              </ownedAttribute>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_n0lAcKk6Ee-lntgJ_JlK2w" name="FlowNodeToActivationMap">
              <ownedComment xmi:id="_oi9Jaak6Ee-lntgJ_JlK2w">
                <body>FlowNodeToActivationMap creates a mapping from flow node  &#xD;
to an activation (&lt;Node, Activation>).&#xD;
&#xD;
@author sgoddard2&#xD;
 *</body>
              </ownedComment>
              <generalization xmi:id="_obaW8ak6Ee-lntgJ_JlK2w" general="_nxRNwKk6Ee-lntgJ_JlK2w"/>
              <ownedAttribute xmi:id="_ogLiMqk6Ee-lntgJ_JlK2w" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_ogMJQKk6Ee-lntgJ_JlK2w" value="1L"/>
              </ownedAttribute>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_n0lngKk6Ee-lntgJ_JlK2w" name="GraphViz">
              <ownedComment xmi:id="_oi9Jaqk6Ee-lntgJ_JlK2w">
                <body>@author sgoddard2&#xD;
Copyright © 2020 Steve Goddard. All rights reserved.&#xD;
 *</body>
              </ownedComment>
              <generalization xmi:id="_obczMak6Ee-lntgJ_JlK2w" general="_n6jsoKk6Ee-lntgJ_JlK2w"/>
              <ownedAttribute xmi:id="_ogMJQak6Ee-lntgJ_JlK2w" name="EMPTY" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_ogMJQqk6Ee-lntgJ_JlK2w" value="&quot;&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_ogMJQ6k6Ee-lntgJ_JlK2w" name="GRAPH_VIZ_SUFFIX" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_ogMJRKk6Ee-lntgJ_JlK2w" value="&quot;.gv&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_ogMJRak6Ee-lntgJ_JlK2w" name="gvFileContents" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_ogMwUKk6Ee-lntgJ_JlK2w" name="gvTitleCaption" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_ogMwUqk6Ee-lntgJ_JlK2w" name="wfm" visibility="package" type="_n0HGYKk6Ee-lntgJ_JlK2w" association="_oj_rNKk6Ee-lntgJ_JlK2w"/>
              <ownedAttribute xmi:id="_ogMwVKk6Ee-lntgJ_JlK2w" name="graphFile" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_ogMwVqk6Ee-lntgJ_JlK2w" name="verbose" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_ogNXYak6Ee-lntgJ_JlK2w" name="gv" visibility="package" type="_n0lngKk6Ee-lntgJ_JlK2w" association="_okASQak6Ee-lntgJ_JlK2w"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oh6nlak6Ee-lntgJ_JlK2w" name="GraphViz" specification="_obblEKk6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_oh6nlqk6Ee-lntgJ_JlK2w" name="wfm" type="_n0HGYKk6Ee-lntgJ_JlK2w"/>
                <ownedParameter xmi:id="_oh6nl6k6Ee-lntgJ_JlK2w" name="graphFile">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_oh6nmKk6Ee-lntgJ_JlK2w" type="_n0lngKk6Ee-lntgJ_JlK2w" direction="return"/>
                <language>java</language>
                <body>super(wfm, EMPTY, GRAPH_VIZ_SUFFIX); // VisualizationObject constructor&#xD;
     this.wfm = wfm; // used to access the basic WARP file management functions&#xD;
     this.graphFile = graphFile;&#xD;
     this.gv = this;&#xD;
     verbose = false;&#xD;
     createGraphVizContent();&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oh6nmak6Ee-lntgJ_JlK2w" name="GraphViz" specification="_obcMI6k6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_oh6nmqk6Ee-lntgJ_JlK2w" name="wfm" type="_n0HGYKk6Ee-lntgJ_JlK2w"/>
                <ownedParameter xmi:id="_oh6nm6k6Ee-lntgJ_JlK2w" name="graphFile">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_oh6nnKk6Ee-lntgJ_JlK2w" name="verbose">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_oh6nnak6Ee-lntgJ_JlK2w" type="_n0lngKk6Ee-lntgJ_JlK2w" direction="return"/>
                <language>java</language>
                <body>super(wfm, EMPTY, GRAPH_VIZ_SUFFIX); // VisualizationObject constructor&#xD;
     this.wfm = wfm; // used to access the basic WARP file management functions&#xD;
     this.graphFile = graphFile;&#xD;
     this.gv = this;&#xD;
     this.verbose = verbose;&#xD;
     createGraphVizContent();&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oh71sKk6Ee-lntgJ_JlK2w" name="visualization" specification="_n0oDwKk6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_oh71sak6Ee-lntgJ_JlK2w" type="_nzwhEKk6Ee-lntgJ_JlK2w" direction="return"/>
                <language>java</language>
                <body>return new Description(getGraphVizContent());&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oh71sqk6Ee-lntgJ_JlK2w" name="initializeGraphVizContent" specification="_n0p48Kk6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_oh71s6k6Ee-lntgJ_JlK2w" name="graphName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>/*start the gv file by adding the 1st line to the contents string */&#xD;
     gvFileContents = String.format(&quot;strict digraph %s {\n&quot;,graphName);&#xD;
     /* remove 'strict' if multiple edges in the same direction are to be shown */&#xD;
     gvTitleCaption = &quot;labelloc  =  \&quot;t\&quot; \n&quot;; // Place the rentered graph's title on top.&#xD;
     /* &#xD;
      * create a title caption for the rendered graph in the .gv file&#xD;
      * label string is in html format, so need an end delimeter after adding flows&#xD;
      */&#xD;
     gvTitleCaption = String.format(gvTitleCaption + &quot;label = &lt;Graph %s &lt;br/>\n&quot;,graphName);&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oh71tKk6Ee-lntgJ_JlK2w" name="finalizeGraphVizContent" specification="_n0qgAKk6Ee-lntgJ_JlK2w">
                <language>java</language>
                <body>/* &#xD;
      * wrap up the gv file content by finalizing title caption&#xD;
      * then add it to the file contents and terminate the graph viz structure&#xD;
      */&#xD;
     gvTitleCaption += &quot;>\n&quot;;&#xD;
     /* &#xD;
      * end the gv file by adding the caption for rendering and the last line &#xD;
      * to the contents string&#xD;
      */&#xD;
     gvFileContents = gvFileContents + gvTitleCaption + &quot;} \n&quot;;  &#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oh71tak6Ee-lntgJ_JlK2w" name="getGraphVizContent" specification="_n0qgAak6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_oh71tqk6Ee-lntgJ_JlK2w" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return gvFileContents;&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oh71t6k6Ee-lntgJ_JlK2w" name="createGraphVizContent" specification="_n0qgA6k6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_oh71uKk6Ee-lntgJ_JlK2w" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>/*&#xD;
 	 * GraphVizListener reads the graphFile string and calls the functions&#xD;
 	 * in this class, as it walks the input graphFile structure to build&#xD;
 	 * the GraphViz contents.&#xD;
 	 */&#xD;
     GraphVizListener.buildGraphViz(gv); &#xD;
     if (verbose) {&#xD;
     	System.out.println(&quot;************************************&quot;);&#xD;
     	System.out.println(&quot;GraphViz File Contents:&quot;);&#xD;
     	System.out.println(getGraphVizContent());&#xD;
     	System.out.println(&quot;************************************\n&quot;);&#xD;
     }&#xD;
     return getGraphVizContent();&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oh8cwKk6Ee-lntgJ_JlK2w" name="addFlowToGraphViz" specification="_n0rHEKk6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_oh8cwak6Ee-lntgJ_JlK2w" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>/* add a 3 spaces before the start of the chain defining this flow to the gv contents string */&#xD;
     gvFileContents = gvFileContents + &quot;   &quot;;  &#xD;
     gvTitleCaption = String.format(gvTitleCaption + &quot;Flow %s: &quot;, flowName);&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oh8cwqk6Ee-lntgJ_JlK2w" name="addSrcNodeToGraphViz" specification="_n0ruIKk6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_oh8cw6k6Ee-lntgJ_JlK2w" name="nodeName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>String fileContents = String.format(&quot; %s  ->&quot;,nodeName);&#xD;
 	String titleCaption = String.format(&quot;%s -&amp;#62; &quot;,nodeName);&#xD;
 	addNodeName(fileContents,titleCaption);&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oh8cxKk6Ee-lntgJ_JlK2w" name="addSnkNodeToGraphViz" specification="_n0ruIqk6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_oh8cxak6Ee-lntgJ_JlK2w" name="nodeName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>String fileContents = String.format(&quot; %s&quot;,nodeName);&#xD;
 	String titleCaption = String.format(&quot;%s&quot;,nodeName);&#xD;
 	addNodeName(fileContents,titleCaption);&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oh8cxqk6Ee-lntgJ_JlK2w" name="finalizeCurrentFlowInGraphViz" specification="_n0sVMKk6Ee-lntgJ_JlK2w">
                <language>java</language>
                <body>/* add the ';' and '\n' to end this line of the chain defined in this flow */&#xD;
     gvFileContents = gvFileContents + &quot;; \n&quot; ;&#xD;
     gvTitleCaption += &quot;&lt;br/>\n&quot;; // terminate this line of the rendered graph caption&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oh8cx6k6Ee-lntgJ_JlK2w" name="addNodeName" specification="_n0sVMak6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_oh8cyKk6Ee-lntgJ_JlK2w" name="fileContents">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_oh8cyak6Ee-lntgJ_JlK2w" name="titleCaption">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>/* add the node name to the gv file contents string */&#xD;
     gvFileContents += fileContents;  &#xD;
     /* add the node name and edge to this line of the rendered graph caption */&#xD;
     gvTitleCaption += titleCaption;&#xD;
 </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_n0oDwKk6Ee-lntgJ_JlK2w" name="visualization" method="_oh71sKk6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_obczMKk6Ee-lntgJ_JlK2w" type="_nzwhEKk6Ee-lntgJ_JlK2w" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_n0p48Kk6Ee-lntgJ_JlK2w" name="initializeGraphVizContent" method="_oh71sqk6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_n0p48ak6Ee-lntgJ_JlK2w" name="graphName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_n0qgAKk6Ee-lntgJ_JlK2w" name="finalizeGraphVizContent" method="_oh71tKk6Ee-lntgJ_JlK2w"/>
              <ownedOperation xmi:id="_n0qgAak6Ee-lntgJ_JlK2w" name="getGraphVizContent" method="_oh71tak6Ee-lntgJ_JlK2w">
                <ownedComment xmi:id="_oi9Ja6k6Ee-lntgJ_JlK2w">
                  <body>public function to return the string gvFileContents.&#xD;
     * designed to be called after finalizeGraphVizContent() is called by the listener&#xD;
     * but will return the current state of the contents string anytime it is called</body>
                </ownedComment>
                <ownedParameter xmi:id="_n0qgAqk6Ee-lntgJ_JlK2w" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_n0qgA6k6Ee-lntgJ_JlK2w" name="createGraphVizContent" method="_oh71t6k6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_n0qgBKk6Ee-lntgJ_JlK2w" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_n0rHEKk6Ee-lntgJ_JlK2w" name="addFlowToGraphViz" method="_oh8cwKk6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_n0rHEak6Ee-lntgJ_JlK2w" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_n0ruIKk6Ee-lntgJ_JlK2w" name="addSrcNodeToGraphViz" method="_oh8cwqk6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_n0ruIak6Ee-lntgJ_JlK2w" name="nodeName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_n0ruIqk6Ee-lntgJ_JlK2w" name="addSnkNodeToGraphViz" method="_oh8cxKk6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_n0ruI6k6Ee-lntgJ_JlK2w" name="nodeName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_n0sVMKk6Ee-lntgJ_JlK2w" name="finalizeCurrentFlowInGraphViz" method="_oh8cxqk6Ee-lntgJ_JlK2w"/>
              <ownedOperation xmi:id="_n0sVMak6Ee-lntgJ_JlK2w" name="addNodeName" visibility="private" method="_oh8cx6k6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_n0s8QKk6Ee-lntgJ_JlK2w" name="fileContents">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_n0s8Qak6Ee-lntgJ_JlK2w" name="titleCaption">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_obblEKk6Ee-lntgJ_JlK2w" name="GraphViz" visibility="package" method="_oh6nlak6Ee-lntgJ_JlK2w">
                <eAnnotations xmi:id="_obcMIKk6Ee-lntgJ_JlK2w" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_obcMIak6Ee-lntgJ_JlK2w" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_obblEak6Ee-lntgJ_JlK2w" name="wfm" type="_n0HGYKk6Ee-lntgJ_JlK2w"/>
                <ownedParameter xmi:id="_obblEqk6Ee-lntgJ_JlK2w" name="graphFile">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_obcMIqk6Ee-lntgJ_JlK2w" type="_n0lngKk6Ee-lntgJ_JlK2w" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_obcMI6k6Ee-lntgJ_JlK2w" name="GraphViz" visibility="package" method="_oh6nmak6Ee-lntgJ_JlK2w">
                <eAnnotations xmi:id="_obcMJ6k6Ee-lntgJ_JlK2w" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_obcMKKk6Ee-lntgJ_JlK2w" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_obcMJKk6Ee-lntgJ_JlK2w" name="wfm" type="_n0HGYKk6Ee-lntgJ_JlK2w"/>
                <ownedParameter xmi:id="_obcMJak6Ee-lntgJ_JlK2w" name="graphFile">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_obcMJqk6Ee-lntgJ_JlK2w" name="verbose">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_obcMKak6Ee-lntgJ_JlK2w" type="_n0lngKk6Ee-lntgJ_JlK2w" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_n0wmoKk6Ee-lntgJ_JlK2w" name="GraphVizListener" isLeaf="true">
              <ownedComment xmi:id="_oi9wcKk6Ee-lntgJ_JlK2w">
                <body>Extend WARP Base Listener Class to extract info for Graph Viz file.&#xD;
GraphVizListener reads the graphFile string and calls the functions&#xD;
in this class, as it walks the input graphFile structure to build&#xD;
the GraphViz contents.</body>
              </ownedComment>
              <generalization xmi:id="_oeYLYKk6Ee-lntgJ_JlK2w" general="_obgdkak6Ee-lntgJ_JlK2w"/>
              <ownedAttribute xmi:id="_ogN-cKk6Ee-lntgJ_JlK2w" name="gv" visibility="package" type="_n0lngKk6Ee-lntgJ_JlK2w" association="_okASRKk6Ee-lntgJ_JlK2w"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oh9D0Kk6Ee-lntgJ_JlK2w" name="GraphVizListener" specification="_obiSwak6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_oh9D0ak6Ee-lntgJ_JlK2w" name="gv" type="_n0lngKk6Ee-lntgJ_JlK2w"/>
                <ownedParameter xmi:id="_oh9D0qk6Ee-lntgJ_JlK2w" type="_n0wmoKk6Ee-lntgJ_JlK2w" direction="return"/>
                <language>java</language>
                <body>this.gv = gv; // use GraphViz object passed to this object&#xD;
  // Read input file and build AST of graphFile&#xD;
     try {&#xD;
     	CharStream inputGraph = CharStreams.fromString(gv.graphFile);&#xD;
     	var lexer = new WARPLexer(inputGraph);&#xD;
     	var tokens = new CommonTokenStream(lexer);&#xD;
     	var parser = new WARPParser(tokens);&#xD;
     	ParseTree warpTree = parser.warp(); // begin parsing at rule 'warp'&#xD;
     	var warp = new ParseTreeWalker();&#xD;
     	 // Now populate build the Graph Viz file content by walking the input Graph tokens&#xD;
     	warp.walk(this, warpTree);&#xD;
     } catch (Exception e) {&#xD;
     	e.printStackTrace();&#xD;
     	System.err.println(&quot;ERROR: Unable to parse graphFile&quot; + e.getMessage());&#xD;
     }&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oh9D06k6Ee-lntgJ_JlK2w" name="buildGraphViz" specification="_obi50Kk6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_oh9D1Kk6Ee-lntgJ_JlK2w" name="gv" type="_n0lngKk6Ee-lntgJ_JlK2w"/>
                <language>java</language>
                <body>/*&#xD;
 	 * Create the listener object, which will read the workLoad &#xD;
 	 * description and then buid the node and flow objects that&#xD;
 	 * instantiates the workLoad. This object is not needed&#xD;
 	 * after that.&#xD;
 	 */&#xD;
 	new GraphVizListener(gv); &#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oh9D1ak6Ee-lntgJ_JlK2w" name="enterWarpName" specification="_objg4ak6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_oh9D1qk6Ee-lntgJ_JlK2w" name="ctx" type="_obi50qk6Ee-lntgJ_JlK2w"/>
                <language>java</language>
                <body>var graphName = ctx.getText();  // get the name of the graph from name&#xD;
     gv.initializeGraphVizContent(graphName); // start creating the gv file content&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oh-5AKk6Ee-lntgJ_JlK2w" name="exitWarp" specification="_oblWEak6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_oh-5Aak6Ee-lntgJ_JlK2w" name="ctx" type="_obkvAKk6Ee-lntgJ_JlK2w"/>
                <language>java</language>
                <body>gv.finalizeGraphVizContent();&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oh-5Aqk6Ee-lntgJ_JlK2w" name="enterFlowName" specification="_obmkMak6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_oh-5A6k6Ee-lntgJ_JlK2w" name="ctx" type="_obl9Iqk6Ee-lntgJ_JlK2w"/>
                <language>java</language>
                <body>var currentFlow = ctx.getText();&#xD;
     gv.addFlowToGraphViz(currentFlow);&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oh-5BKk6Ee-lntgJ_JlK2w" name="exitSrcNode" specification="_oboZYKk6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_oh-5Bak6Ee-lntgJ_JlK2w" name="ctx" type="_obnyUKk6Ee-lntgJ_JlK2w"/>
                <language>java</language>
                <body>var nodeName = ctx.getText(); // get the src node name&#xD;
     gv.addSrcNodeToGraphViz(nodeName);&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oh-5Bqk6Ee-lntgJ_JlK2w" name="exitSnkNode" specification="_obpAcqk6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_oh-5B6k6Ee-lntgJ_JlK2w" name="ctx" type="_obpAcKk6Ee-lntgJ_JlK2w"/>
                <language>java</language>
                <body>var nodeName = ctx.getText(); // get the snk node name&#xD;
     gv.addSnkNodeToGraphViz(nodeName);&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oh_gEKk6Ee-lntgJ_JlK2w" name="exitFlow" specification="_obqOkak6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_oh_gEak6Ee-lntgJ_JlK2w" name="ctx" type="_obpng6k6Ee-lntgJ_JlK2w"/>
                <language>java</language>
                <body>gv.finalizeCurrentFlowInGraphViz();&#xD;
 </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_obiSwak6Ee-lntgJ_JlK2w" name="GraphVizListener" visibility="private" method="_oh9D0Kk6Ee-lntgJ_JlK2w">
                <eAnnotations xmi:id="_obiSw6k6Ee-lntgJ_JlK2w" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_obiSxKk6Ee-lntgJ_JlK2w" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_obiSwqk6Ee-lntgJ_JlK2w" name="gv" type="_n0lngKk6Ee-lntgJ_JlK2w"/>
                <ownedParameter xmi:id="_obiSxak6Ee-lntgJ_JlK2w" type="_n0wmoKk6Ee-lntgJ_JlK2w" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_obi50Kk6Ee-lntgJ_JlK2w" name="buildGraphViz" isStatic="true" method="_oh9D06k6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_obi50ak6Ee-lntgJ_JlK2w" name="gv" type="_n0lngKk6Ee-lntgJ_JlK2w"/>
              </ownedOperation>
              <ownedOperation xmi:id="_objg4ak6Ee-lntgJ_JlK2w" name="enterWarpName" method="_oh9D1ak6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_objg4qk6Ee-lntgJ_JlK2w" name="ctx" type="_obi50qk6Ee-lntgJ_JlK2w"/>
              </ownedOperation>
              <ownedOperation xmi:id="_oblWEak6Ee-lntgJ_JlK2w" name="exitWarp" method="_oh-5AKk6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_oblWEqk6Ee-lntgJ_JlK2w" name="ctx" type="_obkvAKk6Ee-lntgJ_JlK2w"/>
              </ownedOperation>
              <ownedOperation xmi:id="_obmkMak6Ee-lntgJ_JlK2w" name="enterFlowName" method="_oh-5Aqk6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_obmkMqk6Ee-lntgJ_JlK2w" name="ctx" type="_obl9Iqk6Ee-lntgJ_JlK2w"/>
              </ownedOperation>
              <ownedOperation xmi:id="_oboZYKk6Ee-lntgJ_JlK2w" name="exitSrcNode" method="_oh-5BKk6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_oboZYak6Ee-lntgJ_JlK2w" name="ctx" type="_obnyUKk6Ee-lntgJ_JlK2w"/>
              </ownedOperation>
              <ownedOperation xmi:id="_obpAcqk6Ee-lntgJ_JlK2w" name="exitSnkNode" method="_oh-5Bqk6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_obpAc6k6Ee-lntgJ_JlK2w" name="ctx" type="_obpAcKk6Ee-lntgJ_JlK2w"/>
              </ownedOperation>
              <ownedOperation xmi:id="_obqOkak6Ee-lntgJ_JlK2w" name="exitFlow" method="_oh_gEKk6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_obqOkqk6Ee-lntgJ_JlK2w" name="ctx" type="_obpng6k6Ee-lntgJ_JlK2w"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_n01fIKk6Ee-lntgJ_JlK2w" name="GuiVisualization">
              <ownedComment xmi:id="_oi9wcak6Ee-lntgJ_JlK2w">
                <body>GuiVisualization Class to create a Java Swing window that displays a table of data with column&#xD;
headings.&#xD;
&#xD;
@author sgoddard&#xD;
@version 1.5&#xD;
 *</body>
              </ownedComment>
              <ownedAttribute xmi:id="_ogOlgKk6Ee-lntgJ_JlK2w" name="frame" visibility="package" type="_obrcsak6Ee-lntgJ_JlK2w" association="_okA5Uak6Ee-lntgJ_JlK2w"/>
              <ownedAttribute xmi:id="_ogPMkKk6Ee-lntgJ_JlK2w" name="jtable" visibility="package" type="_obsq0ak6Ee-lntgJ_JlK2w" association="_okA5VKk6Ee-lntgJ_JlK2w"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oh_gEqk6Ee-lntgJ_JlK2w" name="GuiVisualization" specification="_n03UUKk6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_oh_gE6k6Ee-lntgJ_JlK2w" name="title">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_oh_gFKk6Ee-lntgJ_JlK2w" name="columnNames">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oh_gFak6Ee-lntgJ_JlK2w" value="*"/>
                </ownedParameter>
                <ownedParameter xmi:id="_oh_gFqk6Ee-lntgJ_JlK2w" name="table">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oh_gF6k6Ee-lntgJ_JlK2w" value="*"/>
                </ownedParameter>
                <ownedParameter xmi:id="_oh_gGKk6Ee-lntgJ_JlK2w" type="_n01fIKk6Ee-lntgJ_JlK2w" direction="return"/>
                <language>java</language>
                <body>// Frame initialization&#xD;
 frame = new JFrame();&#xD;
&#xD;
 // Frame Title&#xD;
 frame.setTitle(title);&#xD;
&#xD;
 // Initializing the JTable with input parameters&#xD;
 jtable = new JTable(table, columnNames);&#xD;
 jtable.setBounds(30, 40, 200, 300); // default size&#xD;
 // resizeColumnWidth(jtable); // uncomment to auto size column widths&#xD;
&#xD;
 // attached the table to a JScrollPane and then add both to the frame&#xD;
 JScrollPane sp = new JScrollPane(jtable); // gives table a vertical scrollbar&#xD;
 frame.add(sp);&#xD;
 // Frame Size&#xD;
 frame.setSize(500, 200);&#xD;
 jtable.setAutoResizeMode(JTable.AUTO_RESIZE_OFF); // creates horizontal scrollbar&#xD;
 frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);&#xD;
 // Frame Visible = false&#xD;
 frame.setVisible(false);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oiAHIKk6Ee-lntgJ_JlK2w" name="setVisible" specification="_n04icqk6Ee-lntgJ_JlK2w">
                <language>java</language>
                <body>frame.setVisible(true);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oiAHIak6Ee-lntgJ_JlK2w" name="resizeColumnWidth" specification="_oeYycKk6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_oiAHIqk6Ee-lntgJ_JlK2w" name="table" type="_obsq0ak6Ee-lntgJ_JlK2w"/>
                <language>java</language>
                <body>final TableColumnModel columnModel = table.getColumnModel();&#xD;
 for (int column = 0; column &lt; table.getColumnCount(); column++) {&#xD;
   int width = 70; // Min width&#xD;
   for (int row = 0; row &lt; table.getRowCount(); row++) {&#xD;
     TableCellRenderer renderer = table.getCellRenderer(row, column);&#xD;
     Component comp = table.prepareRenderer(renderer, row, column);&#xD;
     width = Math.max(comp.getPreferredSize().width + 5, width);&#xD;
   }&#xD;
   if (width > 300)&#xD;
     width = 300;&#xD;
   columnModel.getColumn(column).setPreferredWidth(width);&#xD;
 }&#xD;
  </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_n03UUKk6Ee-lntgJ_JlK2w" name="GuiVisualization" method="_oh_gEqk6Ee-lntgJ_JlK2w">
                <eAnnotations xmi:id="_n03UVKk6Ee-lntgJ_JlK2w" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_n03UVak6Ee-lntgJ_JlK2w" key="create"/>
                </eAnnotations>
                <ownedComment xmi:id="_oi9wcqk6Ee-lntgJ_JlK2w">
                  <body>Constructor to create a Java Swing Window for a table of data with column headings. The window&#xD;
   * is initially not visible, and is made visible by a call to setVisible().&#xD;
   * &#xD;
   * @param title Window title&#xD;
   * @param columnNames Column heading names&#xD;
   * @param table table of strings representing the data</body>
                </ownedComment>
                <ownedParameter xmi:id="_n03UUak6Ee-lntgJ_JlK2w" name="title">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_n03UUqk6Ee-lntgJ_JlK2w" name="columnNames">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_n037Yak6Ee-lntgJ_JlK2w" value="*"/>
                </ownedParameter>
                <ownedParameter xmi:id="_n03UU6k6Ee-lntgJ_JlK2w" name="table">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_n04icKk6Ee-lntgJ_JlK2w" value="*"/>
                </ownedParameter>
                <ownedParameter xmi:id="_n037YKk6Ee-lntgJ_JlK2w" type="_n01fIKk6Ee-lntgJ_JlK2w" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_n04icqk6Ee-lntgJ_JlK2w" name="setVisible" method="_oiAHIKk6Ee-lntgJ_JlK2w">
                <ownedComment xmi:id="_oi9wc6k6Ee-lntgJ_JlK2w">
                  <body>Make the table visible.</body>
                </ownedComment>
              </ownedOperation>
              <ownedOperation xmi:id="_oeYycKk6Ee-lntgJ_JlK2w" name="resizeColumnWidth" visibility="private" method="_oiAHIak6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_oeYycak6Ee-lntgJ_JlK2w" name="table" type="_obsq0ak6Ee-lntgJ_JlK2w"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_n06XoKk6Ee-lntgJ_JlK2w" name="InputGraphFile">
              <ownedComment xmi:id="_oi9wdKk6Ee-lntgJ_JlK2w">
                <body>@author sgoddard&#xD;
 *</body>
              </ownedComment>
              <ownedAttribute xmi:id="_ogPMkqk6Ee-lntgJ_JlK2w" name="UNKNOWN" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_ogPzoKk6Ee-lntgJ_JlK2w" value="&quot;Unknown&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_ogPzoak6Ee-lntgJ_JlK2w" name="wfm" visibility="private" type="_n0HGYKk6Ee-lntgJ_JlK2w" association="_okBgYak6Ee-lntgJ_JlK2w"/>
              <ownedAttribute xmi:id="_ogPzo6k6Ee-lntgJ_JlK2w" name="graphFileName" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_ogQasKk6Ee-lntgJ_JlK2w" name="verbose" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_ogQasqk6Ee-lntgJ_JlK2w" name="graphFileContents" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_ogQas6k6Ee-lntgJ_JlK2w" value="UNKNOWN"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oiAHI6k6Ee-lntgJ_JlK2w" name="InputGraphFile" specification="_obwVMKk6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_oiAHJKk6Ee-lntgJ_JlK2w" name="fm" type="_n0HGYKk6Ee-lntgJ_JlK2w"/>
                <ownedParameter xmi:id="_oiAHJak6Ee-lntgJ_JlK2w" type="_n06XoKk6Ee-lntgJ_JlK2w" direction="return"/>
                <language>java</language>
                <body>wfm = fm;&#xD;
		graphFileName = wfm.getBaseDirectory();  // input graph file name, accessible only within this class&#xD;
		verbose = false; // initialize verbose to false&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oiAHJqk6Ee-lntgJ_JlK2w" name="InputGraphFile" specification="_obwVNak6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_oiAHJ6k6Ee-lntgJ_JlK2w" name="fm" type="_n0HGYKk6Ee-lntgJ_JlK2w"/>
                <ownedParameter xmi:id="_oiAHKKk6Ee-lntgJ_JlK2w" name="verbose">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_oiAHKak6Ee-lntgJ_JlK2w" type="_n06XoKk6Ee-lntgJ_JlK2w" direction="return"/>
                <language>java</language>
                <body>wfm = fm;&#xD;
		graphFileName = wfm.getBaseDirectory();  // input graph file name, accessible only within this class&#xD;
		this.verbose = verbose; // initialize verbose as specified&#xD;
&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oiAuMKk6Ee-lntgJ_JlK2w" name="setGraphFileName" specification="_n08M0Kk6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_oiAuMak6Ee-lntgJ_JlK2w" name="inputFile">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>graphFileName = inputFile;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oiAuMqk6Ee-lntgJ_JlK2w" name="verifyGraphFileName" specification="_n08z4Kk6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_oiAuM6k6Ee-lntgJ_JlK2w" name="inputFile">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>/* Read the graph input text file and handle all errors, returning its contents */&#xD;
		try {&#xD;
			getInputGraphFileName(inputFile);&#xD;
		} catch (Exception e) {&#xD;
			// e.printStackTrace();&#xD;
			System.err.println(&quot;Failed get an input file.&quot;);&#xD;
			System.exit(-1);&#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oiAuNKk6Ee-lntgJ_JlK2w" name="readGraphFile" specification="_n09a8Kk6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_oiAuNak6Ee-lntgJ_JlK2w" name="inputFile">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_oiAuNqk6Ee-lntgJ_JlK2w" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>/* Read the graph input text file and return its contents */&#xD;
		verifyGraphFileName(inputFile); // catches exception if a valid file can't be found and exits&#xD;
		String inputFileName = getGraphFileName();&#xD;
		graphFileContents = readGraphFileContents(inputFileName);&#xD;
		return graphFileContents;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oiAuN6k6Ee-lntgJ_JlK2w" name="getInputGraphFileName" specification="_n0-CAKk6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_oiAuOKk6Ee-lntgJ_JlK2w" name="inputFile">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_oiAuOak6Ee-lntgJ_JlK2w" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>String workingDirectory;&#xD;
		String fileName = UNKNOWN;&#xD;
		workingDirectory = wfm.getBaseDirectory();&#xD;
		if (inputFile == null) { // if fileName is nil, then prompt for input file&#xD;
			System.out.printf(&quot;Working directory is %s\n&quot;, workingDirectory);&#xD;
			System.out.print(&quot;Enter input file: &quot;);&#xD;
			BufferedReader bufferRead = new BufferedReader(new InputStreamReader(System.in));&#xD;
			try {&#xD;
				fileName = bufferRead.readLine();&#xD;
			} catch (IOException e) {&#xD;
				// e.printStackTrace();&#xD;
				System.err.println(&quot;Failed to read input line from console&quot; + e.getMessage());&#xD;
			}&#xD;
		} else {&#xD;
			fileName = inputFile;&#xD;
		}&#xD;
		setGraphFileName(fileName);&#xD;
		File tempFile = new File(getGraphFileName()); // create a temp File object with graphName&#xD;
		if (tempFile.exists()) {  // see if the file exists&#xD;
			if (verbose) {&#xD;
				printVerboseMessage(workingDirectory, fileName, getGraphFileName());&#xD;
			}&#xD;
		} else { // try the working directory&#xD;
			setGraphFileName(workingDirectory + File.separator + fileName);&#xD;
			tempFile = new File(getGraphFileName()); // create a temp File object with graphName&#xD;
			if (tempFile.exists()) {  // see if the file exists&#xD;
				if (verbose) {&#xD;
					printVerboseMessage(workingDirectory, fileName, getGraphFileName());&#xD;
				}&#xD;
			} else {&#xD;
				if (verbose) {&#xD;
					printVerboseMessage(workingDirectory, fileName, getGraphFileName());&#xD;
				}&#xD;
				System.err.printf(&quot;\n\tERROR: input file %s doesn't exist!!\n&quot;, fileName);&#xD;
				throw new RuntimeException();&#xD;
			}&#xD;
		}&#xD;
		return fileName;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oiAuOqk6Ee-lntgJ_JlK2w" name="readGraphFileContents" specification="_n0-pEak6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_oiAuO6k6Ee-lntgJ_JlK2w" name="inputFile">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_oiAuPKk6Ee-lntgJ_JlK2w" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>String graphFileContents = wfm.readFile(inputFile);&#xD;
		if (verbose) {&#xD;
			System.out.println(&quot;************************************&quot;);&#xD;
			System.out.println(&quot;Graph File Read:&quot;);&#xD;
			System.out.println(graphFileContents);&#xD;
			System.out.println(&quot;************************************\n&quot;);&#xD;
		}&#xD;
		return graphFileContents;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oiAuPak6Ee-lntgJ_JlK2w" name="printVerboseMessage" specification="_n0_QIqk6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_oiAuPqk6Ee-lntgJ_JlK2w" name="workingDirectory">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_oiAuP6k6Ee-lntgJ_JlK2w" name="fileName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_oiAuQKk6Ee-lntgJ_JlK2w" name="graphFileName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>System.out.printf(&quot;Working directory is %s\n&quot;, workingDirectory);&#xD;
		System.out.printf(&quot;Input file name is %s\n&quot;, fileName);&#xD;
		System.out.printf(&quot;Graph file %s doesn't exist\n&quot;, graphFileName);&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_n08M0Kk6Ee-lntgJ_JlK2w" name="setGraphFileName" visibility="private" method="_oiAuMKk6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_n08M0ak6Ee-lntgJ_JlK2w" name="inputFile">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_n08z4Kk6Ee-lntgJ_JlK2w" name="verifyGraphFileName" visibility="private" method="_oiAuMqk6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_n08z4ak6Ee-lntgJ_JlK2w" name="inputFile">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_n09a8Kk6Ee-lntgJ_JlK2w" name="readGraphFile" method="_oiAuNKk6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_n09a8ak6Ee-lntgJ_JlK2w" name="inputFile">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_n09a8qk6Ee-lntgJ_JlK2w" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_n0-CAKk6Ee-lntgJ_JlK2w" name="getInputGraphFileName" visibility="private" method="_oiAuN6k6Ee-lntgJ_JlK2w" raisedException="_oeZZgKk6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_n0-CAak6Ee-lntgJ_JlK2w" name="inputFile">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_n0-pEKk6Ee-lntgJ_JlK2w" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_n0-pEak6Ee-lntgJ_JlK2w" name="readGraphFileContents" visibility="private" method="_oiAuOqk6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_n0_QIKk6Ee-lntgJ_JlK2w" name="inputFile">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_n0_QIak6Ee-lntgJ_JlK2w" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_n0_QIqk6Ee-lntgJ_JlK2w" name="printVerboseMessage" visibility="private" method="_oiAuPak6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_n0_3MKk6Ee-lntgJ_JlK2w" name="workingDirectory">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_n0_3Mak6Ee-lntgJ_JlK2w" name="fileName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_n0_3Mqk6Ee-lntgJ_JlK2w" name="graphFileName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_obwVMKk6Ee-lntgJ_JlK2w" name="InputGraphFile" method="_oiAHI6k6Ee-lntgJ_JlK2w">
                <eAnnotations xmi:id="_obwVMqk6Ee-lntgJ_JlK2w" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_obwVM6k6Ee-lntgJ_JlK2w" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_obwVMak6Ee-lntgJ_JlK2w" name="fm" type="_n0HGYKk6Ee-lntgJ_JlK2w"/>
                <ownedParameter xmi:id="_obwVNKk6Ee-lntgJ_JlK2w" type="_n06XoKk6Ee-lntgJ_JlK2w" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_obwVNak6Ee-lntgJ_JlK2w" name="InputGraphFile" method="_oiAHJqk6Ee-lntgJ_JlK2w">
                <eAnnotations xmi:id="_obw8Qqk6Ee-lntgJ_JlK2w" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_obw8Q6k6Ee-lntgJ_JlK2w" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_obw8QKk6Ee-lntgJ_JlK2w" name="fm" type="_n0HGYKk6Ee-lntgJ_JlK2w"/>
                <ownedParameter xmi:id="_obw8Qak6Ee-lntgJ_JlK2w" name="verbose">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_obw8RKk6Ee-lntgJ_JlK2w" type="_n06XoKk6Ee-lntgJ_JlK2w" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_n1DhkKk6Ee-lntgJ_JlK2w" name="InstructionTimeSlot">
              <generalization xmi:id="_obxjUKk6Ee-lntgJ_JlK2w" general="_n4eB8Kk6Ee-lntgJ_JlK2w"/>
              <ownedAttribute xmi:id="_ogRBwKk6Ee-lntgJ_JlK2w" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_ogRBwak6Ee-lntgJ_JlK2w" value="1L"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oiBVQKk6Ee-lntgJ_JlK2w" name="InstructionTimeSlot" specification="_n1EIoKk6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_oiBVQak6Ee-lntgJ_JlK2w" type="_n1DhkKk6Ee-lntgJ_JlK2w" direction="return"/>
                <language>java</language>
                <body>super();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oiBVQqk6Ee-lntgJ_JlK2w" name="InstructionTimeSlot" specification="_n1FWwKk6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_oiBVQ6k6Ee-lntgJ_JlK2w" name="numNodes">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_oiBVRKk6Ee-lntgJ_JlK2w" name="element">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_oiBVRak6Ee-lntgJ_JlK2w" type="_n1DhkKk6Ee-lntgJ_JlK2w" direction="return"/>
                <language>java</language>
                <body>super(numNodes, element);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oiBVRqk6Ee-lntgJ_JlK2w" name="InstructionTimeSlot" specification="_n1F90Kk6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_oiBVR6k6Ee-lntgJ_JlK2w" name="rowArray">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oiBVSKk6Ee-lntgJ_JlK2w" value="*"/>
                </ownedParameter>
                <ownedParameter xmi:id="_oiBVSak6Ee-lntgJ_JlK2w" type="_n1DhkKk6Ee-lntgJ_JlK2w" direction="return"/>
                <language>java</language>
                <body>super(rowArray);&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_n1EIoKk6Ee-lntgJ_JlK2w" name="InstructionTimeSlot" method="_oiBVQKk6Ee-lntgJ_JlK2w">
                <eAnnotations xmi:id="_n1EIoak6Ee-lntgJ_JlK2w" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_n1EIoqk6Ee-lntgJ_JlK2w" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_n1EIo6k6Ee-lntgJ_JlK2w" type="_n1DhkKk6Ee-lntgJ_JlK2w" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_n1FWwKk6Ee-lntgJ_JlK2w" name="InstructionTimeSlot" visibility="package" method="_oiBVQqk6Ee-lntgJ_JlK2w">
                <eAnnotations xmi:id="_n1FWw6k6Ee-lntgJ_JlK2w" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_n1FWxKk6Ee-lntgJ_JlK2w" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_n1FWwak6Ee-lntgJ_JlK2w" name="numNodes">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_n1FWwqk6Ee-lntgJ_JlK2w" name="element">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_n1FWxak6Ee-lntgJ_JlK2w" type="_n1DhkKk6Ee-lntgJ_JlK2w" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_n1F90Kk6Ee-lntgJ_JlK2w" name="InstructionTimeSlot" visibility="package" method="_oiBVRqk6Ee-lntgJ_JlK2w">
                <eAnnotations xmi:id="_n1F90qk6Ee-lntgJ_JlK2w" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_n1F906k6Ee-lntgJ_JlK2w" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_n1F90ak6Ee-lntgJ_JlK2w" name="rowArray">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_n1F91ak6Ee-lntgJ_JlK2w" value="*"/>
                </ownedParameter>
                <ownedParameter xmi:id="_n1F91Kk6Ee-lntgJ_JlK2w" type="_n1DhkKk6Ee-lntgJ_JlK2w" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_n1Gk4Kk6Ee-lntgJ_JlK2w" name="LatencyAnalysis">
              <ownedComment xmi:id="_oi-XgKk6Ee-lntgJ_JlK2w">
                <body>@author sgoddard2&#xD;
@version 1.3</body>
              </ownedComment>
              <ownedAttribute xmi:id="_ogRBwqk6Ee-lntgJ_JlK2w" name="DEADLINE_MISS" visibility="private" isStatic="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_ogRBw6k6Ee-lntgJ_JlK2w" value="&quot; => DEADLINE MISS&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_ogRo0ak6Ee-lntgJ_JlK2w" name="FLOW_SEPARATOR" isStatic="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_ogRo06k6Ee-lntgJ_JlK2w" value="&quot;******************************\n&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_ogRo1Kk6Ee-lntgJ_JlK2w" name="latencyReport" visibility="private" type="_nzwhEKk6Ee-lntgJ_JlK2w" association="_okBgZKk6Ee-lntgJ_JlK2w"/>
              <ownedAttribute xmi:id="_ogSP4ak6Ee-lntgJ_JlK2w" name="program" visibility="private" type="_n2BK4Kk6Ee-lntgJ_JlK2w" association="_okCHcak6Ee-lntgJ_JlK2w"/>
              <ownedAttribute xmi:id="_ogS28ak6Ee-lntgJ_JlK2w" name="workload" visibility="private" type="_n8NScKk6Ee-lntgJ_JlK2w" association="_okCHdKk6Ee-lntgJ_JlK2w"/>
              <ownedAttribute xmi:id="_ogS286k6Ee-lntgJ_JlK2w" name="programTable" visibility="private" type="_n2hhMKk6Ee-lntgJ_JlK2w" association="_okCugak6Ee-lntgJ_JlK2w"/>
              <ownedAttribute xmi:id="_ogTeAak6Ee-lntgJ_JlK2w" name="nodeIndex" visibility="private" type="_oatzYKk6Ee-lntgJ_JlK2w" association="_okDVkak6Ee-lntgJ_JlK2w"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oiB8UKk6Ee-lntgJ_JlK2w" name="LatencyAnalysis" specification="_obzYgKk6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_oiB8Uak6Ee-lntgJ_JlK2w" name="warp" type="_n7T6kKk6Ee-lntgJ_JlK2w"/>
                <ownedParameter xmi:id="_oiB8Uqk6Ee-lntgJ_JlK2w" type="_n1Gk4Kk6Ee-lntgJ_JlK2w" direction="return"/>
                <language>java</language>
                <body>this.latencyReport = new Description();&#xD;
 this.program = warp.toProgram();&#xD;
 this.workload = warp.toWorkload();&#xD;
 this.programTable = program.getSchedule();&#xD;
 this.nodeIndex = program.getNodeMapIndex();&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oiB8U6k6Ee-lntgJ_JlK2w" name="LatencyAnalysis" specification="_obzYhak6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_oiB8VKk6Ee-lntgJ_JlK2w" name="program" type="_n2BK4Kk6Ee-lntgJ_JlK2w"/>
                <ownedParameter xmi:id="_oiB8Vak6Ee-lntgJ_JlK2w" type="_n1Gk4Kk6Ee-lntgJ_JlK2w" direction="return"/>
                <language>java</language>
                <body>this.latencyReport = new Description();&#xD;
 this.program = program;&#xD;
 this.workload = program.toWorkLoad();&#xD;
 this.programTable = program.getSchedule();&#xD;
 this.nodeIndex = program.getNodeMapIndex();&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oiB8Vqk6Ee-lntgJ_JlK2w" name="latencyReport" specification="_n1IaEKk6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_oiB8V6k6Ee-lntgJ_JlK2w" type="_nzwhEKk6Ee-lntgJ_JlK2w" direction="return"/>
                <language>java</language>
                <body>/*&#xD;
  * Build a latency report. Flows are output in priority order (based on the priority used to&#xD;
  * build the program. The latency for each instance of the flow is reported as follows&#xD;
  * &quot;Maximum latency for FlowName:Instance is Latency&quot;&#xD;
  * &#xD;
  * For flow instances that have latency > deadline, then the latency message is appended with&#xD;
  * the string &quot; => DEADLINE MISS&quot;&#xD;
  * &#xD;
  * A line of 30 '*' characters separates each group of flow instance reports.&#xD;
  * &#xD;
  * When there are not enough transmissions attempted between the release and the next release of&#xD;
  * an instance, then the latency is not computed (as we assume deadline &lt;= period. Thus, the&#xD;
  * report is: &quot;UNKNOWN latency for FlowName:Instance; Not enough transmissions attempted&quot;&#xD;
  * &#xD;
  */&#xD;
&#xD;
 var flows = workload.getFlowNamesInPriorityOrder();&#xD;
 for (String flowName : flows) {&#xD;
   var time = 0;&#xD;
&#xD;
   var nodes = workload.getNodesInFlow(flowName); // names of nodes in flow&#xD;
   var flowSnkIndex = nodes.length - 1;&#xD;
   /* get snk of last link in the flow, which is also the Flow snk node */&#xD;
   String snk = nodes[flowSnkIndex];&#xD;
   /* get the src of last link in the flow */&#xD;
   String src = nodes[flowSnkIndex - 1];&#xD;
   /* get (column) indexes into programTable of these nodes */&#xD;
   var snkIndex = nodeIndex.get(snk);&#xD;
   var srcIndex = nodeIndex.get(src);&#xD;
   /* get the array containing the number of transmissions required for each link in the flow */&#xD;
   var numTxAttemptsPerLink = workload.getNumTxAttemptsPerLink(flowName);&#xD;
   /* get the number of transmission required for the last link in the flow */&#xD;
   var numTxRequired = numTxAttemptsPerLink[numTxAttemptsPerLink.length - 1];&#xD;
   var numTxProcessed = 0; // num of Tx seen in the program schedule so far&#xD;
   var instance = 0;&#xD;
   while (time &lt; workload.getHyperPeriod()) {&#xD;
     /* get next release time and absolute deadline of the flow */&#xD;
     var releaseTime = workload.nextReleaseTime(flowName, time);&#xD;
     var deadline = workload.nextAbsoluteDeadline(flowName, releaseTime);&#xD;
     var nextReleaseTime = workload.nextReleaseTime(flowName, deadline);&#xD;
     // var latency = 0;&#xD;
     time = releaseTime;&#xD;
     numTxProcessed = 0; // num of Tx seen in the program schedule so far&#xD;
     while (time &lt; nextReleaseTime) {&#xD;
       /* get instruction strings at these to locations */&#xD;
       String instr1 = programTable.get(time, srcIndex);&#xD;
       String instr2 = programTable.get(time, snkIndex);&#xD;
       numTxProcessed += numMatchingTx(flowName, src, snk, instr1);&#xD;
       numTxProcessed += numMatchingTx(flowName, src, snk, instr2);&#xD;
       if (numTxProcessed == numTxRequired) {&#xD;
         /*&#xD;
          * all required Tx attempts have been made compute and record latency&#xD;
          */&#xD;
         var latency = time - releaseTime + 1;&#xD;
         // report latency&#xD;
         String latencyMsg =&#xD;
             String.format(&quot;Maximum latency for %s:%d is %d&quot;, flowName, instance, latency);&#xD;
         if (latency > deadline) {&#xD;
           /* deadline missed, so color the text red */&#xD;
           latencyMsg += DEADLINE_MISS;&#xD;
         }&#xD;
         latencyMsg += &quot;\n&quot;;&#xD;
         latencyReport.add(latencyMsg);&#xD;
         time = nextReleaseTime;&#xD;
       } else {&#xD;
         time++;&#xD;
       }&#xD;
&#xD;
     }&#xD;
     if (numTxProcessed &lt; numTxRequired) {&#xD;
       /*&#xD;
        * This flow missed its deadline with required number of Tx!! This message should not be&#xD;
        * printed with the schedulers built&#xD;
        */&#xD;
       String latencyMsg =&#xD;
           String.format(&quot;UNKNOWN latency for %s:%d; Not enough transmissions attempted\n&quot;,&#xD;
               flowName, instance);&#xD;
       latencyReport.add(latencyMsg);&#xD;
     }&#xD;
     instance++;&#xD;
   }&#xD;
   String flowSeparator = FLOW_SEPARATOR;&#xD;
   latencyReport.add(flowSeparator);&#xD;
 }&#xD;
 return latencyReport;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oiB8WKk6Ee-lntgJ_JlK2w" name="numMatchingTx" specification="_n1JoMKk6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_oiB8Wak6Ee-lntgJ_JlK2w" name="flow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_oiB8Wqk6Ee-lntgJ_JlK2w" name="src">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_oiB8W6k6Ee-lntgJ_JlK2w" name="snk">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_oiB8XKk6Ee-lntgJ_JlK2w" name="instr">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_oiB8Xak6Ee-lntgJ_JlK2w" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var numTx = 0;&#xD;
&#xD;
 if (flow == null || src == null || snk == null || instr == null) {&#xD;
   /* make sure all parameters are valid */&#xD;
   return numTx;&#xD;
 }&#xD;
 /*&#xD;
  * get a Warp instruction parser object and then get the instruction parameters from the&#xD;
  * instruction string.&#xD;
  */&#xD;
 var dsl = new WarpDSL();&#xD;
 var instructionParametersArray = dsl.getInstructionParameters(instr);&#xD;
&#xD;
 for (InstructionParameters entry : instructionParametersArray) {&#xD;
   String flowName = entry.getFlow();&#xD;
   if (flowName.equals(flow)) {&#xD;
     /*&#xD;
      * This instruction is for the flow we want. (flow name is set for push/pull instructions,&#xD;
      * which are all we want. If not push/pull, then we skip this instruction.) If flow, src,&#xD;
      * and snk names in instruction match input parameters, then we have a Tx attempt.&#xD;
      */&#xD;
     if (src.equals(entry.getSrc()) &amp;&amp; snk.equals(entry.getSnk())) {&#xD;
       /* flow, src, and snk match, so increment Tx attempts */&#xD;
       numTx++;&#xD;
     }&#xD;
   }&#xD;
 }&#xD;
 return numTx;&#xD;
  </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_n1IaEKk6Ee-lntgJ_JlK2w" name="latencyReport" method="_oiB8Vqk6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_obz_lKk6Ee-lntgJ_JlK2w" type="_nzwhEKk6Ee-lntgJ_JlK2w" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_n1JoMKk6Ee-lntgJ_JlK2w" name="numMatchingTx" method="_oiB8WKk6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_n1JoMak6Ee-lntgJ_JlK2w" name="flow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_n1JoMqk6Ee-lntgJ_JlK2w" name="src">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_n1JoM6k6Ee-lntgJ_JlK2w" name="snk">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_n1JoNKk6Ee-lntgJ_JlK2w" name="instr">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_n1KPQKk6Ee-lntgJ_JlK2w" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_obzYgKk6Ee-lntgJ_JlK2w" name="LatencyAnalysis" visibility="package" method="_oiB8UKk6Ee-lntgJ_JlK2w">
                <eAnnotations xmi:id="_obzYgqk6Ee-lntgJ_JlK2w" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_obzYg6k6Ee-lntgJ_JlK2w" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_obzYgak6Ee-lntgJ_JlK2w" name="warp" type="_n7T6kKk6Ee-lntgJ_JlK2w"/>
                <ownedParameter xmi:id="_obzYhKk6Ee-lntgJ_JlK2w" type="_n1Gk4Kk6Ee-lntgJ_JlK2w" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_obzYhak6Ee-lntgJ_JlK2w" name="LatencyAnalysis" visibility="package" method="_oiB8U6k6Ee-lntgJ_JlK2w">
                <eAnnotations xmi:id="_obz_kak6Ee-lntgJ_JlK2w" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_obz_kqk6Ee-lntgJ_JlK2w" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_obz_kKk6Ee-lntgJ_JlK2w" name="program" type="_n2BK4Kk6Ee-lntgJ_JlK2w"/>
                <ownedParameter xmi:id="_obz_k6k6Ee-lntgJ_JlK2w" type="_n1Gk4Kk6Ee-lntgJ_JlK2w" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_n1NSkKk6Ee-lntgJ_JlK2w" name="LatencyVisualization">
              <ownedComment xmi:id="_oi-Xgak6Ee-lntgJ_JlK2w">
                <body>LatencyVisualization creates the visualizations for the liability analysis of the WARP program.&#xD;
&lt;p>&#xD;
&#xD;
CS2820 Spring 2022 Project: Implement this class to create the file visualization that is&#xD;
requested in Warp.&#xD;
&#xD;
@author sgoddard&#xD;
@version 1.3&#xD;
 *</body>
              </ownedComment>
              <generalization xmi:id="_ob1NtKk6Ee-lntgJ_JlK2w" general="_n6jsoKk6Ee-lntgJ_JlK2w"/>
              <ownedAttribute xmi:id="_ogUFEKk6Ee-lntgJ_JlK2w" name="SOURCE_SUFFIX" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_ogUFEak6Ee-lntgJ_JlK2w" value="&quot;.la&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_ogUFEqk6Ee-lntgJ_JlK2w" name="OBJECT_NAME" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_ogUFE6k6Ee-lntgJ_JlK2w" value="&quot;Latency Analysis&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_ogUFFKk6Ee-lntgJ_JlK2w" name="warp" visibility="private" type="_n7T6kKk6Ee-lntgJ_JlK2w" association="_okD8oak6Ee-lntgJ_JlK2w"/>
              <ownedAttribute xmi:id="_ogUsIKk6Ee-lntgJ_JlK2w" name="la" visibility="private" type="_n1Gk4Kk6Ee-lntgJ_JlK2w" association="_okFKwak6Ee-lntgJ_JlK2w"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oiCjYKk6Ee-lntgJ_JlK2w" name="LatencyVisualization" specification="_ob0moKk6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_oiCjYak6Ee-lntgJ_JlK2w" name="warp" type="_n7T6kKk6Ee-lntgJ_JlK2w"/>
                <ownedParameter xmi:id="_oiCjYqk6Ee-lntgJ_JlK2w" type="_n1NSkKk6Ee-lntgJ_JlK2w" direction="return"/>
                <language>java</language>
                <body>super(new FileManager(), warp, SOURCE_SUFFIX);&#xD;
 this.warp = warp;&#xD;
 this.la = warp.toLatencyAnalysis();&#xD;
  </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_ob0moKk6Ee-lntgJ_JlK2w" name="LatencyVisualization" visibility="package" method="_oiCjYKk6Ee-lntgJ_JlK2w">
                <eAnnotations xmi:id="_ob1Nsak6Ee-lntgJ_JlK2w" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_ob1Nsqk6Ee-lntgJ_JlK2w" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_ob1NsKk6Ee-lntgJ_JlK2w" name="warp" type="_n7T6kKk6Ee-lntgJ_JlK2w"/>
                <ownedParameter xmi:id="_ob1Ns6k6Ee-lntgJ_JlK2w" type="_n1NSkKk6Ee-lntgJ_JlK2w" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_n1PHwKk6Ee-lntgJ_JlK2w" name="LatestReleaseTimeComparator">
              <interfaceRealization xmi:id="_oecc0Kk6Ee-lntgJ_JlK2w" client="_n1PHwKk6Ee-lntgJ_JlK2w" supplier="_obMUgKk6Ee-lntgJ_JlK2w" contract="_obMUgKk6Ee-lntgJ_JlK2w"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oiCjY6k6Ee-lntgJ_JlK2w" name="compare" specification="_oedD4ak6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_oiCjZKk6Ee-lntgJ_JlK2w" name="obj1" type="_oeQPkak6Ee-lntgJ_JlK2w"/>
                <ownedParameter xmi:id="_oiCjZak6Ee-lntgJ_JlK2w" name="obj2" type="_oeQPkak6Ee-lntgJ_JlK2w"/>
                <ownedParameter xmi:id="_oiCjZqk6Ee-lntgJ_JlK2w" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>var result = obj1.LatestReleaseTimeComparison(obj2);&#xD;
		return result; // 0 => tie on release time&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_oedD4ak6Ee-lntgJ_JlK2w" name="compare" method="_oiCjY6k6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_oeeSAKk6Ee-lntgJ_JlK2w" name="obj1" type="_oeQPkak6Ee-lntgJ_JlK2w"/>
                <ownedParameter xmi:id="_oehVUKk6Ee-lntgJ_JlK2w" name="obj2" type="_oeQPkak6Ee-lntgJ_JlK2w"/>
                <ownedParameter xmi:id="_oehVUak6Ee-lntgJ_JlK2w" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_n1SLEKk6Ee-lntgJ_JlK2w" name="MaxPhaseComparator">
              <interfaceRealization xmi:id="_oeijcKk6Ee-lntgJ_JlK2w" client="_n1SLEKk6Ee-lntgJ_JlK2w" supplier="_obMUgKk6Ee-lntgJ_JlK2w" contract="_obMUgKk6Ee-lntgJ_JlK2w"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oiCjZ6k6Ee-lntgJ_JlK2w" name="compare" specification="_oejKgKk6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_oiCjaKk6Ee-lntgJ_JlK2w" name="obj1" type="_oeQPkak6Ee-lntgJ_JlK2w"/>
                <ownedParameter xmi:id="_oiCjaak6Ee-lntgJ_JlK2w" name="obj2" type="_oeQPkak6Ee-lntgJ_JlK2w"/>
                <ownedParameter xmi:id="_oiCjaqk6Ee-lntgJ_JlK2w" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>return obj1.maxPhaseComparison(obj2); &#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_oejKgKk6Ee-lntgJ_JlK2w" name="compare" method="_oiCjZ6k6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_oejKgak6Ee-lntgJ_JlK2w" name="obj1" type="_oeQPkak6Ee-lntgJ_JlK2w"/>
                <ownedParameter xmi:id="_oejKgqk6Ee-lntgJ_JlK2w" name="obj2" type="_oeQPkak6Ee-lntgJ_JlK2w"/>
                <ownedParameter xmi:id="_oejKg6k6Ee-lntgJ_JlK2w" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_n1UAQKk6Ee-lntgJ_JlK2w" name="Node">
              <generalization xmi:id="_ob4RAKk6Ee-lntgJ_JlK2w" general="_n4iTYKk6Ee-lntgJ_JlK2w"/>
              <ownedAttribute xmi:id="_ogUsIqk6Ee-lntgJ_JlK2w" name="DEFAULT_CHANNEL" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_ogUsI6k6Ee-lntgJ_JlK2w" value="0"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_ogUsJKk6Ee-lntgJ_JlK2w" name="channel">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_ogVTMKk6Ee-lntgJ_JlK2w" name="index">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_ogVTMak6Ee-lntgJ_JlK2w" name="edges" type="_oawPoKk6Ee-lntgJ_JlK2w" isReadOnly="true" association="_okFx0ak6Ee-lntgJ_JlK2w"/>
              <ownedAttribute xmi:id="_ogVTM6k6Ee-lntgJ_JlK2w" name="conflicts" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ogVTNKk6Ee-lntgJ_JlK2w" value="*"/>
              </ownedAttribute>
              <interfaceRealization xmi:id="_oejxkqk6Ee-lntgJ_JlK2w" client="_n1UAQKk6Ee-lntgJ_JlK2w" supplier="_oeC0Mak6Ee-lntgJ_JlK2w" contract="_oeC0Mak6Ee-lntgJ_JlK2w"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oiDKcKk6Ee-lntgJ_JlK2w" name="Node" specification="_n1UnUKk6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_oiDKcak6Ee-lntgJ_JlK2w" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_oiDKcqk6Ee-lntgJ_JlK2w" name="priority">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_oiDKc6k6Ee-lntgJ_JlK2w" name="index">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_oiDKdKk6Ee-lntgJ_JlK2w" type="_n1UAQKk6Ee-lntgJ_JlK2w" direction="return"/>
                <language>java</language>
                <body>super();&#xD;
 	setName(name);&#xD;
 	setPriority(priority);&#xD;
 	this.index = index;&#xD;
 	this.channel = DEFAULT_CHANNEL;&#xD;
 	this.edges = new ArrayList&lt;Edge>();&#xD;
 	this.conflicts = new HashSet&lt;String>();&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oiDKdak6Ee-lntgJ_JlK2w" name="compareTo" specification="_ob3C4Kk6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_oiDKdqk6Ee-lntgJ_JlK2w" name="node" type="_n1UAQKk6Ee-lntgJ_JlK2w"/>
                <ownedParameter xmi:id="_oiDKd6k6Ee-lntgJ_JlK2w" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>return node.getPriority() > this.getPriority() ? -1 : 1;&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oiDKeKk6Ee-lntgJ_JlK2w" name="toString" specification="_n1V1cKk6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_oiDKeak6Ee-lntgJ_JlK2w" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return getName();&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oiDKeqk6Ee-lntgJ_JlK2w" name="addEdge" specification="_ob3p8qk6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_oiDKe6k6Ee-lntgJ_JlK2w" name="edge" type="_nz2AoKk6Ee-lntgJ_JlK2w"/>
                <language>java</language>
                <body>edges.add(edge);&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oiDxgKk6Ee-lntgJ_JlK2w" name="addConflict" specification="_n1XDkKk6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_oiDxgak6Ee-lntgJ_JlK2w" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>conflicts.add(name);&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oiDxgqk6Ee-lntgJ_JlK2w" name="numEdges" specification="_n1XDkqk6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_oiDxg6k6Ee-lntgJ_JlK2w" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>return edges.size();&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oiDxhKk6Ee-lntgJ_JlK2w" name="print" specification="_n1XqoKk6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_oiDxhak6Ee-lntgJ_JlK2w" name="headerMsg">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>System.out.printf(&quot;\n%s&quot;,headerMsg);&#xD;
		this.print();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oiDxhqk6Ee-lntgJ_JlK2w" name="print" specification="_n1Y4wak6Ee-lntgJ_JlK2w">
                <language>java</language>
                <body>super.print();&#xD;
		System.out.print(&quot;Edge info for this partiion\n&quot;);&#xD;
		for (Edge edge: edges) {&#xD;
			edge.print();&#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_n1UnUKk6Ee-lntgJ_JlK2w" name="Node" visibility="package" method="_oiDKcKk6Ee-lntgJ_JlK2w">
                <eAnnotations xmi:id="_n1VOY6k6Ee-lntgJ_JlK2w" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_n1VOZKk6Ee-lntgJ_JlK2w" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_n1VOYKk6Ee-lntgJ_JlK2w" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_n1VOYak6Ee-lntgJ_JlK2w" name="priority">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_n1VOYqk6Ee-lntgJ_JlK2w" name="index">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_n1VOZak6Ee-lntgJ_JlK2w" type="_n1UAQKk6Ee-lntgJ_JlK2w" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_n1V1cKk6Ee-lntgJ_JlK2w" name="toString" method="_oiDKeKk6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_n1V1cak6Ee-lntgJ_JlK2w" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_n1XDkKk6Ee-lntgJ_JlK2w" name="addConflict" method="_oiDxgKk6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_n1XDkak6Ee-lntgJ_JlK2w" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_n1XDkqk6Ee-lntgJ_JlK2w" name="numEdges" method="_oiDxgqk6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_n1XDk6k6Ee-lntgJ_JlK2w" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_n1XqoKk6Ee-lntgJ_JlK2w" name="print" method="_oiDxhKk6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_n1Xqoak6Ee-lntgJ_JlK2w" name="headerMsg">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_n1Y4wak6Ee-lntgJ_JlK2w" name="print" method="_oiDxhqk6Ee-lntgJ_JlK2w"/>
              <ownedOperation xmi:id="_ob3C4Kk6Ee-lntgJ_JlK2w" name="compareTo" method="_oiDKdak6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_ob3C4ak6Ee-lntgJ_JlK2w" name="node" type="_n1UAQKk6Ee-lntgJ_JlK2w"/>
                <ownedParameter xmi:id="_ob3C4qk6Ee-lntgJ_JlK2w" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_ob3p8qk6Ee-lntgJ_JlK2w" name="addEdge" method="_oiDKeqk6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_ob3p86k6Ee-lntgJ_JlK2w" name="edge" type="_nz2AoKk6Ee-lntgJ_JlK2w"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_n1cjIKk6Ee-lntgJ_JlK2w" name="NodeMap">
              <ownedComment xmi:id="_oi-Xgqk6Ee-lntgJ_JlK2w">
                <body>NodeMap creates a mapping from graph node name to &#xD;
node object (&lt;name, Node>).&#xD;
&#xD;
@author sgoddard2&#xD;
 *</body>
              </ownedComment>
              <generalization xmi:id="_ob5fIKk6Ee-lntgJ_JlK2w" general="_nxRNwKk6Ee-lntgJ_JlK2w"/>
              <ownedAttribute xmi:id="_ogV6QKk6Ee-lntgJ_JlK2w" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_ogV6Qak6Ee-lntgJ_JlK2w" value="1L"/>
              </ownedAttribute>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_n1eYUKk6Ee-lntgJ_JlK2w" name="NonPreemptiveSchedule">
              <ownedComment xmi:id="_oi-Xg6k6Ee-lntgJ_JlK2w">
                <body>PreemptiveSchedule is an instance of the abstract class Schedule.&#xD;
&#xD;
@author sgoddard2&#xD;
 *</body>
              </ownedComment>
              <generalization xmi:id="_ob7UUKk6Ee-lntgJ_JlK2w" general="_n5MasKk6Ee-lntgJ_JlK2w"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oiEYkKk6Ee-lntgJ_JlK2w" name="NonPreemptiveSchedule" specification="_ob6tQKk6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_oiEYkak6Ee-lntgJ_JlK2w" name="poset" type="_n1m7MKk6Ee-lntgJ_JlK2w"/>
                <ownedParameter xmi:id="_oiEYkqk6Ee-lntgJ_JlK2w" name="numChannels">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_oiEYk6k6Ee-lntgJ_JlK2w" type="_n1eYUKk6Ee-lntgJ_JlK2w" direction="return"/>
                <language>java</language>
                <body>super(poset, numChannels);&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_ob6tQKk6Ee-lntgJ_JlK2w" name="NonPreemptiveSchedule" visibility="package" method="_oiEYkKk6Ee-lntgJ_JlK2w">
                <eAnnotations xmi:id="_ob6tQ6k6Ee-lntgJ_JlK2w" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_ob6tRKk6Ee-lntgJ_JlK2w" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_ob6tQak6Ee-lntgJ_JlK2w" name="poset" type="_n1m7MKk6Ee-lntgJ_JlK2w"/>
                <ownedParameter xmi:id="_ob6tQqk6Ee-lntgJ_JlK2w" name="numChannels">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ob6tRak6Ee-lntgJ_JlK2w" type="_n1eYUKk6Ee-lntgJ_JlK2w" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_n1gNgKk6Ee-lntgJ_JlK2w" name="NotImplentedVisualization">
              <generalization xmi:id="_ob7UUqk6Ee-lntgJ_JlK2w" general="_n6jsoKk6Ee-lntgJ_JlK2w"/>
              <ownedAttribute xmi:id="_ogV6Qqk6Ee-lntgJ_JlK2w" name="SUFFIX" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_ogV6Q6k6Ee-lntgJ_JlK2w" value="&quot;.txt&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_ogV6RKk6Ee-lntgJ_JlK2w" name="NAME_EXTENSTION" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_ogV6Rak6Ee-lntgJ_JlK2w" value="&quot;NotImplementedFeature&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_ogWhUKk6Ee-lntgJ_JlK2w" name="CONTENT" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_ogWhUak6Ee-lntgJ_JlK2w" value="&quot;Not Implemented&quot;"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oiEYlKk6Ee-lntgJ_JlK2w" name="NotImplentedVisualization" specification="_n1hboKk6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_oiEYlak6Ee-lntgJ_JlK2w" type="_n1gNgKk6Ee-lntgJ_JlK2w" direction="return"/>
                <language>java</language>
                <body>super(new FileManager(), NAME_EXTENSTION, SUFFIX);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oiEYlqk6Ee-lntgJ_JlK2w" name="NotImplentedVisualization" specification="_n1iCsak6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_oiEYl6k6Ee-lntgJ_JlK2w" name="extension">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_oiEYmKk6Ee-lntgJ_JlK2w" type="_n1gNgKk6Ee-lntgJ_JlK2w" direction="return"/>
                <language>java</language>
                <body>super(new FileManager(), extension, SUFFIX);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oiEYmak6Ee-lntgJ_JlK2w" name="visualization" specification="_n1ipw6k6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_oiEYmqk6Ee-lntgJ_JlK2w" type="_nzwhEKk6Ee-lntgJ_JlK2w" direction="return"/>
                <language>java</language>
                <body>return new Description(CONTENT);&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_n1hboKk6Ee-lntgJ_JlK2w" name="NotImplentedVisualization" visibility="package" method="_oiEYlKk6Ee-lntgJ_JlK2w">
                <eAnnotations xmi:id="_n1hboak6Ee-lntgJ_JlK2w" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_n1hboqk6Ee-lntgJ_JlK2w" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_n1iCsKk6Ee-lntgJ_JlK2w" type="_n1gNgKk6Ee-lntgJ_JlK2w" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_n1iCsak6Ee-lntgJ_JlK2w" name="NotImplentedVisualization" visibility="package" method="_oiEYlqk6Ee-lntgJ_JlK2w">
                <eAnnotations xmi:id="_n1ipwKk6Ee-lntgJ_JlK2w" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_n1ipwak6Ee-lntgJ_JlK2w" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_n1iCsqk6Ee-lntgJ_JlK2w" name="extension">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_n1ipwqk6Ee-lntgJ_JlK2w" type="_n1gNgKk6Ee-lntgJ_JlK2w" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_n1ipw6k6Ee-lntgJ_JlK2w" name="visualization" method="_oiEYmak6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_ob7UUak6Ee-lntgJ_JlK2w" type="_nzwhEKk6Ee-lntgJ_JlK2w" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_n1ke8Kk6Ee-lntgJ_JlK2w" name="PeriodComparator">
              <interfaceRealization xmi:id="_oek_sKk6Ee-lntgJ_JlK2w" client="_n1ke8Kk6Ee-lntgJ_JlK2w" supplier="_obMUgKk6Ee-lntgJ_JlK2w" contract="_obMUgKk6Ee-lntgJ_JlK2w"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oiE_oKk6Ee-lntgJ_JlK2w" name="compare" specification="_oelmwak6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_oiE_oak6Ee-lntgJ_JlK2w" name="obj1" type="_oeQPkak6Ee-lntgJ_JlK2w"/>
                <ownedParameter xmi:id="_oiE_oqk6Ee-lntgJ_JlK2w" name="obj2" type="_oeQPkak6Ee-lntgJ_JlK2w"/>
                <ownedParameter xmi:id="_oiE_o6k6Ee-lntgJ_JlK2w" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>return obj1.periodComparison(obj2); &#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_oelmwak6Ee-lntgJ_JlK2w" name="compare" method="_oiE_oKk6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_oemN0Kk6Ee-lntgJ_JlK2w" name="obj1" type="_oeQPkak6Ee-lntgJ_JlK2w"/>
                <ownedParameter xmi:id="_oemN0ak6Ee-lntgJ_JlK2w" name="obj2" type="_oeQPkak6Ee-lntgJ_JlK2w"/>
                <ownedParameter xmi:id="_oemN0qk6Ee-lntgJ_JlK2w" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_n1m7MKk6Ee-lntgJ_JlK2w" name="Poset" isAbstract="true">
              <ownedComment xmi:id="_oi-XhKk6Ee-lntgJ_JlK2w">
                <body>Poset is a partially ordered set of activations&#xD;
that are partitions of the workload to be scheduled.&#xD;
This version assumes each activation is a node&#xD;
and each node has a list of edges associated with it.&#xD;
Each node/activation in an edge is identified as either &#xD;
a transmitter or sender for that edge.&#xD;
&#xD;
@author sgoddard</body>
              </ownedComment>
              <ownedAttribute xmi:id="_ogWhUqk6Ee-lntgJ_JlK2w" name="activations" visibility="private" type="_nymDcKk6Ee-lntgJ_JlK2w" association="_okGY4ak6Ee-lntgJ_JlK2w"/>
              <ownedAttribute xmi:id="_ogXIYKk6Ee-lntgJ_JlK2w" name="workload" visibility="private" type="_n8NScKk6Ee-lntgJ_JlK2w" association="_okG_8ak6Ee-lntgJ_JlK2w"/>
              <ownedAttribute xmi:id="_ogXIYqk6Ee-lntgJ_JlK2w" name="flows" visibility="protected" type="_n0QQUKk6Ee-lntgJ_JlK2w" association="_okHnAak6Ee-lntgJ_JlK2w">
                <eAnnotations xmi:id="_ogXIZKk6Ee-lntgJ_JlK2w" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_ogXIZak6Ee-lntgJ_JlK2w" key="generic_container"/>
                </eAnnotations>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ogXIY6k6Ee-lntgJ_JlK2w" value="*"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_ogXvcak6Ee-lntgJ_JlK2w" name="nodes" visibility="private" type="_n1UAQKk6Ee-lntgJ_JlK2w" association="_okIOEak6Ee-lntgJ_JlK2w">
                <eAnnotations xmi:id="_ogXvc6k6Ee-lntgJ_JlK2w" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_ogXvdKk6Ee-lntgJ_JlK2w" key="generic_container"/>
                </eAnnotations>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ogXvcqk6Ee-lntgJ_JlK2w" value="*"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_ogXvdqk6Ee-lntgJ_JlK2w" name="nodeMap" visibility="private" type="_n1cjIKk6Ee-lntgJ_JlK2w" association="_okI1IKk6Ee-lntgJ_JlK2w"/>
              <ownedAttribute xmi:id="_ogXveKk6Ee-lntgJ_JlK2w" name="priorityQueue" visibility="private" type="_n2zOAKk6Ee-lntgJ_JlK2w" association="_okI1I6k6Ee-lntgJ_JlK2w"/>
              <ownedAttribute xmi:id="_ogYWgqk6Ee-lntgJ_JlK2w" name="nodeConnectivityMap" visibility="protected" type="_oatzYKk6Ee-lntgJ_JlK2w" association="_okJcMak6Ee-lntgJ_JlK2w"/>
              <ownedAttribute xmi:id="_ogY9kqk6Ee-lntgJ_JlK2w" name="activationMap" visibility="package" type="_n0lAcKk6Ee-lntgJ_JlK2w" association="_okKDQak6Ee-lntgJ_JlK2w"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oiE_pKk6Ee-lntgJ_JlK2w" name="Poset" specification="_ob-XoKk6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_oiE_pak6Ee-lntgJ_JlK2w" name="workload" type="_n8NScKk6Ee-lntgJ_JlK2w"/>
                <ownedParameter xmi:id="_oiE_pqk6Ee-lntgJ_JlK2w" type="_n1m7MKk6Ee-lntgJ_JlK2w" direction="return"/>
                <language>java</language>
                <body>this.workload = workload;&#xD;
		this.activations = new Activations();&#xD;
		this.activationMap = new FlowNodeToActivationMap();&#xD;
		/* init map to return a null activation if null key intered */&#xD;
		this.activationMap.put(null, null);&#xD;
		flows = workload.getFlows().values();&#xD;
		nodeMap = workload.getNodes();&#xD;
		nodes = nodeMap.values();&#xD;
		priorityQueue = new &#xD;
				SchedulableObjectQueue&lt;Activation>(new &#xD;
						PriorityComparator&lt;Activation>());&#xD;
		/* get global node connectivity */&#xD;
		nodeConnectivityMap = getNodeConnectivity();&#xD;
		buildPosetOfActivations();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oiE_p6k6Ee-lntgJ_JlK2w" name="getNodeConnectivity" specification="_n1owYKk6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_oiE_qKk6Ee-lntgJ_JlK2w" type="_oatzYKk6Ee-lntgJ_JlK2w" direction="return"/>
                <language>java</language>
                <body>HashMap&lt;String, Integer> map = new HashMap&lt;>();&#xD;
		&#xD;
		for (Flow flow: flows) {&#xD;
			var nodesInFlow = flow.getNodes();&#xD;
			var size = nodesInFlow.size();&#xD;
			for (Integer i =0 ; i &lt; size; i++) {&#xD;
				var nodeName = nodesInFlow.get(i).getName();&#xD;
				var connectivity = map.get(nodeName);&#xD;
				var connections = 2; // default # of connections&#xD;
				if (i == 0 || i == size-1) {&#xD;
					/* src or snk => connections = 1 */&#xD;
					connections = 1;&#xD;
				}&#xD;
				if (connectivity != null) {&#xD;
					connectivity += connections;&#xD;
					map.put(nodeName,connectivity);&#xD;
				} else {&#xD;
					map.put(nodeName,connections); // initial connection&#xD;
				}&#xD;
			}&#xD;
		}&#xD;
		return map;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oiE_qak6Ee-lntgJ_JlK2w" name="getNodeNames" specification="_n1p-gak6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_oiE_qqk6Ee-lntgJ_JlK2w" type="_oawPoKk6Ee-lntgJ_JlK2w" direction="return"/>
                <language>java</language>
                <body>var keys = nodeMap.keySet();&#xD;
		var nodeNames = new ArrayList&lt;String>(keys.size());&#xD;
		nodeNames.addAll(keys);&#xD;
		return nodeNames;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oiFmsKk6Ee-lntgJ_JlK2w" name="getNodesNamesOrderedAlphabetically" specification="_n1rMoak6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_oiFmsak6Ee-lntgJ_JlK2w" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oiFmsqk6Ee-lntgJ_JlK2w" value="*"/>
                </ownedParameter>
                <language>java</language>
                <body>var nodeNames = workload.getNodeNamesOrderedAlphabetically();&#xD;
		return nodeNames;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oiFms6k6Ee-lntgJ_JlK2w" name="buildPosetOfActivations" specification="_n1tB0Kk6Ee-lntgJ_JlK2w">
                <language>java</language>
                <body>/* assumes flow priorities have already been set */&#xD;
&#xD;
		/*&#xD;
		 * (1) Create edges, setting priority and release time&#xD;
		 * 		add edges to node respective node lists as edge is created&#xD;
		 * (2) Create conflict set for each node (adjacent nodes)&#xD;
		 * (3) Create activations by selecting coordinators within &#xD;
		 * 		each flow and adding that coordinator's edges and&#xD;
		 * 		release times to an activation with the coordinator's name&#xD;
		 * 		(each activation will have one coordinator and the&#xD;
		 * 			number of activations &lt;= number nodes)&#xD;
		 * (4) Order the activations&#xD;
		 */&#xD;
&#xD;
		createEdgeLists(); // (1)&#xD;
		createConflictLists(); // (2)&#xD;
		createInitialActivations(); // (3)&#xD;
		orderActivations(); // (4)&#xD;
		/* At this point, each flow has been partitioned &#xD;
		 */&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oiFmtKk6Ee-lntgJ_JlK2w" name="createEdgeLists" specification="_n1tB0ak6Ee-lntgJ_JlK2w">
                <language>java</language>
                <body>/* assumes flow priorities have already been set */&#xD;
		var maxFlowLength = workload.maxFlowLength();&#xD;
		for (Flow flow: flows) {&#xD;
			var flowNodes = flow.getNodes();&#xD;
			var numTxArray = workload.getNumTxAttemptsPerLink(flow.getName());&#xD;
			var flowPhase = flow.getPhase();&#xD;
			var flowPriority = flow.getPriority();&#xD;
			var period = flow.getPeriod();&#xD;
			var deadline = flow.getDeadline();&#xD;
			Edge edge = null;&#xD;
			for (Integer i = 0; i &lt; flowNodes.size() -1 ; i++) {&#xD;
				/* Create edges, setting priority and release time */&#xD;
				/* This version adds edges to the main node in NodeMap.&#xD;
				 * This allows creation of large partitions, with at most one per node.&#xD;
				 * An alternative, we can have a lot of small partitions that can be&#xD;
				 * combined later, which may create more parallelism.&#xD;
				 * So, both the global NodeMap nodes and the nodes in the&#xD;
				 * flows are updated with the same edge information. &#xD;
				 * This let's us play with partition creation options later.&#xD;
				 */&#xD;
				var srcNode = nodeMap.get(flowNodes.get(i).getName()); &#xD;
				var snkNode = nodeMap.get(flowNodes.get(i+1).getName());&#xD;
				var flowSrc = flowNodes.get(i);  // node in the flow&#xD;
				var flowSnk = flowNodes.get(i+1);&#xD;
				var src = srcNode.getName();&#xD;
				var snk = snkNode.getName();&#xD;
&#xD;
				/*&#xD;
				 * Edge priority within a flow is based on position&#xD;
				 * in flow. Each Flow has its own priority. This &#xD;
				 * creates a 2-dimensional priority. Thus, we&#xD;
				 * can keep a total ordering of edges if we fold the&#xD;
				 * table into a single row where we assume each new flow&#xD;
				 * starts maxFlowSize away from the previous flow nodes:&#xD;
				 * edgePriority = flowPriority*maxFlowLength + edgePosition&#xD;
				 */&#xD;
				// var flowPriority = flow.getPriority();&#xD;
				var priority = (flowPriority * maxFlowLength) + i;&#xD;
				//var period = flow.getPeriod();&#xD;
				// var deadline = flow.getDeadline();&#xD;
				/* edge phase = flow phase + edge position in flow */&#xD;
				var phase = flowPhase + i; &#xD;
				var numTx = numTxArray[i];&#xD;
				edge = new Edge(flow.getName(),src,snk,priority, &#xD;
						period, deadline, phase, numTx);&#xD;
				/* Add edge to the nodes in the NodeMap */&#xD;
				srcNode.addEdge(edge);&#xD;
				snkNode.addEdge(edge);&#xD;
				/* Add edge to the nodes in the flow */&#xD;
				flowSrc.addEdge(edge);&#xD;
				flowSnk.addEdge(edge);&#xD;
				/* Add the edege to the flow */&#xD;
				flow.addEdge(edge);&#xD;
&#xD;
			}&#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oiFmtak6Ee-lntgJ_JlK2w" name="createConflictLists" specification="_n1tB0qk6Ee-lntgJ_JlK2w">
                <language>java</language>
                <body>/* create conflict lists at global and&#xD;
		 * local levels (i.e., NodeMap and Flow)&#xD;
		 */&#xD;
		createGlobalConflictLists();&#xD;
		createLocalConflictLists();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oiFmtqk6Ee-lntgJ_JlK2w" name="createGlobalConflictLists" specification="_n1to4Kk6Ee-lntgJ_JlK2w">
                <language>java</language>
                <body>for (Node node: nodes) {&#xD;
			for (Edge edge: node.getEdges()) {&#xD;
				/* get src and snk nodes and names */&#xD;
				var src = edge.getSrc();&#xD;
				var snk = edge.getSnk();&#xD;
				var srcNode = nodeMap.get(src);&#xD;
				var snkNode = nodeMap.get(snk);&#xD;
				/* &#xD;
				 * conflict list is a set, so just add&#xD;
				 * don't need to worry about duplicates&#xD;
				 * as Set ensures that doesn't happen.&#xD;
				 */&#xD;
				srcNode.addConflict(snk);&#xD;
				snkNode.addConflict(src);&#xD;
			}&#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oiFmt6k6Ee-lntgJ_JlK2w" name="createLocalConflictLists" specification="_n1to4ak6Ee-lntgJ_JlK2w">
                <language>java</language>
                <body>for (Flow flow: flows) {&#xD;
			var flowNodes = flow.getNodes();&#xD;
			for (Integer i = 0; i &lt; flowNodes.size() -1 ; i++) {&#xD;
				var srcNode = flowNodes.get(i); &#xD;
				var snkNode = flowNodes.get(i+1);&#xD;
				var src = srcNode.getName();&#xD;
				var snk = snkNode.getName();&#xD;
				/* &#xD;
				 * conflict list is a set, so just add&#xD;
				 * don't need to worry about duplicates&#xD;
				 * as Set ensures that doesn't happen.&#xD;
				 */&#xD;
				srcNode.addConflict(snk);&#xD;
				snkNode.addConflict(src);&#xD;
			}&#xD;
		}&#xD;
&#xD;
&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oiGNwKk6Ee-lntgJ_JlK2w" name="findCoordinator" specification="_oem04qk6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_oiGNwak6Ee-lntgJ_JlK2w" name="nodesInFlow" type="_oawPoKk6Ee-lntgJ_JlK2w"/>
                <ownedParameter xmi:id="_oiGNwqk6Ee-lntgJ_JlK2w" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var size = nodesInFlow.size();&#xD;
		var coordinatorIndex = 0;&#xD;
		var maxEdges = 0;&#xD;
		for (Integer i = 0; i &lt; size; i++) {&#xD;
			var node = nodesInFlow.get(i);&#xD;
			var numEdges = node.numEdges();&#xD;
			if (numEdges > maxEdges) {&#xD;
				maxEdges = numEdges;&#xD;
				coordinatorIndex = i;&#xD;
			}&#xD;
		}&#xD;
		return coordinatorIndex;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oiGNw6k6Ee-lntgJ_JlK2w" name="buildTxArray" specification="_oeoDAKk6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_oiGNxKk6Ee-lntgJ_JlK2w" name="nodesInFlow" type="_oawPoKk6Ee-lntgJ_JlK2w"/>
                <ownedParameter xmi:id="_oiGNxak6Ee-lntgJ_JlK2w" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oiGNxqk6Ee-lntgJ_JlK2w" value="*"/>
                </ownedParameter>
                <language>java</language>
                <body>var size = nodesInFlow.size();&#xD;
		var txArray = new Integer[size];&#xD;
		for (Integer i = 0; i &lt; size; i++) {&#xD;
			var node = nodesInFlow.get(i);&#xD;
			txArray[i] = getMaxTx(node);&#xD;
		}&#xD;
		return txArray;&#xD;
		&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oiG00Kk6Ee-lntgJ_JlK2w" name="createInitialActivations" specification="_n1wFIKk6Ee-lntgJ_JlK2w">
                <language>java</language>
                <body>for (Flow flow: flows) {&#xD;
			var nodesInFlow = flow.getNodes();&#xD;
			Integer coordinatorIndex = 0;&#xD;
			/* Find the node with max edges connected.&#xD;
			 * This will be the first coordinator selected&#xD;
			 * for this flow.&#xD;
			 */&#xD;
			coordinatorIndex = findCoordinator(nodesInFlow);&#xD;
			var txArray = buildTxArray(nodesInFlow);&#xD;
			/* if coordinatorIndex is odd, then other coordinators&#xD;
			 * are also odd numbers, even otherwise. &#xD;
			 * */&#xD;
			Integer startIndex = 0; // for even coordinatorIndex&#xD;
			if ((coordinatorIndex % 2) == 1) {&#xD;
				/* coordinatorIndex is odd, so start at 1 */&#xD;
				startIndex = 1;&#xD;
			}&#xD;
			if (startIndex >= nodesInFlow.size()) {&#xD;
				/* create a partition the single partition */&#xD;
			}&#xD;
			var activationPhaseOffset = 0;&#xD;
			for (Integer i = startIndex; i &lt; nodesInFlow.size(); i+=2) {&#xD;
				var node = nodesInFlow.get(i);&#xD;
				/* create a partition consisting of node i */&#xD;
				String name = flow.getName() + &quot;:&quot; + node.getName();&#xD;
				Activation partition = getActivation(name, node);&#xD;
				/* Update phase for each edge in new partition based on &#xD;
				 * the current offset, which increases after each&#xD;
				 * partition created.&#xD;
				 * */&#xD;
				partition.increaseEdgePhases(activationPhaseOffset);&#xD;
				activations.put(name,partition);&#xD;
				/* increase offset for next partition based on the &#xD;
				 * max numTx in this partition/node &#xD;
				 * But need to account for phase already assumes&#xD;
				 * 1 Tx already&#xD;
				 * */&#xD;
				activationPhaseOffset += txArray[i]-1;  // adjust by one&#xD;
			} &#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oiG00ak6Ee-lntgJ_JlK2w" name="getMaxTx" specification="_ob--sKk6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_oiG00qk6Ee-lntgJ_JlK2w" name="node" type="_n1UAQKk6Ee-lntgJ_JlK2w"/>
                <ownedParameter xmi:id="_oiG006k6Ee-lntgJ_JlK2w" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var result = 0;&#xD;
		for (Edge edge: node.getEdges()) {&#xD;
			result = Math.max(result, edge.getNumTx());&#xD;
		}&#xD;
		return result;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oiG01Kk6Ee-lntgJ_JlK2w" name="getActivation" specification="_ob_lwKk6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_oiG01ak6Ee-lntgJ_JlK2w" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_oiG01qk6Ee-lntgJ_JlK2w" name="node" type="_n1UAQKk6Ee-lntgJ_JlK2w"/>
                <ownedParameter xmi:id="_oiG016k6Ee-lntgJ_JlK2w" type="_nxhscKk6Ee-lntgJ_JlK2w" direction="return"/>
                <language>java</language>
                <body>Activation newPartition = activations.get(name);&#xD;
		if (newPartition == null) {&#xD;
			// no partition by that name exists, so create one&#xD;
			newPartition = new Activation(name);&#xD;
			activationMap.put(node,newPartition);&#xD;
		}&#xD;
		/* add the node as the coordinator */&#xD;
		newPartition.addCoordinator(node.getName());&#xD;
		/* set the conflicts */&#xD;
		newPartition.setConflicts(node.getConflicts());&#xD;
		/* add the edges associated with this coordinator */&#xD;
		newPartition.addEdges(node.getEdges());&#xD;
		/* set the predecessor as the node's predecessor */&#xD;
		var nodePred = node.getPredecessor();&#xD;
		var pred = activationMap.get(nodePred);&#xD;
		if (nodePred != null &amp;&amp; pred == null) {&#xD;
			/* try next node up the flow */&#xD;
			nodePred = nodePred.getPredecessor();&#xD;
			pred = activationMap.get(nodePred);&#xD;
		}&#xD;
		newPartition.setPredecessor(pred);&#xD;
		return newPartition;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oiG02Kk6Ee-lntgJ_JlK2w" name="getHyperPeriod" specification="_n1xTQKk6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_oiG02ak6Ee-lntgJ_JlK2w" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>return workload.getHyperPeriod();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oiHb4Kk6Ee-lntgJ_JlK2w" name="getMaxPhase" specification="_n1xTQqk6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_oiHb4ak6Ee-lntgJ_JlK2w" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>return workload.getMaxPhase();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oiHb4qk6Ee-lntgJ_JlK2w" name="orderActivations" specification="_n1x6Uak6Ee-lntgJ_JlK2w">
                <language>java</language>
                <body>var currentTime = 0; // set initial time for building queue&#xD;
		/* Update the release time and priority of each partition activation */&#xD;
		for (Activation activation: activations.values()) {&#xD;
			activation.updatePriorityAndRelease(currentTime);&#xD;
		}&#xD;
		/* create a queue sorted first by release times and then priorities */&#xD;
		priorityQueue = new &#xD;
				SchedulableObjectQueue&lt;Activation>(new &#xD;
						PriorityComparator&lt;Activation>(),activations.values());&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oiHb46k6Ee-lntgJ_JlK2w" name="getNextActivation" specification="_n1x6Uqk6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_oiHb5Kk6Ee-lntgJ_JlK2w" type="_nxhscKk6Ee-lntgJ_JlK2w" direction="return"/>
                <language>java</language>
                <body>return priorityQueue.poll();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oiHb5ak6Ee-lntgJ_JlK2w" name="addActivation" specification="_ob_lxak6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_oiHb5qk6Ee-lntgJ_JlK2w" name="activation" type="_nxhscKk6Ee-lntgJ_JlK2w"/>
                <language>java</language>
                <body>priorityQueue.add(activation);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oiHb56k6Ee-lntgJ_JlK2w" name="findBaseStation" specification="_n1yhYKk6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_oiHb6Kk6Ee-lntgJ_JlK2w" type="_n1UAQKk6Ee-lntgJ_JlK2w" direction="return"/>
                <language>java</language>
                <body>Node baseStation = null;&#xD;
		Iterator&lt;Flow> iterator = flows.iterator();&#xD;
		Flow flow = iterator.next();&#xD;
		var nodes = flow.getNodes();&#xD;
		var srcBaseStation = nodes.get(0);&#xD;
		var srcBaseStationName = srcBaseStation.getName();&#xD;
		var snkBaseStation = nodes.get(nodes.size()-1);&#xD;
		var snkBaseStationName = snkBaseStation.getName(); &#xD;
		var found = false;&#xD;
 &#xD;
     while (!found &amp;&amp; iterator.hasNext()) {&#xD;
     	flow = iterator.next();&#xD;
 		nodes = flow.getNodes();&#xD;
     	var src = nodes.get(0);&#xD;
			var srcName = src.getName();&#xD;
			var snk = nodes.get(nodes.size()-1);&#xD;
			var snkName = snk.getName();&#xD;
			if (!srcBaseStationName.equals(srcName) &amp;&amp; &#xD;
					snkBaseStationName.equals(snkName)) {&#xD;
				baseStation = snkBaseStation;&#xD;
				found = true;&#xD;
			} else if (srcBaseStationName.equals(srcName) &amp;&amp; &#xD;
					!snkBaseStationName.equals(snkName)) {&#xD;
				baseStation = srcBaseStation;&#xD;
				found = true;&#xD;
			} else if (!srcBaseStationName.equals(snkName) &amp;&amp;&#xD;
					snkBaseStationName.equals(srcName)) {&#xD;
				baseStation = snkBaseStation;&#xD;
				found = true;&#xD;
			} else if (srcBaseStationName.equals(snkName) &amp;&amp; &#xD;
					!snkBaseStationName.equals(srcName)) {&#xD;
				baseStation = srcBaseStation;&#xD;
				found = true;&#xD;
			}&#xD;
     }&#xD;
     if (!found) {&#xD;
     	/* initial snk and src tie for base station. That is&#xD;
     	 * each is always a flow src with the other a snk or&#xD;
     	 * vice versa. &#xD;
     	 * So pick initial snk as the base station */&#xD;
     	baseStation = snkBaseStation;&#xD;
     }&#xD;
		return baseStation;&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_n1owYKk6Ee-lntgJ_JlK2w" name="getNodeConnectivity" visibility="private" method="_oiE_p6k6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_oem04Kk6Ee-lntgJ_JlK2w" type="_oatzYKk6Ee-lntgJ_JlK2w" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_n1p-gak6Ee-lntgJ_JlK2w" name="getNodeNames" method="_oiE_qak6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_oem04ak6Ee-lntgJ_JlK2w" type="_oawPoKk6Ee-lntgJ_JlK2w" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_n1rMoak6Ee-lntgJ_JlK2w" name="getNodesNamesOrderedAlphabetically" method="_oiFmsKk6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_n1rzsKk6Ee-lntgJ_JlK2w" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_n1rzsak6Ee-lntgJ_JlK2w" value="*"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_n1tB0Kk6Ee-lntgJ_JlK2w" name="buildPosetOfActivations" method="_oiFms6k6Ee-lntgJ_JlK2w"/>
              <ownedOperation xmi:id="_n1tB0ak6Ee-lntgJ_JlK2w" name="createEdgeLists" visibility="private" method="_oiFmtKk6Ee-lntgJ_JlK2w"/>
              <ownedOperation xmi:id="_n1tB0qk6Ee-lntgJ_JlK2w" name="createConflictLists" visibility="private" method="_oiFmtak6Ee-lntgJ_JlK2w"/>
              <ownedOperation xmi:id="_n1to4Kk6Ee-lntgJ_JlK2w" name="createGlobalConflictLists" visibility="private" method="_oiFmtqk6Ee-lntgJ_JlK2w"/>
              <ownedOperation xmi:id="_n1to4ak6Ee-lntgJ_JlK2w" name="createLocalConflictLists" visibility="private" method="_oiFmt6k6Ee-lntgJ_JlK2w"/>
              <ownedOperation xmi:id="_n1wFIKk6Ee-lntgJ_JlK2w" name="createInitialActivations" visibility="private" method="_oiG00Kk6Ee-lntgJ_JlK2w"/>
              <ownedOperation xmi:id="_n1xTQKk6Ee-lntgJ_JlK2w" name="getHyperPeriod" method="_oiG02Kk6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_n1xTQak6Ee-lntgJ_JlK2w" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_n1xTQqk6Ee-lntgJ_JlK2w" name="getMaxPhase" method="_oiHb4Kk6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_n1x6UKk6Ee-lntgJ_JlK2w" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_n1x6Uak6Ee-lntgJ_JlK2w" name="orderActivations" method="_oiHb4qk6Ee-lntgJ_JlK2w"/>
              <ownedOperation xmi:id="_n1x6Uqk6Ee-lntgJ_JlK2w" name="getNextActivation" method="_oiHb46k6Ee-lntgJ_JlK2w">
                <ownedComment xmi:id="_oi--kak6Ee-lntgJ_JlK2w">
                  <body>getNextActivation returns the highest priority&#xD;
	 * partition that has been released at or before input&#xD;
	 * parameter time.&#xD;
	 * &#xD;
	 * @param time&#xD;
	 * @return</body>
                </ownedComment>
                <ownedParameter xmi:id="_ob_lxKk6Ee-lntgJ_JlK2w" type="_nxhscKk6Ee-lntgJ_JlK2w" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_n1yhYKk6Ee-lntgJ_JlK2w" name="findBaseStation" visibility="protected" method="_oiHb56k6Ee-lntgJ_JlK2w">
                <ownedComment xmi:id="_oi--k6k6Ee-lntgJ_JlK2w">
                  <body>findBaseStation is used by algorithms that generate the&#xD;
	 * partially ordered set of activations using a base station. &#xD;
	 * This method searches the set of flows to find the node that&#xD;
	 * is always one of the src or snk nodes. In the case of a tie&#xD;
	 * where there are two candidates the initial snk node is&#xD;
	 * returned. If there are multiple base stations, only the fist&#xD;
	 * one found is returned.&#xD;
	 * &#xD;
	 * @return baseStation for the workload</body>
                </ownedComment>
                <ownedParameter xmi:id="_ob_lx6k6Ee-lntgJ_JlK2w" type="_n1UAQKk6Ee-lntgJ_JlK2w" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_ob-XoKk6Ee-lntgJ_JlK2w" name="Poset" visibility="package" method="_oiE_pKk6Ee-lntgJ_JlK2w">
                <eAnnotations xmi:id="_ob-Xoqk6Ee-lntgJ_JlK2w" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_ob-Xo6k6Ee-lntgJ_JlK2w" key="create"/>
                </eAnnotations>
                <ownedComment xmi:id="_oi-Xhak6Ee-lntgJ_JlK2w">
                  <body>Partition types:&#xD;
	 *  &#xD;
	 *  by node--each node is a partition using only one channel&#xD;
	 *  by channel&#xD;
	 *  	by node then identify when a coordinator and when not&#xD;
	 *  	by flow and coordinator in that flow&#xD;
	 *  	many others...</body>
                </ownedComment>
                <ownedParameter xmi:id="_ob-Xoak6Ee-lntgJ_JlK2w" name="workload" type="_n8NScKk6Ee-lntgJ_JlK2w"/>
                <ownedParameter xmi:id="_ob-XpKk6Ee-lntgJ_JlK2w" type="_n1m7MKk6Ee-lntgJ_JlK2w" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_ob--sKk6Ee-lntgJ_JlK2w" name="getMaxTx" visibility="private" method="_oiG00ak6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_ob--sak6Ee-lntgJ_JlK2w" name="node" type="_n1UAQKk6Ee-lntgJ_JlK2w"/>
                <ownedParameter xmi:id="_ob--sqk6Ee-lntgJ_JlK2w" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_ob_lwKk6Ee-lntgJ_JlK2w" name="getActivation" visibility="private" method="_oiG01Kk6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_ob_lwak6Ee-lntgJ_JlK2w" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ob_lwqk6Ee-lntgJ_JlK2w" name="node" type="_n1UAQKk6Ee-lntgJ_JlK2w"/>
                <ownedParameter xmi:id="_ob_lw6k6Ee-lntgJ_JlK2w" type="_nxhscKk6Ee-lntgJ_JlK2w" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_ob_lxak6Ee-lntgJ_JlK2w" name="addActivation" method="_oiHb5ak6Ee-lntgJ_JlK2w">
                <ownedComment xmi:id="_oi--kqk6Ee-lntgJ_JlK2w">
                  <body>addElemement adds the partitionElement to the priority queue&#xD;
	 * &#xD;
	 * @param activation</body>
                </ownedComment>
                <ownedParameter xmi:id="_ob_lxqk6Ee-lntgJ_JlK2w" name="activation" type="_nxhscKk6Ee-lntgJ_JlK2w"/>
              </ownedOperation>
              <ownedOperation xmi:id="_oem04qk6Ee-lntgJ_JlK2w" name="findCoordinator" visibility="protected" method="_oiGNwKk6Ee-lntgJ_JlK2w">
                <ownedComment xmi:id="_oi--kKk6Ee-lntgJ_JlK2w">
                  <body>*&#xD;
	 * @param nodesInFlow&#xD;
	 * @return the node in the flow with highest local connectivity.</body>
                </ownedComment>
                <ownedParameter xmi:id="_oem046k6Ee-lntgJ_JlK2w" name="nodesInFlow" type="_oawPoKk6Ee-lntgJ_JlK2w"/>
                <ownedParameter xmi:id="_oenb8Kk6Ee-lntgJ_JlK2w" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_oeoDAKk6Ee-lntgJ_JlK2w" name="buildTxArray" visibility="private" method="_oiGNw6k6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_oeoDAak6Ee-lntgJ_JlK2w" name="nodesInFlow" type="_oawPoKk6Ee-lntgJ_JlK2w"/>
                <ownedParameter xmi:id="_oeoDAqk6Ee-lntgJ_JlK2w" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oeoDA6k6Ee-lntgJ_JlK2w" value="*"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_n15PEKk6Ee-lntgJ_JlK2w" name="PreemptiveSchedule">
              <ownedComment xmi:id="_oi--lKk6Ee-lntgJ_JlK2w">
                <body>PreemptiveSchedule extends Schedule to build a preemptive, &#xD;
priority schedule for the Poset using numChannels. &#xD;
&#xD;
@author sgoddard2&#xD;
 *</body>
              </ownedComment>
              <generalization xmi:id="_ocGTc6k6Ee-lntgJ_JlK2w" general="_n5MasKk6Ee-lntgJ_JlK2w"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oiIC8Kk6Ee-lntgJ_JlK2w" name="PreemptiveSchedule" specification="_ocBa8Kk6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_oiIC8ak6Ee-lntgJ_JlK2w" name="poset" type="_n1m7MKk6Ee-lntgJ_JlK2w"/>
                <ownedParameter xmi:id="_oiIC8qk6Ee-lntgJ_JlK2w" name="numChannels">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_oiIC86k6Ee-lntgJ_JlK2w" type="_n15PEKk6Ee-lntgJ_JlK2w" direction="return"/>
                <language>java</language>
                <body>super(poset,numChannels);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oiIC9Kk6Ee-lntgJ_JlK2w" name="continueSearch" specification="_ocCCAKk6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_oiIC9ak6Ee-lntgJ_JlK2w" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_oiIC9qk6Ee-lntgJ_JlK2w" name="activation" type="_nxhscKk6Ee-lntgJ_JlK2w"/>
                <ownedParameter xmi:id="_oiIC96k6Ee-lntgJ_JlK2w" type="_oepRIKk6Ee-lntgJ_JlK2w" direction="return"/>
                <language>java</language>
                <body>return findPreeptiveChannelAndTime(time,activation);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oiIC-Kk6Ee-lntgJ_JlK2w" name="toProgram" specification="_n16dMKk6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_oiIC-ak6Ee-lntgJ_JlK2w" type="_n2hhMKk6Ee-lntgJ_JlK2w" direction="return"/>
                <language>java</language>
                <body>var program = new ProgramSchedule();	&#xD;
		&#xD;
//TODO write code to support preemption&#xD;
		&#xD;
		return program;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oiIqAKk6Ee-lntgJ_JlK2w" name="findPreeptiveChannelAndTime" specification="_ocCpE6k6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_oiIqAak6Ee-lntgJ_JlK2w" name="startTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_oiIqAqk6Ee-lntgJ_JlK2w" name="schedulableObject" type="_nxhscKk6Ee-lntgJ_JlK2w"/>
                <ownedParameter xmi:id="_oiIqA6k6Ee-lntgJ_JlK2w" type="_oepRIKk6Ee-lntgJ_JlK2w" direction="return"/>
                <language>java</language>
                <body>var channel = numChannels;&#xD;
		var time = startTime;&#xD;
		var result = findMaxTimeAvailable(time, schedulableObject);&#xD;
		var channelConsidered = result.channel;&#xD;
		var timeAvailable = result.time;&#xD;
		&#xD;
		&#xD;
		if (channelConsidered == numChannels) {&#xD;
			/* no available time slots near this time, even for preemption */&#xD;
			return findChannelAndTime(time+1,schedulableObject);&#xD;
		} else {&#xD;
			/* can use timeAvailable.time here on timeAvailable.channel&#xD;
			 * then must find additional time on same channel until &#xD;
			 * done&#xD;
			 */&#xD;
			// return findAdditionalTime(timeAvailable.channel,time+1,schedulableObject);&#xD;
			var duration = schedulableObject.getExecutionDuration();&#xD;
			var timeRemaining = duration-timeAvailable;&#xD;
			var additionalScheduleTimes = findAdditionalTime(channelConsidered,time+timeAvailable,schedulableObject,timeRemaining);&#xD;
			var numStartTimes = additionalScheduleTimes.size();&#xD;
			var lastStartTime = endScheduleTime; &#xD;
			if (numStartTimes > 0 ) {&#xD;
				lastStartTime = additionalScheduleTimes.get(numStartTimes-1).getStartTime();&#xD;
			}&#xD;
			if (lastStartTime &lt; endScheduleTime) {&#xD;
				// schedulableObject.addAdditionalStartTime(nextStartTime);&#xD;
				channel = channelConsidered;&#xD;
				schedulableObject.addScheduleTimes(additionalScheduleTimes);&#xD;
			} else {&#xD;
				time = lastStartTime;&#xD;
			}&#xD;
		}&#xD;
		return new ScheduleLocation(channel, time);	&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oiIqBKk6Ee-lntgJ_JlK2w" name="findAdditionalTime" specification="_ocDQIKk6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_oiIqBak6Ee-lntgJ_JlK2w" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_oiIqBqk6Ee-lntgJ_JlK2w" name="startTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_oiIqB6k6Ee-lntgJ_JlK2w" name="a1" type="_nxhscKk6Ee-lntgJ_JlK2w"/>
                <ownedParameter xmi:id="_oiIqCKk6Ee-lntgJ_JlK2w" name="timeRemaining">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_oiIqCak6Ee-lntgJ_JlK2w" type="_oawPoKk6Ee-lntgJ_JlK2w" direction="return"/>
                <language>java</language>
                <body>var time = startTime;&#xD;
		var results = new ArrayList&lt;ScheduleTime>();&#xD;
		&#xD;
		// if (timeRemaining &lt;= )&#xD;
		while (time &lt; endScheduleTime &amp;&amp; conflictsExist(a1, time, timeRemaining )) {&#xD;
			time ++; &#xD;
		}&#xD;
		if (time >= endScheduleTime) {&#xD;
			/* no conflict time available */&#xD;
			results.add(new ScheduleTime(time,time));&#xD;
			return results;&#xD;
		} &#xD;
		&#xD;
		if (isAvailable(a1, channel, time, timeRemaining)) {&#xD;
			results.add(new ScheduleTime(time,time+timeRemaining-1));&#xD;
		} else {&#xD;
			var timeAvailable = availableTime(a1,  channel, time);&#xD;
			if (timeAvailable > 0) {&#xD;
				/* found at least one time slot available */&#xD;
//				a1.addAdditionalStartTime(time);&#xD;
				results.addAll(findAdditionalTime(channel,time+timeAvailable,a1,timeRemaining-timeAvailable));&#xD;
			} else {&#xD;
				/* look ahead in time by one unit */&#xD;
				results.addAll(findAdditionalTime(channel,time+1,a1,timeRemaining));&#xD;
			}&#xD;
			&#xD;
		}&#xD;
		&#xD;
		return results;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oiIqCqk6Ee-lntgJ_JlK2w" name="findMaxTimeAvailable" specification="_ocEeQKk6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_oiIqC6k6Ee-lntgJ_JlK2w" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_oiIqDKk6Ee-lntgJ_JlK2w" name="schedulableObject" type="_nxhscKk6Ee-lntgJ_JlK2w"/>
                <ownedParameter xmi:id="_oiIqDak6Ee-lntgJ_JlK2w" type="_oepRIKk6Ee-lntgJ_JlK2w" direction="return"/>
                <language>java</language>
                <body>var maxTime = 0;&#xD;
		var bestChannel = numChannels;&#xD;
		&#xD;
		for (int channel = 0; channel &lt; numChannels ; channel++) {&#xD;
			var timeAvailable = availableTime(schedulableObject,channel,time);&#xD;
			if (timeAvailable > maxTime) {&#xD;
				maxTime = timeAvailable;&#xD;
				bestChannel = channel;&#xD;
			}&#xD;
		}&#xD;
// TEMP&#xD;
		if (maxTime > 0) {&#xD;
			System.err.printf(&quot;\n\t\tMaxTime is %d and bestChannel is %d\n&quot;, maxTime, bestChannel);&#xD;
		}&#xD;
// TEMP&#xD;
		return new ScheduleLocation(bestChannel,maxTime);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oiIqDqk6Ee-lntgJ_JlK2w" name="availableTime" specification="_ocFFUKk6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_oiIqD6k6Ee-lntgJ_JlK2w" name="a1" type="_nxhscKk6Ee-lntgJ_JlK2w"/>
                <ownedParameter xmi:id="_oiIqEKk6Ee-lntgJ_JlK2w" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_oiIqEak6Ee-lntgJ_JlK2w" name="start">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_oiIqEqk6Ee-lntgJ_JlK2w" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>Integer result = 0;&#xD;
		&#xD;
		while (isAvailable(a1,channel,start+result,1)) {&#xD;
			result++;&#xD;
		}&#xD;
		return result;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oiJREKk6Ee-lntgJ_JlK2w" name="addToSchedule" specification="_ocFFVak6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_oiJREak6Ee-lntgJ_JlK2w" name="next" type="_nxhscKk6Ee-lntgJ_JlK2w"/>
                <ownedParameter xmi:id="_oiJREqk6Ee-lntgJ_JlK2w" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_oiJRE6k6Ee-lntgJ_JlK2w" name="startTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_oiJRFKk6Ee-lntgJ_JlK2w" name="endTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_oiJRFak6Ee-lntgJ_JlK2w" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>var success = true;&#xD;
		var combineTime = endScheduleTime;&#xD;
		&#xD;
		var nextScheduleTime = next.getNextScheduleTime(startTime);&#xD;
		var nextStartTime = nextScheduleTime.getStartTime();&#xD;
		var nextEndTime = nextScheduleTime.getEndTime();&#xD;
		&#xD;
		if (startTime >= endScheduleTime || endTime >= endScheduleTime) {&#xD;
			/* can't schedule this activation */&#xD;
			return false;&#xD;
		}&#xD;
		&#xD;
		if (nextStartTime &lt; Integer.MAX_VALUE &amp;&amp; nextEndTime &lt; Integer.MAX_VALUE) {&#xD;
			/* add the next slice of execution to the schedule */&#xD;
			success = addToSchedule(next,channel,nextStartTime, nextEndTime);&#xD;
		}&#xD;
		if (!success) {&#xD;
			return false;&#xD;
		}&#xD;
		&#xD;
		/* Successful adding next to later points in the schedule.&#xD;
		 * So, now we see if this is the last&#xD;
		 * &#xD;
		 */&#xD;
		if (nextStartTime == Integer.MAX_VALUE &amp;&amp; nextEndTime == Integer.MAX_VALUE) {&#xD;
			/* this is the last slice of execution, so wrap things up */&#xD;
			next.setEndTime(endTime);&#xD;
			var responseTime = endTime - next.getReleaseTime();&#xD;
			if (responseTime > next.getDeadline()) {&#xD;
				return false; // unable to schedule this entry&#xD;
			}&#xD;
			/* Add the endTime to the elements endTimes Q&#xD;
			 * so that we can track predecessor endTimes&#xD;
			 * and make sure successors don't start before &#xD;
			 * predecessors&#xD;
			 */&#xD;
			next.addToEndTimes(endTime); &#xD;
			/* remove predecessor end time that matches this start time */&#xD;
			var pred = next.getPredecessor();&#xD;
			if (pred != null) {&#xD;
				pred.pollEndTimes(); &#xD;
			}&#xD;
		}&#xD;
		/* Create a new entry, based on next, to be entered&#xD;
		 * into the scheduling tale&#xD;
		 */&#xD;
		var entry = new Activation(next, startTime);&#xD;
		/* Check to see we need to combine this activation with&#xD;
		 * an existing activation in any of the slots. If so,&#xD;
		 * save that time so we can update the actual start time&#xD;
		 */&#xD;
		Activation currentEntry = null;&#xD;
		for (int i = startTime; i &lt;= endTime; i++) {&#xD;
			currentEntry = schedule.get(channel,i);&#xD;
			if (currentEntry != null &amp;&amp; next.canCombine(currentEntry)) {&#xD;
				/* found an entry to combine, record the time,&#xD;
				 * update the combined duration and new&#xD;
				 * endTime, then exit the loop&#xD;
				 */&#xD;
				combineTime = i;&#xD;
				// currentEntry = entry;&#xD;
				break;&#xD;
			}&#xD;
		}&#xD;
		entry.setStartTime(startTime); // set start time for this entry&#xD;
		entry.setEndTime(endTime); // set end time for this entry&#xD;
		if (combineTime &lt; endScheduleTime) {&#xD;
			/* change entry to point to combinedActivation&#xD;
			 * and set startTime to the beginning of the &#xD;
			 * combined entries */&#xD;
			var combinedActivation = new CombinedActivation(currentEntry, entry);&#xD;
			entry = combinedActivation;&#xD;
			startTime = entry.getStartTime();&#xD;
		}&#xD;
		for (int i = startTime; i &lt;= endTime; i++) {&#xD;
			/* Add this object to the schedule for the&#xD;
			 * from startTime to endTime.&#xD;
			 */&#xD;
			schedule.set(channel, i, entry);&#xD;
		}&#xD;
		&#xD;
		return success;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oiJRFqk6Ee-lntgJ_JlK2w" name="addToSchedule" specification="_ocFsYqk6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_oiJRF6k6Ee-lntgJ_JlK2w" name="next" type="_nxhscKk6Ee-lntgJ_JlK2w"/>
                <ownedParameter xmi:id="_oiJRGKk6Ee-lntgJ_JlK2w" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>var channel = getChannelAndSetStartTime(next);&#xD;
		if (channel == numChannels) {&#xD;
			return false;&#xD;
		}&#xD;
		&#xD;
		/* found a time and channel  that are valid */&#xD;
		var startTime = next.getStartTime(); // set by getChannelAndSetStartTime()&#xD;
		var success = false; &#xD;
		&#xD;
// PREEMPT&#xD;
		var timeAvailable = availableTime(next, channel, startTime);&#xD;
		var duration = next.getExecutionDuration();&#xD;
		&#xD;
		if (timeAvailable == 0 ) {&#xD;
			/* then currentEntry at this location in the schedule&#xD;
			 * is not null and we can combine, but best to check&#xD;
			 */&#xD;
			var currentEntry = schedule.get(channel,startTime);&#xD;
			if (currentEntry != null &amp;&amp; currentEntry.canCombine(next)) {&#xD;
				/* no conflict with this entry, and can&#xD;
				 * combine so check for combined entry time&#xD;
				 *  to see if we can combine activations&#xD;
				 */&#xD;
				var combinedDuration = currentEntry.getCombinedExecutionDuration(next);&#xD;
				var combinedEntry = new CombinedActivation(currentEntry,next);&#xD;
				var searchTime = currentEntry.getEndTime()+1;&#xD;
				var searchLength = combinedDuration - duration;&#xD;
				if (isAvailable(combinedEntry, channel, searchTime, searchLength)) {&#xD;
					timeAvailable = combinedDuration;&#xD;
					duration = combinedDuration;&#xD;
				}&#xD;
			}&#xD;
		}&#xD;
			if (duration &lt;= timeAvailable) {&#xD;
				/* can execute without preemption */&#xD;
				var endTime = startTime+duration-1;&#xD;
				success = addToSchedule(next,channel,startTime,endTime);&#xD;
			} else {&#xD;
				/* Recursively add 'slices' to the schedule.&#xD;
				 * success == true => all slices added successfully&#xD;
				 * otherwise, none of the slices were added&#xD;
				 */&#xD;
				var endTime = startTime + timeAvailable-1;&#xD;
				success = addToSchedule(next,channel,startTime,endTime);&#xD;
			}&#xD;
		return success;&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_n16dMKk6Ee-lntgJ_JlK2w" name="toProgram" method="_oiIC-Kk6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_ocCpEqk6Ee-lntgJ_JlK2w" type="_n2hhMKk6Ee-lntgJ_JlK2w" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_ocBa8Kk6Ee-lntgJ_JlK2w" name="PreemptiveSchedule" visibility="package" method="_oiIC8Kk6Ee-lntgJ_JlK2w">
                <eAnnotations xmi:id="_ocBa86k6Ee-lntgJ_JlK2w" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_ocBa9Kk6Ee-lntgJ_JlK2w" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_ocBa8ak6Ee-lntgJ_JlK2w" name="poset" type="_n1m7MKk6Ee-lntgJ_JlK2w"/>
                <ownedParameter xmi:id="_ocBa8qk6Ee-lntgJ_JlK2w" name="numChannels">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ocBa9ak6Ee-lntgJ_JlK2w" type="_n15PEKk6Ee-lntgJ_JlK2w" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_ocCCAKk6Ee-lntgJ_JlK2w" name="continueSearch" visibility="protected" method="_oiIC9Kk6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_ocCCAak6Ee-lntgJ_JlK2w" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ocCCAqk6Ee-lntgJ_JlK2w" name="activation" type="_nxhscKk6Ee-lntgJ_JlK2w"/>
                <ownedParameter xmi:id="_oep4Mak6Ee-lntgJ_JlK2w" type="_oepRIKk6Ee-lntgJ_JlK2w" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_ocCpE6k6Ee-lntgJ_JlK2w" name="findPreeptiveChannelAndTime" visibility="private" method="_oiIqAKk6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_ocCpFKk6Ee-lntgJ_JlK2w" name="startTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ocCpFak6Ee-lntgJ_JlK2w" name="schedulableObject" type="_nxhscKk6Ee-lntgJ_JlK2w"/>
                <ownedParameter xmi:id="_oeqfQKk6Ee-lntgJ_JlK2w" type="_oepRIKk6Ee-lntgJ_JlK2w" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_ocDQIKk6Ee-lntgJ_JlK2w" name="findAdditionalTime" visibility="private" method="_oiIqBKk6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_ocDQIak6Ee-lntgJ_JlK2w" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ocDQIqk6Ee-lntgJ_JlK2w" name="startTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ocDQI6k6Ee-lntgJ_JlK2w" name="a1" type="_nxhscKk6Ee-lntgJ_JlK2w"/>
                <ownedParameter xmi:id="_ocD3MKk6Ee-lntgJ_JlK2w" name="timeRemaining">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_oeqfQak6Ee-lntgJ_JlK2w" type="_oawPoKk6Ee-lntgJ_JlK2w" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_ocEeQKk6Ee-lntgJ_JlK2w" name="findMaxTimeAvailable" visibility="private" method="_oiIqCqk6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_ocEeQak6Ee-lntgJ_JlK2w" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ocEeQqk6Ee-lntgJ_JlK2w" name="schedulableObject" type="_nxhscKk6Ee-lntgJ_JlK2w"/>
                <ownedParameter xmi:id="_oerGUKk6Ee-lntgJ_JlK2w" type="_oepRIKk6Ee-lntgJ_JlK2w" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_ocFFUKk6Ee-lntgJ_JlK2w" name="availableTime" visibility="private" method="_oiIqDqk6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_ocFFUak6Ee-lntgJ_JlK2w" name="a1" type="_nxhscKk6Ee-lntgJ_JlK2w"/>
                <ownedParameter xmi:id="_ocFFUqk6Ee-lntgJ_JlK2w" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ocFFU6k6Ee-lntgJ_JlK2w" name="start">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ocFFVKk6Ee-lntgJ_JlK2w" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_ocFFVak6Ee-lntgJ_JlK2w" name="addToSchedule" visibility="private" method="_oiJREKk6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_ocFFVqk6Ee-lntgJ_JlK2w" name="next" type="_nxhscKk6Ee-lntgJ_JlK2w"/>
                <ownedParameter xmi:id="_ocFFV6k6Ee-lntgJ_JlK2w" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ocFFWKk6Ee-lntgJ_JlK2w" name="startTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ocFsYKk6Ee-lntgJ_JlK2w" name="endTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ocFsYak6Ee-lntgJ_JlK2w" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_ocFsYqk6Ee-lntgJ_JlK2w" name="addToSchedule" visibility="protected" method="_oiJRFqk6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_ocFsY6k6Ee-lntgJ_JlK2w" name="next" type="_nxhscKk6Ee-lntgJ_JlK2w"/>
                <ownedParameter xmi:id="_ocFsZKk6Ee-lntgJ_JlK2w" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_n1_8wKk6Ee-lntgJ_JlK2w" name="PriorityComparator">
              <interfaceRealization xmi:id="_oerGUak6Ee-lntgJ_JlK2w" client="_n1_8wKk6Ee-lntgJ_JlK2w" supplier="_obMUgKk6Ee-lntgJ_JlK2w" contract="_obMUgKk6Ee-lntgJ_JlK2w"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oiJRGak6Ee-lntgJ_JlK2w" name="compare" specification="_oesUcKk6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_oiJRGqk6Ee-lntgJ_JlK2w" name="obj1" type="_oeQPkak6Ee-lntgJ_JlK2w"/>
                <ownedParameter xmi:id="_oiJRG6k6Ee-lntgJ_JlK2w" name="obj2" type="_oeQPkak6Ee-lntgJ_JlK2w"/>
                <ownedParameter xmi:id="_oiJRHKk6Ee-lntgJ_JlK2w" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>var result = obj1.priorityComparison(obj2);&#xD;
		if (result == 0) {&#xD;
			// tied for priority, so break tie on release time&#xD;
			result = obj1.releaseTimeComparison(obj2);&#xD;
		}&#xD;
		return result; // 0 => tie on priority and release time&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_oesUcKk6Ee-lntgJ_JlK2w" name="compare" method="_oiJRGak6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_oesUcak6Ee-lntgJ_JlK2w" name="obj1" type="_oeQPkak6Ee-lntgJ_JlK2w"/>
                <ownedParameter xmi:id="_oesUcqk6Ee-lntgJ_JlK2w" name="obj2" type="_oeQPkak6Ee-lntgJ_JlK2w"/>
                <ownedParameter xmi:id="_oesUc6k6Ee-lntgJ_JlK2w" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_n2BK4Kk6Ee-lntgJ_JlK2w" name="Program">
              <ownedComment xmi:id="_oi--lak6Ee-lntgJ_JlK2w">
                <body>@author sgoddard&#xD;
 *</body>
              </ownedComment>
              <ownedAttribute xmi:id="_ogbZ0Kk6Ee-lntgJ_JlK2w" name="UNKNOWN" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_ogbZ0ak6Ee-lntgJ_JlK2w" value="&quot;Unknown&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_ogcA4Kk6Ee-lntgJ_JlK2w" name="SLEEP_INSTRUCTION" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_ogcA4ak6Ee-lntgJ_JlK2w" value="&quot;sleep&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_ogcA4qk6Ee-lntgJ_JlK2w" name="WAIT_FRAGMENT" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_ogcA46k6Ee-lntgJ_JlK2w" value="&quot;wait(&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_ogcn8Kk6Ee-lntgJ_JlK2w" name="ELSE_PULL_FRAGMENT" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_ogcn8ak6Ee-lntgJ_JlK2w" value="&quot;else pull(&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_ogcn8qk6Ee-lntgJ_JlK2w" name="workLoad" visibility="package" type="_n8NScKk6Ee-lntgJ_JlK2w" association="_okKqUak6Ee-lntgJ_JlK2w"/>
              <ownedAttribute xmi:id="_ogdPAak6Ee-lntgJ_JlK2w" name="scheduleBuilt" visibility="package" type="_n2hhMKk6Ee-lntgJ_JlK2w" association="_okLRYak6Ee-lntgJ_JlK2w"/>
              <ownedAttribute xmi:id="_ogdPA6k6Ee-lntgJ_JlK2w" name="SchedulerSelected" visibility="package" type="_oetikKk6Ee-lntgJ_JlK2w" association="_okL4cKk6Ee-lntgJ_JlK2w"/>
              <ownedAttribute xmi:id="_ogedIak6Ee-lntgJ_JlK2w" name="schChoice" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_ogfEMKk6Ee-lntgJ_JlK2w" name="schedulerName" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_ogfEMqk6Ee-lntgJ_JlK2w" name="nTransmissions" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_ogfrQak6Ee-lntgJ_JlK2w" name="realTimeHARTflag" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_oggSUKk6Ee-lntgJ_JlK2w" name="optimizationRequested" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_oggSUqk6Ee-lntgJ_JlK2w" name="channelsAvailable" visibility="package" type="_nyze0Kk6Ee-lntgJ_JlK2w" association="_okL4c6k6Ee-lntgJ_JlK2w"/>
              <ownedAttribute xmi:id="_ogg5Yak6Ee-lntgJ_JlK2w" name="nChannels" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_ogg5Y6k6Ee-lntgJ_JlK2w" name="verbose" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_oghgcak6Ee-lntgJ_JlK2w" name="reportLatency" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_oghgc6k6Ee-lntgJ_JlK2w" name="deadlineMisses" visibility="private" type="_nzwhEKk6Ee-lntgJ_JlK2w" association="_okNGkKk6Ee-lntgJ_JlK2w"/>
              <interfaceRealization xmi:id="_ocO2UKk6Ee-lntgJ_JlK2w" client="_n2BK4Kk6Ee-lntgJ_JlK2w" supplier="_n5sJ8Kk6Ee-lntgJ_JlK2w" contract="_n5sJ8Kk6Ee-lntgJ_JlK2w"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oiJ4IKk6Ee-lntgJ_JlK2w" name="Program" specification="_oeuwsKk6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_oiJ4Iak6Ee-lntgJ_JlK2w" name="workLoad" type="_n8NScKk6Ee-lntgJ_JlK2w"/>
                <ownedParameter xmi:id="_oiJ4Iqk6Ee-lntgJ_JlK2w" name="nChannels">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_oiJ4I6k6Ee-lntgJ_JlK2w" name="choice" type="_oetikKk6Ee-lntgJ_JlK2w"/>
                <ownedParameter xmi:id="_oiJ4JKk6Ee-lntgJ_JlK2w" name="verbose">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_oiJ4Jak6Ee-lntgJ_JlK2w" name="reportLatency">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_oiJ4Jqk6Ee-lntgJ_JlK2w" type="_n2BK4Kk6Ee-lntgJ_JlK2w" direction="return"/>
                <language>java</language>
                <body>setDefaultParameters(workLoad, nChannels, verbose, reportLatency);&#xD;
 buildProgram(choice);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oiJ4J6k6Ee-lntgJ_JlK2w" name="Program" specification="_oevXwKk6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_oiJ4KKk6Ee-lntgJ_JlK2w" name="workLoad" type="_n8NScKk6Ee-lntgJ_JlK2w"/>
                <ownedParameter xmi:id="_oiJ4Kak6Ee-lntgJ_JlK2w" name="nChannels">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_oiJ4Kqk6Ee-lntgJ_JlK2w" name="choice" type="_oetikKk6Ee-lntgJ_JlK2w"/>
                <ownedParameter xmi:id="_oiJ4K6k6Ee-lntgJ_JlK2w" type="_n2BK4Kk6Ee-lntgJ_JlK2w" direction="return"/>
                <language>java</language>
                <body>setDefaultParameters(workLoad, nChannels, false, false);&#xD;
 buildProgram(choice);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oiJ4LKk6Ee-lntgJ_JlK2w" name="setDefaultParameters" specification="_ocR5oKk6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_oiJ4Lak6Ee-lntgJ_JlK2w" name="workLoad" type="_n8NScKk6Ee-lntgJ_JlK2w"/>
                <ownedParameter xmi:id="_oiJ4Lqk6Ee-lntgJ_JlK2w" name="nChannels">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_oiJ4L6k6Ee-lntgJ_JlK2w" name="verbose">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_oiJ4MKk6Ee-lntgJ_JlK2w" name="reportLatency">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>this.workLoad = workLoad; // flows for which schedules will be built&#xD;
 this.scheduleBuilt = new ProgramSchedule();&#xD;
 this.SchedulerSelected = ScheduleChoices.PRIORITY; // set the type of scheduler selected&#xD;
 workLoad.setFlowsInPriorityOrder();&#xD;
 this.schedulerName = &quot;Priority&quot;;&#xD;
 this.schChoice = &quot;Priority&quot;;&#xD;
 this.nTransmissions = 0;&#xD;
 this.realTimeHARTflag = false;&#xD;
 this.optimizationRequested = true;&#xD;
 this.nChannels = nChannels;&#xD;
 this.verbose = verbose;&#xD;
 this.channelsAvailable = new Channels(nChannels, verbose);&#xD;
 this.reportLatency = reportLatency;&#xD;
 this.deadlineMisses = new Description();&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oiKfMKk6Ee-lntgJ_JlK2w" name="toWorkLoad" specification="_n2FcUKk6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_oiKfMak6Ee-lntgJ_JlK2w" type="_n8NScKk6Ee-lntgJ_JlK2w" direction="return"/>
                <language>java</language>
                <body>return workLoad;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oiKfMqk6Ee-lntgJ_JlK2w" name="buildProgram" specification="_oev-06k6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_oiKfM6k6Ee-lntgJ_JlK2w" name="choice" type="_oetikKk6Ee-lntgJ_JlK2w"/>
                <language>java</language>
                <body>/*&#xD;
  * Switch on the scheduler choice. If it is POSET-based scheduler, create the POSET that matches&#xD;
  * the name and then use the newer schedule object to convert the POSET to a program. If it is&#xD;
  * an original scheduler choice, build set the scheduler type and build the schedule and WARP&#xD;
  * program by calling buildOriginalProgram();&#xD;
  */&#xD;
 switch (choice) { // select the requested scheduler&#xD;
   case WARP_POSET_PRIORITY: // fall through&#xD;
   case WARP_POSET_RM: // fall through&#xD;
   case WARP_POSET_DM: // fall through&#xD;
     setScheduleSelected(choice);&#xD;
     var poset1 = new WarpPoset(workLoad);&#xD;
     var schedule1 = new NonPreemptiveSchedule(poset1, this.nChannels);&#xD;
     var newProgram = schedule1.toProgram();&#xD;
     setSchedule(newProgram); // store the schedule built&#xD;
     break;&#xD;
   case CONNECTIVITY_POSET_PRIORITY: // fall through&#xD;
   case CONNECTIVITY_POSET_RM: // fall through&#xD;
   case CONNECTIVITY_POSET_DM: // fall through&#xD;
   case POSET_PRIORITY: // fall through&#xD;
   case POSET_RM: // fall through&#xD;
   case POSET_DM:&#xD;
     setScheduleSelected(choice);&#xD;
     // var poset = new BasicPoset(workLoad);&#xD;
     var poset2 = new ConnectivityPoset(workLoad);&#xD;
     var schedule2 = new NonPreemptiveSchedule(poset2, this.nChannels);&#xD;
     newProgram = schedule2.toProgram();&#xD;
     setSchedule(newProgram); // store the schedule built&#xD;
     break;&#xD;
   //// case CONNECTIVITY_POSET_PREEMPTIVE_PRIORITY: // fall through&#xD;
   //// case CONNECTIVITY_POSET_PREEMPTIVE_RM: // fall through&#xD;
   //// case CONNECTIVITY_POSET_PREEMPTIVE_DM: // fall through&#xD;
   // var poset3 = new ConnectivityPoset(workLoad);&#xD;
   // var schedule3 = new PreemptiveSchedule(poset3, this.nChannels);&#xD;
   // newProgram = schedule3.toProgram();&#xD;
   // setSchedule(newProgram); // store the schedule built&#xD;
   // break;&#xD;
   case PRIORITY:&#xD;
     selectPriority();&#xD;
     buildOriginalProgram(); // build the requested schedule&#xD;
     break;&#xD;
   case RM:&#xD;
     selectRM();&#xD;
     buildOriginalProgram(); // build the requested schedule&#xD;
     break;&#xD;
   case DM:&#xD;
     selectDM();&#xD;
     buildOriginalProgram(); // build the requested schedule&#xD;
     break;&#xD;
   case RTHART:&#xD;
     selectRtHART();&#xD;
     buildOriginalProgram(); // build the requested schedule&#xD;
     break;&#xD;
   default:&#xD;
     selectPriority();&#xD;
     buildOriginalProgram(); // build the requested schedule&#xD;
     break; // break from switch&#xD;
 }&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oiKfNKk6Ee-lntgJ_JlK2w" name="buildOriginalProgram" specification="_n2GDYKk6Ee-lntgJ_JlK2w">
                <language>java</language>
                <body>// builds a Priority schedule&#xD;
&#xD;
 if (verbose) {&#xD;
   var scheduleDetails =&#xD;
       String.format(&quot;\nSystem schedule for graph %s created with the following parameters:\n&quot;,&#xD;
           workLoad.getName());&#xD;
   scheduleDetails =&#xD;
       String.format(scheduleDetails + &quot;\tScheduler Name:\t%s\n&quot;, getSchedulerName());&#xD;
   scheduleDetails = String.format(scheduleDetails + &quot;\tM:\t%s\n&quot;,&#xD;
       String.valueOf(workLoad.getMinPacketReceptionRate()));&#xD;
   scheduleDetails =&#xD;
       String.format(scheduleDetails + &quot;\tE2E:\t%s\n&quot;, String.valueOf(workLoad.getE2e()));&#xD;
   scheduleDetails = String.format(scheduleDetails + &quot;\tnChannels:\t%d\n&quot;, getNumChannels());&#xD;
   // The following parameters are only output when special schedules are requested&#xD;
   if (getNumTransmissions() > 0) { // only specify when NumTransmissions is fixed&#xD;
     scheduleDetails =&#xD;
         String.format(scheduleDetails + &quot;\tnTransmissions:\t%d\n&quot;, getNumTransmissions());&#xD;
   }&#xD;
   if (getOptimizationFlag()) { // only specify when optimization not requested&#xD;
     scheduleDetails += &quot;\tOptimization Requested:\tFalse\n&quot;;&#xD;
   }&#xD;
   System.out.println(scheduleDetails);&#xD;
 }&#xD;
 var nTx = 0;// support nTx per transmission, which is set based on input parameter if&#xD;
             // nTransmissions == n 0 else flow.nTXperLink&#xD;
 var nTransmissions = getNumTransmissions();&#xD;
 Boolean realtimeHART = getRealTimeHartFlag();&#xD;
 var optimizationRequested = getOptimizationFlag();&#xD;
 var schedule = new ProgramSchedule(); // create an empty schedule&#xD;
 var newInstruction = SLEEP_INSTRUCTION; // initialize the new Instruction with a sleep&#xD;
 var prioritizedFlows = workLoad.getFlowNamesInPriorityOrder();&#xD;
 // var orderedNodes = workLoad.getNodeNamesOrderedAlphabetically(); // create an array of node&#xD;
 // names&#xD;
 // sorted alphabetically&#xD;
 var nodeIndex = getNodeMapIndex(); // get the mapping from node names to index in schedule&#xD;
 var nNodes = nodeIndex.size();&#xD;
 /*&#xD;
  * for (int index = 0; index &lt; nNodes; index++) { // set up the node to index mapping var name =&#xD;
  * orderedNodes[index]; nodeIndex.put(name, index); // add name, index mapping to NodeIndex map&#xD;
  * }&#xD;
  */&#xD;
 var hyperPeriod = workLoad.getHyperPeriod();&#xD;
 for (int i = 0; i &lt; hyperPeriod; i++) { // This loop makes sure the schedule is full up to the&#xD;
                                         // period and the channels entries are all initialized&#xD;
   var newInstructionTimeSlot = new InstructionTimeSlot(nNodes, SLEEP_INSTRUCTION); // create a&#xD;
                                                                                    // time slot&#xD;
                                                                                    // for&#xD;
                                                                                    // nNodes,&#xD;
                                                                                    // each&#xD;
                                                                                    // initialized&#xD;
                                                                                    // with a&#xD;
                                                                                    // SLEEP_INSTRUCTION&#xD;
   schedule.add(newInstructionTimeSlot);&#xD;
   channelsAvailable.addNewChannelSet();// initially, all channels are available in each time&#xD;
                                        // slot&#xD;
 }&#xD;
 // create an instance of the Warp DSL class for parsing instructions&#xD;
 var dsl = new WarpDSL();&#xD;
&#xD;
 for (String flowName : prioritizedFlows) { // loop through all of the nodes in priority order&#xD;
   var nodesInFlow = workLoad.getNodesInFlow(flowName);&#xD;
   var nNodesInFlow = nodesInFlow.length;&#xD;
   var e2eFlag = false; // default is to not use e2e to achieve E2E&#xD;
   if (nTransmissions == 0) { // use nTx from flow.nTXperLink for realtimeHart and the linkTX&#xD;
                              // array otherwise&#xD;
     e2eFlag = true; // need to meet e2e to hit E2E for flow&#xD;
     if (realtimeHART) {&#xD;
       nTx = workLoad.getFlowTxAttemptsPerLink(flowName);&#xD;
     } // else we will computer nTx from the linkTx array for the flow as we go&#xD;
&#xD;
   } else {&#xD;
     nTx = nTransmissions;&#xD;
   }&#xD;
   var snk = &quot;&quot;;&#xD;
   var linkTxCosts = workLoad.getNumTxAttemptsPerLink(flowName);&#xD;
   if (verbose) {&#xD;
     var totalCost = workLoad.getTotalTxAttemptsInFlow(flowName);&#xD;
     var minCost = nNodesInFlow - 1; // nEdges in the flow is the minimum communication cost,&#xD;
                                     // i.e., min nTx to go E2E with no errors&#xD;
     System.out.printf(&#xD;
         &quot;Flow %s has a minimum communication cost of %d and a worst-case communication cost of %d\n&quot;,&#xD;
         flowName, minCost, totalCost);&#xD;
   }&#xD;
   if (nTx == 0) { // this is true when !realtimeHART and nTransmssions wasn't specified => nTx&#xD;
                   // is dependent on reliability target&#xD;
     nTx = linkTxCosts[0]; // set nTx to the nTx for the first link in the flow&#xD;
   }&#xD;
   var previousNodeInstruction = new Integer[nTx]; // set instruction location in schedule for&#xD;
                                                   // previous slots to 0&#xD;
   Arrays.fill(previousNodeInstruction, 0); // initialize locations to 0&#xD;
   var flowPhase = workLoad.getFlowPhase(flowName); // used to compute latency after done&#xD;
                                                    // scheduling this flow&#xD;
   var flowLastInstruction = flowPhase; // used to compute latency after done scheduling this&#xD;
                                        // flow&#xD;
   var flowDeadline = workLoad.getFlowDeadline(flowName); // used to check schedulability for&#xD;
                                                          // this flow&#xD;
   var flowPeriod = workLoad.getFlowPeriod(flowName);&#xD;
   var FlowSrcInstructionTimeSlot = flowPhase; // initialize the time at which the flow's src&#xD;
                                               // node can first transmit&#xD;
   for (int instance = 0; instance &lt; hyperPeriod / flowPeriod; instance++) {&#xD;
     for (int flowNodeIndex = 0; flowNodeIndex &lt; nNodesInFlow - 1; flowNodeIndex++) { // don't&#xD;
                                                                                      // push for&#xD;
                                                                                      // last&#xD;
                                                                                      // node, so&#xD;
                                                                                      // stop at&#xD;
                                                                                      // node&#xD;
                                                                                      // n-1,&#xD;
                                                                                      // which is&#xD;
                                                                                      // 2 less&#xD;
                                                                                      // than&#xD;
                                                                                      // count&#xD;
       var currentNodeName = nodesInFlow[flowNodeIndex]; // get name of current node in the flow&#xD;
                                                         // (aka source of data)&#xD;
       if (e2eFlag) {&#xD;
         nTx = linkTxCosts[flowNodeIndex]; // set nTx for this link&#xD;
       }&#xD;
       var currentNodeInstruction = new Integer[nTx]; // store instruction location in schedule&#xD;
                                                      // for previous node&#xD;
       Arrays.fill(currentNodeInstruction, 0); // initialize the currentNondeInstruction&#xD;
       for (int index = 0; index &lt; nTx; index++) { // repeat instruction nTx times so that this&#xD;
                                                   // flow meets desired reliability&#xD;
         var instructionNodeName = currentNodeName; // name of node for which we write an&#xD;
                                                    // instruction in its program&#xD;
         var priorSrcInstruction = UNKNOWN; // variable used to store and possibly update the&#xD;
                                            // priorSrcInstruction during optimization&#xD;
         var priorSrcUpdated = false; // flag to indicate if priorSrcInstruction is updated or&#xD;
                                      // not&#xD;
         snk = nodesInFlow[flowNodeIndex + 1]; // should get a valid sink node, set name to&#xD;
                                               // UNKNOWN if we don't&#xD;
         // when not optimizing instructionNodeName is current node, but we might update a&#xD;
         // different node's instruction to optimize&#xD;
         var phase = instance * flowPeriod + flowPhase; // update phase for the instance of the&#xD;
                                                        // flow release, which happens once every&#xD;
                                                        // period in the hyperPeriod&#xD;
         var firstPossibleSlot = Math.max(phase, FlowSrcInstructionTimeSlot); // make sure&#xD;
                                                                              // precedence&#xD;
                                                                              // constraints on&#xD;
                                                                              // flow are&#xD;
                                                                              // preserved&#xD;
         Integer instructionIndex = findNextAvailableInstructionTimeSlot(schedule,&#xD;
             firstPossibleSlot, flowNodeIndex, index, nTx, previousNodeInstruction,&#xD;
             currentNodeInstruction, SLEEP_INSTRUCTION, realtimeHART, optimizationRequested,&#xD;
             nodeIndex.get(currentNodeName), nodeIndex.get(snk));&#xD;
         if (instructionIndex >= schedule.size()) { // instructionIndex is beyond current&#xD;
                                                    // schedule length. Increase schedule and&#xD;
                                                    // channelsAvailable tables&#xD;
           for (int i = schedule.size(); i &lt;= instructionIndex; i++) {&#xD;
             var newInstructionTimeSlot = new InstructionTimeSlot(nNodes, SLEEP_INSTRUCTION); // create&#xD;
                                                                                              // a&#xD;
                                                                                              // time&#xD;
                                                                                              // slot&#xD;
                                                                                              // for&#xD;
                                                                                              // nNodes,&#xD;
                                                                                              // each&#xD;
                                                                                              // initialized&#xD;
                                                                                              // with&#xD;
                                                                                              // a&#xD;
                                                                                              // SLEEP_INSTRUCTION&#xD;
             schedule.add(newInstructionTimeSlot);&#xD;
             channelsAvailable.addNewChannelSet(); // need make sure we have channels available&#xD;
                                                   // for all slots. instructionIndex may be >&#xD;
                                                   // initialized size of array because of&#xD;
                                                   // phases...&#xD;
           }&#xD;
         }&#xD;
         String channel = findNextAvailableChannel(schedule, instructionNodeName,&#xD;
             instructionIndex, nodeIndex.get(currentNodeName), nodeIndex.get(snk));&#xD;
&#xD;
         // Now check if we have a valid channel. If not we need to find a new time slot further&#xD;
         // down the schedule.&#xD;
         // So, initialize the search to start at the current slot and then increase by one each&#xD;
         // time we loop if the current slot&#xD;
         // Now check if we have a valid channel. If not we need to find a new time slot further&#xD;
         // down the schedule.&#xD;
         // So, initialize the search to start at the current slot and then increase by one each&#xD;
         // time we loop if the current slot&#xD;
         while (channel.equals(UNKNOWN)) { // findNextAvailableChannel will return UNKNOWN if no&#xD;
                                           // channel was available. In that case, we need to&#xD;
                                           // find a new slot for this instruction after the last&#xD;
                                           // index found&#xD;
           var startSearchIndex = instructionIndex + 1;&#xD;
           instructionIndex = findNextAvailableInstructionTimeSlot(schedule, startSearchIndex,&#xD;
               flowNodeIndex, index, nTx, previousNodeInstruction, currentNodeInstruction,&#xD;
               SLEEP_INSTRUCTION, realtimeHART, optimizationRequested,&#xD;
               nodeIndex.get(currentNodeName), nodeIndex.get(snk));&#xD;
           if (instructionIndex >= schedule.size()) { // instructionIndex is beyond current&#xD;
                                                      // schedule lenght. Increase schedule and&#xD;
                                                      // channelsAvailable tables&#xD;
             for (int i = schedule.size(); i &lt;= instructionIndex; i++) {&#xD;
               var newInstructionTimeSlot = new InstructionTimeSlot(nNodes, SLEEP_INSTRUCTION); // create&#xD;
                                                                                                // a&#xD;
                                                                                                // time&#xD;
                                                                                                // slot&#xD;
                                                                                                // for&#xD;
                                                                                                // nNodes,&#xD;
                                                                                                // each&#xD;
                                                                                                // initialized&#xD;
                                                                                                // with&#xD;
                                                                                                // a&#xD;
                                                                                                // SLEEP_INSTRUCTION&#xD;
               schedule.add(newInstructionTimeSlot);&#xD;
               channelsAvailable.addNewChannelSet(); // need make sure we have channels available&#xD;
                                                     // for all slots. instructionIndex may be >&#xD;
                                                     // initialized size of array because of&#xD;
                                                     // phases...&#xD;
             }&#xD;
           }&#xD;
           channel = findNextAvailableChannel(schedule, instructionNodeName, instructionIndex,&#xD;
               nodeIndex.get(currentNodeName), nodeIndex.get(snk));&#xD;
         }&#xD;
         workLoad.setNodeChannel(instructionNodeName, Integer.valueOf(channel));&#xD;
         if (realtimeHART) {&#xD;
           newInstruction = pushInstruction(flowName, currentNodeName, snk, channel);&#xD;
         } else {&#xD;
           newInstruction = hasPushInstruction(flowName, currentNodeName, snk, channel);&#xD;
         }&#xD;
&#xD;
         // if optimization flag is set, look to see if any optimizations are possible&#xD;
         if (optimizationRequested &amp;&amp; instructionIndex > 0) {&#xD;
           var priorInstructionTimeSlotArrayList = schedule.get(instructionIndex - 1);&#xD;
           var priorInstructionTimeSlot = priorInstructionTimeSlotArrayList&#xD;
               .toArray(new String[priorInstructionTimeSlotArrayList.size()]);&#xD;
           var priorInstruction = priorInstructionTimeSlot[nodeIndex.get(snk)]; // get&#xD;
                                                                                // instruction&#xD;
                                                                                // scheduled for&#xD;
                                                                                // snk to execute&#xD;
                                                                                // in the prior&#xD;
                                                                                // time slot&#xD;
           if (index == (nTx - 1)) {&#xD;
             String hasSubstring = String.format(&quot;if has(%s&quot;, flowName);&#xD;
             String elseSubString = &quot;else pull(&quot;;&#xD;
             if (priorInstruction.contains(hasSubstring)&#xD;
                 &amp;&amp; !priorInstruction.contains(elseSubString) &amp;&amp; !realtimeHART) {&#xD;
               // The sink node is not waiting, so add this instruction as an else to it&#xD;
               // Also need to make sure we haven't already combined a prior instruction by&#xD;
               // moving it to the else clause. May need a smater way to do this later...&#xD;
               // The combined instructions both use channels for their respective time slots!&#xD;
               // The else is being added to the prior time slot, so we need to&#xD;
               // get a new channel for that time slot and put back the channel we extraced from&#xD;
               // this time slot. And of course, clean up if any errors occur&#xD;
               // in the process&#xD;
               var instructionParametersArrayList =&#xD;
                   dsl.getInstructionParameters(priorInstruction);&#xD;
               var priorInstructionChannel = UNKNOWN;&#xD;
               if (instructionParametersArrayList.size() == 1) {&#xD;
                 var instructionParameters = instructionParametersArrayList.get(0); // get a copy&#xD;
                                                                                    // of the&#xD;
                                                                                    // parameters&#xD;
                 priorInstructionChannel = instructionParameters.getChannel();&#xD;
               } else { // we just checked above that the prior instruction did not have an else&#xD;
                        // pull, wait, or sleep. So, there should be only one instruction here&#xD;
                 String msg = String.format(&#xD;
                     &quot;ERROR: More than one instruction in prior instruction string: %s&quot;,&#xD;
                     priorInstruction);&#xD;
                 System.err.println(msg);&#xD;
               }&#xD;
               workLoad.setNodeChannel(instructionNodeName,&#xD;
                   Integer.valueOf(priorInstructionChannel));&#xD;
               channelsAvailable.addChannel(instructionIndex, channel); // return channel for&#xD;
                                                                        // this slot&#xD;
               channel = priorInstructionChannel; // update this so that the corresponding wait&#xD;
                                                  // uses this channel&#xD;
               newInstruction = priorInstruction + String.format(&quot;else pull(%s: %s -> %s, #%s)&quot;,&#xD;
                   flowName, currentNodeName, snk, priorInstructionChannel); // was channel&#xD;
               instructionIndex -= 1; // set instructionIndex to the priorInstruction index so we&#xD;
                                      // replace that slot with the new, optimized instruction&#xD;
               instructionNodeName = snk; // change currntNodeName to the snk node, which is the&#xD;
                                          // node name of the prior instruction&#xD;
             }&#xD;
           } else if ((flowNodeIndex == 0 &amp;&amp; index == 0 &amp;&amp; e2eFlag)&#xD;
               &amp;&amp; !(priorInstruction.contains(SLEEP_INSTRUCTION)&#xD;
                   || priorInstruction.contains(WAIT_FRAGMENT))) {&#xD;
             // We hit this case when combining the last push of one flow with the first push of&#xD;
             // a new flow--making an if has (Fi) push(Fi) else pull pull(Fi+1)&#xD;
             // print (&quot;Skipping optimization of combining \(priorInstruction) with&#xD;
             // \(newInstruction)\n&quot;)&#xD;
             // May want to add code here to combine when e2eFlag is true but need to compute new&#xD;
             // reliability values given less than 1 probablity that&#xD;
             // this first push/now pull will happen&#xD;
             // System.err.printf(&quot;New instruction is: %s\nPrior instruction is %s\n&quot;,&#xD;
             // newInstruction, priorInstruction);&#xD;
           } else { // not sure when we hit this when combining a sleep or wait() from prior flow&#xD;
                    // with a new instruction&#xD;
             // Anywhere else? :-) Probably better figure it out!!&#xD;
             if (!priorInstruction.contains(ELSE_PULL_FRAGMENT)&#xD;
                 &amp;&amp; !priorInstruction.contains(WAIT_FRAGMENT)&#xD;
                 &amp;&amp; !priorInstruction.contains(SLEEP_INSTRUCTION) &amp;&amp; !realtimeHART) { // The sink&#xD;
                                                                                      // node is&#xD;
                                                                                      // not&#xD;
                                                                                      // waiting,&#xD;
                                                                                      // so add&#xD;
                                                                                      // this&#xD;
                                                                                      // instruction&#xD;
                                                                                      // as an&#xD;
                                                                                      // else to&#xD;
                                                                                      // it&#xD;
               // Also need to make sure we haven't already combined a prior instruction by&#xD;
               // moving it to the else clause. May need a smarter way to do this later...&#xD;
               var instructionParametersArrayList =&#xD;
                   dsl.getInstructionParameters(priorInstruction);&#xD;
               var priorInstructionChannel = UNKNOWN;&#xD;
               var priorInstructionSnk = UNKNOWN;&#xD;
               if (instructionParametersArrayList.size() == 1) {&#xD;
                 var instructionParameters = instructionParametersArrayList.get(0); // get a copy&#xD;
                                                                                    // of the&#xD;
                                                                                    // parameters&#xD;
                 priorInstructionSnk = instructionParameters.getSnk();&#xD;
                 priorInstructionChannel = instructionParameters.getChannel();&#xD;
               } else { // we just checked above that the prior instruction did not have an else&#xD;
                        // pull, wait, or sleep. So, there should be only one instruction here&#xD;
                 String msg = String.format(&#xD;
                     &quot;ERROR: More than one instruction in prior instruction string: %s&quot;,&#xD;
                     priorInstruction);&#xD;
                 System.err.println(msg);&#xD;
               }&#xD;
               priorSrcInstruction = priorInstructionTimeSlot[nodeIndex.get(currentNodeName)]; // get&#xD;
                                                                                               // instruction&#xD;
                                                                                               // scheduled&#xD;
                                                                                               // for&#xD;
                                                                                               // snk/curentNodeName)&#xD;
                                                                                               // to&#xD;
                                                                                               // execute&#xD;
                                                                                               // in&#xD;
                                                                                               // the&#xD;
                                                                                               // prior&#xD;
                                                                                               // time&#xD;
               if (priorInstructionSnk.equals(currentNodeName)) { // will try to push and pull&#xD;
                                                                  // to/from the same node, so&#xD;
                                                                  // use the prior instruction&#xD;
                                                                  // channel&#xD;
                 newInstruction = priorInstruction&#xD;
                     + elsePullClause(flowName, currentNodeName, snk, priorInstructionChannel);&#xD;
                 instructionIndex -= 1; // set instructionIndex to the priorInstruction index so&#xD;
                                        // we replace that slot with the new, optimized&#xD;
                                        // instruction&#xD;
                 instructionNodeName = snk; // change currntNodeName to the snk node, which is&#xD;
                                            // the node name of the prior instruction&#xD;
               } else if (priorSrcInstruction.contains(SLEEP_INSTRUCTION)) { // was&#xD;
                                                                             // !priorSrcInstruction.contains(&quot;wait(&quot;);&#xD;
                                                                             // I think it needs&#xD;
                                                                             // to be a sleep and&#xD;
                                                                             // then we can add a&#xD;
                                                                             // wait there&#xD;
                 // Make sure the currentNodeName entry for this time slot has a sleep. If so,&#xD;
                 // then we combine instructions with new as an else push and add wait at&#xD;
                 // currentNodeName&#xD;
                 workLoad.setNodeChannel(instructionNodeName,&#xD;
                     Integer.valueOf(priorInstructionChannel));&#xD;
                 newInstruction = priorInstruction&#xD;
                     + elsePullClause(flowName, currentNodeName, snk, priorInstructionChannel); // was&#xD;
                                                                                                // channel&#xD;
                 // need to change priorSrcInstruction from sleep to wait on channel&#xD;
                 priorSrcInstruction = waitInstruction(priorInstructionChannel); // was channel&#xD;
                 priorSrcUpdated = true; // set flag so this instruction is updated when we&#xD;
                                         // insert currenInstruction into the&#xD;
                                         // currentInstructionTimeSlot&#xD;
                 instructionIndex -= 1; // set instructionIndex to the priorInstruction index so&#xD;
                                        // we replace that slot with the new, optimized&#xD;
                                        // instruction&#xD;
                 instructionNodeName = snk; // change currntNodeName to the snk node, which is&#xD;
                                            // the node name of the prior instruction&#xD;
               }&#xD;
             }&#xD;
           }&#xD;
         }&#xD;
         ArrayList&lt;String> currentInstructionTimeSlotArrayList; // =&#xD;
                                                                // schedule.get(instructionIndex);&#xD;
         String[] currentInstructionTimeSlot; // =&#xD;
                                              // currentInstructionTimeSlotArrayList.toArray(new&#xD;
                                              // String[currentInstructionTimeSlotArrayList.size()]);&#xD;
         currentNodeInstruction[index] = instructionIndex; // store the slot index for this&#xD;
                                                           // instruction&#xD;
         if (instructionIndex &lt; schedule.size()) {&#xD;
           currentInstructionTimeSlotArrayList = schedule.get(instructionIndex); // load current&#xD;
                                                                                 // instruction,&#xD;
                                                                                 // in case&#xD;
                                                                                 // another&#xD;
                                                                                 // instruction&#xD;
                                                                                 // is in this&#xD;
                                                                                 // time slot for&#xD;
                                                                                 // another node&#xD;
                                                                                 // that doesn't&#xD;
                                                                                 // conflict&#xD;
                                                                                 // channels&#xD;
           currentInstructionTimeSlot = currentInstructionTimeSlotArrayList&#xD;
               .toArray(new String[currentInstructionTimeSlotArrayList.size()]);&#xD;
         } else {&#xD;
           currentInstructionTimeSlotArrayList =&#xD;
               new InstructionTimeSlot(nNodes, SLEEP_INSTRUCTION);&#xD;
           currentInstructionTimeSlot = currentInstructionTimeSlotArrayList&#xD;
               .toArray(new String[currentInstructionTimeSlotArrayList.size()]);&#xD;
         }&#xD;
         currentInstructionTimeSlot[nodeIndex.get(instructionNodeName)] = newInstruction; // an&#xD;
                                                                                          // error&#xD;
                                                                                          // finding&#xD;
                                                                                          // the&#xD;
                                                                                          // right&#xD;
                                                                                          // location&#xD;
                                                                                          // will&#xD;
                                                                                          // result&#xD;
                                                                                          // in&#xD;
                                                                                          // location&#xD;
                                                                                          // of&#xD;
                                                                                          // snk&#xD;
                                                                                          // or 0&#xD;
         if (priorSrcUpdated) {&#xD;
           currentInstructionTimeSlot[nodeIndex.get(currentNodeName)] = priorSrcInstruction; // an&#xD;
                                                                                             // error&#xD;
                                                                                             // finding&#xD;
                                                                                             // the&#xD;
                                                                                             // right&#xD;
                                                                                             // location&#xD;
                                                                                             // will&#xD;
                                                                                             // result&#xD;
                                                                                             // in&#xD;
                                                                                             // location&#xD;
                                                                                             // of&#xD;
                                                                                             // snk&#xD;
                                                                                             // or&#xD;
                                                                                             // 0&#xD;
         }&#xD;
         // If this is a basic push() then the snk node will have the initial wait instruction in&#xD;
         // its time slot. Thus, need to add the channel # to that wait&#xD;
         var snkInstruction = currentInstructionTimeSlot[nodeIndex.get(snk)]; // get instruction&#xD;
                                                                              // scheduled for&#xD;
                                                                              // snk to execute&#xD;
                                                                              // in the current&#xD;
                                                                              // time slot&#xD;
         if (snkInstruction.equals(SLEEP_INSTRUCTION)) {&#xD;
           currentInstructionTimeSlot[nodeIndex.get(snk)] = waitInstruction(channel);&#xD;
         }&#xD;
         if (flowNodeIndex > 0) {&#xD;
           var priorNodeName = nodesInFlow[flowNodeIndex - 1];// get name of prior node in the&#xD;
                                                              // flow (aka predecessor)&#xD;
           var possibleCombineInstruction =&#xD;
               String.format(&quot;if has(%1$s) push(%1$s: %2$s -> %3$s, #&quot;, flowName, priorNodeName,&#xD;
                   currentNodeName);&#xD;
           if (optimizationRequested &amp;&amp; !realtimeHART &amp;&amp; nTx > 1) { // One more optimization&#xD;
                                                                    // possible: combine two&#xD;
                                                                    // conditional pushes at the&#xD;
                                                                    // same slot involving a&#xD;
                                                                    // common node&#xD;
             var upstreamNodeInstruction =&#xD;
                 currentInstructionTimeSlot[nodeIndex.get(priorNodeName)];&#xD;
             var instr = hasPushInstruction(flowName, currentNodeName, snk, channel);&#xD;
             if (newInstruction.equals(instr)&#xD;
                 &amp;&amp; upstreamNodeInstruction.contains(possibleCombineInstruction)&#xD;
                 &amp;&amp; !upstreamNodeInstruction.contains(&quot;else&quot;)) {&#xD;
               var instructionParametersArrayList =&#xD;
                   dsl.getInstructionParameters(upstreamNodeInstruction);&#xD;
               var upstreamNodeChannel = UNKNOWN;&#xD;
               if (instructionParametersArrayList.size() == 1) {&#xD;
                 var instructionParameters = instructionParametersArrayList.get(0); // get a copy&#xD;
                                                                                    // of the&#xD;
                                                                                    // paramaters&#xD;
                 upstreamNodeChannel = instructionParameters.getChannel();&#xD;
                 // return upstreamNodeChannel to the available channels for this time slot&#xD;
                 channelsAvailable.addChannel(instructionIndex, upstreamNodeChannel);&#xD;
               } else { // we just checked above that the prior instruction did not have an else&#xD;
                        // pull, wait, or sleep. So, there should be only one instruction here&#xD;
                 String msg = String.format(&#xD;
                     &quot;ERROR: More than one instruction in upstream node  instruction string: %s&quot;,&#xD;
                     upstreamNodeInstruction);&#xD;
                 System.err.println(msg);&#xD;
               }&#xD;
               // use the newInstruction channel in upstream instruction that is being combined&#xD;
               // and return the upstream channel to the available channel set&#xD;
               newInstruction = newInstruction&#xD;
                   + elsePullClause(flowName, priorNodeName, currentNodeName, channel); // was&#xD;
                                                                                        // upstreamNodeChannel&#xD;
               currentInstructionTimeSlot[nodeIndex.get(instructionNodeName)] = newInstruction; // an&#xD;
                                                                                                // error&#xD;
                                                                                                // finding&#xD;
                                                                                                // the&#xD;
                                                                                                // right&#xD;
                                                                                                // location&#xD;
                                                                                                // will&#xD;
                                                                                                // result&#xD;
                                                                                                // in&#xD;
                                                                                                // location&#xD;
                                                                                                // of&#xD;
                                                                                                // snk&#xD;
                                                                                                // or&#xD;
                                                                                                // 0&#xD;
               currentInstructionTimeSlot[nodeIndex.get(priorNodeName)] =&#xD;
                   waitInstruction(channel);; // an error finding the right location will result&#xD;
                                              // in location of snk or 0 // was&#xD;
                                              // upstreamNodeChannel&#xD;
             } else if (newInstruction&#xD;
                 .contains(elsePullClause(flowName, priorNodeName, currentNodeName, channel))&#xD;
                 &amp;&amp; currentInstructionTimeSlot[nodeIndex.get(priorNodeName)]&#xD;
                     .contains(possibleCombineInstruction)) {&#xD;
               currentInstructionTimeSlot[nodeIndex.get(priorNodeName)] =&#xD;
                   waitInstruction(channel); // Replace combined instruction in prior node&#xD;
                                             // program with wait()&#xD;
             }&#xD;
           }&#xD;
           if (!realtimeHART &amp;&amp; nTx > 1) { // WARP schedule with multiple tx per link requested,&#xD;
                                           // so add 'else wait()' for down upstream node when&#xD;
                                           // needed&#xD;
             var upstreamNodeInstruction =&#xD;
                 currentInstructionTimeSlot[nodeIndex.get(priorNodeName)];&#xD;
             if (newInstruction&#xD;
                 .equals(hasPushInstruction(flowName, currentNodeName, snk, channel))&#xD;
                 &amp;&amp; upstreamNodeInstruction.contains(possibleCombineInstruction)) {&#xD;
               String upstreamNodeChannel =&#xD;
                   getFirstChannelInInstruction(upstreamNodeInstruction);&#xD;
               newInstruction = newInstruction + elseWaitInstruction(upstreamNodeChannel); // this&#xD;
                                                                                           // node&#xD;
                                                                                           // needs&#xD;
                                                                                           // to&#xD;
                                                                                           // wait&#xD;
                                                                                           // for&#xD;
                                                                                           // upstream&#xD;
                                                                                           // node&#xD;
                                                                                           // if&#xD;
                                                                                           // message&#xD;
                                                                                           // hasn't&#xD;
                                                                                           // arrived&#xD;
               currentInstructionTimeSlot[nodeIndex.get(instructionNodeName)] = newInstruction; // an&#xD;
                                                                                                // error&#xD;
                                                                                                // finding&#xD;
                                                                                                // the&#xD;
                                                                                                // right&#xD;
                                                                                                // location&#xD;
                                                                                                // will&#xD;
                                                                                                // result&#xD;
                                                                                                // in&#xD;
                                                                                                // location&#xD;
                                                                                                // of&#xD;
                                                                                                // snk&#xD;
                                                                                                // or&#xD;
                                                                                                // 0&#xD;
               // Don't replace the push instruction in the upstream node in this case, because&#xD;
               // we added the else in this nodes time slot instead&#xD;
             }&#xD;
           }&#xD;
         }&#xD;
         var timeSlot = new InstructionTimeSlot(currentInstructionTimeSlot);&#xD;
         if (instructionIndex &lt; schedule.size()) { // This should always be the case, but check&#xD;
                                                   // anyway&#xD;
           schedule.set(instructionIndex, timeSlot);&#xD;
         } else {&#xD;
           schedule.add(timeSlot);&#xD;
           String msg = String.format(&#xD;
               &quot;ERROR: instructionIndex = %d > schedule length = %d. Appended instruction to avoid crash or throw...&quot;,&#xD;
               instructionIndex, schedule.size());&#xD;
           System.err.println(msg);&#xD;
           System.err.println(&#xD;
               &quot;\tProbably due to a flow having a phase > 0. Need to addjust schedule to have one hyperperiod as a startup period in this case&quot;);&#xD;
         }&#xD;
         flowLastInstruction = instructionIndex;&#xD;
         if (index == 0) {&#xD;
           FlowSrcInstructionTimeSlot = instructionIndex; // Store the time slot in which the&#xD;
                                                          // flow's src node first transmits&#xD;
         }&#xD;
       }&#xD;
       previousNodeInstruction = currentNodeInstruction; // copy current to previous node...don't&#xD;
                                                         // worry about clearing&#xD;
                                                         // currentNodeInstrucitons; will be set&#xD;
                                                         // in loop&#xD;
     }&#xD;
     Integer latency = flowLastInstruction - (flowPhase + (instance * flowPeriod)) + 1;&#xD;
     String latencyMsg =&#xD;
         String.format(&quot;Maximum latency for %s:%d is %d\n&quot;, flowName, instance, latency);&#xD;
     if (verbose) {&#xD;
       System.out.printf(latencyMsg);&#xD;
     }&#xD;
     if (latency > flowDeadline) {&#xD;
       String deadlineMsg = String.format(&#xD;
           &quot;WARNING: This workload is not schedulable: Flow %s:%d latency %d > deadline %d\n&quot;,&#xD;
           flowName, instance, latency, flowDeadline);&#xD;
       deadlineMisses.add(deadlineMsg);&#xD;
       // System.out.printf(deadlineMsg);&#xD;
     }&#xD;
   }&#xD;
 }&#xD;
 setSchedule(schedule); // store the schedule built&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oiKfNak6Ee-lntgJ_JlK2w" name="waitInstruction" specification="_n2GqcKk6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_oiKfNqk6Ee-lntgJ_JlK2w" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_oiKfN6k6Ee-lntgJ_JlK2w" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>var size = channel.length();&#xD;
 if (!Utilities.isInteger(channel)) {&#xD;
   System.out.println(&quot;channel length is &quot; + String.valueOf(size));&#xD;
   System.err.println(&quot;ERROR: channel is not an Integer: &quot; + channel);&#xD;
 }&#xD;
 return String.format(&quot;wait(#%s)&quot;, channel);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oiKfOKk6Ee-lntgJ_JlK2w" name="elseWaitInstruction" specification="_n2HRgKk6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_oiKfOak6Ee-lntgJ_JlK2w" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_oiKfOqk6Ee-lntgJ_JlK2w" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>var size = channel.length();&#xD;
 if (!Utilities.isInteger(channel)) {&#xD;
   System.err.println(&quot;ERROR: channel is not an Integer: &quot; + channel);&#xD;
   System.err.println(&quot;\t channel size is not an Integer: &quot; + String.valueOf(size));&#xD;
 }&#xD;
 return String.format(&quot; else wait(#%s)&quot;, channel);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oiKfO6k6Ee-lntgJ_JlK2w" name="elsePullClause" specification="_n2IfoKk6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_oiKfPKk6Ee-lntgJ_JlK2w" name="flow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_oiKfPak6Ee-lntgJ_JlK2w" name="src">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_oiKfPqk6Ee-lntgJ_JlK2w" name="snk">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_oiKfP6k6Ee-lntgJ_JlK2w" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_oiKfQKk6Ee-lntgJ_JlK2w" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return String.format(&quot; else pull(%s: %s -> %s, #%s)&quot;, flow, src, snk, channel);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oiLtUKk6Ee-lntgJ_JlK2w" name="hasPushInstruction" specification="_n2JGsKk6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_oiLtUak6Ee-lntgJ_JlK2w" name="flow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_oiLtUqk6Ee-lntgJ_JlK2w" name="src">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_oiLtU6k6Ee-lntgJ_JlK2w" name="snk">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_oiLtVKk6Ee-lntgJ_JlK2w" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_oiLtVak6Ee-lntgJ_JlK2w" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return String.format(&quot;if has(%1$s) push(%1$s: %2$s -> %3$s, #%4$s)&quot;, flow, src, snk, channel);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oiLtVqk6Ee-lntgJ_JlK2w" name="pushInstruction" specification="_n2KU0Kk6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_oiLtV6k6Ee-lntgJ_JlK2w" name="flow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_oiLtWKk6Ee-lntgJ_JlK2w" name="src">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_oiLtWak6Ee-lntgJ_JlK2w" name="snk">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_oiLtWqk6Ee-lntgJ_JlK2w" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_oiLtW6k6Ee-lntgJ_JlK2w" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return String.format(&quot;push(%1$s: %2$s -> %3$s, #%4$s)&quot;, flow, src, snk, channel);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oiLtXKk6Ee-lntgJ_JlK2w" name="getFirstChannelInInstruction" specification="_n2Li8Kk6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_oiLtXak6Ee-lntgJ_JlK2w" name="Instruction">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_oiLtXqk6Ee-lntgJ_JlK2w" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>var beginIndex = Instruction.indexOf('#') + 1; // get index of the start of the channel #&#xD;
 var endIndex = Instruction.indexOf(')', beginIndex); // get index of the last character of the&#xD;
                                                      // channel #&#xD;
 var channel = Instruction.substring(beginIndex, endIndex); // this substring has the 1st channel&#xD;
 return channel;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oiMUYKk6Ee-lntgJ_JlK2w" name="findNextAvailableInstructionTimeSlot" specification="_ocTHwKk6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_oiMUYak6Ee-lntgJ_JlK2w" name="schedule" type="_n2hhMKk6Ee-lntgJ_JlK2w"/>
                <ownedParameter xmi:id="_oiMUYqk6Ee-lntgJ_JlK2w" name="startLocation">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_oiMUY6k6Ee-lntgJ_JlK2w" name="nodeInFlow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_oiMUZKk6Ee-lntgJ_JlK2w" name="transIndex">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_oiMUZak6Ee-lntgJ_JlK2w" name="nTx">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_oiMUZqk6Ee-lntgJ_JlK2w" name="previousNodeInstruction">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oiMUZ6k6Ee-lntgJ_JlK2w" value="*"/>
                </ownedParameter>
                <ownedParameter xmi:id="_oiMUaKk6Ee-lntgJ_JlK2w" name="currentNodeInstruction">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oiMUaak6Ee-lntgJ_JlK2w" value="*"/>
                </ownedParameter>
                <ownedParameter xmi:id="_oiMUaqk6Ee-lntgJ_JlK2w" name="sleepInstruction">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_oiMUa6k6Ee-lntgJ_JlK2w" name="realtimeHART">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_oiMUbKk6Ee-lntgJ_JlK2w" name="optimizationRequested">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_oiMUbak6Ee-lntgJ_JlK2w" name="srcNodeIndex">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_oiMUbqk6Ee-lntgJ_JlK2w" name="snkNodeIndex">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_oiMUb6k6Ee-lntgJ_JlK2w" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var currentTime = startLocation; // Make sure we don't start looking before the starting&#xD;
                                  // location&#xD;
 if (transIndex > 0) {&#xD;
   currentTime = Math.max(startLocation, currentNodeInstruction[transIndex - 1]); // Make sure we&#xD;
                                                                                  // don't start&#xD;
                                                                                  // looking&#xD;
                                                                                  // before the&#xD;
                                                                                  // startLocation&#xD;
                                                                                  // AND the&#xD;
                                                                                  // previous&#xD;
                                                                                  // instruction&#xD;
                                                                                  // we inserted&#xD;
 }&#xD;
 var done = false; // Flag indicating time slot search is done&#xD;
 if (realtimeHART || (nTx == 1 || nodeInFlow == 0 || transIndex >= nTx - 1)) {&#xD;
   // do the same thing for all nodes when nTx == 1 as for first node of flow when nTx == 1 and&#xD;
   // for kth retry&#xD;
   while (currentTime &lt; schedule.size() &amp;&amp; !done) {&#xD;
     var currentInstructionTimeSlot = schedule.get(currentTime);&#xD;
     if (slotIsAvailable(currentInstructionTimeSlot, srcNodeIndex, snkNodeIndex)) {&#xD;
       done = true;&#xD;
     } else {&#xD;
       currentTime += 1;&#xD;
     }&#xD;
   }&#xD;
 } else { // !reatimeHART and (nTx > 1 and nodeInFlow > 0)&#xD;
   Integer slotOffsetFromLastPreviousInstructionEntry;&#xD;
   if (transIndex >= (previousNodeInstruction.length - 1)) {&#xD;
     slotOffsetFromLastPreviousInstructionEntry =&#xD;
         transIndex - (previousNodeInstruction.length - 1) + 1;&#xD;
     var possibleInstructionTimeSlotIndex =&#xD;
         previousNodeInstruction[previousNodeInstruction.length - 1]&#xD;
             + slotOffsetFromLastPreviousInstructionEntry; // same as previous node's next retry&#xD;
                                                           // entry&#xD;
     // or continuous past it if more attempts for this instruction&#xD;
     if (startLocation &lt; possibleInstructionTimeSlotIndex) { // make sure this time isn't earlier&#xD;
                                                             // than the starting location&#xD;
       // (which can also mean the start time for searching available slots due to channel&#xD;
       // unavailability)&#xD;
       currentTime = possibleInstructionTimeSlotIndex; // OK to update to this time slot index&#xD;
     }&#xD;
     done = false; // However, we need to check if the current slot is available, and if not keep&#xD;
                   // searching until we find one. This happens with preemptions&#xD;
     if (!optimizationRequested) {&#xD;
       while (currentTime &lt; schedule.size() &amp;&amp; !done) {&#xD;
         var currentInstructionTimeSlot = schedule.get(currentTime);&#xD;
         if (slotIsAvailable(currentInstructionTimeSlot, srcNodeIndex, snkNodeIndex)) { // get&#xD;
                                                                                        // the&#xD;
                                                                                        // proposed&#xD;
                                                                                        // currentInstructionTimeSlot.&#xD;
                                                                                        // If&#xD;
                                                                                        // available,&#xD;
                                                                                        // done&#xD;
                                                                                        // is&#xD;
                                                                                        // true,&#xD;
                                                                                        // else&#xD;
                                                                                        // keep&#xD;
                                                                                        // checking&#xD;
                                                                                        // for a&#xD;
                                                                                        // time&#xD;
           done = true;&#xD;
         } else {&#xD;
           currentTime += 1;&#xD;
         }&#xD;
       }&#xD;
     } else {&#xD;
       // do something to support the optimization&#xD;
       while (currentTime &lt; schedule.size() &amp;&amp; !done) {&#xD;
         var currentInstructionTimeSlot = schedule.get(currentTime);&#xD;
         if (slotIsAvailable(currentInstructionTimeSlot, srcNodeIndex, snkNodeIndex)) { // get&#xD;
                                                                                        // the&#xD;
                                                                                        // proposed&#xD;
                                                                                        // currentInstructionTimeSlot.&#xD;
                                                                                        // If&#xD;
                                                                                        // available,&#xD;
                                                                                        // done&#xD;
                                                                                        // is&#xD;
                                                                                        // true,&#xD;
                                                                                        // else&#xD;
                                                                                        // keep&#xD;
                                                                                        // checking&#xD;
                                                                                        // for a&#xD;
                                                                                        // time&#xD;
           done = true;&#xD;
         } else {&#xD;
           currentTime += 1;&#xD;
         }&#xD;
       }&#xD;
     }&#xD;
   } else {&#xD;
     var possibleInstructionTimeSlotIndex = previousNodeInstruction[transIndex + 1]; // same as&#xD;
                                                                                     // previous&#xD;
                                                                                     // node's&#xD;
                                                                                     // next&#xD;
                                                                                     // retry&#xD;
                                                                                     // entry&#xD;
     if (startLocation &lt;= possibleInstructionTimeSlotIndex) { // make sure this time isn't&#xD;
                                                              // earlier than the starting&#xD;
                                                              // location&#xD;
       // (which can also mean the start time for searching available slots due to channel&#xD;
       // unavailability)&#xD;
       currentTime = possibleInstructionTimeSlotIndex; //&#xD;
     }&#xD;
     done = false; // However, we need to check if the current slot is available, and if not keep&#xD;
                   // searching until we find one. This happens with preemptions&#xD;
     if (!optimizationRequested) {&#xD;
       while (currentTime &lt; schedule.size() &amp;&amp; !done) {&#xD;
         var currentInstructionTimeSlot = schedule.get(currentTime);&#xD;
         if (slotIsAvailable(currentInstructionTimeSlot, srcNodeIndex, snkNodeIndex)) { // get&#xD;
                                                                                        // the&#xD;
                                                                                        // proposed&#xD;
                                                                                        // currentInstructionTimeSlot.&#xD;
                                                                                        // If&#xD;
                                                                                        // available,&#xD;
                                                                                        // done&#xD;
                                                                                        // is&#xD;
                                                                                        // true,&#xD;
                                                                                        // else&#xD;
                                                                                        // keep&#xD;
                                                                                        // checking&#xD;
                                                                                        // for a&#xD;
                                                                                        // time&#xD;
           done = true;&#xD;
         } else {&#xD;
           currentTime += 1;&#xD;
         }&#xD;
       }&#xD;
     } else {&#xD;
       // do something to support the optimization&#xD;
       if (currentTime &lt; schedule.size()) { // First make sure we haven't exceeded the current&#xD;
                                            // schedule table. If so, no need to optimize.&#xD;
         // Just return current time and let caller figure out what to do.&#xD;
         var tmpInstructionTimeSlot = schedule.get(currentTime);&#xD;
         var srcInstruction = tmpInstructionTimeSlot.get(srcNodeIndex);&#xD;
         var snkInstruction = tmpInstructionTimeSlot.get(snkNodeIndex);&#xD;
         if (!srcInstruction.contains(&quot;wait(&quot;) || !snkInstruction.contains(&quot;sleep&quot;)) { // instruction&#xD;
                                                                                       // should&#xD;
                                                                                       // contain&#xD;
                                                                                       // a wait,&#xD;
                                                                                       // so we&#xD;
                                                                                       // can use&#xD;
                                                                                       // it&#xD;
                                                                                       // during&#xD;
                                                                                       // optimization.&#xD;
                                                                                       // Only a&#xD;
                                                                                       // wait&#xD;
                                                                                       // for&#xD;
                                                                                       // this&#xD;
                                                                                       // time&#xD;
                                                                                       // slot is&#xD;
                                                                                       // expected&#xD;
                                                                                       // at this&#xD;
                                                                                       // point&#xD;
           // we also need to be sure the snk is sleeping&#xD;
           // If either condition is not true, then we need to find another time slot&#xD;
           while (currentTime &lt; schedule.size() &amp;&amp; !done) {&#xD;
             var currentInstructionTimeSlot = schedule.get(currentTime);&#xD;
             if (slotIsAvailable(currentInstructionTimeSlot, srcNodeIndex, snkNodeIndex)) { // get&#xD;
                                                                                            // the&#xD;
                                                                                            // proposed&#xD;
                                                                                            // currentInstructionTimeSlot.&#xD;
                                                                                            // If&#xD;
                                                                                            // available,&#xD;
                                                                                            // done&#xD;
                                                                                            // is&#xD;
                                                                                            // true,&#xD;
                                                                                            // else&#xD;
                                                                                            // keep&#xD;
                                                                                            // checking&#xD;
                                                                                            // for&#xD;
                                                                                            // a&#xD;
                                                                                            // time&#xD;
               done = true;&#xD;
             } else {&#xD;
               currentTime += 1;&#xD;
             }&#xD;
           }&#xD;
         } else if (srcInstruction.contains(&quot;else(&quot;)) { // This should never be the case, but not&#xD;
                                                        // sure if it is bad...print an error&#xD;
                                                        // indicating the issue&#xD;
           var errorString = String.format(&#xD;
               &quot;POSSIBLE ERROR, but not sure...   At time slot %d of the schedule, &quot;,&#xD;
               currentTime);&#xD;
           errorString +=&#xD;
               &quot;instruction for the src node contains\n   an unexpected 'else wait' instruction:&quot;;&#xD;
           errorString += srcInstruction;&#xD;
           System.err.println(errorString);&#xD;
         }&#xD;
       }&#xD;
     }&#xD;
   }&#xD;
 }&#xD;
 return currentTime;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oiMUcKk6Ee-lntgJ_JlK2w" name="slotIsAvailable" specification="_ocUV4Kk6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_oiMUcak6Ee-lntgJ_JlK2w" name="currentInstructionTimeSlot" type="_n1DhkKk6Ee-lntgJ_JlK2w"/>
                <ownedParameter xmi:id="_oiMUcqk6Ee-lntgJ_JlK2w" name="srcNodeIndex">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_oiMUc6k6Ee-lntgJ_JlK2w" name="snkNodeIndex">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_oiMUdKk6Ee-lntgJ_JlK2w" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>var vacantSlot = false; // assume slot is not vacant ----// Flag indicating time slot search is&#xD;
                         // done&#xD;
 if (SLEEP_INSTRUCTION.equals(currentInstructionTimeSlot.get(srcNodeIndex))&#xD;
     &amp;&amp; SLEEP_INSTRUCTION.equals(currentInstructionTimeSlot.get(snkNodeIndex))) { // src and snk&#xD;
                                                                                  // are both&#xD;
                                                                                  // sleeping, so&#xD;
                                                                                  // slot is&#xD;
                                                                                  // available&#xD;
   vacantSlot = true;&#xD;
 }&#xD;
 return vacantSlot;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oiMUdak6Ee-lntgJ_JlK2w" name="findNextAvailableChannel" specification="_ocUV5ak6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_oiMUdqk6Ee-lntgJ_JlK2w" name="schedule" type="_n2hhMKk6Ee-lntgJ_JlK2w"/>
                <ownedParameter xmi:id="_oiMUd6k6Ee-lntgJ_JlK2w" name="nodeName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_oiMUeKk6Ee-lntgJ_JlK2w" name="currentTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_oiMUeak6Ee-lntgJ_JlK2w" name="srcNodeIndex">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_oiMUeqk6Ee-lntgJ_JlK2w" name="snkNodeIndex">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_oiMUe6k6Ee-lntgJ_JlK2w" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>var newChannel = UNKNOWN; // indicates no channel was available. The caller will need to check&#xD;
                           // this result&#xD;
&#xD;
 // create an instance of the Warp DSL class for parsing instructions&#xD;
 var dsl = new WarpDSL();&#xD;
 InstructionTimeSlot priorInstructionTimeSlot;&#xD;
&#xD;
 var channels = channelsAvailable.getChannelSet(currentTime);&#xD;
 if (currentTime > 0) { // get the prior schedule time slot to see what channels were used in&#xD;
                        // that slot, which have to be avoided here&#xD;
   Integer priorTime = currentTime - 1;&#xD;
   priorInstructionTimeSlot = schedule.get(priorTime); // get a copy of the prior time slot&#xD;
   var srcPriorInstruction = priorInstructionTimeSlot.get(srcNodeIndex);&#xD;
   var snkPriorInstruction = priorInstructionTimeSlot.get(snkNodeIndex);&#xD;
&#xD;
   // extract the channels used by the src and snk nodes in the prior time slot and store them in&#xD;
   // an array&#xD;
   var instructionParametersArrayList = dsl.getInstructionParameters(srcPriorInstruction); // get&#xD;
                                                                                           // the&#xD;
                                                                                           // parameters&#xD;
                                                                                           // from&#xD;
                                                                                           // the&#xD;
                                                                                           // instruction&#xD;
                                                                                           // in&#xD;
                                                                                           // the&#xD;
                                                                                           // src&#xD;
                                                                                           // node's&#xD;
                                                                                           // prior&#xD;
                                                                                           // time&#xD;
                                                                                           // slot&#xD;
   for (int i = 0; i &lt; instructionParametersArrayList.size(); i++) {&#xD;
     var instructionParameters = instructionParametersArrayList.get(i); // get a copy of the&#xD;
                                                                        // paramaters&#xD;
     channels.remove(instructionParameters.getChannel());&#xD;
   }&#xD;
   instructionParametersArrayList = dsl.getInstructionParameters(snkPriorInstruction); // get the&#xD;
                                                                                       // parameters&#xD;
                                                                                       // from&#xD;
                                                                                       // the&#xD;
                                                                                       // instruction&#xD;
                                                                                       // in the&#xD;
                                                                                       // snk&#xD;
                                                                                       // node's&#xD;
                                                                                       // prior&#xD;
                                                                                       // time&#xD;
                                                                                       // slot&#xD;
   for (int i = 0; i &lt; instructionParametersArrayList.size(); i++) {&#xD;
     var instructionParameters = instructionParametersArrayList.get(i); // get a copy of the&#xD;
                                                                        // paramaters&#xD;
     channels.remove(instructionParameters.getChannel());&#xD;
   }&#xD;
 }&#xD;
 Integer channel = workLoad.getNodeChannel(nodeName); // get the last used channel for the node&#xD;
 channel++; // increment the channel because we don't use the same channel in consecutive time&#xD;
            // slots for the same node&#xD;
 if (channel >= getNumChannels()) { // valid range is 0..NumChannels-1. Reset when channel hits&#xD;
                                    // max&#xD;
   channel = 0;&#xD;
 }&#xD;
 var channelFound = false;&#xD;
 while (!channelFound &amp;&amp; !channels.isEmpty()) { // loop until a channel is found or we run out of&#xD;
                                                // channels to assign&#xD;
   var channelString = String.valueOf(channel);&#xD;
   var channelRemoved = channels.remove(channelString);&#xD;
   if (channelRemoved) {&#xD;
     // newChannel has the channel&#xD;
     newChannel = channelString;&#xD;
     channelFound = true;&#xD;
   } else {&#xD;
     // try another channel&#xD;
     channel += 1;&#xD;
     if (channel >= getNumChannels()) { // valid range is 0..NumChannels-1. Reset when channel&#xD;
                                        // hits max&#xD;
       channel = 0;&#xD;
     }&#xD;
   }&#xD;
 }&#xD;
 return newChannel; // returns UNKNOWN to indicate no channel found. This should never happen.&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oiMUfKk6Ee-lntgJ_JlK2w" name="selectPriority" specification="_n2NYIKk6Ee-lntgJ_JlK2w">
                <language>java</language>
                <body>setScheduleSelected(ScheduleChoices.PRIORITY);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oiMUfak6Ee-lntgJ_JlK2w" name="selectRM" specification="_n2NYIak6Ee-lntgJ_JlK2w">
                <language>java</language>
                <body>setScheduleSelected(ScheduleChoices.RM);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oiMUfqk6Ee-lntgJ_JlK2w" name="selectDM" specification="_n2N_MKk6Ee-lntgJ_JlK2w">
                <language>java</language>
                <body>setScheduleSelected(ScheduleChoices.DM);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oiM7cKk6Ee-lntgJ_JlK2w" name="selectRtHART" specification="_n2N_Mak6Ee-lntgJ_JlK2w">
                <language>java</language>
                <body>setScheduleSelected(ScheduleChoices.RTHART);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oiM7cak6Ee-lntgJ_JlK2w" name="setScheduleSelected" specification="_oewl4ak6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_oiM7cqk6Ee-lntgJ_JlK2w" name="choice" type="_oetikKk6Ee-lntgJ_JlK2w"/>
                <language>java</language>
                <body>switch (choice) {&#xD;
   case PRIORITY:&#xD;
     schedulerName = &quot;Priority&quot;;&#xD;
     schChoice = &quot;-Priority&quot;;&#xD;
     workLoad.setFlowsInPriorityOrder();&#xD;
     break;&#xD;
   case RM:&#xD;
     schedulerName = &quot;RateMonotonic&quot;;&#xD;
     schChoice = &quot;-RM&quot;;&#xD;
     workLoad.setFlowsInRMorder();&#xD;
     break;&#xD;
   case DM:&#xD;
     schedulerName = &quot;DeadlineMonotonic&quot;;&#xD;
     schChoice = &quot;-DM&quot;;&#xD;
     workLoad.setFlowsInDMorder();&#xD;
     break;&#xD;
   case RTHART:&#xD;
     schedulerName = &quot;RealtimeHART&quot;;&#xD;
     schChoice = &quot;-RealTimeHART&quot;;&#xD;
     workLoad.setFlowsInRealTimeHARTorder();&#xD;
     setRealTimeHartFlag(true);&#xD;
     break;&#xD;
   case CONNECTIVITY_POSET_DM:&#xD;
     schedulerName = &quot;ConnectivityPosetDM&quot;;&#xD;
     schChoice = &quot;-CPdm&quot;;&#xD;
     workLoad.setFlowsInDMorder();&#xD;
     break;&#xD;
   case CONNECTIVITY_POSET_PRIORITY:&#xD;
     schedulerName = &quot;ConnectivityPoset&quot;;&#xD;
     schChoice = &quot;-CPoset&quot;;&#xD;
     workLoad.setFlowsInPriorityOrder();&#xD;
     break;&#xD;
   case CONNECTIVITY_POSET_RM:&#xD;
     schedulerName = &quot;ConnectivityPosetRM&quot;;&#xD;
     schChoice = &quot;-CPrm&quot;;&#xD;
     workLoad.setFlowsInRMorder();&#xD;
     break;&#xD;
   case POSET_DM:&#xD;
     schedulerName = &quot;PosetDM&quot;;&#xD;
     schChoice = &quot;-PosetDM&quot;;&#xD;
     workLoad.setFlowsInDMorder();&#xD;
     break;&#xD;
   case POSET_PRIORITY:&#xD;
     schedulerName = &quot;Poset&quot;;&#xD;
     schChoice = &quot;-Poset&quot;;&#xD;
     workLoad.setFlowsInPriorityOrder();&#xD;
     break;&#xD;
   case POSET_RM:&#xD;
     schedulerName = &quot;PosetRM&quot;;&#xD;
     schChoice = &quot;-PosetDM&quot;;&#xD;
     workLoad.setFlowsInRMorder();&#xD;
     break;&#xD;
   case WARP_POSET_DM:&#xD;
     schedulerName = &quot;WarpPosetDM&quot;;&#xD;
     schChoice = &quot;-WPdm&quot;;&#xD;
     workLoad.setFlowsInDMorder();&#xD;
     break;&#xD;
   case WARP_POSET_PRIORITY:&#xD;
     schedulerName = &quot;WarpPoset&quot;;&#xD;
     schChoice = &quot;-WarpPoset&quot;;&#xD;
     workLoad.setFlowsInPriorityOrder();&#xD;
     break;&#xD;
   case WARP_POSET_RM:&#xD;
     schedulerName = &quot;WarpPosetRM&quot;;&#xD;
     schChoice = &quot;-WPrm&quot;;&#xD;
     workLoad.setFlowsInRMorder();&#xD;
     break;&#xD;
   default:&#xD;
     schedulerName = &quot;Priority&quot;;&#xD;
     schChoice = &quot;-Priority&quot;;&#xD;
     workLoad.setFlowsInPriorityOrder();&#xD;
     break;&#xD;
 }&#xD;
 SchedulerSelected = choice;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oiM7c6k6Ee-lntgJ_JlK2w" name="setSchedule" specification="_ocU89ak6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_oiM7dKk6Ee-lntgJ_JlK2w" name="schedule" type="_n2hhMKk6Ee-lntgJ_JlK2w"/>
                <language>java</language>
                <body>scheduleBuilt = schedule;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oiM7dak6Ee-lntgJ_JlK2w" name="getSchedule" specification="_n2N_Mqk6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_oiM7dqk6Ee-lntgJ_JlK2w" type="_n2hhMKk6Ee-lntgJ_JlK2w" direction="return"/>
                <language>java</language>
                <body>return scheduleBuilt;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oiM7d6k6Ee-lntgJ_JlK2w" name="getSchedulerName" specification="_n2OmQKk6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_oiM7eKk6Ee-lntgJ_JlK2w" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return schedulerName;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oiM7eak6Ee-lntgJ_JlK2w" name="getSchChoice" specification="_n2P0Yak6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_oiM7eqk6Ee-lntgJ_JlK2w" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return schChoice;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oiM7e6k6Ee-lntgJ_JlK2w" name="getNumChannels" specification="_n2QbcKk6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_oiM7fKk6Ee-lntgJ_JlK2w" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>return nChannels;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oiM7fak6Ee-lntgJ_JlK2w" name="getNumTransmissions" specification="_n2RCgqk6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_oiM7fqk6Ee-lntgJ_JlK2w" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>return nTransmissions;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oiNigKk6Ee-lntgJ_JlK2w" name="getRealTimeHartFlag" specification="_n2SQoak6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_oiNigak6Ee-lntgJ_JlK2w" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>return realTimeHARTflag;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oiNigqk6Ee-lntgJ_JlK2w" name="setRealTimeHartFlag" specification="_n2SQo6k6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_oiNig6k6Ee-lntgJ_JlK2w" name="flag">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>realTimeHARTflag = flag;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oiNihKk6Ee-lntgJ_JlK2w" name="getMinPacketReceptionRate" specification="_n2S3sak6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_oiNihak6Ee-lntgJ_JlK2w" type="_oex0AKk6Ee-lntgJ_JlK2w" direction="return"/>
                <language>java</language>
                <body>return workLoad.getMinPacketReceptionRate();&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oiNihqk6Ee-lntgJ_JlK2w" name="getE2e" specification="_n2UF0Kk6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_oiNih6k6Ee-lntgJ_JlK2w" type="_oex0AKk6Ee-lntgJ_JlK2w" direction="return"/>
                <language>java</language>
                <body>return workLoad.getE2e();&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oiNiiKk6Ee-lntgJ_JlK2w" name="getName" specification="_n2Us4qk6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_oiNiiak6Ee-lntgJ_JlK2w" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return workLoad.getName();&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oiNiiqk6Ee-lntgJ_JlK2w" name="getOptimizationFlag" specification="_n2V7AKk6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_oiNii6k6Ee-lntgJ_JlK2w" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>return optimizationRequested;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oiNijKk6Ee-lntgJ_JlK2w" name="deadlineMisses" specification="_n2WiEqk6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_oiNijak6Ee-lntgJ_JlK2w" type="_nzwhEKk6Ee-lntgJ_JlK2w" direction="return"/>
                <language>java</language>
                <body>return deadlineMisses;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oiNijqk6Ee-lntgJ_JlK2w" name="getNumFaults" specification="_n2XJIKk6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_oiNij6k6Ee-lntgJ_JlK2w" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>return workLoad.getNumFaults();&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oiNikKk6Ee-lntgJ_JlK2w" name="getNodeMapIndex" specification="_n2XwMqk6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_oiNikak6Ee-lntgJ_JlK2w" type="_oatzYKk6Ee-lntgJ_JlK2w" direction="return"/>
                <language>java</language>
                <body>var orderedNodes = workLoad.getNodeNamesOrderedAlphabetically(); // create an array of node&#xD;
                                                                  // names&#xD;
 // sorted alphabetically&#xD;
 var nodeIndexMap = new HashMap&lt;String, Integer>(); // create a new mapping from node names to&#xD;
                                                    // index in schedule&#xD;
 // table&#xD;
 var nNodes = orderedNodes.length;&#xD;
 for (int index = 0; index &lt; nNodes; index++) { // set up the node to index mapping&#xD;
   var name = orderedNodes[index];&#xD;
   nodeIndexMap.put(name, index); // add name, index mapping to NodeIndex map&#xD;
 }&#xD;
 return nodeIndexMap;&#xD;
  </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_n2FcUKk6Ee-lntgJ_JlK2w" name="toWorkLoad" method="_oiKfMKk6Ee-lntgJ_JlK2w">
                <ownedComment xmi:id="_oi--lqk6Ee-lntgJ_JlK2w">
                  <body>Returns the work load &#xD;
   * @return workLoad</body>
                </ownedComment>
                <ownedParameter xmi:id="_ocSgsqk6Ee-lntgJ_JlK2w" type="_n8NScKk6Ee-lntgJ_JlK2w" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_n2GDYKk6Ee-lntgJ_JlK2w" name="buildOriginalProgram" method="_oiKfNKk6Ee-lntgJ_JlK2w"/>
              <ownedOperation xmi:id="_n2GqcKk6Ee-lntgJ_JlK2w" name="waitInstruction" visibility="private" method="_oiKfNak6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_n2Gqcak6Ee-lntgJ_JlK2w" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_n2Gqcqk6Ee-lntgJ_JlK2w" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_n2HRgKk6Ee-lntgJ_JlK2w" name="elseWaitInstruction" visibility="private" method="_oiKfOKk6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_n2HRgak6Ee-lntgJ_JlK2w" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_n2H4kKk6Ee-lntgJ_JlK2w" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_n2IfoKk6Ee-lntgJ_JlK2w" name="elsePullClause" visibility="private" method="_oiKfO6k6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_n2Ifoak6Ee-lntgJ_JlK2w" name="flow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_n2Ifoqk6Ee-lntgJ_JlK2w" name="src">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_n2Ifo6k6Ee-lntgJ_JlK2w" name="snk">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_n2IfpKk6Ee-lntgJ_JlK2w" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_n2Ifpak6Ee-lntgJ_JlK2w" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_n2JGsKk6Ee-lntgJ_JlK2w" name="hasPushInstruction" visibility="private" method="_oiLtUKk6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_n2JtwKk6Ee-lntgJ_JlK2w" name="flow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_n2Jtwak6Ee-lntgJ_JlK2w" name="src">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_n2Jtwqk6Ee-lntgJ_JlK2w" name="snk">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_n2Jtw6k6Ee-lntgJ_JlK2w" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_n2JtxKk6Ee-lntgJ_JlK2w" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_n2KU0Kk6Ee-lntgJ_JlK2w" name="pushInstruction" visibility="private" method="_oiLtVqk6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_n2KU0ak6Ee-lntgJ_JlK2w" name="flow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_n2K74Kk6Ee-lntgJ_JlK2w" name="src">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_n2K74ak6Ee-lntgJ_JlK2w" name="snk">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_n2K74qk6Ee-lntgJ_JlK2w" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_n2K746k6Ee-lntgJ_JlK2w" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_n2Li8Kk6Ee-lntgJ_JlK2w" name="getFirstChannelInInstruction" visibility="private" method="_oiLtXKk6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_n2Li8ak6Ee-lntgJ_JlK2w" name="Instruction">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_n2Li8qk6Ee-lntgJ_JlK2w" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_n2NYIKk6Ee-lntgJ_JlK2w" name="selectPriority" method="_oiMUfKk6Ee-lntgJ_JlK2w"/>
              <ownedOperation xmi:id="_n2NYIak6Ee-lntgJ_JlK2w" name="selectRM" method="_oiMUfak6Ee-lntgJ_JlK2w"/>
              <ownedOperation xmi:id="_n2N_MKk6Ee-lntgJ_JlK2w" name="selectDM" method="_oiMUfqk6Ee-lntgJ_JlK2w"/>
              <ownedOperation xmi:id="_n2N_Mak6Ee-lntgJ_JlK2w" name="selectRtHART" method="_oiM7cKk6Ee-lntgJ_JlK2w"/>
              <ownedOperation xmi:id="_n2N_Mqk6Ee-lntgJ_JlK2w" name="getSchedule" method="_oiM7dak6Ee-lntgJ_JlK2w">
                <ownedComment xmi:id="_oi_loKk6Ee-lntgJ_JlK2w">
                  <body>Returns the built schulde&#xD;
   * @return scheduleBuilt</body>
                </ownedComment>
                <ownedParameter xmi:id="_ocVkAKk6Ee-lntgJ_JlK2w" type="_n2hhMKk6Ee-lntgJ_JlK2w" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_n2OmQKk6Ee-lntgJ_JlK2w" name="getSchedulerName" method="_oiM7d6k6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_n2OmQak6Ee-lntgJ_JlK2w" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_n2P0Yak6Ee-lntgJ_JlK2w" name="getSchChoice" method="_oiM7eak6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_n2P0Yqk6Ee-lntgJ_JlK2w" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_n2QbcKk6Ee-lntgJ_JlK2w" name="getNumChannels" method="_oiM7e6k6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_n2Qbcak6Ee-lntgJ_JlK2w" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_n2RCgqk6Ee-lntgJ_JlK2w" name="getNumTransmissions" method="_oiM7fak6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_n2RpkKk6Ee-lntgJ_JlK2w" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_n2SQoak6Ee-lntgJ_JlK2w" name="getRealTimeHartFlag" visibility="private" method="_oiNigKk6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_n2SQoqk6Ee-lntgJ_JlK2w" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_n2SQo6k6Ee-lntgJ_JlK2w" name="setRealTimeHartFlag" visibility="private" method="_oiNigqk6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_n2S3sKk6Ee-lntgJ_JlK2w" name="flag">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_n2S3sak6Ee-lntgJ_JlK2w" name="getMinPacketReceptionRate" method="_oiNihKk6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_oeybEak6Ee-lntgJ_JlK2w" type="_oex0AKk6Ee-lntgJ_JlK2w" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_n2UF0Kk6Ee-lntgJ_JlK2w" name="getE2e" method="_oiNihqk6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_oezCIKk6Ee-lntgJ_JlK2w" type="_oex0AKk6Ee-lntgJ_JlK2w" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_n2Us4qk6Ee-lntgJ_JlK2w" name="getName" method="_oiNiiKk6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_n2VT8Kk6Ee-lntgJ_JlK2w" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_n2V7AKk6Ee-lntgJ_JlK2w" name="getOptimizationFlag" method="_oiNiiqk6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_n2V7Aak6Ee-lntgJ_JlK2w" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_n2WiEqk6Ee-lntgJ_JlK2w" name="deadlineMisses" method="_oiNijKk6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_ocVkAak6Ee-lntgJ_JlK2w" type="_nzwhEKk6Ee-lntgJ_JlK2w" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_n2XJIKk6Ee-lntgJ_JlK2w" name="getNumFaults" method="_oiNijqk6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_n2XJIak6Ee-lntgJ_JlK2w" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_n2XwMqk6Ee-lntgJ_JlK2w" name="getNodeMapIndex" method="_oiNikKk6Ee-lntgJ_JlK2w">
                <ownedComment xmi:id="_oi_loak6Ee-lntgJ_JlK2w">
                  <body>Retrieves a mapping of node names to their respective indices in the schedule table.&#xD;
   * @return nodeIndexMap</body>
                </ownedComment>
                <ownedParameter xmi:id="_oezpMKk6Ee-lntgJ_JlK2w" type="_oatzYKk6Ee-lntgJ_JlK2w" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_ocR5oKk6Ee-lntgJ_JlK2w" name="setDefaultParameters" visibility="private" method="_oiJ4LKk6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_ocR5oak6Ee-lntgJ_JlK2w" name="workLoad" type="_n8NScKk6Ee-lntgJ_JlK2w"/>
                <ownedParameter xmi:id="_ocR5oqk6Ee-lntgJ_JlK2w" name="nChannels">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ocSgsKk6Ee-lntgJ_JlK2w" name="verbose">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ocSgsak6Ee-lntgJ_JlK2w" name="reportLatency">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_ocTHwKk6Ee-lntgJ_JlK2w" name="findNextAvailableInstructionTimeSlot" visibility="private" method="_oiMUYKk6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_ocTHwak6Ee-lntgJ_JlK2w" name="schedule" type="_n2hhMKk6Ee-lntgJ_JlK2w"/>
                <ownedParameter xmi:id="_ocTHwqk6Ee-lntgJ_JlK2w" name="startLocation">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ocTHw6k6Ee-lntgJ_JlK2w" name="nodeInFlow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ocTHxKk6Ee-lntgJ_JlK2w" name="transIndex">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ocTHxak6Ee-lntgJ_JlK2w" name="nTx">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ocTHxqk6Ee-lntgJ_JlK2w" name="previousNodeInstruction">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ocTu0qk6Ee-lntgJ_JlK2w" value="*"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ocTHx6k6Ee-lntgJ_JlK2w" name="currentNodeInstruction">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ocTu06k6Ee-lntgJ_JlK2w" value="*"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ocTHyKk6Ee-lntgJ_JlK2w" name="sleepInstruction">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ocTHyak6Ee-lntgJ_JlK2w" name="realtimeHART">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ocTHyqk6Ee-lntgJ_JlK2w" name="optimizationRequested">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ocTHy6k6Ee-lntgJ_JlK2w" name="srcNodeIndex">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ocTu0Kk6Ee-lntgJ_JlK2w" name="snkNodeIndex">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ocTu0ak6Ee-lntgJ_JlK2w" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_ocUV4Kk6Ee-lntgJ_JlK2w" name="slotIsAvailable" visibility="private" method="_oiMUcKk6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_ocUV4ak6Ee-lntgJ_JlK2w" name="currentInstructionTimeSlot" type="_n1DhkKk6Ee-lntgJ_JlK2w"/>
                <ownedParameter xmi:id="_ocUV4qk6Ee-lntgJ_JlK2w" name="srcNodeIndex">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ocUV46k6Ee-lntgJ_JlK2w" name="snkNodeIndex">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ocUV5Kk6Ee-lntgJ_JlK2w" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_ocUV5ak6Ee-lntgJ_JlK2w" name="findNextAvailableChannel" visibility="private" method="_oiMUdak6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_ocUV5qk6Ee-lntgJ_JlK2w" name="schedule" type="_n2hhMKk6Ee-lntgJ_JlK2w"/>
                <ownedParameter xmi:id="_ocU88Kk6Ee-lntgJ_JlK2w" name="nodeName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ocU88ak6Ee-lntgJ_JlK2w" name="currentTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ocU88qk6Ee-lntgJ_JlK2w" name="srcNodeIndex">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ocU886k6Ee-lntgJ_JlK2w" name="snkNodeIndex">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ocU89Kk6Ee-lntgJ_JlK2w" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_ocU89ak6Ee-lntgJ_JlK2w" name="setSchedule" visibility="private" method="_oiM7c6k6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_ocU89qk6Ee-lntgJ_JlK2w" name="schedule" type="_n2hhMKk6Ee-lntgJ_JlK2w"/>
              </ownedOperation>
              <ownedOperation xmi:id="_oeuwsKk6Ee-lntgJ_JlK2w" name="Program" visibility="package" method="_oiJ4IKk6Ee-lntgJ_JlK2w">
                <eAnnotations xmi:id="_oeuwtqk6Ee-lntgJ_JlK2w" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_oeuwt6k6Ee-lntgJ_JlK2w" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_oeuwsak6Ee-lntgJ_JlK2w" name="workLoad" type="_n8NScKk6Ee-lntgJ_JlK2w"/>
                <ownedParameter xmi:id="_oeuwsqk6Ee-lntgJ_JlK2w" name="nChannels">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_oeuws6k6Ee-lntgJ_JlK2w" name="choice" type="_oetikKk6Ee-lntgJ_JlK2w"/>
                <ownedParameter xmi:id="_oeuwtKk6Ee-lntgJ_JlK2w" name="verbose">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_oeuwtak6Ee-lntgJ_JlK2w" name="reportLatency">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_oeuwuKk6Ee-lntgJ_JlK2w" type="_n2BK4Kk6Ee-lntgJ_JlK2w" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_oevXwKk6Ee-lntgJ_JlK2w" name="Program" visibility="package" method="_oiJ4J6k6Ee-lntgJ_JlK2w">
                <eAnnotations xmi:id="_oev-0Kk6Ee-lntgJ_JlK2w" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_oev-0ak6Ee-lntgJ_JlK2w" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_oevXwak6Ee-lntgJ_JlK2w" name="workLoad" type="_n8NScKk6Ee-lntgJ_JlK2w"/>
                <ownedParameter xmi:id="_oevXwqk6Ee-lntgJ_JlK2w" name="nChannels">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_oevXw6k6Ee-lntgJ_JlK2w" name="choice" type="_oetikKk6Ee-lntgJ_JlK2w"/>
                <ownedParameter xmi:id="_oev-0qk6Ee-lntgJ_JlK2w" type="_n2BK4Kk6Ee-lntgJ_JlK2w" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_oev-06k6Ee-lntgJ_JlK2w" name="buildProgram" method="_oiKfMqk6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_oewl4Kk6Ee-lntgJ_JlK2w" name="choice" type="_oetikKk6Ee-lntgJ_JlK2w"/>
              </ownedOperation>
              <ownedOperation xmi:id="_oewl4ak6Ee-lntgJ_JlK2w" name="setScheduleSelected" visibility="private" method="_oiM7cak6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_oewl4qk6Ee-lntgJ_JlK2w" name="choice" type="_oetikKk6Ee-lntgJ_JlK2w"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_n2hhMKk6Ee-lntgJ_JlK2w" name="ProgramSchedule">
              <generalization xmi:id="_ocZOYKk6Ee-lntgJ_JlK2w" general="_n5_E4Kk6Ee-lntgJ_JlK2w"/>
              <ownedAttribute xmi:id="_ogiukKk6Ee-lntgJ_JlK2w" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_ogjVoKk6Ee-lntgJ_JlK2w" value="1L"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oiOJkKk6Ee-lntgJ_JlK2w" name="ProgramSchedule" specification="_n2ivUKk6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_oiOJkak6Ee-lntgJ_JlK2w" type="_n2hhMKk6Ee-lntgJ_JlK2w" direction="return"/>
                <language>java</language>
                <body>super();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oiOJkqk6Ee-lntgJ_JlK2w" name="ProgramSchedule" specification="_n2jWYKk6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_oiOJk6k6Ee-lntgJ_JlK2w" name="row">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_oiOJlKk6Ee-lntgJ_JlK2w" name="column">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_oiOJlak6Ee-lntgJ_JlK2w" type="_n2hhMKk6Ee-lntgJ_JlK2w" direction="return"/>
                <language>java</language>
                <body>super(row,column);&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_n2ivUKk6Ee-lntgJ_JlK2w" name="ProgramSchedule" method="_oiOJkKk6Ee-lntgJ_JlK2w">
                <eAnnotations xmi:id="_n2ivUak6Ee-lntgJ_JlK2w" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_n2ivUqk6Ee-lntgJ_JlK2w" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_n2ivU6k6Ee-lntgJ_JlK2w" type="_n2hhMKk6Ee-lntgJ_JlK2w" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_n2jWYKk6Ee-lntgJ_JlK2w" name="ProgramSchedule" visibility="package" method="_oiOJkqk6Ee-lntgJ_JlK2w">
                <eAnnotations xmi:id="_n2j9cKk6Ee-lntgJ_JlK2w" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_n2j9cak6Ee-lntgJ_JlK2w" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_n2jWYak6Ee-lntgJ_JlK2w" name="row">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_n2jWYqk6Ee-lntgJ_JlK2w" name="column">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_n2j9cqk6Ee-lntgJ_JlK2w" type="_n2hhMKk6Ee-lntgJ_JlK2w" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_n2kkgKk6Ee-lntgJ_JlK2w" name="ProgramVisualization">
              <ownedComment xmi:id="_oi_loqk6Ee-lntgJ_JlK2w">
                <body>@author sgoddard&#xD;
@author jcbates&#xD;
@version 1.5&#xD;
ProgramVisualiztion builds graph based on data; checks if flows have passed their deadlines&#xD;
 *</body>
              </ownedComment>
              <generalization xmi:id="_ocbqoKk6Ee-lntgJ_JlK2w" general="_n6jsoKk6Ee-lntgJ_JlK2w"/>
              <ownedAttribute xmi:id="_ogjVoak6Ee-lntgJ_JlK2w" name="SOURCE_SUFFIX" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_ogjVoqk6Ee-lntgJ_JlK2w" value="&quot;.dsl&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_ogjVo6k6Ee-lntgJ_JlK2w" name="sourceCode" visibility="private" type="_n2hhMKk6Ee-lntgJ_JlK2w" association="_okNtoKk6Ee-lntgJ_JlK2w"/>
              <ownedAttribute xmi:id="_ogj8sak6Ee-lntgJ_JlK2w" name="program" visibility="private" type="_n2BK4Kk6Ee-lntgJ_JlK2w" association="_okNto6k6Ee-lntgJ_JlK2w"/>
              <ownedAttribute xmi:id="_ogj8s6k6Ee-lntgJ_JlK2w" name="deadlinesMet" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oiOwoKk6Ee-lntgJ_JlK2w" name="ProgramVisualization" specification="_ocacgKk6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_oiOwoak6Ee-lntgJ_JlK2w" name="warp" type="_n7T6kKk6Ee-lntgJ_JlK2w"/>
                <ownedParameter xmi:id="_oiOwoqk6Ee-lntgJ_JlK2w" type="_n2kkgKk6Ee-lntgJ_JlK2w" direction="return"/>
                <language>java</language>
                <body>super(new FileManager(), warp, SOURCE_SUFFIX);&#xD;
 this.program = warp.toProgram();&#xD;
 this.sourceCode = program.getSchedule();&#xD;
 this.deadlinesMet = warp.deadlinesMet();&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oiOwo6k6Ee-lntgJ_JlK2w" name="displayVisualization" specification="_n2lyoKk6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_oiOwpKk6Ee-lntgJ_JlK2w" type="_n01fIKk6Ee-lntgJ_JlK2w" direction="return"/>
                <language>java</language>
                <body>return new GuiVisualization(createTitle(), createColumnHeader(), createVisualizationData());&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oiOwpak6Ee-lntgJ_JlK2w" name="createHeader" specification="_n2nAwKk6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_oiOwpqk6Ee-lntgJ_JlK2w" type="_nzwhEKk6Ee-lntgJ_JlK2w" direction="return"/>
                <language>java</language>
                <body>Description header = new Description();&#xD;
&#xD;
 header.add(createTitle());&#xD;
 header.add(String.format(&quot;Scheduler Name: %s\n&quot;, program.getSchedulerName()));&#xD;
&#xD;
 /* The following parameters are output based on a special schedule or the fault model */&#xD;
 if (program.getNumFaults() > 0) { // only specify when deterministic fault model is assumed&#xD;
   header.add(String.format(&quot;numFaults: %d\n&quot;, program.getNumFaults()));&#xD;
 }&#xD;
 header.add(String.format(&quot;M: %s\n&quot;, String.valueOf(program.getMinPacketReceptionRate())));&#xD;
 header.add(String.format(&quot;E2E: %s\n&quot;, String.valueOf(program.getE2e())));&#xD;
 header.add(String.format(&quot;nChannels: %d\n&quot;, program.getNumChannels()));&#xD;
 return header;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oiOwp6k6Ee-lntgJ_JlK2w" name="createFooter" specification="_n2nn0qk6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_oiOwqKk6Ee-lntgJ_JlK2w" type="_nzwhEKk6Ee-lntgJ_JlK2w" direction="return"/>
                <language>java</language>
                <body>Description footer = new Description();&#xD;
 String deadlineMsg = null;&#xD;
&#xD;
 if (deadlinesMet) {&#xD;
   deadlineMsg = &quot;All flows meet their deadlines\n&quot;;&#xD;
 } else {&#xD;
   deadlineMsg = &quot;WARNING: NOT all flows meet their deadlines. See deadline analysis report.\n&quot;;&#xD;
 }&#xD;
 footer.add(String.format(&quot;// %s&quot;, deadlineMsg));&#xD;
 return footer;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oiPXsKk6Ee-lntgJ_JlK2w" name="createColumnHeader" specification="_n2o18qk6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_oiPXsak6Ee-lntgJ_JlK2w" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oiPXsqk6Ee-lntgJ_JlK2w" value="*"/>
                </ownedParameter>
                <language>java</language>
                <body>var orderedNodes = program.toWorkLoad().getNodeNamesOrderedAlphabetically();&#xD;
 String[] columnNames = new String[orderedNodes.length + 1];&#xD;
 columnNames[0] = &quot;Time Slot&quot;; // add the Time Slot column header first&#xD;
 /* loop through the node names, adding each to the header */&#xD;
 for (int i = 0; i &lt; orderedNodes.length; i++) {&#xD;
   columnNames[i + 1] = orderedNodes[i];&#xD;
 }&#xD;
 return columnNames;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oiPXs6k6Ee-lntgJ_JlK2w" name="createVisualizationData" specification="_n2qrIKk6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_oiPXtKk6Ee-lntgJ_JlK2w" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oiPXtak6Ee-lntgJ_JlK2w" value="*"/>
                </ownedParameter>
                <language>java</language>
                <body>if (visualizationData == null) {&#xD;
   int numRows = sourceCode.getNumRows();&#xD;
   int numColumns = sourceCode.getNumColumns();&#xD;
   visualizationData = new String[numRows][numColumns + 1];&#xD;
&#xD;
   for (int row = 0; row &lt; numRows; row++) {&#xD;
     visualizationData[row][0] = String.format(&quot;%s&quot;, row);&#xD;
     for (int column = 0; column &lt; numColumns; column++) {&#xD;
       visualizationData[row][column + 1] = sourceCode.get(row, column);&#xD;
     }&#xD;
   }&#xD;
 }&#xD;
 return visualizationData;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oiPXtqk6Ee-lntgJ_JlK2w" name="createTitle" specification="_n2rSM6k6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_oiPXt6k6Ee-lntgJ_JlK2w" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return String.format(&quot;WARP program for graph %s\n&quot;, program.getName());&#xD;
  </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_n2lyoKk6Ee-lntgJ_JlK2w" name="displayVisualization" method="_oiOwo6k6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_ocbDk6k6Ee-lntgJ_JlK2w" type="_n01fIKk6Ee-lntgJ_JlK2w" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_n2nAwKk6Ee-lntgJ_JlK2w" name="createHeader" visibility="protected" method="_oiOwpak6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_ocbDlKk6Ee-lntgJ_JlK2w" type="_nzwhEKk6Ee-lntgJ_JlK2w" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_n2nn0qk6Ee-lntgJ_JlK2w" name="createFooter" visibility="protected" method="_oiOwp6k6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_ocbDlak6Ee-lntgJ_JlK2w" type="_nzwhEKk6Ee-lntgJ_JlK2w" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_n2o18qk6Ee-lntgJ_JlK2w" name="createColumnHeader" visibility="protected" method="_oiPXsKk6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_n2pdAKk6Ee-lntgJ_JlK2w" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_n2pdAak6Ee-lntgJ_JlK2w" value="*"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_n2qrIKk6Ee-lntgJ_JlK2w" name="createVisualizationData" visibility="protected" method="_oiPXs6k6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_n2qrIak6Ee-lntgJ_JlK2w" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_n2qrIqk6Ee-lntgJ_JlK2w" value="*"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_n2rSM6k6Ee-lntgJ_JlK2w" name="createTitle" visibility="private" method="_oiPXtqk6Ee-lntgJ_JlK2w">
                <ownedComment xmi:id="_oi_lo6k6Ee-lntgJ_JlK2w">
                  <body>Returns title&#xD;
   * @return returns the title of the graph</body>
                </ownedComment>
                <ownedParameter xmi:id="_n2r5QKk6Ee-lntgJ_JlK2w" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_ocacgKk6Ee-lntgJ_JlK2w" name="ProgramVisualization" visibility="package" method="_oiOwoKk6Ee-lntgJ_JlK2w">
                <eAnnotations xmi:id="_ocbDkKk6Ee-lntgJ_JlK2w" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_ocbDkak6Ee-lntgJ_JlK2w" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_ocacgak6Ee-lntgJ_JlK2w" name="warp" type="_n7T6kKk6Ee-lntgJ_JlK2w"/>
                <ownedParameter xmi:id="_ocbDkqk6Ee-lntgJ_JlK2w" type="_n2kkgKk6Ee-lntgJ_JlK2w" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_n2uVgKk6Ee-lntgJ_JlK2w" name="ReleaseTimeComparator">
              <interfaceRealization xmi:id="_oe2FcKk6Ee-lntgJ_JlK2w" client="_n2uVgKk6Ee-lntgJ_JlK2w" supplier="_obMUgKk6Ee-lntgJ_JlK2w" contract="_obMUgKk6Ee-lntgJ_JlK2w"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oiP-wKk6Ee-lntgJ_JlK2w" name="compare" specification="_oe4hsKk6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_oiP-wak6Ee-lntgJ_JlK2w" name="obj1" type="_oeQPkak6Ee-lntgJ_JlK2w"/>
                <ownedParameter xmi:id="_oiP-wqk6Ee-lntgJ_JlK2w" name="obj2" type="_oeQPkak6Ee-lntgJ_JlK2w"/>
                <ownedParameter xmi:id="_oiP-w6k6Ee-lntgJ_JlK2w" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>var result = obj1.releaseTimeComparison(obj2);&#xD;
		if (result == 0) {&#xD;
			// tied for priority, so break tie on release time&#xD;
			result = obj1.priorityComparison(obj2);&#xD;
		}&#xD;
		return result; // 0 => tie on priority and release time&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_oe4hsKk6Ee-lntgJ_JlK2w" name="compare" method="_oiP-wKk6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_oe4hsak6Ee-lntgJ_JlK2w" name="obj1" type="_oeQPkak6Ee-lntgJ_JlK2w"/>
                <ownedParameter xmi:id="_oe4hsqk6Ee-lntgJ_JlK2w" name="obj2" type="_oeQPkak6Ee-lntgJ_JlK2w"/>
                <ownedParameter xmi:id="_oe5IwKk6Ee-lntgJ_JlK2w" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_n2wxwKk6Ee-lntgJ_JlK2w" name="ReleaseTimeQueue">
              <generalization xmi:id="_n21DMKk6Ee-lntgJ_JlK2w" general="_n2zOAKk6Ee-lntgJ_JlK2w"/>
              <ownedAttribute xmi:id="_ogkjwak6Ee-lntgJ_JlK2w" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_oglK0Kk6Ee-lntgJ_JlK2w" value="1L"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oiP-xKk6Ee-lntgJ_JlK2w" name="ReleaseTimeQueue" specification="_n2ym8Kk6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_oiP-xak6Ee-lntgJ_JlK2w" type="_n2wxwKk6Ee-lntgJ_JlK2w" direction="return"/>
                <language>java</language>
                <body>super(1, new ReleaseTimeComparator&lt;T>());&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oiP-xqk6Ee-lntgJ_JlK2w" name="ReleaseTimeQueue" specification="_occ4wKk6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_oiP-x6k6Ee-lntgJ_JlK2w" name="schedulableObjects" type="_ob8icKk6Ee-lntgJ_JlK2w"/>
                <ownedParameter xmi:id="_oiP-yKk6Ee-lntgJ_JlK2w" type="_n2wxwKk6Ee-lntgJ_JlK2w" direction="return"/>
                <language>java</language>
                <body>super(new ReleaseTimeComparator&lt;T>());&#xD;
		this.addAll(schedulableObjects);&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_n2ym8Kk6Ee-lntgJ_JlK2w" name="ReleaseTimeQueue" visibility="package" method="_oiP-xKk6Ee-lntgJ_JlK2w">
                <eAnnotations xmi:id="_n2ym8ak6Ee-lntgJ_JlK2w" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_n2ym8qk6Ee-lntgJ_JlK2w" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_n2ym86k6Ee-lntgJ_JlK2w" type="_n2wxwKk6Ee-lntgJ_JlK2w" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_occ4wKk6Ee-lntgJ_JlK2w" name="ReleaseTimeQueue" visibility="package" method="_oiP-xqk6Ee-lntgJ_JlK2w">
                <eAnnotations xmi:id="_occ4wqk6Ee-lntgJ_JlK2w" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_occ4w6k6Ee-lntgJ_JlK2w" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_occ4wak6Ee-lntgJ_JlK2w" name="schedulableObjects" type="_ob8icKk6Ee-lntgJ_JlK2w"/>
                <ownedParameter xmi:id="_occ4xKk6Ee-lntgJ_JlK2w" type="_n2wxwKk6Ee-lntgJ_JlK2w" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_n22RUKk6Ee-lntgJ_JlK2w" name="ReliabilityAnalysis">
              <ownedComment xmi:id="_ojAMsKk6Ee-lntgJ_JlK2w">
                <body>ReliabilityAnalysis analyzes the end-to-end reliability of messages transmitted in flows for the&#xD;
WARP system.&#xD;
&lt;p>&#xD;
&#xD;
Let M represent the Minimum Packet Reception Rate on an edge in a flow. The end-to-end&#xD;
reliability for each flow, flow:src->sink, is computed iteratively as follows:&lt;br>&#xD;
(1)The flow:src node has an initial probability of 1.0 when it is released. All other initial&#xD;
probabilities are 0.0. (That is, the reset of the nodes in the flow have an initial probability&#xD;
value of 0.0.) &lt;br>&#xD;
(2) each src->sink pair probability is computed as NewSinkNodeState = (1-M)*PrevSnkNodeState +&#xD;
M*PrevSrcNodeState &lt;br>&#xD;
This value represents the probability that the message as been received by the node SinkNode.&#xD;
Thus, the NewSinkNodeState probability will increase each time a push or pull is executed with&#xD;
SinkNode as a listener.&#xD;
&lt;p>&#xD;
&#xD;
The last probability state value for any node is the reliability of the message reaching that&#xD;
node, and the end-to-end reliability of a flow is the value of the last Flow:SinkNode&#xD;
probability.&#xD;
&lt;p>&#xD;
&#xD;
CS2820 Fall 2024 Project: Implement this class to compute the probabilities that comprise the&#xD;
ReliablityMatrix, which is the core of the reliability visualization that is requested in Warp.&#xD;
&lt;p>&#xD;
&#xD;
To do this, you will need to retrieve the program source, parse the instructions for each node,&#xD;
in each time slot, to extract the src and snk nodes in the instruction and then apply the message&#xD;
success probability equation defined in the project assignment.&#xD;
&lt;p>&#xD;
&#xD;
I recommend using the getInstructionParameters method of the WarpDSL class to extract the src and&#xD;
snk nodes from the instruction string in a program schedule time slot.&#xD;
&#xD;
@author sgoddard&#xD;
@version 1.8 Fall 2024&#xD;
 *</body>
              </ownedComment>
              <ownedAttribute xmi:id="_oglK0ak6Ee-lntgJ_JlK2w" name="e2e" visibility="private" type="_oex0AKk6Ee-lntgJ_JlK2w">
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_oglK0qk6Ee-lntgJ_JlK2w" value="0.0"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_oglx4ak6Ee-lntgJ_JlK2w" name="minPacketReceptionRate" visibility="private" type="_oex0AKk6Ee-lntgJ_JlK2w">
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_oglx4qk6Ee-lntgJ_JlK2w" value="0.0"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_ogmY8Kk6Ee-lntgJ_JlK2w" name="numFaults" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_ogmY8ak6Ee-lntgJ_JlK2w" value="0"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_ogmY86k6Ee-lntgJ_JlK2w" name="constructorIndicator" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oiP-yak6Ee-lntgJ_JlK2w" name="ReliabilityAnalysis" specification="_oe6W4Kk6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_oiP-yqk6Ee-lntgJ_JlK2w" name="e2e" type="_oex0AKk6Ee-lntgJ_JlK2w"/>
                <ownedParameter xmi:id="_oiP-y6k6Ee-lntgJ_JlK2w" name="minPacketReceptionRate" type="_oex0AKk6Ee-lntgJ_JlK2w"/>
                <ownedParameter xmi:id="_oiP-zKk6Ee-lntgJ_JlK2w" type="_n22RUKk6Ee-lntgJ_JlK2w" direction="return"/>
                <language>java</language>
                <body>this.e2e = e2e;&#xD;
 this.minPacketReceptionRate = minPacketReceptionRate;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oiQl0Kk6Ee-lntgJ_JlK2w" name="ReliabilityAnalysis" specification="_n23fcKk6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_oiQl0ak6Ee-lntgJ_JlK2w" name="numFaults">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_oiQl0qk6Ee-lntgJ_JlK2w" type="_n22RUKk6Ee-lntgJ_JlK2w" direction="return"/>
                <language>java</language>
                <body>this.e2e = 0.99;&#xD;
 this.minPacketReceptionRate = 0.9;&#xD;
 this.numFaults = numFaults;&#xD;
 this.constructorIndicator = true;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oiQl06k6Ee-lntgJ_JlK2w" name="ReliabilityAnalysis" specification="_ocfVAKk6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_oiQl1Kk6Ee-lntgJ_JlK2w" name="program" type="_n2BK4Kk6Ee-lntgJ_JlK2w"/>
                <ownedParameter xmi:id="_oiQl1ak6Ee-lntgJ_JlK2w" type="_n22RUKk6Ee-lntgJ_JlK2w" direction="return"/>
                <language>java</language>
                <body>// TODO Auto-generated constructor stub&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oiQl1qk6Ee-lntgJ_JlK2w" name="numTxPerLinkAndTotalTxCost" specification="_ocf8FKk6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_oiQl16k6Ee-lntgJ_JlK2w" name="flow" type="_n0QQUKk6Ee-lntgJ_JlK2w"/>
                <ownedParameter xmi:id="_oiQl2Kk6Ee-lntgJ_JlK2w" type="_oawPoKk6Ee-lntgJ_JlK2w" direction="return"/>
                <language>java</language>
                <body>ArrayList&lt;Node> nodesInFlow = flow.nodes;&#xD;
 ArrayList&lt;Integer> numTxArrayList = new ArrayList&lt;>();&#xD;
 if (constructorIndicator) {&#xD;
   numTxArrayList = helperForConstructorNumFaults(nodesInFlow);&#xD;
 } else {&#xD;
   numTxArrayList = helperForConstructorE2EAndMPRR(nodesInFlow);&#xD;
 }&#xD;
 return numTxArrayList;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oiQl2ak6Ee-lntgJ_JlK2w" name="helperForConstructorE2EAndMPRR" specification="_oe7lAak6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_oiQl2qk6Ee-lntgJ_JlK2w" name="nodesInFlow" type="_oawPoKk6Ee-lntgJ_JlK2w"/>
                <ownedParameter xmi:id="_oiQl26k6Ee-lntgJ_JlK2w" type="_oawPoKk6Ee-lntgJ_JlK2w" direction="return"/>
                <language>java</language>
                <body>int nNodesInFlow = nodesInFlow.size(); &#xD;
 ArrayList&lt;Integer> txAttempts = new ArrayList&lt;>(Collections.nCopies(nNodesInFlow + 1, 0));&#xD;
 int nHops = nNodesInFlow - 1;&#xD;
 Double minLinkReliablityNeded = Math.max(e2e, Math.pow(e2e, (1.0 / (double) nHops))); &#xD;
 //create ReliabilityTable with a row for each time slot&#xD;
 ReliabilityTable reliabilityWindow = new ReliabilityTable();&#xD;
 ReliabilityRow currentRow = new ReliabilityRow(nNodesInFlow, 0.0);&#xD;
 currentRow.set(0, 1.0);&#xD;
 reliabilityWindow.add(currentRow);&#xD;
 Double e2eReliabilityState = currentRow.get(nNodesInFlow - 1);&#xD;
 int timeSlot = 0; //start time at 0&#xD;
 while (e2eReliabilityState &lt; e2e) {&#xD;
   //retrieve previous row and create new row for current time slot&#xD;
   ReliabilityRow prevRow = reliabilityWindow.get(timeSlot);&#xD;
   //loop through nodes to update reliabilities&#xD;
   for (int nodeIndex = 0; nodeIndex &lt; nHops; nodeIndex++) { &#xD;
     int srcNodeIndex = nodeIndex;&#xD;
     int snkNodeIndex = nodeIndex + 1;&#xD;
     double prevSrcState = prevRow.get(srcNodeIndex);&#xD;
     double prevSnkState = prevRow.get(snkNodeIndex);&#xD;
     double nextSnkState;&#xD;
     //if sink node hasn't reached min reliability and source has the packet&#xD;
     if (prevSnkState &lt; minLinkReliablityNeded &amp;&amp; prevSrcState > 0) {&#xD;
       nextSnkState = ((1.0 - minPacketReceptionRate) * prevSnkState) &#xD;
                             + (minPacketReceptionRate * prevSrcState);&#xD;
       txAttempts.set(nodeIndex, txAttempts.get(nodeIndex) + 1);&#xD;
     } else {&#xD;
       nextSnkState = prevSnkState;&#xD;
     }&#xD;
     //update current row with max reliability for each node&#xD;
     currentRow.set(nodeIndex, Math.max(currentRow.get(nodeIndex), prevSrcState));&#xD;
     currentRow.set(nodeIndex + 1, nextSnkState);&#xD;
   }&#xD;
   //update the E2E reliability state with last node's value&#xD;
   e2eReliabilityState = currentRow.get(nNodesInFlow - 1);&#xD;
   reliabilityWindow.add(currentRow);&#xD;
   timeSlot++;&#xD;
 }&#xD;
 //set total transmission cost as last element&#xD;
 txAttempts.set(nNodesInFlow, reliabilityWindow.size());&#xD;
 return txAttempts;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oiRM4Kk6Ee-lntgJ_JlK2w" name="helperForConstructorNumFaults" specification="_oe9aMKk6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_oiRM4ak6Ee-lntgJ_JlK2w" name="flowNodes" type="_oawPoKk6Ee-lntgJ_JlK2w"/>
                <ownedParameter xmi:id="_oiRM4qk6Ee-lntgJ_JlK2w" type="_oawPoKk6Ee-lntgJ_JlK2w" direction="return"/>
                <language>java</language>
                <body>ArrayList&lt;Integer> numTxArrayList = new ArrayList&lt;>();&#xD;
 for (int i = 0; i &lt; flowNodes.size(); i++) {&#xD;
   numTxArrayList.add(numFaults + 1);&#xD;
 }&#xD;
 int numEdgesInFlow = flowNodes.size() - 1;&#xD;
 int maxFaultsInFlow = numEdgesInFlow * numFaults;&#xD;
 numTxArrayList.add(numEdgesInFlow + maxFaultsInFlow);&#xD;
 return numTxArrayList;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oiRM46k6Ee-lntgJ_JlK2w" name="verifyReliabilities" specification="_n25Uoak6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_oiRM5Kk6Ee-lntgJ_JlK2w" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>// TODO Auto-generated method stub&#xD;
 return true;&#xD;
  </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_n23fcKk6Ee-lntgJ_JlK2w" name="ReliabilityAnalysis" method="_oiQl0Kk6Ee-lntgJ_JlK2w">
                <eAnnotations xmi:id="_n24Ggak6Ee-lntgJ_JlK2w" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_n24Ggqk6Ee-lntgJ_JlK2w" key="create"/>
                </eAnnotations>
                <ownedComment xmi:id="_ojAMsqk6Ee-lntgJ_JlK2w">
                  <body>Constructor initializing an object with default end-to-end reliability target,&#xD;
   * default minimum packet reception rate, and a specified number of faults.&#xD;
   *&#xD;
   * @param numFaults number of faults tolerated per edge</body>
                </ownedComment>
                <ownedParameter xmi:id="_n24GgKk6Ee-lntgJ_JlK2w" name="numFaults">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_n24Gg6k6Ee-lntgJ_JlK2w" type="_n22RUKk6Ee-lntgJ_JlK2w" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_n25UoKk6Ee-lntgJ_JlK2w" name="getReliabilities">
                <ownedParameter xmi:id="_ochxQKk6Ee-lntgJ_JlK2w" type="_n3ETwKk6Ee-lntgJ_JlK2w" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_n25Uoak6Ee-lntgJ_JlK2w" name="verifyReliabilities" method="_oiRM46k6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_n257sKk6Ee-lntgJ_JlK2w" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_ocfVAKk6Ee-lntgJ_JlK2w" name="ReliabilityAnalysis" method="_oiQl06k6Ee-lntgJ_JlK2w">
                <eAnnotations xmi:id="_ocf8Eak6Ee-lntgJ_JlK2w" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_ocf8Eqk6Ee-lntgJ_JlK2w" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_ocf8EKk6Ee-lntgJ_JlK2w" name="program" type="_n2BK4Kk6Ee-lntgJ_JlK2w"/>
                <ownedParameter xmi:id="_ocf8E6k6Ee-lntgJ_JlK2w" type="_n22RUKk6Ee-lntgJ_JlK2w" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_ocf8FKk6Ee-lntgJ_JlK2w" name="numTxPerLinkAndTotalTxCost" method="_oiQl1qk6Ee-lntgJ_JlK2w">
                <ownedComment xmi:id="_ojAMs6k6Ee-lntgJ_JlK2w">
                  <body>Estimates the worst-case number of transmissions needed across a flow to meet&#xD;
   * the end-to-end reliability target.&#xD;
   *&#xD;
   * @param flow  given flow where transmission attempts are measured&#xD;
   * @return      ArrayList of transmission attempts for each node pair in flow</body>
                </ownedComment>
                <ownedParameter xmi:id="_ocgjIKk6Ee-lntgJ_JlK2w" name="flow" type="_n0QQUKk6Ee-lntgJ_JlK2w"/>
                <ownedParameter xmi:id="_oe7lAKk6Ee-lntgJ_JlK2w" type="_oawPoKk6Ee-lntgJ_JlK2w" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_oe6W4Kk6Ee-lntgJ_JlK2w" name="ReliabilityAnalysis" method="_oiP-yak6Ee-lntgJ_JlK2w">
                <eAnnotations xmi:id="_oe698ak6Ee-lntgJ_JlK2w" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_oe698qk6Ee-lntgJ_JlK2w" key="create"/>
                </eAnnotations>
                <ownedComment xmi:id="_ojAMsak6Ee-lntgJ_JlK2w">
                  <body>Constructor initializing an object with the specified end-to-end reliability &#xD;
   * target and the minimum packet reception rate.&#xD;
   *&#xD;
   * @param e2e                    end-to-end reliability target&#xD;
   * @param minPacketReceptionRate minimum packet reception rate</body>
                </ownedComment>
                <ownedParameter xmi:id="_oe6W4ak6Ee-lntgJ_JlK2w" name="e2e" type="_oex0AKk6Ee-lntgJ_JlK2w"/>
                <ownedParameter xmi:id="_oe698Kk6Ee-lntgJ_JlK2w" name="minPacketReceptionRate" type="_oex0AKk6Ee-lntgJ_JlK2w"/>
                <ownedParameter xmi:id="_oe6986k6Ee-lntgJ_JlK2w" type="_n22RUKk6Ee-lntgJ_JlK2w" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_oe7lAak6Ee-lntgJ_JlK2w" name="helperForConstructorE2EAndMPRR" method="_oiQl2ak6Ee-lntgJ_JlK2w">
                <ownedComment xmi:id="_ojAMtKk6Ee-lntgJ_JlK2w">
                  <body>Helper method for computing the transmission costs for each node and the total transmission&#xD;
   * cost in a given flow where transmission costs for each node are variable. MPRR represents&#xD;
   * the minimum packet reception rate.&#xD;
   *&#xD;
   * @param nodesInFlow ArrayList of nodes in the given flow&#xD;
   * @return            ArrayList of the transmission costs for each node and the given flow</body>
                </ownedComment>
                <ownedParameter xmi:id="_oe7lAqk6Ee-lntgJ_JlK2w" name="nodesInFlow" type="_oawPoKk6Ee-lntgJ_JlK2w"/>
                <ownedParameter xmi:id="_oe8MEak6Ee-lntgJ_JlK2w" type="_oawPoKk6Ee-lntgJ_JlK2w" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_oe9aMKk6Ee-lntgJ_JlK2w" name="helperForConstructorNumFaults" method="_oiRM4Kk6Ee-lntgJ_JlK2w">
                <ownedComment xmi:id="_ojAMtak6Ee-lntgJ_JlK2w">
                  <body>Helper method for computing the transmission costs for each node and the total transmission&#xD;
   * cost in a given flow where transmission costs for each node are fixed. &#xD;
   *&#xD;
   * @param flowNodes ArrayList of nodes in the given flow&#xD;
   * @return          ArrayList of the transmission costs for each node and the given flow</body>
                </ownedComment>
                <ownedParameter xmi:id="_oe9aMak6Ee-lntgJ_JlK2w" name="flowNodes" type="_oawPoKk6Ee-lntgJ_JlK2w"/>
                <ownedParameter xmi:id="_oe-BQKk6Ee-lntgJ_JlK2w" type="_oawPoKk6Ee-lntgJ_JlK2w" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Interface" xmi:id="_n29mEKk6Ee-lntgJ_JlK2w" name="ReliabilityParameters" visibility="package">
              <ownedComment xmi:id="_ojAMtqk6Ee-lntgJ_JlK2w">
                <body>@author sgoddard&#xD;
@version 1.8 Fall 2024&#xD;
 *</body>
              </ownedComment>
              <ownedAttribute xmi:id="_n2-0MKk6Ee-lntgJ_JlK2w" name="minPacketReceptionRate" type="_oex0AKk6Ee-lntgJ_JlK2w" isReadOnly="true"/>
              <ownedAttribute xmi:id="_n3ACUKk6Ee-lntgJ_JlK2w" name="e2e" type="_oex0AKk6Ee-lntgJ_JlK2w" isReadOnly="true"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_n3BQcKk6Ee-lntgJ_JlK2w" name="ReliabilityRow">
              <generalization xmi:id="_ocjmcKk6Ee-lntgJ_JlK2w" general="_n4eB8Kk6Ee-lntgJ_JlK2w"/>
              <ownedAttribute xmi:id="_ognAAKk6Ee-lntgJ_JlK2w" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_ognAAak6Ee-lntgJ_JlK2w" value="1L"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oiRM5ak6Ee-lntgJ_JlK2w" name="ReliabilityRow" specification="_n3B3gKk6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_oiRM5qk6Ee-lntgJ_JlK2w" type="_n3BQcKk6Ee-lntgJ_JlK2w" direction="return"/>
                <language>java</language>
                <body>super();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oiRz8Kk6Ee-lntgJ_JlK2w" name="ReliabilityRow" specification="_oe_PYKk6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_oiRz8ak6Ee-lntgJ_JlK2w" name="numColumns">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_oiRz8qk6Ee-lntgJ_JlK2w" name="element" type="_oex0AKk6Ee-lntgJ_JlK2w"/>
                <ownedParameter xmi:id="_oiRz86k6Ee-lntgJ_JlK2w" type="_n3BQcKk6Ee-lntgJ_JlK2w" direction="return"/>
                <language>java</language>
                <body>super(numColumns, element);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oiRz9Kk6Ee-lntgJ_JlK2w" name="ReliabilityRow" specification="_oe_2cKk6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_oiRz9ak6Ee-lntgJ_JlK2w" name="rowArray" type="_oex0AKk6Ee-lntgJ_JlK2w">
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oiRz9qk6Ee-lntgJ_JlK2w" value="*"/>
                </ownedParameter>
                <ownedParameter xmi:id="_oiRz96k6Ee-lntgJ_JlK2w" type="_n3BQcKk6Ee-lntgJ_JlK2w" direction="return"/>
                <language>java</language>
                <body>super(rowArray);&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_n3B3gKk6Ee-lntgJ_JlK2w" name="ReliabilityRow" method="_oiRM5ak6Ee-lntgJ_JlK2w">
                <eAnnotations xmi:id="_n3B3gak6Ee-lntgJ_JlK2w" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_n3B3gqk6Ee-lntgJ_JlK2w" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_n3B3g6k6Ee-lntgJ_JlK2w" type="_n3BQcKk6Ee-lntgJ_JlK2w" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_oe_PYKk6Ee-lntgJ_JlK2w" name="ReliabilityRow" visibility="package" method="_oiRz8Kk6Ee-lntgJ_JlK2w">
                <eAnnotations xmi:id="_oe_PY6k6Ee-lntgJ_JlK2w" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_oe_PZKk6Ee-lntgJ_JlK2w" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_oe_PYak6Ee-lntgJ_JlK2w" name="numColumns">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_oe_PYqk6Ee-lntgJ_JlK2w" name="element" type="_oex0AKk6Ee-lntgJ_JlK2w"/>
                <ownedParameter xmi:id="_oe_PZak6Ee-lntgJ_JlK2w" type="_n3BQcKk6Ee-lntgJ_JlK2w" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_oe_2cKk6Ee-lntgJ_JlK2w" name="ReliabilityRow" visibility="package" method="_oiRz9Kk6Ee-lntgJ_JlK2w">
                <eAnnotations xmi:id="_oe_2cqk6Ee-lntgJ_JlK2w" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_oe_2c6k6Ee-lntgJ_JlK2w" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_oe_2cak6Ee-lntgJ_JlK2w" name="rowArray" type="_oex0AKk6Ee-lntgJ_JlK2w">
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oe_2dak6Ee-lntgJ_JlK2w" value="*"/>
                </ownedParameter>
                <ownedParameter xmi:id="_oe_2dKk6Ee-lntgJ_JlK2w" type="_n3BQcKk6Ee-lntgJ_JlK2w" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_n3ETwKk6Ee-lntgJ_JlK2w" name="ReliabilityTable">
              <generalization xmi:id="_oclboKk6Ee-lntgJ_JlK2w" general="_n5_E4Kk6Ee-lntgJ_JlK2w"/>
              <ownedAttribute xmi:id="_ognAAqk6Ee-lntgJ_JlK2w" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_ognnEKk6Ee-lntgJ_JlK2w" value="1L"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oiRz-Kk6Ee-lntgJ_JlK2w" name="ReliabilityTable" specification="_n3E60Kk6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_oiRz-ak6Ee-lntgJ_JlK2w" type="_n3ETwKk6Ee-lntgJ_JlK2w" direction="return"/>
                <language>java</language>
                <body>super();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oiSbAKk6Ee-lntgJ_JlK2w" name="ReliabilityTable" specification="_n3GI8Kk6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_oiSbAak6Ee-lntgJ_JlK2w" name="row">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_oiSbAqk6Ee-lntgJ_JlK2w" name="column">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_oiSbA6k6Ee-lntgJ_JlK2w" type="_n3ETwKk6Ee-lntgJ_JlK2w" direction="return"/>
                <language>java</language>
                <body>super();&#xD;
		for(int i=0; i &lt; row; i++) {&#xD;
			ReliabilityRow emptyRow = new ReliabilityRow();&#xD;
			for(int j=0; j &lt; column; j++) {&#xD;
				emptyRow.add(0.0);&#xD;
			}&#xD;
			this.add(emptyRow);&#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_n3E60Kk6Ee-lntgJ_JlK2w" name="ReliabilityTable" method="_oiRz-Kk6Ee-lntgJ_JlK2w">
                <eAnnotations xmi:id="_n3Fh4Kk6Ee-lntgJ_JlK2w" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_n3Fh4ak6Ee-lntgJ_JlK2w" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_n3Fh4qk6Ee-lntgJ_JlK2w" type="_n3ETwKk6Ee-lntgJ_JlK2w" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_n3GI8Kk6Ee-lntgJ_JlK2w" name="ReliabilityTable" visibility="package" method="_oiSbAKk6Ee-lntgJ_JlK2w">
                <eAnnotations xmi:id="_n3GI86k6Ee-lntgJ_JlK2w" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_n3GwAKk6Ee-lntgJ_JlK2w" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_n3GI8ak6Ee-lntgJ_JlK2w" name="row">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_n3GI8qk6Ee-lntgJ_JlK2w" name="column">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_n3GwAak6Ee-lntgJ_JlK2w" type="_n3ETwKk6Ee-lntgJ_JlK2w" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_n4IqwKk6Ee-lntgJ_JlK2w" name="ReliabilityVisualization">
              <ownedComment xmi:id="_ojAMt6k6Ee-lntgJ_JlK2w">
                <body>ReliabilityVisualization creates the visualizations for&#xD;
the reliability analysis of the WARP program. &lt;p>&#xD;
&#xD;
CS2820 Fall 2024 Project: Implement this class to create&#xD;
the visualizations that are requested in Warp. Your solution&#xD;
should support both the file and Java Swing Window (gui) visualizations.&#xD;
 *&#xD;
I recommend using class ProgramVisualization as an example of how to implement&#xD;
this class. Your solution will likely be similar to the code in ProgramVisualization.&#xD;
&#xD;
@author sgoddard&#xD;
@version 1.8 Fall 2024&#xD;
 *</body>
              </ownedComment>
              <generalization xmi:id="_ocmpw6k6Ee-lntgJ_JlK2w" general="_n6jsoKk6Ee-lntgJ_JlK2w"/>
              <ownedAttribute xmi:id="_ognnEak6Ee-lntgJ_JlK2w" name="SOURCE_SUFFIX" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_ognnEqk6Ee-lntgJ_JlK2w" value="&quot;.ra&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_ognnE6k6Ee-lntgJ_JlK2w" name="OBJECT_NAME" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_ognnFKk6Ee-lntgJ_JlK2w" value="&quot;Reliability Analysis&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_ogoOIKk6Ee-lntgJ_JlK2w" name="warp" visibility="private" type="_n7T6kKk6Ee-lntgJ_JlK2w" association="_okOUsak6Ee-lntgJ_JlK2w"/>
              <ownedAttribute xmi:id="_ogoOIqk6Ee-lntgJ_JlK2w" name="ra" visibility="private" type="_n22RUKk6Ee-lntgJ_JlK2w" association="_okO7wak6Ee-lntgJ_JlK2w"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oiSbBKk6Ee-lntgJ_JlK2w" name="ReliabilityVisualization" specification="_ocmCsak6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_oiSbBak6Ee-lntgJ_JlK2w" name="warp" type="_n7T6kKk6Ee-lntgJ_JlK2w"/>
                <ownedParameter xmi:id="_oiSbBqk6Ee-lntgJ_JlK2w" type="_n4IqwKk6Ee-lntgJ_JlK2w" direction="return"/>
                <language>java</language>
                <body>super(new FileManager(), warp, SOURCE_SUFFIX);&#xD;
	  this.warp = warp;&#xD;
	  this.ra = warp.toReliabilityAnalysis();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oiSbB6k6Ee-lntgJ_JlK2w" name="createTitle" specification="_n4M8MKk6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_oiSbCKk6Ee-lntgJ_JlK2w" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return String.format(OBJECT_NAME + &quot; for graph %s\n&quot;, warp.getName());&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oiSbCak6Ee-lntgJ_JlK2w" name="createHeader" specification="_n4OKUKk6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_oiSbCqk6Ee-lntgJ_JlK2w" type="_nzwhEKk6Ee-lntgJ_JlK2w" direction="return"/>
                <language>java</language>
                <body>Description header = new Description();&#xD;
&#xD;
	  header.add(createTitle());&#xD;
	  header.add(String.format(&quot;Scheduler Name: %s\n&quot;, warp.getSchedulerName()));&#xD;
&#xD;
	  /* The following parameters are output based on a special schedule or the fault model */&#xD;
	  if (warp.getNumFaults() > 0) { // only specify when deterministic fault model is assumed&#xD;
	    header.add(String.format(&quot;numFaults: %d\n&quot;, warp.getNumFaults()));&#xD;
	  }&#xD;
	  header.add(String.format(&quot;M: %s\n&quot;, String.valueOf(warp.getMinPacketReceptionRate())));&#xD;
	  header.add(String.format(&quot;E2E: %s\n&quot;, String.valueOf(warp.getE2e())));&#xD;
	  header.add(String.format(&quot;nChannels: %d\n&quot;, warp.getNumChannels()));&#xD;
	  return header;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oiTCEKk6Ee-lntgJ_JlK2w" name="createFooter" specification="_n4PYcKk6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_oiTCEak6Ee-lntgJ_JlK2w" type="_nzwhEKk6Ee-lntgJ_JlK2w" direction="return"/>
                <language>java</language>
                <body>Description footer = new Description();&#xD;
	  String deadlineMsg = null;&#xD;
&#xD;
	  if (warp.deadlinesMet()) {&#xD;
	    deadlineMsg = &quot;All flows meet their deadlines\n&quot;;&#xD;
	  } else {&#xD;
	    deadlineMsg = &quot;WARNING: NOT all flows meet their deadlines. See deadline analysis report.\n&quot;;&#xD;
	  }&#xD;
	  footer.add(String.format(&quot;// %s&quot;, deadlineMsg));&#xD;
	  return footer;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oiTCEqk6Ee-lntgJ_JlK2w" name="createColumnHeader" specification="_n4P_g6k6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_oiTCE6k6Ee-lntgJ_JlK2w" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oiTCFKk6Ee-lntgJ_JlK2w" value="*"/>
                </ownedParameter>
                <language>java</language>
                <body>String[] orderedNodes = warp.toWorkload().getNodeNamesOrderedAlphabetically();&#xD;
	  String[] columnNames = new String[orderedNodes.length + 1];&#xD;
	  columnNames[0] = &quot;Time Slot&quot;; // add the Time Slot column header first&#xD;
	  /* loop through the node names, adding each to the header */&#xD;
	  for (int i = 0; i &lt; orderedNodes.length; i++) {&#xD;
	    columnNames[i + 1] = orderedNodes[i];&#xD;
   }&#xD;
   return columnNames;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oiTCFak6Ee-lntgJ_JlK2w" name="createVisualizationData" specification="_n4Sbwqk6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_oiTCFqk6Ee-lntgJ_JlK2w" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oiTCF6k6Ee-lntgJ_JlK2w" value="*"/>
                </ownedParameter>
                <language>java</language>
                <body>if (visualizationData == null) {&#xD;
	    int numRows = ra.getReliabilities().getNumRows();&#xD;
	    int numColumns = ra.getReliabilities().getNumColumns();&#xD;
	    visualizationData = new String[numRows][numColumns + 1];&#xD;
&#xD;
	    for (int row = 0; row &lt; numRows; row++) {&#xD;
	      visualizationData[row][0] = String.format(&quot;%s&quot;, row);&#xD;
	      for (int column = 0; column &lt; numColumns; column++) {&#xD;
	        visualizationData[row][column + 1] = ra.getReliabilities().get(row, column).toString();&#xD;
	      }&#xD;
	    }&#xD;
	  }&#xD;
	  return visualizationData;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oiTCGKk6Ee-lntgJ_JlK2w" name="displayVisualization" specification="_n4UQ8Kk6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_oiTCGak6Ee-lntgJ_JlK2w" type="_n01fIKk6Ee-lntgJ_JlK2w" direction="return"/>
                <language>java</language>
                <body>return new GuiVisualization(createTitle(), createColumnHeader(), createVisualizationData());&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_n4M8MKk6Ee-lntgJ_JlK2w" name="createTitle" visibility="private" method="_oiSbB6k6Ee-lntgJ_JlK2w">
                <ownedComment xmi:id="_ojAMuak6Ee-lntgJ_JlK2w">
                  <body>Creates a string title for the current WARP reliability visualization.&#xD;
	 *&#xD;
	 * @return string title of current visualization</body>
                </ownedComment>
                <ownedParameter xmi:id="_n4NjQKk6Ee-lntgJ_JlK2w" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_n4OKUKk6Ee-lntgJ_JlK2w" name="createHeader" visibility="protected" method="_oiSbCak6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_ocmpwKk6Ee-lntgJ_JlK2w" type="_nzwhEKk6Ee-lntgJ_JlK2w" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_n4PYcKk6Ee-lntgJ_JlK2w" name="createFooter" visibility="protected" method="_oiTCEKk6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_ocmpwak6Ee-lntgJ_JlK2w" type="_nzwhEKk6Ee-lntgJ_JlK2w" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_n4P_g6k6Ee-lntgJ_JlK2w" name="createColumnHeader" visibility="protected" method="_oiTCEqk6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_n4QmkKk6Ee-lntgJ_JlK2w" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_n4RNoKk6Ee-lntgJ_JlK2w" value="*"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_n4Sbwqk6Ee-lntgJ_JlK2w" name="createVisualizationData" visibility="protected" method="_oiTCFak6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_n4TC0Kk6Ee-lntgJ_JlK2w" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_n4TC0ak6Ee-lntgJ_JlK2w" value="*"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_n4UQ8Kk6Ee-lntgJ_JlK2w" name="displayVisualization" method="_oiTCGKk6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_ocmpwqk6Ee-lntgJ_JlK2w" type="_n01fIKk6Ee-lntgJ_JlK2w" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_ocmCsak6Ee-lntgJ_JlK2w" name="ReliabilityVisualization" visibility="package" method="_oiSbBKk6Ee-lntgJ_JlK2w">
                <eAnnotations xmi:id="_ocmCs6k6Ee-lntgJ_JlK2w" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_ocmCtKk6Ee-lntgJ_JlK2w" key="create"/>
                </eAnnotations>
                <ownedComment xmi:id="_ojAMuKk6Ee-lntgJ_JlK2w">
                  <body>Constructor used to initialize the ReliabilityVisualization object &#xD;
	 * using a FileManager object, the WARP interface, and the suffix&#xD;
	 * denoting a ReliabilityAnalysis object. The ReliabilityAnalysis&#xD;
	 * object is initialized by converting the WARP interface into a &#xD;
	 * ReliabilityAnalysis object.&#xD;
	 * &#xD;
	 * @param warp the given WARP interface</body>
                </ownedComment>
                <ownedParameter xmi:id="_ocmCsqk6Ee-lntgJ_JlK2w" name="warp" type="_n7T6kKk6Ee-lntgJ_JlK2w"/>
                <ownedParameter xmi:id="_ocmCtak6Ee-lntgJ_JlK2w" type="_n4IqwKk6Ee-lntgJ_JlK2w" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_n4ZJcKk6Ee-lntgJ_JlK2w" name="ReportVisualization">
              <generalization xmi:id="_ocnQ2qk6Ee-lntgJ_JlK2w" general="_n6jsoKk6Ee-lntgJ_JlK2w"/>
              <ownedAttribute xmi:id="_ogo1MKk6Ee-lntgJ_JlK2w" name="SUFFIX" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_ogo1Mak6Ee-lntgJ_JlK2w" value="&quot;.txt&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_ogo1Mqk6Ee-lntgJ_JlK2w" name="content" visibility="private" type="_nzwhEKk6Ee-lntgJ_JlK2w" association="_okO7xKk6Ee-lntgJ_JlK2w"/>
              <ownedAttribute xmi:id="_ogpcQak6Ee-lntgJ_JlK2w" name="title" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oiTpIKk6Ee-lntgJ_JlK2w" name="ReportVisualization" specification="_ocnQ0Kk6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_oiTpIak6Ee-lntgJ_JlK2w" name="fm" type="_n0HGYKk6Ee-lntgJ_JlK2w"/>
                <ownedParameter xmi:id="_oiTpIqk6Ee-lntgJ_JlK2w" name="warp" type="_n5sJ8Kk6Ee-lntgJ_JlK2w"/>
                <ownedParameter xmi:id="_oiTpI6k6Ee-lntgJ_JlK2w" name="content" type="_nzwhEKk6Ee-lntgJ_JlK2w"/>
                <ownedParameter xmi:id="_oiTpJKk6Ee-lntgJ_JlK2w" name="title">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_oiTpJak6Ee-lntgJ_JlK2w" type="_n4ZJcKk6Ee-lntgJ_JlK2w" direction="return"/>
                <language>java</language>
                <body>super(fm, warp, new String(title + &quot;Report&quot;), SUFFIX);&#xD;
		this.content = content;&#xD;
		this.title = title;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oiTpJqk6Ee-lntgJ_JlK2w" name="visualization" specification="_n4aXkKk6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_oiTpJ6k6Ee-lntgJ_JlK2w" type="_nzwhEKk6Ee-lntgJ_JlK2w" direction="return"/>
                <language>java</language>
                <body>return createReport();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oiTpKKk6Ee-lntgJ_JlK2w" name="createReport" specification="_n4a-oqk6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_oiTpKak6Ee-lntgJ_JlK2w" type="_nzwhEKk6Ee-lntgJ_JlK2w" direction="return"/>
                <language>java</language>
                <body>Description report;&#xD;
		if (content.size() > 0) {&#xD;
			report = new Description(new String (title + &quot; Report&quot;));&#xD;
			report.addAll(content);&#xD;
		} else {&#xD;
			report = new Description(new String (&quot;No &quot; + title + &quot; to report&quot;));&#xD;
		}&#xD;
		return report;&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_n4aXkKk6Ee-lntgJ_JlK2w" name="visualization" method="_oiTpJqk6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_ocnQ2Kk6Ee-lntgJ_JlK2w" type="_nzwhEKk6Ee-lntgJ_JlK2w" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_n4a-oqk6Ee-lntgJ_JlK2w" name="createReport" visibility="private" method="_oiTpKKk6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_ocnQ2ak6Ee-lntgJ_JlK2w" type="_nzwhEKk6Ee-lntgJ_JlK2w" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_ocnQ0Kk6Ee-lntgJ_JlK2w" name="ReportVisualization" visibility="package" method="_oiTpIKk6Ee-lntgJ_JlK2w">
                <eAnnotations xmi:id="_ocnQ1ak6Ee-lntgJ_JlK2w" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_ocnQ1qk6Ee-lntgJ_JlK2w" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_ocnQ0ak6Ee-lntgJ_JlK2w" name="fm" type="_n0HGYKk6Ee-lntgJ_JlK2w"/>
                <ownedParameter xmi:id="_ocnQ0qk6Ee-lntgJ_JlK2w" name="warp" type="_n5sJ8Kk6Ee-lntgJ_JlK2w"/>
                <ownedParameter xmi:id="_ocnQ06k6Ee-lntgJ_JlK2w" name="content" type="_nzwhEKk6Ee-lntgJ_JlK2w"/>
                <ownedParameter xmi:id="_ocnQ1Kk6Ee-lntgJ_JlK2w" name="title">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ocnQ16k6Ee-lntgJ_JlK2w" type="_n4ZJcKk6Ee-lntgJ_JlK2w" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_n4eB8Kk6Ee-lntgJ_JlK2w" name="Row">
              <generalization xmi:id="_ofCSsak6Ee-lntgJ_JlK2w" general="_oawPoKk6Ee-lntgJ_JlK2w"/>
              <ownedAttribute xmi:id="_ogqDUKk6Ee-lntgJ_JlK2w" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_ogqDUak6Ee-lntgJ_JlK2w" value="1L"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oiUQMKk6Ee-lntgJ_JlK2w" name="Row" specification="_n4geMKk6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_oiUQMak6Ee-lntgJ_JlK2w" type="_n4eB8Kk6Ee-lntgJ_JlK2w" direction="return"/>
                <language>java</language>
                <body>super();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oiUQMqk6Ee-lntgJ_JlK2w" name="Row" specification="_ofBEkKk6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_oiUQM6k6Ee-lntgJ_JlK2w" name="numElements">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_oiUQNKk6Ee-lntgJ_JlK2w" name="element" type="_oeQPkak6Ee-lntgJ_JlK2w"/>
                <ownedParameter xmi:id="_oiUQNak6Ee-lntgJ_JlK2w" type="_n4eB8Kk6Ee-lntgJ_JlK2w" direction="return"/>
                <language>java</language>
                <body>super();&#xD;
		for (int i=0; i &lt; numElements; i++) {  &#xD;
			this.add(element); // create the the row initialized with element&#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oiUQNqk6Ee-lntgJ_JlK2w" name="Row" specification="_ofBroKk6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_oiUQN6k6Ee-lntgJ_JlK2w" name="rowArray" type="_oeQPkak6Ee-lntgJ_JlK2w">
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oiUQOKk6Ee-lntgJ_JlK2w" value="*"/>
                </ownedParameter>
                <ownedParameter xmi:id="_oiUQOak6Ee-lntgJ_JlK2w" type="_n4eB8Kk6Ee-lntgJ_JlK2w" direction="return"/>
                <language>java</language>
                <body>super();&#xD;
		for (int i=0; i &lt; rowArray.length; i++) {  &#xD;
			this.add(rowArray[i]); // create the the row initialized with rowArray&#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oiU3QKk6Ee-lntgJ_JlK2w" name="Row" specification="_n4hFQKk6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_oiU3Qak6Ee-lntgJ_JlK2w" name="numElements">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_oiU3Qqk6Ee-lntgJ_JlK2w" type="_n4eB8Kk6Ee-lntgJ_JlK2w" direction="return"/>
                <language>java</language>
                <body>super(numElements);&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_n4geMKk6Ee-lntgJ_JlK2w" name="Row" method="_oiUQMKk6Ee-lntgJ_JlK2w">
                <eAnnotations xmi:id="_n4geMak6Ee-lntgJ_JlK2w" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_n4geMqk6Ee-lntgJ_JlK2w" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_n4geM6k6Ee-lntgJ_JlK2w" type="_n4eB8Kk6Ee-lntgJ_JlK2w" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_n4hFQKk6Ee-lntgJ_JlK2w" name="Row" visibility="package" method="_oiU3QKk6Ee-lntgJ_JlK2w">
                <eAnnotations xmi:id="_n4hsUKk6Ee-lntgJ_JlK2w" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_n4hsUak6Ee-lntgJ_JlK2w" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_n4hFQak6Ee-lntgJ_JlK2w" name="numElements">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_n4hsUqk6Ee-lntgJ_JlK2w" type="_n4eB8Kk6Ee-lntgJ_JlK2w" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_ofBEkKk6Ee-lntgJ_JlK2w" name="Row" visibility="package" method="_oiUQMqk6Ee-lntgJ_JlK2w">
                <eAnnotations xmi:id="_ofBEk6k6Ee-lntgJ_JlK2w" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_ofBElKk6Ee-lntgJ_JlK2w" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_ofBEkak6Ee-lntgJ_JlK2w" name="numElements">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ofBEkqk6Ee-lntgJ_JlK2w" name="element" type="_oeQPkak6Ee-lntgJ_JlK2w"/>
                <ownedParameter xmi:id="_ofBElak6Ee-lntgJ_JlK2w" type="_n4eB8Kk6Ee-lntgJ_JlK2w" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_ofBroKk6Ee-lntgJ_JlK2w" name="Row" visibility="package" method="_oiUQNqk6Ee-lntgJ_JlK2w">
                <eAnnotations xmi:id="_ofBroqk6Ee-lntgJ_JlK2w" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_ofBro6k6Ee-lntgJ_JlK2w" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_ofBroak6Ee-lntgJ_JlK2w" name="rowArray" type="_oeQPkak6Ee-lntgJ_JlK2w">
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ofCSsKk6Ee-lntgJ_JlK2w" value="*"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ofBrpKk6Ee-lntgJ_JlK2w" type="_n4eB8Kk6Ee-lntgJ_JlK2w" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_n4iTYKk6Ee-lntgJ_JlK2w" name="SchedulableObject" isAbstract="true">
              <ownedAttribute xmi:id="_ogqDUqk6Ee-lntgJ_JlK2w" name="DEFAULT" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_ogqqYKk6Ee-lntgJ_JlK2w" value="0"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_ogqqYak6Ee-lntgJ_JlK2w" name="DEFAULT_PERIOD" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_ogqqYqk6Ee-lntgJ_JlK2w" value="100"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_ogqqY6k6Ee-lntgJ_JlK2w" name="DEFAULT_DEADLINE" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_ogqqZKk6Ee-lntgJ_JlK2w" value="100"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_ogqqZak6Ee-lntgJ_JlK2w" name="UNKNOWN" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_ogrRcKk6Ee-lntgJ_JlK2w" value="&quot;unknown&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_ogrRcak6Ee-lntgJ_JlK2w" name="BEFORE_START" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_ogrRcqk6Ee-lntgJ_JlK2w" value="-1"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_ogrRc6k6Ee-lntgJ_JlK2w" name="name" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_ogr4gKk6Ee-lntgJ_JlK2w" name="priority">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_ogr4gak6Ee-lntgJ_JlK2w" name="period" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_ogr4gqk6Ee-lntgJ_JlK2w" name="deadline">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_ogr4g6k6Ee-lntgJ_JlK2w" name="phase" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_ogr4hak6Ee-lntgJ_JlK2w" name="releaseTime" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_ogsfkak6Ee-lntgJ_JlK2w" name="startTime" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_ogsfk6k6Ee-lntgJ_JlK2w" name="endTime" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_ogsflKk6Ee-lntgJ_JlK2w" name="lastUpdateTime">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_ogsflak6Ee-lntgJ_JlK2w" value="BEFORE_START"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_ogsflqk6Ee-lntgJ_JlK2w" name="predecessor" type="_n4iTYKk6Ee-lntgJ_JlK2w" association="_ojAMuqk6Ee-lntgJ_JlK2w"/>
              <ownedAttribute xmi:id="_ogtGoKk6Ee-lntgJ_JlK2w" name="endTimes" visibility="private" type="_n2zOAKk6Ee-lntgJ_JlK2w" association="_okPi0ak6Ee-lntgJ_JlK2w"/>
              <ownedAttribute xmi:id="_ogtGo6k6Ee-lntgJ_JlK2w" name="subObjects" type="_ocpGAKk6Ee-lntgJ_JlK2w" isReadOnly="true" association="_okQJ4ak6Ee-lntgJ_JlK2w"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oiU3Q6k6Ee-lntgJ_JlK2w" name="SchedulableObject" specification="_n4kvoKk6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_oiU3RKk6Ee-lntgJ_JlK2w" type="_n4iTYKk6Ee-lntgJ_JlK2w" direction="return"/>
                <language>java</language>
                <body>setDefaultParameters();&#xD;
		setNextReleaseTime(0); // initialize parameters&#xD;
		this.lastUpdateTime = -1; // reset lastUpdate &#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oiU3Rak6Ee-lntgJ_JlK2w" name="SchedulableObject" specification="_ocqUIKk6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_oiU3Rqk6Ee-lntgJ_JlK2w" name="obj" type="_n4iTYKk6Ee-lntgJ_JlK2w"/>
                <ownedParameter xmi:id="_oiU3R6k6Ee-lntgJ_JlK2w" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_oiU3SKk6Ee-lntgJ_JlK2w" type="_n4iTYKk6Ee-lntgJ_JlK2w" direction="return"/>
                <language>java</language>
                <body>this.name = obj.getName();&#xD;
		this.priority = obj.getPriority();&#xD;
		this.period = obj.getPeriod();&#xD;
		this.deadline = obj.getDeadline();&#xD;
		this.phase = obj.getPhase();&#xD;
		this.startTime = obj.getStartTime();&#xD;
		this.endTime = obj.getEndTime();&#xD;
		this.releaseTime = obj.getReleaseTime(); // initialize parameters&#xD;
		this.lastUpdateTime = time; // reset lastUpdate &#xD;
		this.predecessor = obj.getPredecessor();&#xD;
		this.endTimes = new PriorityQueue&lt;Integer>(); &#xD;
		this.endTimes.addAll(obj.getAllEndTimes());&#xD;
		this.subObjects = new LinkedList&lt;SchedulableObject>();&#xD;
		this.subObjects.addAll(obj.getSubObjects());&#xD;
		&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oiVeUKk6Ee-lntgJ_JlK2w" name="SchedulableObject" specification="_n4lWsKk6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_oiVeUak6Ee-lntgJ_JlK2w" name="priority">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_oiVeUqk6Ee-lntgJ_JlK2w" name="period">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_oiVeU6k6Ee-lntgJ_JlK2w" name="deadline">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_oiVeVKk6Ee-lntgJ_JlK2w" name="phase">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_oiVeVak6Ee-lntgJ_JlK2w" type="_n4iTYKk6Ee-lntgJ_JlK2w" direction="return"/>
                <language>java</language>
                <body>setDefaultParameters();&#xD;
		this.priority = priority;&#xD;
		this.period = period;&#xD;
		this.deadline = deadline;&#xD;
		this.phase = phase;&#xD;
		setNextReleaseTime(0); // initialize parameters&#xD;
		this.lastUpdateTime = BEFORE_START; // reset lastUpdate &#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oiVeVqk6Ee-lntgJ_JlK2w" name="SchedulableObject" specification="_n4mk0Kk6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_oiVeV6k6Ee-lntgJ_JlK2w" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_oiVeWKk6Ee-lntgJ_JlK2w" name="priority">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_oiVeWak6Ee-lntgJ_JlK2w" name="period">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_oiVeWqk6Ee-lntgJ_JlK2w" name="deadline">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_oiVeW6k6Ee-lntgJ_JlK2w" name="phase">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_oiVeXKk6Ee-lntgJ_JlK2w" type="_n4iTYKk6Ee-lntgJ_JlK2w" direction="return"/>
                <language>java</language>
                <body>setDefaultParameters();&#xD;
		this.name = name;&#xD;
		this.priority = priority;&#xD;
		this.period = period;&#xD;
		this.deadline = deadline;&#xD;
		this.phase = phase;&#xD;
		setNextReleaseTime(0); // initialize parameters&#xD;
		this.lastUpdateTime = BEFORE_START; // reset lastUpdate &#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oiVeXak6Ee-lntgJ_JlK2w" name="setDefaultParameters" specification="_n4oaAKk6Ee-lntgJ_JlK2w">
                <language>java</language>
                <body>this.name = UNKNOWN;&#xD;
		this.priority = DEFAULT;&#xD;
		this.period = DEFAULT_PERIOD;&#xD;
		this.deadline = DEFAULT_DEADLINE;&#xD;
		this.phase = DEFAULT;&#xD;
		this.startTime = BEFORE_START;&#xD;
		this.endTime = BEFORE_START;&#xD;
		this.predecessor = null; &#xD;
		this.endTimes = new PriorityQueue&lt;Integer>(); &#xD;
		this.subObjects = new LinkedList&lt;SchedulableObject>();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oiVeXqk6Ee-lntgJ_JlK2w" name="getAllEndTimes" specification="_n4oaAak6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_oiVeX6k6Ee-lntgJ_JlK2w" type="_n2zOAKk6Ee-lntgJ_JlK2w" direction="return"/>
                <language>java</language>
                <body>return endTimes;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oiWFYKk6Ee-lntgJ_JlK2w" name="addToEndTimes" specification="_n4srcKk6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_oiWFYak6Ee-lntgJ_JlK2w" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>/* Add the endTime to the endTimes Q&#xD;
		 * so that we can track predecessor endTimes&#xD;
		 * and make sure successors don't start before &#xD;
		 * predecessors&#xD;
		 */&#xD;
		endTimes.add(time);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oiWFYqk6Ee-lntgJ_JlK2w" name="peekEndTimes" specification="_n4srcqk6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_oiWFY6k6Ee-lntgJ_JlK2w" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>return endTimes.peek();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oiWFZKk6Ee-lntgJ_JlK2w" name="pollEndTimes" specification="_n4tSgak6Ee-lntgJ_JlK2w">
                <language>java</language>
                <body>endTimes.poll();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oiWFZak6Ee-lntgJ_JlK2w" name="addSubObject" specification="_ocq7Mak6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_oiWFZqk6Ee-lntgJ_JlK2w" name="obj" type="_n4iTYKk6Ee-lntgJ_JlK2w"/>
                <language>java</language>
                <body>subObjects.add(obj);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oiWFZ6k6Ee-lntgJ_JlK2w" name="getName" specification="_n4tSgqk6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_oiWFaKk6Ee-lntgJ_JlK2w" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return name;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oiWFaak6Ee-lntgJ_JlK2w" name="setName" specification="_n4t5kak6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_oiWFaqk6Ee-lntgJ_JlK2w" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>this.name = name;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oiWscKk6Ee-lntgJ_JlK2w" name="getReleaseTime" specification="_n4t5k6k6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_oiWscak6Ee-lntgJ_JlK2w" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>return releaseTime;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oiWscqk6Ee-lntgJ_JlK2w" name="getPhase" specification="_n4ugoak6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_oiWsc6k6Ee-lntgJ_JlK2w" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>return phase;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oiWsdKk6Ee-lntgJ_JlK2w" name="getStartTime" specification="_n4ugo6k6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_oiWsdak6Ee-lntgJ_JlK2w" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>return startTime;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oiWsdqk6Ee-lntgJ_JlK2w" name="setEndTime" specification="_n4vuwKk6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_oiWsd6k6Ee-lntgJ_JlK2w" name="endTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>this.endTime = endTime;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oiWseKk6Ee-lntgJ_JlK2w" name="setStartTime" specification="_n4wV0Kk6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_oiWseak6Ee-lntgJ_JlK2w" name="startTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>this.startTime = startTime;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oiXTgKk6Ee-lntgJ_JlK2w" name="setReleaseTime" specification="_n4wV0qk6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_oiXTgak6Ee-lntgJ_JlK2w" name="releaseTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>this.releaseTime = releaseTime;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oiXTgqk6Ee-lntgJ_JlK2w" name="setPeriod" specification="_n4w84Kk6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_oiXTg6k6Ee-lntgJ_JlK2w" name="period">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>this.period = period;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oiXThKk6Ee-lntgJ_JlK2w" name="setPhase" specification="_n4w84qk6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_oiXThak6Ee-lntgJ_JlK2w" name="phase">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>this.phase = phase;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oiXThqk6Ee-lntgJ_JlK2w" name="setNextReleaseTime" specification="_n4w85Kk6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_oiXTh6k6Ee-lntgJ_JlK2w" name="currentTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>if (currentTime >= lastUpdateTime) {&#xD;
			// released every (j*period)+phase, for all j >=0&#xD;
			Integer j = 0;&#xD;
			if (period > 0) {&#xD;
				j = (int) Math.ceil((double)currentTime/(double)period); // gives floor&#xD;
			} &#xD;
			Integer nextRelease = (j*period)+phase ;&#xD;
			releaseTime = nextRelease;&#xD;
			lastUpdateTime = currentTime;&#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oiXTiKk6Ee-lntgJ_JlK2w" name="maxPhaseComparison" specification="_ocq7M6k6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_oiXTiak6Ee-lntgJ_JlK2w" name="obj2" type="_n4iTYKk6Ee-lntgJ_JlK2w"/>
                <ownedParameter xmi:id="_oiXTiqk6Ee-lntgJ_JlK2w" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>// for ascending order of priority&#xD;
		return compareDescendingOrder(this.getDeadline(), obj2.getDeadline());&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oiXTi6k6Ee-lntgJ_JlK2w" name="maxPhaseComparison" specification="_ocriQKk6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_oiXTjKk6Ee-lntgJ_JlK2w" name="obj1" type="_n4iTYKk6Ee-lntgJ_JlK2w"/>
                <ownedParameter xmi:id="_oiXTjak6Ee-lntgJ_JlK2w" name="obj2" type="_n4iTYKk6Ee-lntgJ_JlK2w"/>
                <ownedParameter xmi:id="_oiXTjqk6Ee-lntgJ_JlK2w" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>return obj1.maxPhaseComparison(obj2);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oiX6kKk6Ee-lntgJ_JlK2w" name="deadlineComparison" specification="_ocriRKk6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_oiX6kak6Ee-lntgJ_JlK2w" name="obj2" type="_n4iTYKk6Ee-lntgJ_JlK2w"/>
                <ownedParameter xmi:id="_oiX6kqk6Ee-lntgJ_JlK2w" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>// for ascending order of priority&#xD;
		return compareAscendingOrder(this.getDeadline(), obj2.getDeadline());&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oiX6k6k6Ee-lntgJ_JlK2w" name="deadlineComparison" specification="_ocriR6k6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_oiX6lKk6Ee-lntgJ_JlK2w" name="obj1" type="_n4iTYKk6Ee-lntgJ_JlK2w"/>
                <ownedParameter xmi:id="_oiX6lak6Ee-lntgJ_JlK2w" name="obj2" type="_n4iTYKk6Ee-lntgJ_JlK2w"/>
                <ownedParameter xmi:id="_oiX6lqk6Ee-lntgJ_JlK2w" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>return obj1.deadlineComparison(obj2);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oiX6l6k6Ee-lntgJ_JlK2w" name="periodComparison" specification="_ocsJUak6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_oiX6mKk6Ee-lntgJ_JlK2w" name="obj2" type="_n4iTYKk6Ee-lntgJ_JlK2w"/>
                <ownedParameter xmi:id="_oiX6mak6Ee-lntgJ_JlK2w" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>// for ascending order of priority&#xD;
		return compareAscendingOrder(this.getPeriod(), obj2.getPeriod());&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oiX6mqk6Ee-lntgJ_JlK2w" name="periodComparison" specification="_ocsJVKk6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_oiX6m6k6Ee-lntgJ_JlK2w" name="obj1" type="_n4iTYKk6Ee-lntgJ_JlK2w"/>
                <ownedParameter xmi:id="_oiX6nKk6Ee-lntgJ_JlK2w" name="obj2" type="_n4iTYKk6Ee-lntgJ_JlK2w"/>
                <ownedParameter xmi:id="_oiX6nak6Ee-lntgJ_JlK2w" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>return obj1.periodComparison(obj2);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oiX6nqk6Ee-lntgJ_JlK2w" name="priorityComparison" specification="_ocswYKk6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_oiX6n6k6Ee-lntgJ_JlK2w" name="obj2" type="_n4iTYKk6Ee-lntgJ_JlK2w"/>
                <ownedParameter xmi:id="_oiX6oKk6Ee-lntgJ_JlK2w" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>// for ascending order of priority&#xD;
		return compareAscendingOrder(this.getPriority(), obj2.getPriority());&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oiYhoKk6Ee-lntgJ_JlK2w" name="priorityComparison" specification="_ocswY6k6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_oiYhoak6Ee-lntgJ_JlK2w" name="obj1" type="_n4iTYKk6Ee-lntgJ_JlK2w"/>
                <ownedParameter xmi:id="_oiYhoqk6Ee-lntgJ_JlK2w" name="obj2" type="_n4iTYKk6Ee-lntgJ_JlK2w"/>
                <ownedParameter xmi:id="_oiYho6k6Ee-lntgJ_JlK2w" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>return obj1.priorityComparison(obj2);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oiYhpKk6Ee-lntgJ_JlK2w" name="releaseTimeComparison" specification="_ocswZ6k6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_oiYhpak6Ee-lntgJ_JlK2w" name="obj2" type="_n4iTYKk6Ee-lntgJ_JlK2w"/>
                <ownedParameter xmi:id="_oiYhpqk6Ee-lntgJ_JlK2w" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>// for ascending order of release time&#xD;
		return compareAscendingOrder(this.getReleaseTime(), obj2.getReleaseTime());&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oiYhp6k6Ee-lntgJ_JlK2w" name="releaseTimeComparison" specification="_octXcKk6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_oiYhqKk6Ee-lntgJ_JlK2w" name="obj1" type="_n4iTYKk6Ee-lntgJ_JlK2w"/>
                <ownedParameter xmi:id="_oiYhqak6Ee-lntgJ_JlK2w" name="obj2" type="_n4iTYKk6Ee-lntgJ_JlK2w"/>
                <ownedParameter xmi:id="_oiYhqqk6Ee-lntgJ_JlK2w" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>return obj1.releaseTimeComparison(obj2); &#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oiYhq6k6Ee-lntgJ_JlK2w" name="LatestReleaseTimeComparison" specification="_octXdKk6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_oiYhrKk6Ee-lntgJ_JlK2w" name="obj2" type="_n4iTYKk6Ee-lntgJ_JlK2w"/>
                <ownedParameter xmi:id="_oiYhrak6Ee-lntgJ_JlK2w" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>// for ascending order of release time&#xD;
		return compareDescendingOrder(this.getReleaseTime(), obj2.getReleaseTime());&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oiYhrqk6Ee-lntgJ_JlK2w" name="LatestReleaseTimeComparison" specification="_octXd6k6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_oiYhr6k6Ee-lntgJ_JlK2w" name="obj1" type="_n4iTYKk6Ee-lntgJ_JlK2w"/>
                <ownedParameter xmi:id="_oiYhsKk6Ee-lntgJ_JlK2w" name="obj2" type="_n4iTYKk6Ee-lntgJ_JlK2w"/>
                <ownedParameter xmi:id="_oiYhsak6Ee-lntgJ_JlK2w" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>return obj1.releaseTimeComparison(obj2); &#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oiZIsKk6Ee-lntgJ_JlK2w" name="compareAscendingOrder" specification="_n4yyEKk6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_oiZIsak6Ee-lntgJ_JlK2w" name="v1">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_oiZIsqk6Ee-lntgJ_JlK2w" name="v2">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_oiZIs6k6Ee-lntgJ_JlK2w" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>if (v1 &lt; v2)&#xD;
			return -1; &#xD;
		else if (v1 > v2)&#xD;
			return 1; &#xD;
		return 0; // tied: values are the same &#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oiZItKk6Ee-lntgJ_JlK2w" name="compareDescendingOrder" specification="_n4zZIak6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_oiZItak6Ee-lntgJ_JlK2w" name="v1">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_oiZItqk6Ee-lntgJ_JlK2w" name="v2">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_oiZIt6k6Ee-lntgJ_JlK2w" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>if (v1 &lt; v2)&#xD;
			return 1; &#xD;
		else if (v1 > v2)&#xD;
			return -1; &#xD;
		return 0; // tied: values are the same &#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oiZIuKk6Ee-lntgJ_JlK2w" name="print" specification="_n40AMKk6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_oiZIuak6Ee-lntgJ_JlK2w" name="headerMsg">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>System.out.printf(&quot;\n%s&quot;,headerMsg);&#xD;
		print();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oiZIuqk6Ee-lntgJ_JlK2w" name="print" specification="_n40AMqk6Ee-lntgJ_JlK2w">
                <language>java</language>
                <body>System.out.printf(&quot;\nName: %s\n&quot;,getName());&#xD;
		System.out.printf(&quot;\tPriority: %d\n&quot;,getPriority());&#xD;
		System.out.printf(&quot;\tPeriod: %d\n&quot;,getPeriod());&#xD;
		System.out.printf(&quot;\tDeadline: %d\n&quot;,getDeadline());&#xD;
		System.out.printf(&quot;\tPhase: %d\n&quot;, getPhase());&#xD;
		System.out.printf(&quot;\tReleaseTime: %d\n&quot;,getReleaseTime());&#xD;
		System.out.printf(&quot;\tStartTime: %d\n&quot;,getStartTime());&#xD;
		System.out.printf(&quot;\tEndTime: %d\n&quot;,getEndTime());&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_n4kvoKk6Ee-lntgJ_JlK2w" name="SchedulableObject" visibility="package" method="_oiU3Q6k6Ee-lntgJ_JlK2w">
                <eAnnotations xmi:id="_n4kvoak6Ee-lntgJ_JlK2w" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_n4kvoqk6Ee-lntgJ_JlK2w" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_n4kvo6k6Ee-lntgJ_JlK2w" type="_n4iTYKk6Ee-lntgJ_JlK2w" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_n4lWsKk6Ee-lntgJ_JlK2w" name="SchedulableObject" visibility="package" method="_oiVeUKk6Ee-lntgJ_JlK2w">
                <eAnnotations xmi:id="_n4l9w6k6Ee-lntgJ_JlK2w" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_n4l9xKk6Ee-lntgJ_JlK2w" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_n4lWsak6Ee-lntgJ_JlK2w" name="priority">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_n4l9wKk6Ee-lntgJ_JlK2w" name="period">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_n4l9wak6Ee-lntgJ_JlK2w" name="deadline">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_n4l9wqk6Ee-lntgJ_JlK2w" name="phase">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_n4l9xak6Ee-lntgJ_JlK2w" type="_n4iTYKk6Ee-lntgJ_JlK2w" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_n4mk0Kk6Ee-lntgJ_JlK2w" name="SchedulableObject" visibility="package" method="_oiVeVqk6Ee-lntgJ_JlK2w">
                <eAnnotations xmi:id="_n4nL4qk6Ee-lntgJ_JlK2w" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_n4nL46k6Ee-lntgJ_JlK2w" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_n4mk0ak6Ee-lntgJ_JlK2w" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_n4mk0qk6Ee-lntgJ_JlK2w" name="priority">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_n4mk06k6Ee-lntgJ_JlK2w" name="period">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_n4nL4Kk6Ee-lntgJ_JlK2w" name="deadline">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_n4nL4ak6Ee-lntgJ_JlK2w" name="phase">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_n4nL5Kk6Ee-lntgJ_JlK2w" type="_n4iTYKk6Ee-lntgJ_JlK2w" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_n4oaAKk6Ee-lntgJ_JlK2w" name="setDefaultParameters" visibility="private" method="_oiVeXak6Ee-lntgJ_JlK2w"/>
              <ownedOperation xmi:id="_n4oaAak6Ee-lntgJ_JlK2w" name="getAllEndTimes" method="_oiVeXqk6Ee-lntgJ_JlK2w">
                <ownedComment xmi:id="_ojAzwqk6Ee-lntgJ_JlK2w">
                  <body>@return the endTimes queue</body>
                </ownedComment>
                <ownedParameter xmi:id="_ocq7MKk6Ee-lntgJ_JlK2w" type="_n2zOAKk6Ee-lntgJ_JlK2w" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_n4srcKk6Ee-lntgJ_JlK2w" name="addToEndTimes" method="_oiWFYKk6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_n4srcak6Ee-lntgJ_JlK2w" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_n4srcqk6Ee-lntgJ_JlK2w" name="peekEndTimes" method="_oiWFYqk6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_n4tSgKk6Ee-lntgJ_JlK2w" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_n4tSgak6Ee-lntgJ_JlK2w" name="pollEndTimes" method="_oiWFZKk6Ee-lntgJ_JlK2w"/>
              <ownedOperation xmi:id="_n4tSgqk6Ee-lntgJ_JlK2w" name="getName" method="_oiWFZ6k6Ee-lntgJ_JlK2w">
                <ownedComment xmi:id="_ojAzw6k6Ee-lntgJ_JlK2w">
                  <body>@return the name</body>
                </ownedComment>
                <ownedParameter xmi:id="_n4t5kKk6Ee-lntgJ_JlK2w" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_n4t5kak6Ee-lntgJ_JlK2w" name="setName" method="_oiWFaak6Ee-lntgJ_JlK2w">
                <ownedComment xmi:id="_ojAzxKk6Ee-lntgJ_JlK2w">
                  <body>@param name the name to set</body>
                </ownedComment>
                <ownedParameter xmi:id="_n4t5kqk6Ee-lntgJ_JlK2w" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_n4t5k6k6Ee-lntgJ_JlK2w" name="getReleaseTime" method="_oiWscKk6Ee-lntgJ_JlK2w">
                <ownedComment xmi:id="_ojAzxak6Ee-lntgJ_JlK2w">
                  <body>@return the releaseTime</body>
                </ownedComment>
                <ownedParameter xmi:id="_n4ugoKk6Ee-lntgJ_JlK2w" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_n4ugoak6Ee-lntgJ_JlK2w" name="getPhase" method="_oiWscqk6Ee-lntgJ_JlK2w">
                <ownedComment xmi:id="_ojAzxqk6Ee-lntgJ_JlK2w">
                  <body>@return the phase</body>
                </ownedComment>
                <ownedParameter xmi:id="_n4ugoqk6Ee-lntgJ_JlK2w" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_n4ugo6k6Ee-lntgJ_JlK2w" name="getStartTime" method="_oiWsdKk6Ee-lntgJ_JlK2w">
                <ownedComment xmi:id="_ojAzx6k6Ee-lntgJ_JlK2w">
                  <body>@return the startTime</body>
                </ownedComment>
                <ownedParameter xmi:id="_n4vHsKk6Ee-lntgJ_JlK2w" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_n4vuwKk6Ee-lntgJ_JlK2w" name="setEndTime" method="_oiWsdqk6Ee-lntgJ_JlK2w">
                <ownedComment xmi:id="_ojAzyKk6Ee-lntgJ_JlK2w">
                  <body>@param endTime the endTime to set</body>
                </ownedComment>
                <ownedParameter xmi:id="_n4vuwak6Ee-lntgJ_JlK2w" name="endTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_n4wV0Kk6Ee-lntgJ_JlK2w" name="setStartTime" method="_oiWseKk6Ee-lntgJ_JlK2w">
                <ownedComment xmi:id="_ojBa0Kk6Ee-lntgJ_JlK2w">
                  <body>@param startTime the startTime to set</body>
                </ownedComment>
                <ownedParameter xmi:id="_n4wV0ak6Ee-lntgJ_JlK2w" name="startTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_n4wV0qk6Ee-lntgJ_JlK2w" name="setReleaseTime" method="_oiXTgKk6Ee-lntgJ_JlK2w">
                <ownedComment xmi:id="_ojBa0ak6Ee-lntgJ_JlK2w">
                  <body>@param releaseTime the releaseTime to set</body>
                </ownedComment>
                <ownedParameter xmi:id="_n4wV06k6Ee-lntgJ_JlK2w" name="releaseTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_n4w84Kk6Ee-lntgJ_JlK2w" name="setPeriod" method="_oiXTgqk6Ee-lntgJ_JlK2w">
                <ownedComment xmi:id="_ojBa0qk6Ee-lntgJ_JlK2w">
                  <body>@param period the period to set</body>
                </ownedComment>
                <ownedParameter xmi:id="_n4w84ak6Ee-lntgJ_JlK2w" name="period">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_n4w84qk6Ee-lntgJ_JlK2w" name="setPhase" method="_oiXThKk6Ee-lntgJ_JlK2w">
                <ownedComment xmi:id="_ojBa06k6Ee-lntgJ_JlK2w">
                  <body>@param phase the phase to set</body>
                </ownedComment>
                <ownedParameter xmi:id="_n4w846k6Ee-lntgJ_JlK2w" name="phase">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_n4w85Kk6Ee-lntgJ_JlK2w" name="setNextReleaseTime" method="_oiXThqk6Ee-lntgJ_JlK2w">
                <ownedComment xmi:id="_ojBa1Kk6Ee-lntgJ_JlK2w">
                  <body>@param releaseTime the releaseTime to set</body>
                </ownedComment>
                <ownedParameter xmi:id="_n4w85ak6Ee-lntgJ_JlK2w" name="currentTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_n4yyEKk6Ee-lntgJ_JlK2w" name="compareAscendingOrder" method="_oiZIsKk6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_n4yyEak6Ee-lntgJ_JlK2w" name="v1">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_n4yyEqk6Ee-lntgJ_JlK2w" name="v2">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_n4zZIKk6Ee-lntgJ_JlK2w" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_n4zZIak6Ee-lntgJ_JlK2w" name="compareDescendingOrder" method="_oiZItKk6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_n4zZIqk6Ee-lntgJ_JlK2w" name="v1">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_n4zZI6k6Ee-lntgJ_JlK2w" name="v2">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_n4zZJKk6Ee-lntgJ_JlK2w" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_n40AMKk6Ee-lntgJ_JlK2w" name="print" method="_oiZIuKk6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_n40AMak6Ee-lntgJ_JlK2w" name="headerMsg">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_n40AMqk6Ee-lntgJ_JlK2w" name="print" method="_oiZIuqk6Ee-lntgJ_JlK2w"/>
              <ownedOperation xmi:id="_ocqUIKk6Ee-lntgJ_JlK2w" name="SchedulableObject" visibility="package" method="_oiU3Rak6Ee-lntgJ_JlK2w">
                <eAnnotations xmi:id="_ocqUI6k6Ee-lntgJ_JlK2w" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_ocqUJKk6Ee-lntgJ_JlK2w" key="create"/>
                </eAnnotations>
                <ownedComment xmi:id="_ojAzwak6Ee-lntgJ_JlK2w">
                  <body>Constructor that creates a copy of schedulable &#xD;
	 * parameters of the input obj, but setting its&#xD;
	 * lastUpdateTime to input time.&#xD;
	 * &#xD;
	 * @param obj&#xD;
	 * @param time</body>
                </ownedComment>
                <ownedParameter xmi:id="_ocqUIak6Ee-lntgJ_JlK2w" name="obj" type="_n4iTYKk6Ee-lntgJ_JlK2w"/>
                <ownedParameter xmi:id="_ocqUIqk6Ee-lntgJ_JlK2w" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ocqUJak6Ee-lntgJ_JlK2w" type="_n4iTYKk6Ee-lntgJ_JlK2w" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_ocq7Mak6Ee-lntgJ_JlK2w" name="addSubObject" method="_oiWFZak6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_ocq7Mqk6Ee-lntgJ_JlK2w" name="obj" type="_n4iTYKk6Ee-lntgJ_JlK2w"/>
              </ownedOperation>
              <ownedOperation xmi:id="_ocq7M6k6Ee-lntgJ_JlK2w" name="maxPhaseComparison" method="_oiXTiKk6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_ocq7NKk6Ee-lntgJ_JlK2w" name="obj2" type="_n4iTYKk6Ee-lntgJ_JlK2w"/>
                <ownedParameter xmi:id="_ocq7Nak6Ee-lntgJ_JlK2w" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_ocriQKk6Ee-lntgJ_JlK2w" name="maxPhaseComparison" method="_oiXTi6k6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_ocriQak6Ee-lntgJ_JlK2w" name="obj1" type="_n4iTYKk6Ee-lntgJ_JlK2w"/>
                <ownedParameter xmi:id="_ocriQqk6Ee-lntgJ_JlK2w" name="obj2" type="_n4iTYKk6Ee-lntgJ_JlK2w"/>
                <ownedParameter xmi:id="_ocriQ6k6Ee-lntgJ_JlK2w" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_ocriRKk6Ee-lntgJ_JlK2w" name="deadlineComparison" method="_oiX6kKk6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_ocriRak6Ee-lntgJ_JlK2w" name="obj2" type="_n4iTYKk6Ee-lntgJ_JlK2w"/>
                <ownedParameter xmi:id="_ocriRqk6Ee-lntgJ_JlK2w" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_ocriR6k6Ee-lntgJ_JlK2w" name="deadlineComparison" method="_oiX6k6k6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_ocriSKk6Ee-lntgJ_JlK2w" name="obj1" type="_n4iTYKk6Ee-lntgJ_JlK2w"/>
                <ownedParameter xmi:id="_ocriSak6Ee-lntgJ_JlK2w" name="obj2" type="_n4iTYKk6Ee-lntgJ_JlK2w"/>
                <ownedParameter xmi:id="_ocsJUKk6Ee-lntgJ_JlK2w" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_ocsJUak6Ee-lntgJ_JlK2w" name="periodComparison" method="_oiX6l6k6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_ocsJUqk6Ee-lntgJ_JlK2w" name="obj2" type="_n4iTYKk6Ee-lntgJ_JlK2w"/>
                <ownedParameter xmi:id="_ocsJU6k6Ee-lntgJ_JlK2w" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_ocsJVKk6Ee-lntgJ_JlK2w" name="periodComparison" method="_oiX6mqk6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_ocsJVak6Ee-lntgJ_JlK2w" name="obj1" type="_n4iTYKk6Ee-lntgJ_JlK2w"/>
                <ownedParameter xmi:id="_ocsJVqk6Ee-lntgJ_JlK2w" name="obj2" type="_n4iTYKk6Ee-lntgJ_JlK2w"/>
                <ownedParameter xmi:id="_ocsJV6k6Ee-lntgJ_JlK2w" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_ocswYKk6Ee-lntgJ_JlK2w" name="priorityComparison" method="_oiX6nqk6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_ocswYak6Ee-lntgJ_JlK2w" name="obj2" type="_n4iTYKk6Ee-lntgJ_JlK2w"/>
                <ownedParameter xmi:id="_ocswYqk6Ee-lntgJ_JlK2w" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_ocswY6k6Ee-lntgJ_JlK2w" name="priorityComparison" method="_oiYhoKk6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_ocswZKk6Ee-lntgJ_JlK2w" name="obj1" type="_n4iTYKk6Ee-lntgJ_JlK2w"/>
                <ownedParameter xmi:id="_ocswZak6Ee-lntgJ_JlK2w" name="obj2" type="_n4iTYKk6Ee-lntgJ_JlK2w"/>
                <ownedParameter xmi:id="_ocswZqk6Ee-lntgJ_JlK2w" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_ocswZ6k6Ee-lntgJ_JlK2w" name="releaseTimeComparison" method="_oiYhpKk6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_ocswaKk6Ee-lntgJ_JlK2w" name="obj2" type="_n4iTYKk6Ee-lntgJ_JlK2w"/>
                <ownedParameter xmi:id="_ocswaak6Ee-lntgJ_JlK2w" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_octXcKk6Ee-lntgJ_JlK2w" name="releaseTimeComparison" method="_oiYhp6k6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_octXcak6Ee-lntgJ_JlK2w" name="obj1" type="_n4iTYKk6Ee-lntgJ_JlK2w"/>
                <ownedParameter xmi:id="_octXcqk6Ee-lntgJ_JlK2w" name="obj2" type="_n4iTYKk6Ee-lntgJ_JlK2w"/>
                <ownedParameter xmi:id="_octXc6k6Ee-lntgJ_JlK2w" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_octXdKk6Ee-lntgJ_JlK2w" name="LatestReleaseTimeComparison" method="_oiYhq6k6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_octXdak6Ee-lntgJ_JlK2w" name="obj2" type="_n4iTYKk6Ee-lntgJ_JlK2w"/>
                <ownedParameter xmi:id="_octXdqk6Ee-lntgJ_JlK2w" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_octXd6k6Ee-lntgJ_JlK2w" name="LatestReleaseTimeComparison" method="_oiYhrqk6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_octXeKk6Ee-lntgJ_JlK2w" name="obj1" type="_n4iTYKk6Ee-lntgJ_JlK2w"/>
                <ownedParameter xmi:id="_octXeak6Ee-lntgJ_JlK2w" name="obj2" type="_n4iTYKk6Ee-lntgJ_JlK2w"/>
                <ownedParameter xmi:id="_oct-gKk6Ee-lntgJ_JlK2w" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_n5A0gKk6Ee-lntgJ_JlK2w" name="SchedulableObjectQueue">
              <generalization xmi:id="_n5IJQKk6Ee-lntgJ_JlK2w" general="_n2zOAKk6Ee-lntgJ_JlK2w"/>
              <ownedAttribute xmi:id="_oguUwKk6Ee-lntgJ_JlK2w" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_ogu70Kk6Ee-lntgJ_JlK2w" value="1L"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oiaW0Kk6Ee-lntgJ_JlK2w" name="SchedulableObjectQueue" specification="_ofFWAKk6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_oiaW0ak6Ee-lntgJ_JlK2w" name="comparitor" type="_obMUgKk6Ee-lntgJ_JlK2w"/>
                <ownedParameter xmi:id="_oiaW0qk6Ee-lntgJ_JlK2w" type="_n5A0gKk6Ee-lntgJ_JlK2w" direction="return"/>
                <language>java</language>
                <body>super(1, comparitor);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oiaW06k6Ee-lntgJ_JlK2w" name="SchedulableObjectQueue" specification="_ofGkIKk6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_oiaW1Kk6Ee-lntgJ_JlK2w" name="comparitor" type="_obMUgKk6Ee-lntgJ_JlK2w"/>
                <ownedParameter xmi:id="_oiaW1ak6Ee-lntgJ_JlK2w" name="schedulableObjects" type="_ob8icKk6Ee-lntgJ_JlK2w"/>
                <ownedParameter xmi:id="_oiaW1qk6Ee-lntgJ_JlK2w" type="_n5A0gKk6Ee-lntgJ_JlK2w" direction="return"/>
                <language>java</language>
                <body>super(comparitor);&#xD;
		this.addAll(schedulableObjects);&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_ofFWAKk6Ee-lntgJ_JlK2w" name="SchedulableObjectQueue" visibility="package" method="_oiaW0Kk6Ee-lntgJ_JlK2w">
                <eAnnotations xmi:id="_ofFWAqk6Ee-lntgJ_JlK2w" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_ofFWA6k6Ee-lntgJ_JlK2w" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_ofFWAak6Ee-lntgJ_JlK2w" name="comparitor" type="_obMUgKk6Ee-lntgJ_JlK2w"/>
                <ownedParameter xmi:id="_ofF9EKk6Ee-lntgJ_JlK2w" type="_n5A0gKk6Ee-lntgJ_JlK2w" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_ofGkIKk6Ee-lntgJ_JlK2w" name="SchedulableObjectQueue" visibility="package" method="_oiaW06k6Ee-lntgJ_JlK2w">
                <eAnnotations xmi:id="_ofGkI6k6Ee-lntgJ_JlK2w" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_ofGkJKk6Ee-lntgJ_JlK2w" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_ofGkIak6Ee-lntgJ_JlK2w" name="comparitor" type="_obMUgKk6Ee-lntgJ_JlK2w"/>
                <ownedParameter xmi:id="_ofGkIqk6Ee-lntgJ_JlK2w" name="schedulableObjects" type="_ob8icKk6Ee-lntgJ_JlK2w"/>
                <ownedParameter xmi:id="_ofGkJak6Ee-lntgJ_JlK2w" type="_n5A0gKk6Ee-lntgJ_JlK2w" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_n5MasKk6Ee-lntgJ_JlK2w" name="Schedule" isAbstract="true">
              <ownedComment xmi:id="_ojCB4Kk6Ee-lntgJ_JlK2w">
                <body>Schedule builds a non-preemptive, priority schedule &#xD;
for the Partially Ordered Set (Poset) using numChannels. &#xD;
It ensures, precedence constraints are preserved, and &#xD;
reports deadline misses.&#xD;
&#xD;
@author sgoddard2&#xD;
 *</body>
              </ownedComment>
              <ownedAttribute xmi:id="_ogu70ak6Ee-lntgJ_JlK2w" name="UNKNOWN" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_ogu70qk6Ee-lntgJ_JlK2w" value="&quot;unknown&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_ogu706k6Ee-lntgJ_JlK2w" name="schedulable" visibility="protected">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_ogvi4ak6Ee-lntgJ_JlK2w" name="numChannels" visibility="protected">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_ogvi46k6Ee-lntgJ_JlK2w" name="fakeTime" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_ogwJ8Kk6Ee-lntgJ_JlK2w" value="0"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_ogwJ8qk6Ee-lntgJ_JlK2w" name="endScheduleTime" visibility="protected">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_ogwJ9Kk6Ee-lntgJ_JlK2w" name="schedule" visibility="protected" type="_n5gjwKk6Ee-lntgJ_JlK2w" association="_okQw8Kk6Ee-lntgJ_JlK2w"/>
              <ownedAttribute xmi:id="_ogwxAak6Ee-lntgJ_JlK2w" name="poset" visibility="protected" type="_n1m7MKk6Ee-lntgJ_JlK2w" association="_okQw86k6Ee-lntgJ_JlK2w"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oiaW16k6Ee-lntgJ_JlK2w" name="Schedule" specification="_ocxB0Kk6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_oiaW2Kk6Ee-lntgJ_JlK2w" name="poset" type="_n1m7MKk6Ee-lntgJ_JlK2w"/>
                <ownedParameter xmi:id="_oiaW2ak6Ee-lntgJ_JlK2w" name="numChannels">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_oiaW2qk6Ee-lntgJ_JlK2w" type="_n5MasKk6Ee-lntgJ_JlK2w" direction="return"/>
                <language>java</language>
                <body>this.poset = poset;&#xD;
		this.numChannels = numChannels;&#xD;
		var maxPhase = poset.getMaxPhase();&#xD;
		endScheduleTime = poset.getHyperPeriod();&#xD;
		if (maxPhase > 0) {&#xD;
			/* need to schedule longer to cover start-up period */&#xD;
			endScheduleTime = maxPhase + 2*endScheduleTime ;&#xD;
		}&#xD;
		schedule = new ScheduleTable(numChannels+1,endScheduleTime);&#xD;
		schedulable = true;&#xD;
		buildSchedule();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oia95Kk6Ee-lntgJ_JlK2w" name="getSchedule" specification="_n5TvcKk6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_oia95ak6Ee-lntgJ_JlK2w" type="_n5gjwKk6Ee-lntgJ_JlK2w" direction="return"/>
                <language>java</language>
                <body>return schedule;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oia95qk6Ee-lntgJ_JlK2w" name="buildSchedule" specification="_n5UWgKk6Ee-lntgJ_JlK2w">
                <language>java</language>
                <body>var next = poset.getNextActivation();&#xD;
		while (next != null) {&#xD;
			/* Add next to the schedule if max of its release time &#xD;
			 * and end time is less than the endScheduleTime.&#xD;
			 * Otherwise, its releaseTime is >= endScheduleTime&#xD;
			 * or endTime >= currentTime, which means can't&#xD;
			 * schedule at this time.&#xD;
			 */&#xD;
			if (!addToSchedule(next)) {&#xD;
				schedulable = false;&#xD;
				reportNotSchedulable(next);&#xD;
				/* Record unschedulable element */&#xD;
				fakeSchedulingToTestRest(next);&#xD;
				next.setNextReleaseTime(next.getEndTime());&#xD;
				if (next.getReleaseTime() &lt; endScheduleTime) {&#xD;
					poset.addActivation(next);&#xD;
				}&#xD;
			} else {&#xD;
				/* update the next release time and add it back into&#xD;
				 * the priority queue&#xD;
				 */&#xD;
				next.setNextReleaseTime(next.getEndTime());&#xD;
				if (next.getReleaseTime() &lt; endScheduleTime) {&#xD;
					poset.addActivation(next);&#xD;
				}&#xD;
&#xD;
			}&#xD;
			next = poset.getNextActivation();&#xD;
		}&#xD;
		print();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oia956k6Ee-lntgJ_JlK2w" name="toProgram" specification="_n5U9kKk6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_oia96Kk6Ee-lntgJ_JlK2w" type="_n2hhMKk6Ee-lntgJ_JlK2w" direction="return"/>
                <language>java</language>
                <body>var nodeNames = poset.getNodesNamesOrderedAlphabetically();&#xD;
		var numNodes = nodeNames.length;&#xD;
		var program = new ProgramSchedule(endScheduleTime,numNodes);&#xD;
		CodeFragment codeFragment = null;&#xD;
		var duration = 0; // default duration for SLEEP;&#xD;
		String name = null;&#xD;
		var startTime = 0;&#xD;
		var endTime = 0;&#xD;
		HashMap&lt;String, Integer> nodeIndexMap = new HashMap&lt;>();&#xD;
		&#xD;
		if (!schedulable) {&#xD;
			/* not Schedulable, so we will not create code */&#xD;
			return program; // return empty program&#xD;
		}&#xD;
		&#xD;
		/* build the nodeIndexMap by putting nodes in alphabetic&#xD;
		 * order and then hashing its name to its rank&#xD;
		 */&#xD;
		for (int i = 0; i &lt; numNodes; i++) {&#xD;
			nodeIndexMap.put(nodeNames[i], i);&#xD;
		}&#xD;
		&#xD;
		for (int channel = 0; channel &lt; numChannels; channel++) {&#xD;
			for (int time = 0; time &lt; endScheduleTime; time++) {&#xD;
				var entry = schedule.get(channel,time);&#xD;
				if (entry == null) {&#xD;
					/* no entry here, so instruction will be SLEEP instruction */&#xD;
					codeFragment = new CodeFragment();&#xD;
					startTime = time;&#xD;
					endTime = time;&#xD;
					name = &quot;Empty&quot;;&#xD;
				} else {&#xD;
					/* create the codeFragment for this activation entry */&#xD;
					codeFragment = new CodeFragment(entry.getDelta(),entry.getEdges(),&#xD;
							entry.getCoordinators(),channel);&#xD;
					startTime = entry.getStartTime();&#xD;
					endTime = entry.getEndTime();&#xD;
					name = entry.getName();&#xD;
					duration =  endTime - startTime + 1;&#xD;
					if (duration > codeFragment.size()) {&#xD;
						/* for combination fragments, we can sometimes generate&#xD;
						 * more efficient code than originally thought. So,&#xD;
						 * update schedule by replacing the entry with null&#xD;
						 * and update the activation with the the new end time.&#xD;
						 */&#xD;
						for (int k = 0; k &lt; (duration - codeFragment.size()); k++) {&#xD;
							schedule.set(channel,endTime-k,null);&#xD;
						}&#xD;
						endTime = codeFragment.size() + startTime - 1;&#xD;
						entry.setEndTime(endTime);&#xD;
						&#xD;
					}&#xD;
				}&#xD;
				duration =  endTime - startTime + 1;&#xD;
				/* duration can be &lt; fragment size  when two activations &#xD;
				 * were combined but they had different delta values. &#xD;
				 * The larger was used, but we should make sure duration isn't&#xD;
				 * > size, else we may overwrite something. Just report for now.&#xD;
				 */&#xD;
				if (duration > codeFragment.size()) {&#xD;
					System.err.printf(&quot;activation %s: duration = %d, codeSize = %d&quot;, &#xD;
							name,duration, codeFragment.size());&#xD;
				} else if (time != startTime ){&#xD;
					System.err.printf(&quot;activation %s: time = %d, startTime = %d&quot;, &#xD;
							name, time, startTime);&#xD;
&#xD;
				} else {&#xD;
					var instructions = codeFragment.instructions();&#xD;
					var coordinator = codeFragment.getCoordinator();&#xD;
&#xD;
					if (coordinator != null) {&#xD;
						/* coordinator is null the entry is sleep,&#xD;
						 * which happens when the schedule entry was null.&#xD;
						 * We skip this entry and then replace nulls in the&#xD;
						 * program with sleep instructions at the end&#xD;
						 */&#xD;
						for (int i = 0; i &lt; duration; i++) {&#xD;
							var instr = instructions.get(i);&#xD;
							/* enter the instruciton in the program */&#xD;
							var row = time+i;&#xD;
							var column = nodeIndexMap.get(coordinator);		&#xD;
							program.set(row,column,instr);&#xD;
&#xD;
							/* get the listeners from the instruction &#xD;
							 * and insert the wait() instructions into&#xD;
							 * the program for each listener&#xD;
							 * */&#xD;
							var dsl = new WarpDSL();&#xD;
							var instructionParametersArray = dsl.getInstructionParameters(instr); &#xD;
							for (InstructionParameters fragment: instructionParametersArray) {&#xD;
								String listener = fragment.getListener();&#xD;
								if(!listener.equals(UNKNOWN)) {&#xD;
									/* need to add a wait instruction for node listener&#xD;
									 * wait(#channel)&#xD;
									 * at time,listener location of program table&#xD;
									 */&#xD;
									program.set(time+i,nodeIndexMap.get(listener),codeFragment.wait(channel));&#xD;
								}&#xD;
							}&#xD;
						}&#xD;
					}&#xD;
					time += duration-1;&#xD;
				}&#xD;
&#xD;
			}&#xD;
		}&#xD;
		replaceNullWithSleep(program);&#xD;
		return program;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oia96ak6Ee-lntgJ_JlK2w" name="replaceNullWithSleep" specification="_ocyP8Kk6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_oia96qk6Ee-lntgJ_JlK2w" name="program" type="_n2hhMKk6Ee-lntgJ_JlK2w"/>
                <language>java</language>
                <body>var rows = program.getNumRows();&#xD;
		var columns = program.getNumColumns();&#xD;
&#xD;
		for (int i = 0; i &lt; rows; i++) {&#xD;
			for (int j = 0; j &lt; columns; j++) {&#xD;
				var entry = program.get(i,j);&#xD;
				if (entry == null) {&#xD;
					program.set(i, j, CodeFragment.sleep());&#xD;
				}&#xD;
			}&#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oia966k6Ee-lntgJ_JlK2w" name="fakeSchedulingToTestRest" specification="_ocyP8qk6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_oia97Kk6Ee-lntgJ_JlK2w" name="next" type="_nxhscKk6Ee-lntgJ_JlK2w"/>
                <language>java</language>
                <body>var pred = next.getPredecessor();&#xD;
		var startTime = fakeTime;&#xD;
		var channel = numChannels; // use last channel&#xD;
		if (pred != null) {&#xD;
			/* remove pred end time */&#xD;
			pred.pollEndTimes(); &#xD;
		} &#xD;
		next.setStartTime(next.getReleaseTime());&#xD;
		var duration = next.getExecutionDuration();&#xD;
		fakeTime = startTime + duration - 1;&#xD;
		if (fakeTime >= endScheduleTime) {&#xD;
			System.err.print(&quot;NOT SCHEDULABLE: CAN'T STORE ANY MORE FAKE ENTRIES&quot;);&#xD;
			print();&#xD;
		}&#xD;
		next.setEndTime(next.getReleaseTime()+next.getDeadline()-next.getPhase());&#xD;
		/* Add the endTime to the elements endTimes Q&#xD;
		 * so that we can track predecessor endTimes&#xD;
		 * and make sure successors don't start before &#xD;
		 * predecessors&#xD;
		 */&#xD;
		next.addToEndTimes(endScheduleTime); &#xD;
		/* Create a new entry, based on next, to be entered&#xD;
		 * into the scheduling tale&#xD;
		 */&#xD;
		var entry = new Activation(next, startTime);&#xD;
		for (int i = startTime; i &lt;= fakeTime; i++) {&#xD;
			/* Add this object to the schedule for the&#xD;
			 * from startTime to endTime.&#xD;
			 */&#xD;
			schedule.set(channel, i, entry);&#xD;
		}&#xD;
		fakeTime++;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oia97ak6Ee-lntgJ_JlK2w" name="getChannelAndSetStartTime" specification="_ocyP9Kk6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_oia97qk6Ee-lntgJ_JlK2w" name="schedulableObject" type="_nxhscKk6Ee-lntgJ_JlK2w"/>
                <ownedParameter xmi:id="_oia976k6Ee-lntgJ_JlK2w" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var time = schedulableObject.getReleaseTime();&#xD;
		var channel = numChannels; // default is no channel available&#xD;
		var endTime = endScheduleTime; // duration of the schedule&#xD;
		schedulableObject.setStartTime(endTime);&#xD;
		schedulableObject.setEndTime(endTime);&#xD;
		/* Create a flag indicating it might be possible to combine&#xD;
		 * to partitions. This flag will be used to create a channel&#xD;
		 * affinity, in case scheduler wants to combine to partitions.&#xD;
		 */&#xD;
		var pred = schedulableObject.getPredecessor();&#xD;
		if (pred != null) {&#xD;
			/* peek at the head of the endTimes for pred */&#xD;
			var predEndTime = pred.peekEndTimes();&#xD;
			if (predEndTime == null) {&#xD;
				return numChannels; // return indicates no channel/time&#xD;
			} else if (predEndTime >= time) {&#xD;
				/* can't schedule here; need to look later */&#xD;
				time = predEndTime+1;&#xD;
			} &#xD;
		}&#xD;
		var scheduleLocation = findChannelAndTime(time,schedulableObject );&#xD;
		channel = scheduleLocation.getChannel();&#xD;
		time = scheduleLocation.getTime();&#xD;
&#xD;
		if (channel != numChannels &amp;&amp; time &lt; endScheduleTime) {&#xD;
			/* Found a channel with no conflicts.&#xD;
			 * Set the object's start time to the that&#xD;
			 * time.&#xD;
			 */&#xD;
			schedulableObject.setStartTime(time);&#xD;
&#xD;
		}&#xD;
		return channel;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oia98Kk6Ee-lntgJ_JlK2w" name="findChannelAndTime" specification="_oczeEKk6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_oia98ak6Ee-lntgJ_JlK2w" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_oia98qk6Ee-lntgJ_JlK2w" name="schedulableObject" type="_nxhscKk6Ee-lntgJ_JlK2w"/>
                <ownedParameter xmi:id="_oia986k6Ee-lntgJ_JlK2w" type="_n5QFEKk6Ee-lntgJ_JlK2w" direction="return"/>
                <language>java</language>
                <body>var channel = numChannels; // default is no channel available &#xD;
		var duration = schedulableObject.getExecutionDuration();&#xD;
		&#xD;
		while (time &lt; endScheduleTime &amp;&amp; conflictsExist(schedulableObject, time, duration )) {&#xD;
			time ++; //+= duration+1;&#xD;
		}&#xD;
		if (time >= endScheduleTime) {&#xD;
			/* no conflict time available */&#xD;
			return new ScheduleLocation(channel, time);	&#xD;
		} &#xD;
		&#xD;
		/* can schedule at current value of time, so find the best channel.&#xD;
		 * Bias toward and empty channel at near lowest end of spectrum */&#xD;
		for (int i = numChannels-1; i >= 0 ; i--) {&#xD;
			/* Start at numChannels and work down to 0&#xD;
			 * checking for conflicts and finding an&#xD;
			 * empty slot at the same time. This will&#xD;
			 * result in the lowest possible channel&#xD;
			 * being used if their are no conflicts&#xD;
			 * with any channel entries.&#xD;
			 * &#xD;
			 * This version combines entries as soon as.&#xD;
			 * possible, without looking for other, low-channel&#xD;
			 * combinations.&#xD;
			 */&#xD;
			// var entry = schedule.get(i,time);&#xD;
			if (time > 0 &amp;&amp; schedulableObject.getReleaseTime() &lt; time) {&#xD;
				var priorEntry = schedule.get(i, time-1);&#xD;
				if (priorEntry != null) {&#xD;
					var combinedDuration = priorEntry.getCombinedExecutionDuration(schedulableObject);&#xD;
					if (priorEntry.canCombine(schedulableObject) &amp;&amp; &#xD;
							noOtherChannelConflicts(i,schedulableObject, time-1) &amp;&amp;&#xD;
							isAvailable(schedulableObject,i,priorEntry.getStartTime(),combinedDuration)) {&#xD;
						channel = i;&#xD;
						time = priorEntry.getStartTime();&#xD;
						break;&#xD;
					}&#xD;
				}&#xD;
			}&#xD;
			if (isAvailable(schedulableObject, i, time, duration)) {&#xD;
				channel = i;&#xD;
			}&#xD;
&#xD;
		}&#xD;
		/* no time and channel found in interval [time, time+duration]&#xD;
		 * so, advance time and check again&#xD;
		 */&#xD;
		if (channel == numChannels) {&#xD;
			return continueSearch(time,schedulableObject);&#xD;
		} else {&#xD;
			return new ScheduleLocation(channel, time);	&#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oibk8Kk6Ee-lntgJ_JlK2w" name="continueSearch" specification="_oc0FIqk6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_oibk8ak6Ee-lntgJ_JlK2w" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_oibk8qk6Ee-lntgJ_JlK2w" name="activation" type="_nxhscKk6Ee-lntgJ_JlK2w"/>
                <ownedParameter xmi:id="_oibk86k6Ee-lntgJ_JlK2w" type="_n5QFEKk6Ee-lntgJ_JlK2w" direction="return"/>
                <language>java</language>
                <body>return findChannelAndTime(time+1,activation);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oibk9Kk6Ee-lntgJ_JlK2w" name="noOtherChannelConflicts" specification="_oc0sM6k6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_oibk9ak6Ee-lntgJ_JlK2w" name="exceptedChannel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_oibk9qk6Ee-lntgJ_JlK2w" name="schedulableObject" type="_nxhscKk6Ee-lntgJ_JlK2w"/>
                <ownedParameter xmi:id="_oibk96k6Ee-lntgJ_JlK2w" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_oibk-Kk6Ee-lntgJ_JlK2w" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>var result = true;&#xD;
&#xD;
		if (time >= endScheduleTime) {&#xD;
			/* not enough time left in the schedule,&#xD;
			 * so return false &#xD;
			 */&#xD;
			return false;&#xD;
		}&#xD;
		for (Integer channel = 0; channel &lt; numChannels ; channel++) {&#xD;
			var entry = schedule.get(channel,time);&#xD;
&#xD;
			if (entry != null &amp;&amp; schedulableObject != null &amp;&amp; channel != exceptedChannel) {&#xD;
				if (entry.conflictExists(schedulableObject)) {&#xD;
					result = false;&#xD;
					return result;&#xD;
				}&#xD;
			} &#xD;
		}&#xD;
		return result;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oibk-ak6Ee-lntgJ_JlK2w" name="conflictsExist" specification="_oc1TQqk6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_oibk-qk6Ee-lntgJ_JlK2w" name="obj" type="_nxhscKk6Ee-lntgJ_JlK2w"/>
                <ownedParameter xmi:id="_oibk-6k6Ee-lntgJ_JlK2w" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_oibk_Kk6Ee-lntgJ_JlK2w" name="duration">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_oibk_ak6Ee-lntgJ_JlK2w" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>var result = false;&#xD;
&#xD;
		if (time+duration >= endScheduleTime) {&#xD;
			/* not enough time left in the schedule,&#xD;
			 * so return false &#xD;
			 */&#xD;
			return false;&#xD;
		}&#xD;
		if (duration &lt;= 0) {&#xD;
			result  = true;&#xD;
		} else {&#xD;
			for (Integer i = time; i &lt; time+duration; i++ ) {&#xD;
				for (Integer channel = 0; channel &lt; numChannels ; channel++) {&#xD;
					var entry = schedule.get(channel,i);&#xD;
					if (entry != null &amp;&amp; obj != null) {&#xD;
						if (entry.conflictExists(obj)) {&#xD;
							result = true;&#xD;
							return result;&#xD;
						}&#xD;
					} &#xD;
				}&#xD;
			}	&#xD;
		}&#xD;
		return result;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oibk_qk6Ee-lntgJ_JlK2w" name="freeOfCoordinatorConflicts" specification="_oc2hYKk6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_oibk_6k6Ee-lntgJ_JlK2w" name="obj" type="_nxhscKk6Ee-lntgJ_JlK2w"/>
                <ownedParameter xmi:id="_oiblAKk6Ee-lntgJ_JlK2w" name="requestedChannel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_oiblAak6Ee-lntgJ_JlK2w" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_oiblAqk6Ee-lntgJ_JlK2w" name="duration">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_oiblA6k6Ee-lntgJ_JlK2w" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>var result = true;&#xD;
&#xD;
		if (time+(duration-1) >= endScheduleTime) {&#xD;
			/* not enough time left in the schedule,&#xD;
			 * so return false &#xD;
			 */&#xD;
			return false;&#xD;
		}&#xD;
		if (duration &lt;= 0) {&#xD;
			result  = false;&#xD;
		} else {&#xD;
			for (Integer i = time; i &lt; time+duration; i++ ) {&#xD;
				for (Integer channel = 0; channel &lt; numChannels ; channel++) {&#xD;
					var entry = schedule.get(channel,time);&#xD;
					if (entry != null &amp;&amp; obj != null) {&#xD;
						if (entry.canCombine(obj) &amp;&amp; channel != requestedChannel) {&#xD;
							result = false; // same coordinator is scheduled&#xD;
							return result;&#xD;
						}&#xD;
					} &#xD;
				}&#xD;
			}	&#xD;
		}&#xD;
		return result;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oiblBKk6Ee-lntgJ_JlK2w" name="isAvailable" specification="_oc3IcKk6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_oiblBak6Ee-lntgJ_JlK2w" name="a1" type="_nxhscKk6Ee-lntgJ_JlK2w"/>
                <ownedParameter xmi:id="_oiblBqk6Ee-lntgJ_JlK2w" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_oiblB6k6Ee-lntgJ_JlK2w" name="start">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_oiblCKk6Ee-lntgJ_JlK2w" name="duration">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_oiblCak6Ee-lntgJ_JlK2w" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>var available = true;&#xD;
		&#xD;
		if (conflictsExist(a1,start,duration)) {&#xD;
			return false;&#xD;
		}&#xD;
		for (Integer j = start; j &lt; start+duration; j++ ) {&#xD;
			var currentEntry = schedule.get(channel,j);&#xD;
			if (currentEntry != null) {&#xD;
				if (currentEntry.canCombine(a1)) {&#xD;
					/* no conflict with this entry, and can&#xD;
					 * combine so check for combined entry time&#xD;
					 *  to see if we can combine activations&#xD;
					 */&#xD;
					var combinedDuration = currentEntry.getCombinedExecutionDuration(a1);&#xD;
					var combinedEntry = new CombinedActivation(currentEntry,a1);&#xD;
					var searchTime = currentEntry.getEndTime()+1;&#xD;
					var searchLength = combinedDuration - (duration-(j-start));&#xD;
					return isAvailable(combinedEntry, channel, searchTime, searchLength);&#xD;
				} else {&#xD;
					available = false;&#xD;
					break;&#xD;
				}&#xD;
			}&#xD;
		}&#xD;
		if (available) {&#xD;
			available = freeOfCoordinatorConflicts(a1, channel, start, duration);&#xD;
		}&#xD;
		return available;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oiblCqk6Ee-lntgJ_JlK2w" name="isAvailable" specification="_oc3Idqk6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_oiblC6k6Ee-lntgJ_JlK2w" name="a1" type="_nxhscKk6Ee-lntgJ_JlK2w"/>
                <ownedParameter xmi:id="_oiblDKk6Ee-lntgJ_JlK2w" name="start">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_oiblDak6Ee-lntgJ_JlK2w" name="duration">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_oiblDqk6Ee-lntgJ_JlK2w" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>var available = false;&#xD;
		&#xD;
		for (Integer channel = 0; channel &lt; numChannels; channel++) {&#xD;
			if (isAvailable(a1,channel,start,duration)) {&#xD;
			available = true;&#xD;
			break;&#xD;
			}&#xD;
		}&#xD;
		return available;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oiblD6k6Ee-lntgJ_JlK2w" name="timeRemaining" specification="_n5XZ0Kk6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_oiblEKk6Ee-lntgJ_JlK2w" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_oiblEak6Ee-lntgJ_JlK2w" name="start">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_oiblEqk6Ee-lntgJ_JlK2w" name="duration">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_oiblE6k6Ee-lntgJ_JlK2w" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var result = duration;&#xD;
&#xD;
		var row = schedule.get(channel);&#xD;
		for (Integer i = start; i &lt; start+duration; i++, result-- ) {&#xD;
			if (row.get(i) != null) {&#xD;
				break;&#xD;
			}&#xD;
		}&#xD;
		return result;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oicMAKk6Ee-lntgJ_JlK2w" name="canCombineEntriesInPlace" specification="_oc3vgKk6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_oicMAak6Ee-lntgJ_JlK2w" name="a1" type="_nxhscKk6Ee-lntgJ_JlK2w"/>
                <ownedParameter xmi:id="_oicMAqk6Ee-lntgJ_JlK2w" name="a2" type="_nxhscKk6Ee-lntgJ_JlK2w"/>
                <ownedParameter xmi:id="_oicMA6k6Ee-lntgJ_JlK2w" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>var result = false;&#xD;
		if (a1 == null || a2 == null) {&#xD;
			return false;&#xD;
		}&#xD;
		var minStartTime = Math.min(a1.getStartTime(), a2.getStartTime()); &#xD;
		var maxEndTime = Math.max(a1.getEndTime(), a2.getEndTime()); &#xD;
		&#xD;
		if (a2.canCombine(a1)) {&#xD;
			 var combinedDuration = a2.getCombinedExecutionDuration(a1);&#xD;
			 var newEndTime = minStartTime + combinedDuration - 1;&#xD;
			 if (newEndTime &lt;= maxEndTime) {&#xD;
				result = true;&#xD;
			 }&#xD;
		}&#xD;
		return result;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oicMBKk6Ee-lntgJ_JlK2w" name="combinedEntriesInPlace" specification="_oc3vhKk6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_oicMBak6Ee-lntgJ_JlK2w" name="a1" type="_nxhscKk6Ee-lntgJ_JlK2w"/>
                <ownedParameter xmi:id="_oicMBqk6Ee-lntgJ_JlK2w" name="a2" type="_nxhscKk6Ee-lntgJ_JlK2w"/>
                <ownedParameter xmi:id="_oicMB6k6Ee-lntgJ_JlK2w" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_oicMCKk6Ee-lntgJ_JlK2w" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>var result = false;&#xD;
		if (canCombineEntriesInPlace(a1,a2)) {&#xD;
			var entry = new CombinedActivation(a1, a2);&#xD;
			var startTime = entry.getStartTime();&#xD;
			var endTime = entry.getEndTime();&#xD;
			for (int i = startTime; i &lt;= endTime; i++) {&#xD;
				/* Add this object to the schedule for the&#xD;
				 * from startTime to endTime.&#xD;
				 */&#xD;
				schedule.set(channel, i, entry);&#xD;
			}&#xD;
			result = true;&#xD;
		}&#xD;
		return result;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oicMCak6Ee-lntgJ_JlK2w" name="addToSchedule" specification="_oc4Wk6k6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_oicMCqk6Ee-lntgJ_JlK2w" name="next" type="_nxhscKk6Ee-lntgJ_JlK2w"/>
                <ownedParameter xmi:id="_oicMC6k6Ee-lntgJ_JlK2w" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>var channel = getChannelAndSetStartTime(next);&#xD;
		if (channel == numChannels) {&#xD;
			return false;&#xD;
		}&#xD;
		/* found a time and channel  that are valid */&#xD;
		Activation currentEntry = null;	&#xD;
		var combineTime = endScheduleTime;&#xD;
		var startTime = next.getStartTime(); // set by getChannel()&#xD;
		var duration = next.getExecutionDuration();	&#xD;
		var endTime = startTime + duration - 1;&#xD;
		/* Check the schedule to see if we need to &#xD;
		 * combine next with a higher priority entry &#xD;
		 * in the schedule during its execution&#xD;
		 */&#xD;
		for (int i = startTime; i &lt; startTime + duration; i++) {&#xD;
			currentEntry = schedule.get(channel,i);&#xD;
			if (currentEntry != null &amp;&amp; next.canCombine(currentEntry)) {&#xD;
				/* found an entry to combine, record the time,&#xD;
				 * update the combined duration and new&#xD;
				 * endTime, then exit the loop&#xD;
				 */&#xD;
				/* need to check if combined time is available or&#xD;
				 * if we have to combine yet another entry &#xD;
				 */&#xD;
				 var endCurrentEntry = currentEntry.getEndTime();&#xD;
				 var combinedDuration = next.getCombinedExecutionDuration(currentEntry);&#xD;
				 var newEndTime = startTime + combinedDuration - 1;&#xD;
				 /* need to check to make sure there are no conflicts on other &#xD;
				  * channels for this new interval&#xD;
				  */&#xD;
				 var available = isAvailable(next, channel, startTime, combinedDuration);&#xD;
				 if (available) {	 &#xD;
					 var additionalTimeNeeded = newEndTime - endCurrentEntry;&#xD;
					 if (additionalTimeNeeded > 0) {&#xD;
						 /* see if we can combine the two existing adjacent entries&#xD;
						  * in place. If so, then try to recursively schedule next&#xD;
						  */&#xD;
						 var additionalCombine = schedule.get(channel,endCurrentEntry+1);&#xD;
						 if (additionalCombine != null) {&#xD;
							 if (!combinedEntriesInPlace(currentEntry,additionalCombine,channel)) {&#xD;
								 return false;&#xD;
							 }&#xD;
							 addToSchedule(next);&#xD;
							 return true;&#xD;
						 }&#xD;
					 }&#xD;
					 combineTime = i;&#xD;
					 duration = next.getCombinedExecutionDuration(currentEntry);&#xD;
					 endTime = startTime + duration - 1;&#xD;
					 break;&#xD;
				 }&#xD;
			}&#xD;
		}&#xD;
		next.setEndTime(endTime);&#xD;
		var responseTime = endTime - next.getReleaseTime();&#xD;
		if (responseTime > next.getDeadline()) {&#xD;
			return false; // unable to schedule this entry&#xD;
		}&#xD;
		/* Add the endTime to the elements endTimes Q&#xD;
		 * so that we can track predecessor endTimes&#xD;
		 * and make sure successors don't start before &#xD;
		 * predecessors&#xD;
		 */&#xD;
		next.addToEndTimes(endTime); &#xD;
		/* remove predecessor end time that matches this start time */&#xD;
		var pred = next.getPredecessor();&#xD;
		if (pred != null) {&#xD;
			pred.pollEndTimes(); &#xD;
		}&#xD;
		/* Create a new entry, based on next, to be entered&#xD;
		 * into the scheduling tale&#xD;
		 */&#xD;
		var entry = new Activation(next, startTime);&#xD;
		if (combineTime &lt; endScheduleTime) {&#xD;
			/* change entry to point to combinedActivation&#xD;
			 * and set startTime to the beginning of the &#xD;
			 * combined entries */&#xD;
			var combinedActivation = new CombinedActivation(currentEntry, entry);&#xD;
			entry = combinedActivation;&#xD;
			startTime = entry.getStartTime();&#xD;
			duration = entry.getExecutionDuration();&#xD;
			endTime = startTime + duration - 1;&#xD;
			entry.setEndTime(endTime);&#xD;
			next.setEndTime(endTime);&#xD;
		}&#xD;
		for (int i = startTime; i &lt;= endTime; i++) {&#xD;
			/* Add this object to the schedule for the&#xD;
			 * from startTime to endTime.&#xD;
			 */&#xD;
			schedule.set(channel, i, entry);&#xD;
		}&#xD;
		return true;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oicMDKk6Ee-lntgJ_JlK2w" name="reportNotSchedulable" specification="_oc4Wlqk6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_oicMDak6Ee-lntgJ_JlK2w" name="object" type="_nxhscKk6Ee-lntgJ_JlK2w"/>
                <language>java</language>
                <body>object.print(&quot;This entry is not Schedulable:&quot;);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oiczEKk6Ee-lntgJ_JlK2w" name="printVerbose" specification="_n5YA4Kk6Ee-lntgJ_JlK2w">
                <language>java</language>
                <body>System.out.println(&quot;\nSchedule:&quot;);&#xD;
		var endSchedule = schedule.get(0).size();&#xD;
		for (int i = 0; i &lt; numChannels; i++) {&#xD;
			System.out.printf(&quot;\nChannel: %d&quot;,i);&#xD;
			var name = UNKNOWN;&#xD;
			for (int j = 0; j &lt; endSchedule; j++) {&#xD;
				var entry = schedule.get(i,j);&#xD;
				if (entry != null) {&#xD;
					var entryName = entry.getName();&#xD;
					if (!name.equals(entryName)) {&#xD;
						name = entryName;&#xD;
						entry.print(&quot;Time &quot; + j +&quot;:&quot;);&#xD;
					}&#xD;
				}&#xD;
			}&#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oiczEak6Ee-lntgJ_JlK2w" name="print" specification="_n5Yn8Kk6Ee-lntgJ_JlK2w">
                <language>java</language>
                <body>System.out.printf(&quot;\nSchedule (length is %d):\n&quot;, endScheduleTime);&#xD;
		for (int i = 0; i &lt; schedule.size(); i++) {&#xD;
			System.out.printf(&quot;\nChannel: %d: &quot;,i);&#xD;
			var name = UNKNOWN;&#xD;
			var startTime = -1;&#xD;
			for (int j = 0; j &lt; endScheduleTime; j++) {&#xD;
				var entry = schedule.get(i,j);&#xD;
				if (entry != null) {&#xD;
					var entryName = entry.getName();&#xD;
					if (!name.equals(entryName) || startTime != entry.getStartTime()) {&#xD;
						/* only print out unique entries (not duplicates in the interval */&#xD;
						name = entryName;&#xD;
						startTime = entry.getStartTime();&#xD;
						System.out.printf(&quot;%s[%d,%d] &quot;, &#xD;
								name, entry.getStartTime(),entry.getEndTime());&#xD;
					} &#xD;
				}&#xD;
			}&#xD;
		}&#xD;
		/* report the number of Activations not schedulable, if any */&#xD;
		ArrayList&lt;Activation> notSchedulable = schedule.get(numChannels);&#xD;
		var numNotSchedulable = 0; 	&#xD;
		var name = UNKNOWN;&#xD;
		var lastStartTime = -1;&#xD;
		for (int i = 0; i &lt; endScheduleTime; i++) {&#xD;
			var entry = notSchedulable.get(i);&#xD;
			if (entry != null) {&#xD;
				var entryName = entry.getName();&#xD;
				if (!name.equals(entryName) || (name.equals(entryName) &amp;&amp; lastStartTime != entry.getStartTime())) {&#xD;
					name = entryName;&#xD;
					lastStartTime = entry.getStartTime();&#xD;
					numNotSchedulable++;&#xD;
				}&#xD;
			}&#xD;
		}&#xD;
		if (numNotSchedulable > 0 ) {&#xD;
			System.out.printf(&quot;\n%d Activations were not schedulable\n&quot;, numNotSchedulable);&#xD;
		}&#xD;
		System.out.println();&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_n5TvcKk6Ee-lntgJ_JlK2w" name="getSchedule" method="_oia95Kk6Ee-lntgJ_JlK2w">
                <ownedComment xmi:id="_ojCB46k6Ee-lntgJ_JlK2w">
                  <body>@return the schedule</body>
                </ownedComment>
                <ownedParameter xmi:id="_ocxo46k6Ee-lntgJ_JlK2w" type="_n5gjwKk6Ee-lntgJ_JlK2w" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_n5UWgKk6Ee-lntgJ_JlK2w" name="buildSchedule" visibility="private" method="_oia95qk6Ee-lntgJ_JlK2w"/>
              <ownedOperation xmi:id="_n5U9kKk6Ee-lntgJ_JlK2w" name="toProgram" method="_oia956k6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_ocxo5Kk6Ee-lntgJ_JlK2w" type="_n2hhMKk6Ee-lntgJ_JlK2w" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_n5XZ0Kk6Ee-lntgJ_JlK2w" name="timeRemaining" visibility="protected" method="_oiblD6k6Ee-lntgJ_JlK2w">
                <ownedComment xmi:id="_ojCB6ak6Ee-lntgJ_JlK2w">
                  <body>timeRemaining returns duration minus the number of vacant slots found. &#xD;
	 * &#xD;
	 * @return duration-vacantSlots</body>
                </ownedComment>
                <ownedParameter xmi:id="_n5XZ0ak6Ee-lntgJ_JlK2w" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_n5XZ0qk6Ee-lntgJ_JlK2w" name="start">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_n5XZ06k6Ee-lntgJ_JlK2w" name="duration">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_n5XZ1Kk6Ee-lntgJ_JlK2w" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_n5YA4Kk6Ee-lntgJ_JlK2w" name="printVerbose" method="_oiczEKk6Ee-lntgJ_JlK2w"/>
              <ownedOperation xmi:id="_n5Yn8Kk6Ee-lntgJ_JlK2w" name="print" method="_oiczEak6Ee-lntgJ_JlK2w"/>
              <ownedOperation xmi:id="_ocxB0Kk6Ee-lntgJ_JlK2w" name="Schedule" visibility="package" method="_oiaW16k6Ee-lntgJ_JlK2w">
                <eAnnotations xmi:id="_ocxo4Kk6Ee-lntgJ_JlK2w" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_ocxo4ak6Ee-lntgJ_JlK2w" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_ocxB0ak6Ee-lntgJ_JlK2w" name="poset" type="_n1m7MKk6Ee-lntgJ_JlK2w"/>
                <ownedParameter xmi:id="_ocxB0qk6Ee-lntgJ_JlK2w" name="numChannels">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ocxo4qk6Ee-lntgJ_JlK2w" type="_n5MasKk6Ee-lntgJ_JlK2w" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_ocyP8Kk6Ee-lntgJ_JlK2w" name="replaceNullWithSleep" visibility="private" method="_oia96ak6Ee-lntgJ_JlK2w">
                <ownedComment xmi:id="_ojCB5Kk6Ee-lntgJ_JlK2w">
                  <body>Replace all null entries in program with sleep instructions&#xD;
	 * &#xD;
	 * @param program</body>
                </ownedComment>
                <ownedParameter xmi:id="_ocyP8ak6Ee-lntgJ_JlK2w" name="program" type="_n2hhMKk6Ee-lntgJ_JlK2w"/>
              </ownedOperation>
              <ownedOperation xmi:id="_ocyP8qk6Ee-lntgJ_JlK2w" name="fakeSchedulingToTestRest" visibility="private" method="_oia966k6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_ocyP86k6Ee-lntgJ_JlK2w" name="next" type="_nxhscKk6Ee-lntgJ_JlK2w"/>
              </ownedOperation>
              <ownedOperation xmi:id="_ocyP9Kk6Ee-lntgJ_JlK2w" name="getChannelAndSetStartTime" visibility="protected" method="_oia97ak6Ee-lntgJ_JlK2w">
                <ownedComment xmi:id="_ojCB5ak6Ee-lntgJ_JlK2w">
                  <body>getChannel checks for conflicts and if none, returns a free&#xD;
	 * channel. &lt;br>&#xD;
	 * If return value == numChannels, then no channel can be assigned&#xD;
	 * due to either conflicts or no availability.&#xD;
	 * @param schedulableObject&#xD;
	 * &#xD;
	 * @return available channel or numChannels when none available</body>
                </ownedComment>
                <ownedParameter xmi:id="_ocyP9ak6Ee-lntgJ_JlK2w" name="schedulableObject" type="_nxhscKk6Ee-lntgJ_JlK2w"/>
                <ownedParameter xmi:id="_ocy3AKk6Ee-lntgJ_JlK2w" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_oczeEKk6Ee-lntgJ_JlK2w" name="findChannelAndTime" visibility="protected" method="_oia98Kk6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_oczeEak6Ee-lntgJ_JlK2w" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_oc0FIKk6Ee-lntgJ_JlK2w" name="schedulableObject" type="_nxhscKk6Ee-lntgJ_JlK2w"/>
                <ownedParameter xmi:id="_oc0FIak6Ee-lntgJ_JlK2w" type="_n5QFEKk6Ee-lntgJ_JlK2w" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_oc0FIqk6Ee-lntgJ_JlK2w" name="continueSearch" visibility="protected" method="_oibk8Kk6Ee-lntgJ_JlK2w">
                <ownedComment xmi:id="_ojCB5qk6Ee-lntgJ_JlK2w">
                  <body>continueSearch continues the search for a channel time.&lt;br>&#xD;
	 * The default implementation continues at time+1 by calling&#xD;
	 * findChannelAndTime(time+1,schedulableObject). This method&#xD;
	 * can be overridden to provide preemptive searches or any&#xD;
	 * other method of continuing the search.&#xD;
	 * &#xD;
	 * @param time&#xD;
	 * @param activation&#xD;
	 * @return ScheduleLocation</body>
                </ownedComment>
                <ownedParameter xmi:id="_oc0sMKk6Ee-lntgJ_JlK2w" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_oc0sMak6Ee-lntgJ_JlK2w" name="activation" type="_nxhscKk6Ee-lntgJ_JlK2w"/>
                <ownedParameter xmi:id="_oc0sMqk6Ee-lntgJ_JlK2w" type="_n5QFEKk6Ee-lntgJ_JlK2w" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_oc0sM6k6Ee-lntgJ_JlK2w" name="noOtherChannelConflicts" visibility="protected" method="_oibk9Kk6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_oc0sNKk6Ee-lntgJ_JlK2w" name="exceptedChannel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_oc0sNak6Ee-lntgJ_JlK2w" name="schedulableObject" type="_nxhscKk6Ee-lntgJ_JlK2w"/>
                <ownedParameter xmi:id="_oc1TQKk6Ee-lntgJ_JlK2w" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_oc1TQak6Ee-lntgJ_JlK2w" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_oc1TQqk6Ee-lntgJ_JlK2w" name="conflictsExist" visibility="protected" method="_oibk-ak6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_oc16UKk6Ee-lntgJ_JlK2w" name="obj" type="_nxhscKk6Ee-lntgJ_JlK2w"/>
                <ownedParameter xmi:id="_oc16Uak6Ee-lntgJ_JlK2w" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_oc16Uqk6Ee-lntgJ_JlK2w" name="duration">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_oc16U6k6Ee-lntgJ_JlK2w" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_oc2hYKk6Ee-lntgJ_JlK2w" name="freeOfCoordinatorConflicts" visibility="protected" method="_oibk_qk6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_oc2hYak6Ee-lntgJ_JlK2w" name="obj" type="_nxhscKk6Ee-lntgJ_JlK2w"/>
                <ownedParameter xmi:id="_oc2hYqk6Ee-lntgJ_JlK2w" name="requestedChannel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_oc2hY6k6Ee-lntgJ_JlK2w" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_oc2hZKk6Ee-lntgJ_JlK2w" name="duration">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_oc2hZak6Ee-lntgJ_JlK2w" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_oc3IcKk6Ee-lntgJ_JlK2w" name="isAvailable" visibility="protected" method="_oiblBKk6Ee-lntgJ_JlK2w">
                <ownedComment xmi:id="_ojCB56k6Ee-lntgJ_JlK2w">
                  <body>isAvailable returns true if the schedule for the channel is available in the &#xD;
	 * interval [start, start+duration-1]</body>
                </ownedComment>
                <ownedParameter xmi:id="_oc3Icak6Ee-lntgJ_JlK2w" name="a1" type="_nxhscKk6Ee-lntgJ_JlK2w"/>
                <ownedParameter xmi:id="_oc3Icqk6Ee-lntgJ_JlK2w" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_oc3Ic6k6Ee-lntgJ_JlK2w" name="start">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_oc3IdKk6Ee-lntgJ_JlK2w" name="duration">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_oc3Idak6Ee-lntgJ_JlK2w" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_oc3Idqk6Ee-lntgJ_JlK2w" name="isAvailable" visibility="protected" method="_oiblCqk6Ee-lntgJ_JlK2w">
                <ownedComment xmi:id="_ojCB6Kk6Ee-lntgJ_JlK2w">
                  <body>isAvailable returns true if the schedule is available in the &#xD;
	 * interval [start, start+duration-1] in any channel</body>
                </ownedComment>
                <ownedParameter xmi:id="_oc3Id6k6Ee-lntgJ_JlK2w" name="a1" type="_nxhscKk6Ee-lntgJ_JlK2w"/>
                <ownedParameter xmi:id="_oc3IeKk6Ee-lntgJ_JlK2w" name="start">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_oc3Ieak6Ee-lntgJ_JlK2w" name="duration">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_oc3Ieqk6Ee-lntgJ_JlK2w" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_oc3vgKk6Ee-lntgJ_JlK2w" name="canCombineEntriesInPlace" visibility="private" method="_oicMAKk6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_oc3vgak6Ee-lntgJ_JlK2w" name="a1" type="_nxhscKk6Ee-lntgJ_JlK2w"/>
                <ownedParameter xmi:id="_oc3vgqk6Ee-lntgJ_JlK2w" name="a2" type="_nxhscKk6Ee-lntgJ_JlK2w"/>
                <ownedParameter xmi:id="_oc3vg6k6Ee-lntgJ_JlK2w" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_oc3vhKk6Ee-lntgJ_JlK2w" name="combinedEntriesInPlace" visibility="private" method="_oicMBKk6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_oc3vhak6Ee-lntgJ_JlK2w" name="a1" type="_nxhscKk6Ee-lntgJ_JlK2w"/>
                <ownedParameter xmi:id="_oc4WkKk6Ee-lntgJ_JlK2w" name="a2" type="_nxhscKk6Ee-lntgJ_JlK2w"/>
                <ownedParameter xmi:id="_oc4Wkak6Ee-lntgJ_JlK2w" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_oc4Wkqk6Ee-lntgJ_JlK2w" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_oc4Wk6k6Ee-lntgJ_JlK2w" name="addToSchedule" visibility="protected" method="_oicMCak6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_oc4WlKk6Ee-lntgJ_JlK2w" name="next" type="_nxhscKk6Ee-lntgJ_JlK2w"/>
                <ownedParameter xmi:id="_oc4Wlak6Ee-lntgJ_JlK2w" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_oc4Wlqk6Ee-lntgJ_JlK2w" name="reportNotSchedulable" visibility="private" method="_oicMDKk6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_oc49oKk6Ee-lntgJ_JlK2w" name="object" type="_nxhscKk6Ee-lntgJ_JlK2w"/>
              </ownedOperation>
              <nestedClassifier xmi:type="uml:Class" xmi:id="_n5QFEKk6Ee-lntgJ_JlK2w" name="ScheduleLocation" visibility="protected">
                <ownedAttribute xmi:id="_ogwxA6k6Ee-lntgJ_JlK2w" name="channel" visibility="package">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedAttribute>
                <ownedAttribute xmi:id="_ogxYEak6Ee-lntgJ_JlK2w" name="time" visibility="package">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedAttribute>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oiaW26k6Ee-lntgJ_JlK2w" name="ScheduleLocation" specification="_n5QFEak6Ee-lntgJ_JlK2w">
                  <ownedParameter xmi:id="_oiaW3Kk6Ee-lntgJ_JlK2w" type="_n5QFEKk6Ee-lntgJ_JlK2w" direction="return"/>
                  <language>java</language>
                  <body>this.channel = 0;&#xD;
			this.time = 0;&#xD;
		</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oiaW3ak6Ee-lntgJ_JlK2w" name="ScheduleLocation" specification="_n5QsIKk6Ee-lntgJ_JlK2w">
                  <ownedParameter xmi:id="_oiaW3qk6Ee-lntgJ_JlK2w" name="channel">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_oiaW36k6Ee-lntgJ_JlK2w" name="time">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_oiaW4Kk6Ee-lntgJ_JlK2w" type="_n5QFEKk6Ee-lntgJ_JlK2w" direction="return"/>
                  <language>java</language>
                  <body>this.channel = channel;&#xD;
			this.time = time;&#xD;
		</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oia94Kk6Ee-lntgJ_JlK2w" name="getChannel" specification="_n5RTM6k6Ee-lntgJ_JlK2w">
                  <ownedParameter xmi:id="_oia94ak6Ee-lntgJ_JlK2w" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>return channel;&#xD;
		</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oia94qk6Ee-lntgJ_JlK2w" name="getTime" specification="_n5TIYKk6Ee-lntgJ_JlK2w">
                  <ownedParameter xmi:id="_oia946k6Ee-lntgJ_JlK2w" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>return time;&#xD;
		</body>
                </ownedBehavior>
                <ownedOperation xmi:id="_n5QFEak6Ee-lntgJ_JlK2w" name="ScheduleLocation" visibility="package" method="_oiaW26k6Ee-lntgJ_JlK2w">
                  <eAnnotations xmi:id="_n5QFEqk6Ee-lntgJ_JlK2w" source="http://www.eclipse.org/uml2/2.0.0/UML">
                    <details xmi:id="_n5QFE6k6Ee-lntgJ_JlK2w" key="create"/>
                  </eAnnotations>
                  <ownedParameter xmi:id="_n5QFFKk6Ee-lntgJ_JlK2w" type="_n5QFEKk6Ee-lntgJ_JlK2w" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_n5QsIKk6Ee-lntgJ_JlK2w" name="ScheduleLocation" visibility="package" method="_oiaW3ak6Ee-lntgJ_JlK2w">
                  <eAnnotations xmi:id="_n5RTMKk6Ee-lntgJ_JlK2w" source="http://www.eclipse.org/uml2/2.0.0/UML">
                    <details xmi:id="_n5RTMak6Ee-lntgJ_JlK2w" key="create"/>
                  </eAnnotations>
                  <ownedParameter xmi:id="_n5QsIak6Ee-lntgJ_JlK2w" name="channel">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_n5QsIqk6Ee-lntgJ_JlK2w" name="time">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_n5RTMqk6Ee-lntgJ_JlK2w" type="_n5QFEKk6Ee-lntgJ_JlK2w" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_n5RTM6k6Ee-lntgJ_JlK2w" name="getChannel" visibility="protected" method="_oia94Kk6Ee-lntgJ_JlK2w">
                  <ownedComment xmi:id="_ojCB4ak6Ee-lntgJ_JlK2w">
                    <body>@return the channel</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_n5ShUKk6Ee-lntgJ_JlK2w" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_n5TIYKk6Ee-lntgJ_JlK2w" name="getTime" visibility="protected" method="_oia94qk6Ee-lntgJ_JlK2w">
                  <ownedComment xmi:id="_ojCB4qk6Ee-lntgJ_JlK2w">
                    <body>@return the time</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_n5TIYak6Ee-lntgJ_JlK2w" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  </ownedParameter>
                </ownedOperation>
              </nestedClassifier>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_n5gjwKk6Ee-lntgJ_JlK2w" name="ScheduleTable">
              <generalization xmi:id="_oc6LwKk6Ee-lntgJ_JlK2w" general="_n5_E4Kk6Ee-lntgJ_JlK2w"/>
              <ownedAttribute xmi:id="_ogymMKk6Ee-lntgJ_JlK2w" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_ogymMak6Ee-lntgJ_JlK2w" value="1L"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oiczEqk6Ee-lntgJ_JlK2w" name="ScheduleTable" specification="_n5hK0Kk6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_oiczE6k6Ee-lntgJ_JlK2w" type="_n5gjwKk6Ee-lntgJ_JlK2w" direction="return"/>
                <language>java</language>
                <body>super();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oiczFKk6Ee-lntgJ_JlK2w" name="ScheduleTable" specification="_n5hx46k6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_oiczFak6Ee-lntgJ_JlK2w" name="row">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_oiczFqk6Ee-lntgJ_JlK2w" name="column">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_oiczF6k6Ee-lntgJ_JlK2w" type="_n5gjwKk6Ee-lntgJ_JlK2w" direction="return"/>
                <language>java</language>
                <body>super(row,column);&#xD;
		&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_n5hK0Kk6Ee-lntgJ_JlK2w" name="ScheduleTable" visibility="package" method="_oiczEqk6Ee-lntgJ_JlK2w">
                <eAnnotations xmi:id="_n5hx4Kk6Ee-lntgJ_JlK2w" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_n5hx4ak6Ee-lntgJ_JlK2w" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_n5hx4qk6Ee-lntgJ_JlK2w" type="_n5gjwKk6Ee-lntgJ_JlK2w" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_n5hx46k6Ee-lntgJ_JlK2w" name="ScheduleTable" visibility="package" method="_oiczFKk6Ee-lntgJ_JlK2w">
                <eAnnotations xmi:id="_n5iY8ak6Ee-lntgJ_JlK2w" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_n5iY8qk6Ee-lntgJ_JlK2w" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_n5hx5Kk6Ee-lntgJ_JlK2w" name="row">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_n5iY8Kk6Ee-lntgJ_JlK2w" name="column">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_n5iY86k6Ee-lntgJ_JlK2w" type="_n5gjwKk6Ee-lntgJ_JlK2w" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_n5jAAKk6Ee-lntgJ_JlK2w" name="ScheduleTime">
              <ownedAttribute xmi:id="_ogymMqk6Ee-lntgJ_JlK2w" name="startTime">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_ogymM6k6Ee-lntgJ_JlK2w" name="endTime">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oidaIKk6Ee-lntgJ_JlK2w" name="ScheduleTime" specification="_n5k1MKk6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_oidaIak6Ee-lntgJ_JlK2w" name="startTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_oidaIqk6Ee-lntgJ_JlK2w" name="endTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_oidaI6k6Ee-lntgJ_JlK2w" type="_n5jAAKk6Ee-lntgJ_JlK2w" direction="return"/>
                <language>java</language>
                <body>this.startTime = startTime;&#xD;
		this.endTime = endTime;&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_n5k1MKk6Ee-lntgJ_JlK2w" name="ScheduleTime" visibility="package" method="_oidaIKk6Ee-lntgJ_JlK2w">
                <eAnnotations xmi:id="_n5k1M6k6Ee-lntgJ_JlK2w" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_n5k1NKk6Ee-lntgJ_JlK2w" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_n5k1Mak6Ee-lntgJ_JlK2w" name="startTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_n5k1Mqk6Ee-lntgJ_JlK2w" name="endTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_n5k1Nak6Ee-lntgJ_JlK2w" type="_n5jAAKk6Ee-lntgJ_JlK2w" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_n5lcQKk6Ee-lntgJ_JlK2w" name="SimulatorInput">
              <ownedComment xmi:id="_ojCo8Kk6Ee-lntgJ_JlK2w">
                <body>@author sgoddard&#xD;
 *</body>
              </ownedComment>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_n5nRcKk6Ee-lntgJ_JlK2w" name="SortedPeriodQueue">
              <generalization xmi:id="_n5q70Kk6Ee-lntgJ_JlK2w" general="_n2zOAKk6Ee-lntgJ_JlK2w"/>
              <ownedAttribute xmi:id="_ogzNQKk6Ee-lntgJ_JlK2w" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_ogzNQak6Ee-lntgJ_JlK2w" value="1L"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oidaJKk6Ee-lntgJ_JlK2w" name="SortedPeriodQueue" specification="_n5ofkKk6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_oidaJak6Ee-lntgJ_JlK2w" type="_n5nRcKk6Ee-lntgJ_JlK2w" direction="return"/>
                <language>java</language>
                <body>super(1, new PeriodComparator&lt;T>());&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oidaJqk6Ee-lntgJ_JlK2w" name="SortedPeriodQueue" specification="_oc7Z4Kk6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_oidaJ6k6Ee-lntgJ_JlK2w" name="schedulableObjects" type="_ob8icKk6Ee-lntgJ_JlK2w"/>
                <ownedParameter xmi:id="_oidaKKk6Ee-lntgJ_JlK2w" type="_n5nRcKk6Ee-lntgJ_JlK2w" direction="return"/>
                <language>java</language>
                <body>super(new PeriodComparator&lt;T>());&#xD;
		this.addAll(schedulableObjects);&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_n5ofkKk6Ee-lntgJ_JlK2w" name="SortedPeriodQueue" visibility="package" method="_oidaJKk6Ee-lntgJ_JlK2w">
                <eAnnotations xmi:id="_n5qUwKk6Ee-lntgJ_JlK2w" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_n5qUwak6Ee-lntgJ_JlK2w" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_n5qUwqk6Ee-lntgJ_JlK2w" type="_n5nRcKk6Ee-lntgJ_JlK2w" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_oc7Z4Kk6Ee-lntgJ_JlK2w" name="SortedPeriodQueue" visibility="package" method="_oidaJqk6Ee-lntgJ_JlK2w">
                <eAnnotations xmi:id="_oc7Z4qk6Ee-lntgJ_JlK2w" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_oc7Z46k6Ee-lntgJ_JlK2w" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_oc7Z4ak6Ee-lntgJ_JlK2w" name="schedulableObjects" type="_ob8icKk6Ee-lntgJ_JlK2w"/>
                <ownedParameter xmi:id="_oc7Z5Kk6Ee-lntgJ_JlK2w" type="_n5nRcKk6Ee-lntgJ_JlK2w" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Interface" xmi:id="_n5sJ8Kk6Ee-lntgJ_JlK2w" name="SystemAttributes" visibility="package">
              <generalization xmi:id="_oc8A8ak6Ee-lntgJ_JlK2w" general="_n29mEKk6Ee-lntgJ_JlK2w"/>
              <nestedClassifier xmi:type="uml:Enumeration" xmi:id="_n5v0UKk6Ee-lntgJ_JlK2w" name="ScheduleChoices">
                <ownedLiteral xmi:id="_n5xCcak6Ee-lntgJ_JlK2w" name="PRIORITY"/>
                <ownedLiteral xmi:id="_n5xCcqk6Ee-lntgJ_JlK2w" name="RM"/>
                <ownedLiteral xmi:id="_n5xpgKk6Ee-lntgJ_JlK2w" name="DM"/>
                <ownedLiteral xmi:id="_n5zesKk6Ee-lntgJ_JlK2w" name="RTHART"/>
                <ownedLiteral xmi:id="_n5zesak6Ee-lntgJ_JlK2w" name="POSET_PRIORITY"/>
                <ownedLiteral xmi:id="_n5zesqk6Ee-lntgJ_JlK2w" name="POSET_RM"/>
                <ownedLiteral xmi:id="_n5zes6k6Ee-lntgJ_JlK2w" name="POSET_DM"/>
                <ownedLiteral xmi:id="_n5zetKk6Ee-lntgJ_JlK2w" name="WARP_POSET_PRIORITY"/>
                <ownedLiteral xmi:id="_n50FwKk6Ee-lntgJ_JlK2w" name="WARP_POSET_RM"/>
                <ownedLiteral xmi:id="_n52iAKk6Ee-lntgJ_JlK2w" name="WARP_POSET_DM"/>
                <ownedLiteral xmi:id="_n53JEKk6Ee-lntgJ_JlK2w" name="CONNECTIVITY_POSET_PRIORITY"/>
                <ownedLiteral xmi:id="_n53JEak6Ee-lntgJ_JlK2w" name="CONNECTIVITY_POSET_RM"/>
                <ownedLiteral xmi:id="_n54-QKk6Ee-lntgJ_JlK2w" name="CONNECTIVITY_POSET_DM"/>
              </nestedClassifier>
              <ownedAttribute xmi:id="_n54-Qak6Ee-lntgJ_JlK2w" name="numChannels" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_n55lUKk6Ee-lntgJ_JlK2w" name="numFaults" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_n56MYKk6Ee-lntgJ_JlK2w" name="name" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_n56MYak6Ee-lntgJ_JlK2w" name="schedulerName" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_n56MYqk6Ee-lntgJ_JlK2w" name="numTransmissions" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_n56zcKk6Ee-lntgJ_JlK2w" name="optimizationFlag" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_n57agKk6Ee-lntgJ_JlK2w" name="SystemFactory">
              <ownedComment xmi:id="_ojCo8ak6Ee-lntgJ_JlK2w">
                <body>Factory Class to create a schedule instance.&#xD;
This factory can be used to create different&#xD;
types of schedules.&#xD;
@author sgoddard&#xD;
 *</body>
              </ownedComment>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oidaKak6Ee-lntgJ_JlK2w" name="create" specification="_oc9PEak6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_oidaKqk6Ee-lntgJ_JlK2w" name="workload" type="_n8NScKk6Ee-lntgJ_JlK2w"/>
                <ownedParameter xmi:id="_oidaK6k6Ee-lntgJ_JlK2w" name="numChannels">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_oidaLKk6Ee-lntgJ_JlK2w" name="choice" type="_n5v0UKk6Ee-lntgJ_JlK2w"/>
                <ownedParameter xmi:id="_oidaLak6Ee-lntgJ_JlK2w" type="_n7T6kKk6Ee-lntgJ_JlK2w" direction="return"/>
                <language>java</language>
                <body>return new WarpSystem(workload,numChannels, choice);&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_oc9PEak6Ee-lntgJ_JlK2w" name="create" isStatic="true" method="_oidaKak6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_oc9PEqk6Ee-lntgJ_JlK2w" name="workload" type="_n8NScKk6Ee-lntgJ_JlK2w"/>
                <ownedParameter xmi:id="_oc9PE6k6Ee-lntgJ_JlK2w" name="numChannels">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_oc9PFKk6Ee-lntgJ_JlK2w" name="choice" type="_n5v0UKk6Ee-lntgJ_JlK2w"/>
                <ownedParameter xmi:id="_oc9PFak6Ee-lntgJ_JlK2w" type="_n7T6kKk6Ee-lntgJ_JlK2w" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_n5_E4Kk6Ee-lntgJ_JlK2w" name="Table">
              <generalization xmi:id="_ofIZVak6Ee-lntgJ_JlK2w" general="_oawPoKk6Ee-lntgJ_JlK2w"/>
              <ownedAttribute xmi:id="_ogzNQqk6Ee-lntgJ_JlK2w" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_ogzNQ6k6Ee-lntgJ_JlK2w" value="1L"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oidaLqk6Ee-lntgJ_JlK2w" name="Table" specification="_n6ATAKk6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_oidaL6k6Ee-lntgJ_JlK2w" type="_n5_E4Kk6Ee-lntgJ_JlK2w" direction="return"/>
                <language>java</language>
                <body>super();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oidaMKk6Ee-lntgJ_JlK2w" name="Table" specification="_n6A6Eqk6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_oidaMak6Ee-lntgJ_JlK2w" name="row">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_oidaMqk6Ee-lntgJ_JlK2w" name="column">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_oidaM6k6Ee-lntgJ_JlK2w" type="_n5_E4Kk6Ee-lntgJ_JlK2w" direction="return"/>
                <language>java</language>
                <body>super();&#xD;
		&#xD;
		for(int i=0; i &lt; row; i++) {&#xD;
			ArrayList&lt;E> nullRow = new ArrayList&lt;E>();&#xD;
			for(int j=0; j &lt; column; j++) {&#xD;
				nullRow.add(null);&#xD;
			}&#xD;
			this.add((E) nullRow);&#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oieBMKk6Ee-lntgJ_JlK2w" name="getNumRows" specification="_n6CvQ6k6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_oieBMak6Ee-lntgJ_JlK2w" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>return this.size();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oieBMqk6Ee-lntgJ_JlK2w" name="getNumColumns" specification="_n6DWUak6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_oieBM6k6Ee-lntgJ_JlK2w" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var numColumns = 0;&#xD;
		var numRows = this.size();&#xD;
		if (numRows > 0) {&#xD;
			var lastRow = this.get(numRows-1);&#xD;
			numColumns = lastRow.size();&#xD;
		}&#xD;
		return numColumns;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oieBNKk6Ee-lntgJ_JlK2w" name="set" specification="_ofIZUKk6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_oieBNak6Ee-lntgJ_JlK2w" name="row">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_oieBNqk6Ee-lntgJ_JlK2w" name="column">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_oieBN6k6Ee-lntgJ_JlK2w" name="element" type="_oeQPkak6Ee-lntgJ_JlK2w"/>
                <language>java</language>
                <body>E fullRow;&#xD;
		if (row &lt; this.size()) {&#xD;
			fullRow = this.get(row);&#xD;
			if (column &lt; fullRow.size()) {&#xD;
				fullRow.set(column, element);&#xD;
			}&#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oieBOKk6Ee-lntgJ_JlK2w" name="get" specification="_n6D9YKk6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_oieBOak6Ee-lntgJ_JlK2w" name="row">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_oieBOqk6Ee-lntgJ_JlK2w" name="column">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_oieBO6k6Ee-lntgJ_JlK2w" type="_oeQPkak6Ee-lntgJ_JlK2w" direction="return"/>
                <language>java</language>
                <body>T element = null;&#xD;
		E fullRow;&#xD;
		if (row &lt; this.size()) {&#xD;
			fullRow = this.get(row);&#xD;
			if (column &lt; fullRow.size()) {&#xD;
				element = fullRow.get(column);&#xD;
			}&#xD;
		}&#xD;
		return element;&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_n6ATAKk6Ee-lntgJ_JlK2w" name="Table" method="_oidaLqk6Ee-lntgJ_JlK2w">
                <eAnnotations xmi:id="_n6ATAak6Ee-lntgJ_JlK2w" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_n6A6EKk6Ee-lntgJ_JlK2w" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_n6A6Eak6Ee-lntgJ_JlK2w" type="_n5_E4Kk6Ee-lntgJ_JlK2w" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_n6A6Eqk6Ee-lntgJ_JlK2w" name="Table" method="_oidaMKk6Ee-lntgJ_JlK2w">
                <eAnnotations xmi:id="_n6CvQKk6Ee-lntgJ_JlK2w" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_n6CvQak6Ee-lntgJ_JlK2w" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_n6A6E6k6Ee-lntgJ_JlK2w" name="row">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_n6A6FKk6Ee-lntgJ_JlK2w" name="column">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_n6CvQqk6Ee-lntgJ_JlK2w" type="_n5_E4Kk6Ee-lntgJ_JlK2w" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_n6CvQ6k6Ee-lntgJ_JlK2w" name="getNumRows" method="_oieBMKk6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_n6DWUKk6Ee-lntgJ_JlK2w" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_n6DWUak6Ee-lntgJ_JlK2w" name="getNumColumns" method="_oieBMqk6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_n6DWUqk6Ee-lntgJ_JlK2w" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_n6D9YKk6Ee-lntgJ_JlK2w" name="get" method="_oieBOKk6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_n6D9Yak6Ee-lntgJ_JlK2w" name="row">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_n6D9Yqk6Ee-lntgJ_JlK2w" name="column">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ofIZVKk6Ee-lntgJ_JlK2w" type="_oeQPkak6Ee-lntgJ_JlK2w" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_ofIZUKk6Ee-lntgJ_JlK2w" name="set" method="_oieBNKk6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_ofIZUak6Ee-lntgJ_JlK2w" name="row">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ofIZUqk6Ee-lntgJ_JlK2w" name="column">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ofIZU6k6Ee-lntgJ_JlK2w" name="element" type="_oeQPkak6Ee-lntgJ_JlK2w"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Interface" xmi:id="_n6FLgKk6Ee-lntgJ_JlK2w" name="Visualization">
              <ownedComment xmi:id="_ojCo8qk6Ee-lntgJ_JlK2w">
                <body>@author sgoddard&#xD;
@version 1.4</body>
              </ownedComment>
              <nestedClassifier xmi:type="uml:Enumeration" xmi:id="_n6FykKk6Ee-lntgJ_JlK2w" name="SystemChoices">
                <ownedLiteral xmi:id="_n6GZoak6Ee-lntgJ_JlK2w" name="SOURCE"/>
                <ownedLiteral xmi:id="_n6HAsKk6Ee-lntgJ_JlK2w" name="RELIABILITIES"/>
                <ownedLiteral xmi:id="_n6HAsak6Ee-lntgJ_JlK2w" name="SIMULATOR_INPUT"/>
                <ownedLiteral xmi:id="_n6HAsqk6Ee-lntgJ_JlK2w" name="LATENCY"/>
                <ownedLiteral xmi:id="_n6HAs6k6Ee-lntgJ_JlK2w" name="LATENCY_REPORT"/>
                <ownedLiteral xmi:id="_n6HAtKk6Ee-lntgJ_JlK2w" name="DEADLINE_REPORT"/>
                <ownedLiteral xmi:id="_n6HAtak6Ee-lntgJ_JlK2w" name="CHANNEL"/>
              </nestedClassifier>
              <nestedClassifier xmi:type="uml:Enumeration" xmi:id="_n6IO0Kk6Ee-lntgJ_JlK2w" name="WorkLoadChoices">
                <ownedLiteral xmi:id="_n6Jc8Kk6Ee-lntgJ_JlK2w" name="INPUT_GRAPH"/>
                <ownedLiteral xmi:id="_n6Jc8ak6Ee-lntgJ_JlK2w" name="COMUNICATION_GRAPH"/>
                <ownedLiteral xmi:id="_n6Jc8qk6Ee-lntgJ_JlK2w" name="GRAPHVIZ"/>
              </nestedClassifier>
              <ownedOperation xmi:id="_n6KEAKk6Ee-lntgJ_JlK2w" name="toDisplay"/>
              <ownedOperation xmi:id="_n6KEAak6Ee-lntgJ_JlK2w" name="toFile"/>
              <ownedOperation xmi:id="_n6KEAqk6Ee-lntgJ_JlK2w" name="toString">
                <ownedParameter xmi:id="_n6KEA6k6Ee-lntgJ_JlK2w" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_n6KrEKk6Ee-lntgJ_JlK2w" name="VisualizationFactory">
              <ownedComment xmi:id="_ojCo86k6Ee-lntgJ_JlK2w">
                <body>Factory Class to create a visualization instance.&#xD;
This factory can be used to create different&#xD;
types of visualizations.&#xD;
 *&#xD;
@author sgoddard&#xD;
@version 1.8 Fall 2024</body>
              </ownedComment>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oieoQKk6Ee-lntgJ_JlK2w" name="createVisualization" specification="_oc_EQak6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_oieoQak6Ee-lntgJ_JlK2w" name="warp" type="_n7T6kKk6Ee-lntgJ_JlK2w"/>
                <ownedParameter xmi:id="_oieoQqk6Ee-lntgJ_JlK2w" name="outputDirectory">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_oieoQ6k6Ee-lntgJ_JlK2w" name="choice" type="_n6FykKk6Ee-lntgJ_JlK2w"/>
                <ownedParameter xmi:id="_oieoRKk6Ee-lntgJ_JlK2w" type="_n6FLgKk6Ee-lntgJ_JlK2w" direction="return"/>
                <language>java</language>
                <body>return new VisualizationImplementation(warp, outputDirectory, choice);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oieoRak6Ee-lntgJ_JlK2w" name="createVisualization" specification="_oc_ERqk6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_oieoRqk6Ee-lntgJ_JlK2w" name="workload" type="_n8NScKk6Ee-lntgJ_JlK2w"/>
                <ownedParameter xmi:id="_oieoR6k6Ee-lntgJ_JlK2w" name="outputDirectory">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_oieoSKk6Ee-lntgJ_JlK2w" name="choice" type="_n6IO0Kk6Ee-lntgJ_JlK2w"/>
                <ownedParameter xmi:id="_oieoSak6Ee-lntgJ_JlK2w" type="_n6FLgKk6Ee-lntgJ_JlK2w" direction="return"/>
                <language>java</language>
                <body>return new VisualizationImplementation(workload, outputDirectory, choice);&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_oc_EQak6Ee-lntgJ_JlK2w" name="createVisualization" isStatic="true" method="_oieoQKk6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_oc_EQqk6Ee-lntgJ_JlK2w" name="warp" type="_n7T6kKk6Ee-lntgJ_JlK2w"/>
                <ownedParameter xmi:id="_oc_EQ6k6Ee-lntgJ_JlK2w" name="outputDirectory">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_oc_ERKk6Ee-lntgJ_JlK2w" name="choice" type="_n6FykKk6Ee-lntgJ_JlK2w"/>
                <ownedParameter xmi:id="_oc_ERak6Ee-lntgJ_JlK2w" type="_n6FLgKk6Ee-lntgJ_JlK2w" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_oc_ERqk6Ee-lntgJ_JlK2w" name="createVisualization" isStatic="true" method="_oieoRak6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_oc_ER6k6Ee-lntgJ_JlK2w" name="workload" type="_n8NScKk6Ee-lntgJ_JlK2w"/>
                <ownedParameter xmi:id="_oc_rUKk6Ee-lntgJ_JlK2w" name="outputDirectory">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_oc_rUak6Ee-lntgJ_JlK2w" name="choice" type="_n6IO0Kk6Ee-lntgJ_JlK2w"/>
                <ownedParameter xmi:id="_oc_rUqk6Ee-lntgJ_JlK2w" type="_n6FLgKk6Ee-lntgJ_JlK2w" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_n6OVcKk6Ee-lntgJ_JlK2w" name="VisualizationImplementation">
              <ownedComment xmi:id="_ojCo9Kk6Ee-lntgJ_JlK2w">
                <body>Handles all visualizations dealt with in the Warp program. This includes creating&#xD;
visualizations with WarpInterface warp, Workload workload. Its main function&#xD;
is checking the input to determine which type of visualization is being requested &#xD;
and running appropriate visualization.&#xD;
@author sgoddard&#xD;
@version 1.5</body>
              </ownedComment>
              <ownedAttribute xmi:id="_ogz0UKk6Ee-lntgJ_JlK2w" name="visualization" visibility="private" type="_nzwhEKk6Ee-lntgJ_JlK2w" association="_okRYAak6Ee-lntgJ_JlK2w"/>
              <ownedAttribute xmi:id="_ogz0Uqk6Ee-lntgJ_JlK2w" name="fileContent" visibility="private" type="_nzwhEKk6Ee-lntgJ_JlK2w" association="_okR_Eak6Ee-lntgJ_JlK2w"/>
              <ownedAttribute xmi:id="_ogz0VKk6Ee-lntgJ_JlK2w" name="window" visibility="private" type="_n01fIKk6Ee-lntgJ_JlK2w" association="_okSmIak6Ee-lntgJ_JlK2w"/>
              <ownedAttribute xmi:id="_og0bYak6Ee-lntgJ_JlK2w" name="fileName" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_og0bY6k6Ee-lntgJ_JlK2w" name="inputFileName" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_og1Ccak6Ee-lntgJ_JlK2w" name="fileNameTemplate" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_og1Cc6k6Ee-lntgJ_JlK2w" name="fm" visibility="private" type="_n0HGYKk6Ee-lntgJ_JlK2w" association="_okTNMKk6Ee-lntgJ_JlK2w">
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_og1CdKk6Ee-lntgJ_JlK2w" value="null"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_og1pgak6Ee-lntgJ_JlK2w" name="warp" visibility="private" type="_n7T6kKk6Ee-lntgJ_JlK2w" association="_okT0QKk6Ee-lntgJ_JlK2w">
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_og1pgqk6Ee-lntgJ_JlK2w" value="null"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_og1phKk6Ee-lntgJ_JlK2w" name="workLoad" visibility="private" type="_n8NScKk6Ee-lntgJ_JlK2w" association="_okT0Q6k6Ee-lntgJ_JlK2w">
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_og1phak6Ee-lntgJ_JlK2w" value="null"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_og2Qkak6Ee-lntgJ_JlK2w" name="visualizationObject" visibility="private" type="_n6jsoKk6Ee-lntgJ_JlK2w" association="_okUbUak6Ee-lntgJ_JlK2w"/>
              <interfaceRealization xmi:id="_oc_rU6k6Ee-lntgJ_JlK2w" client="_n6OVcKk6Ee-lntgJ_JlK2w" supplier="_n6FLgKk6Ee-lntgJ_JlK2w" contract="_n6FLgKk6Ee-lntgJ_JlK2w"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oifPUKk6Ee-lntgJ_JlK2w" name="VisualizationImplementation" specification="_ofKOgak6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_oifPUak6Ee-lntgJ_JlK2w" name="warp" type="_n7T6kKk6Ee-lntgJ_JlK2w"/>
                <ownedParameter xmi:id="_oifPUqk6Ee-lntgJ_JlK2w" name="outputDirectory">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_oifPU6k6Ee-lntgJ_JlK2w" name="choice" type="_ofJncKk6Ee-lntgJ_JlK2w"/>
                <ownedParameter xmi:id="_oifPVKk6Ee-lntgJ_JlK2w" type="_n6OVcKk6Ee-lntgJ_JlK2w" direction="return"/>
                <language>java</language>
                <body>this.fm = new FileManager();&#xD;
 this.warp = warp;&#xD;
 inputFileName = warp.toWorkload().getInputFileName();&#xD;
 this.fileNameTemplate = createFileNameTemplate(outputDirectory);&#xD;
 visualizationObject = null;&#xD;
 createVisualization(choice);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oifPVak6Ee-lntgJ_JlK2w" name="VisualizationImplementation" specification="_ofK1kqk6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_oifPVqk6Ee-lntgJ_JlK2w" name="workLoad" type="_n8NScKk6Ee-lntgJ_JlK2w"/>
                <ownedParameter xmi:id="_oifPV6k6Ee-lntgJ_JlK2w" name="outputDirectory">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_oifPWKk6Ee-lntgJ_JlK2w" name="choice" type="_ofK1kKk6Ee-lntgJ_JlK2w"/>
                <ownedParameter xmi:id="_oifPWak6Ee-lntgJ_JlK2w" type="_n6OVcKk6Ee-lntgJ_JlK2w" direction="return"/>
                <language>java</language>
                <body>this.fm = new FileManager();&#xD;
 this.workLoad = workLoad;&#xD;
 inputFileName = workLoad.getInputFileName();&#xD;
 this.fileNameTemplate = createFileNameTemplate(outputDirectory);&#xD;
 visualizationObject = null;&#xD;
 createVisualization(choice);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oifPWqk6Ee-lntgJ_JlK2w" name="toDisplay" specification="_n6RYwKk6Ee-lntgJ_JlK2w">
                <language>java</language>
                <body>window = visualizationObject.displayVisualization();&#xD;
 if (window != null) {&#xD;
   window.setVisible();&#xD;
 }&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oifPW6k6Ee-lntgJ_JlK2w" name="toFile" specification="_n6Sm4qk6Ee-lntgJ_JlK2w">
                <language>java</language>
                <body>fm.writeFile(fileName, fileContent.toString());&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oif2YKk6Ee-lntgJ_JlK2w" name="toString" specification="_n6YGcKk6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_oif2Yak6Ee-lntgJ_JlK2w" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return visualization.toString();&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oif2Yqk6Ee-lntgJ_JlK2w" name="createVisualization" specification="_ofLcoKk6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_oif2Y6k6Ee-lntgJ_JlK2w" name="choice" type="_ofJncKk6Ee-lntgJ_JlK2w"/>
                <language>java</language>
                <body>switch (choice) { // select the requested visualization&#xD;
   case SOURCE:&#xD;
     createVisualization(new ProgramVisualization(warp));&#xD;
     break;&#xD;
&#xD;
   case RELIABILITIES:&#xD;
     // TODO Implement Reliability Analysis Visualization&#xD;
     createVisualization(new ReliabilityVisualization(warp));&#xD;
     break;&#xD;
&#xD;
   case SIMULATOR_INPUT:&#xD;
     // TODO Implement Simulator Input Visualization&#xD;
     createVisualization(new NotImplentedVisualization(&quot;SimInputNotImplemented&quot;));&#xD;
     break;&#xD;
&#xD;
   case LATENCY:&#xD;
     // TODO Implement Latency Analysis Visualization&#xD;
     createVisualization(new LatencyVisualization(warp));&#xD;
     break;&#xD;
&#xD;
   case CHANNEL:&#xD;
     // TODO Implement Channel Analysis Visualization&#xD;
     createVisualization(new ChannelVisualization(warp));&#xD;
     break;&#xD;
&#xD;
   case LATENCY_REPORT:&#xD;
     createVisualization(new ReportVisualization(fm, warp,&#xD;
         new LatencyAnalysis(warp).latencyReport(), &quot;Latency&quot;));&#xD;
     break;&#xD;
&#xD;
   case DEADLINE_REPORT:&#xD;
     createVisualization(&#xD;
         new ReportVisualization(fm, warp, warp.toProgram().deadlineMisses(), &quot;DeadlineMisses&quot;));&#xD;
     break;&#xD;
&#xD;
   default:&#xD;
     createVisualization(new NotImplentedVisualization(&quot;UnexpectedChoice&quot;));&#xD;
     break;&#xD;
 }&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oif2ZKk6Ee-lntgJ_JlK2w" name="createVisualization" specification="_ofLcoqk6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_oif2Zak6Ee-lntgJ_JlK2w" name="choice" type="_ofK1kKk6Ee-lntgJ_JlK2w"/>
                <language>java</language>
                <body>switch (choice) { // select the requested visualization&#xD;
   case COMUNICATION_GRAPH:&#xD;
     // createWarpVisualization();&#xD;
     createVisualization(new CommunicationGraph(fm, workLoad));&#xD;
     break;&#xD;
&#xD;
   case GRAPHVIZ:&#xD;
     createVisualization(new GraphViz(fm, workLoad.toString()));&#xD;
     break;&#xD;
&#xD;
   case INPUT_GRAPH:&#xD;
     createVisualization(workLoad);&#xD;
     break;&#xD;
&#xD;
   default:&#xD;
     createVisualization(new NotImplentedVisualization(&quot;UnexpectedChoice&quot;));&#xD;
     break;&#xD;
 }&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oif2Zqk6Ee-lntgJ_JlK2w" name="createVisualization" specification="_ofMDsKk6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_oif2Z6k6Ee-lntgJ_JlK2w" name="obj" type="_oeQPkak6Ee-lntgJ_JlK2w"/>
                <language>java</language>
                <body>visualization = obj.visualization();&#xD;
 fileContent = obj.fileVisualization();&#xD;
 /* display is file content printed to console */&#xD;
 fileName = obj.createFile(fileNameTemplate); // in output directory&#xD;
 visualizationObject = obj;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oif2aKk6Ee-lntgJ_JlK2w" name="createFileNameTemplate" specification="_n6ZUkKk6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_oif2aak6Ee-lntgJ_JlK2w" name="outputDirectory">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_oif2aqk6Ee-lntgJ_JlK2w" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>String fileNameTemplate;&#xD;
 var workingDirectory = fm.getBaseDirectory();&#xD;
 var newDirectory = fm.createDirectory(workingDirectory, outputDirectory);&#xD;
 // Now create the fileNameTemplate using full output path and input filename&#xD;
 if (inputFileName.contains(&quot;/&quot;)) {&#xD;
   var index = inputFileName.lastIndexOf(&quot;/&quot;) + 1;&#xD;
   fileNameTemplate = newDirectory + File.separator + inputFileName.substring(index);&#xD;
 } else {&#xD;
   fileNameTemplate = newDirectory + File.separator + inputFileName;&#xD;
 }&#xD;
 return fileNameTemplate;&#xD;
  </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_n6RYwKk6Ee-lntgJ_JlK2w" name="toDisplay" method="_oifPWqk6Ee-lntgJ_JlK2w"/>
              <ownedOperation xmi:id="_n6Sm4qk6Ee-lntgJ_JlK2w" name="toFile" method="_oifPW6k6Ee-lntgJ_JlK2w"/>
              <ownedOperation xmi:id="_n6YGcKk6Ee-lntgJ_JlK2w" name="toString" method="_oif2YKk6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_n6YGcak6Ee-lntgJ_JlK2w" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_n6ZUkKk6Ee-lntgJ_JlK2w" name="createFileNameTemplate" visibility="private" method="_oif2aKk6Ee-lntgJ_JlK2w">
                <ownedComment xmi:id="_ojDQBKk6Ee-lntgJ_JlK2w">
                  <body>Creates newDirectory of the workingDirectory and input outputDirectory&#xD;
   * and returns a fileNameTemplate of the newDirectory.&#xD;
   * @param outputDirectory&#xD;
   * @return fileNameTemplate of the input outputDirectory</body>
                </ownedComment>
                <ownedParameter xmi:id="_n6ZUkak6Ee-lntgJ_JlK2w" name="outputDirectory">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_n6ZUkqk6Ee-lntgJ_JlK2w" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_ofKOgak6Ee-lntgJ_JlK2w" name="VisualizationImplementation" method="_oifPUKk6Ee-lntgJ_JlK2w">
                <eAnnotations xmi:id="_ofKOhak6Ee-lntgJ_JlK2w" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_ofKOhqk6Ee-lntgJ_JlK2w" key="create"/>
                </eAnnotations>
                <ownedComment xmi:id="_ojDQAKk6Ee-lntgJ_JlK2w">
                  <body>Constructor sets VisualizationImplementation attributes from given input. Creates &#xD;
   * new FileManager(), converts WarpInterface warp input to Wordload. This allows the&#xD;
   * program to get the input file name and create the file name template from outputDirectory&#xD;
   * input. Creates visualization with SystemChoices choice input.&#xD;
   * @param warp&#xD;
   * @param outputDirectory&#xD;
   * @param choice</body>
                </ownedComment>
                <ownedParameter xmi:id="_ofKOgqk6Ee-lntgJ_JlK2w" name="warp" type="_n7T6kKk6Ee-lntgJ_JlK2w"/>
                <ownedParameter xmi:id="_ofKOg6k6Ee-lntgJ_JlK2w" name="outputDirectory">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ofKOhKk6Ee-lntgJ_JlK2w" name="choice" type="_ofJncKk6Ee-lntgJ_JlK2w"/>
                <ownedParameter xmi:id="_ofKOh6k6Ee-lntgJ_JlK2w" type="_n6OVcKk6Ee-lntgJ_JlK2w" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_ofK1kqk6Ee-lntgJ_JlK2w" name="VisualizationImplementation" method="_oifPVak6Ee-lntgJ_JlK2w">
                <eAnnotations xmi:id="_ofK1lqk6Ee-lntgJ_JlK2w" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_ofK1l6k6Ee-lntgJ_JlK2w" key="create"/>
                </eAnnotations>
                <ownedComment xmi:id="_ojDQAak6Ee-lntgJ_JlK2w">
                  <body>Constructor sets VisualizationImplementation attributes from given input. Creates &#xD;
   * new FileManager(). Sets input workLoad to a new workLoad and gets the input file name&#xD;
   * from new workLoad. Creates file name template from outputDirectory input and creates&#xD;
   * visualization with WorkLoadChoices choice input.&#xD;
   * @param workLoad the Workload being used&#xD;
   * @param outputDirectory create fileNameTemplate with&#xD;
   * @param choice create visualization of</body>
                </ownedComment>
                <ownedParameter xmi:id="_ofK1k6k6Ee-lntgJ_JlK2w" name="workLoad" type="_n8NScKk6Ee-lntgJ_JlK2w"/>
                <ownedParameter xmi:id="_ofK1lKk6Ee-lntgJ_JlK2w" name="outputDirectory">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ofK1lak6Ee-lntgJ_JlK2w" name="choice" type="_ofK1kKk6Ee-lntgJ_JlK2w"/>
                <ownedParameter xmi:id="_ofK1mKk6Ee-lntgJ_JlK2w" type="_n6OVcKk6Ee-lntgJ_JlK2w" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_ofLcoKk6Ee-lntgJ_JlK2w" name="createVisualization" visibility="private" method="_oif2Yqk6Ee-lntgJ_JlK2w">
                <ownedComment xmi:id="_ojDQAqk6Ee-lntgJ_JlK2w">
                  <body>Checks which SystemChoices choice is requested and runs &#xD;
   * appropriate visualization&#xD;
   * @param choice</body>
                </ownedComment>
                <ownedParameter xmi:id="_ofLcoak6Ee-lntgJ_JlK2w" name="choice" type="_ofJncKk6Ee-lntgJ_JlK2w"/>
              </ownedOperation>
              <ownedOperation xmi:id="_ofLcoqk6Ee-lntgJ_JlK2w" name="createVisualization" visibility="private" method="_oif2ZKk6Ee-lntgJ_JlK2w">
                <ownedComment xmi:id="_ojDQA6k6Ee-lntgJ_JlK2w">
                  <body>Checks which WorkLoadChoices choice is requested and runs&#xD;
   * appropriate graph visualization&#xD;
   * @param choice</body>
                </ownedComment>
                <ownedParameter xmi:id="_ofLco6k6Ee-lntgJ_JlK2w" name="choice" type="_ofK1kKk6Ee-lntgJ_JlK2w"/>
              </ownedOperation>
              <ownedOperation xmi:id="_ofMDsKk6Ee-lntgJ_JlK2w" name="createVisualization" visibility="private" method="_oif2Zqk6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_ofMDsak6Ee-lntgJ_JlK2w" name="obj" type="_oeQPkak6Ee-lntgJ_JlK2w"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_n6jsoKk6Ee-lntgJ_JlK2w" name="VisualizationObject" visibility="package" isAbstract="true">
              <ownedComment xmi:id="_ojDQBak6Ee-lntgJ_JlK2w">
                <body>@author sgoddard&#xD;
@version 1.5&#xD;
 *</body>
              </ownedComment>
              <ownedAttribute xmi:id="_og23oKk6Ee-lntgJ_JlK2w" name="fm" visibility="private" type="_n0HGYKk6Ee-lntgJ_JlK2w" association="_okVCYak6Ee-lntgJ_JlK2w"/>
              <ownedAttribute xmi:id="_og3esKk6Ee-lntgJ_JlK2w" name="suffix" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_og3esqk6Ee-lntgJ_JlK2w" name="nameExtension" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_og3etKk6Ee-lntgJ_JlK2w" name="NOT_IMPLEMENTED" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_og4FwKk6Ee-lntgJ_JlK2w" value="&quot;This visualization has not been implemented.&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_og4Fwak6Ee-lntgJ_JlK2w" name="visualizationData" visibility="protected">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_og4Fwqk6Ee-lntgJ_JlK2w" value="*"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oif2a6k6Ee-lntgJ_JlK2w" name="VisualizationObject" specification="_odCHkKk6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_oif2bKk6Ee-lntgJ_JlK2w" name="fm" type="_n0HGYKk6Ee-lntgJ_JlK2w"/>
                <ownedParameter xmi:id="_oif2bak6Ee-lntgJ_JlK2w" name="workLoad" type="_n8NScKk6Ee-lntgJ_JlK2w"/>
                <ownedParameter xmi:id="_oif2bqk6Ee-lntgJ_JlK2w" name="suffix">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_oif2b6k6Ee-lntgJ_JlK2w" type="_n6jsoKk6Ee-lntgJ_JlK2w" direction="return"/>
                <language>java</language>
                <body>this.fm = fm;&#xD;
 this.nameExtension = String.format(&quot;-%sM-%sE2E&quot;,&#xD;
     String.valueOf(workLoad.getMinPacketReceptionRate()), String.valueOf(workLoad.getE2e()));&#xD;
 this.suffix = suffix;&#xD;
 visualizationData = null;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oigdcKk6Ee-lntgJ_JlK2w" name="VisualizationObject" specification="_odCupqk6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_oigdcak6Ee-lntgJ_JlK2w" name="fm" type="_n0HGYKk6Ee-lntgJ_JlK2w"/>
                <ownedParameter xmi:id="_oigdcqk6Ee-lntgJ_JlK2w" name="warp" type="_n5sJ8Kk6Ee-lntgJ_JlK2w"/>
                <ownedParameter xmi:id="_oigdc6k6Ee-lntgJ_JlK2w" name="suffix">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_oigddKk6Ee-lntgJ_JlK2w" type="_n6jsoKk6Ee-lntgJ_JlK2w" direction="return"/>
                <language>java</language>
                <body>this.fm = fm;&#xD;
 if (warp.getNumFaults() > 0) {&#xD;
   this.nameExtension = nameExtension(warp.getSchedulerName(), warp.getNumFaults());&#xD;
 } else {&#xD;
   this.nameExtension =&#xD;
       nameExtension(warp.getSchedulerName(), warp.getMinPacketReceptionRate(), warp.getE2e());&#xD;
 }&#xD;
 this.suffix = suffix;&#xD;
 visualizationData = null;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oigddak6Ee-lntgJ_JlK2w" name="VisualizationObject" specification="_odDVtak6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_oigddqk6Ee-lntgJ_JlK2w" name="fm" type="_n0HGYKk6Ee-lntgJ_JlK2w"/>
                <ownedParameter xmi:id="_oigdd6k6Ee-lntgJ_JlK2w" name="warp" type="_n5sJ8Kk6Ee-lntgJ_JlK2w"/>
                <ownedParameter xmi:id="_oigdeKk6Ee-lntgJ_JlK2w" name="nameExtension">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_oigdeak6Ee-lntgJ_JlK2w" name="suffix">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_oigdeqk6Ee-lntgJ_JlK2w" type="_n6jsoKk6Ee-lntgJ_JlK2w" direction="return"/>
                <language>java</language>
                <body>this.fm = fm;&#xD;
 if (warp.getNumFaults() > 0) {&#xD;
   this.nameExtension =&#xD;
       nameExtension(warp.getSchedulerName(), warp.getNumFaults()) + nameExtension;&#xD;
 } else {&#xD;
   this.nameExtension =&#xD;
       nameExtension(warp.getSchedulerName(), warp.getMinPacketReceptionRate(), warp.getE2e())&#xD;
           + nameExtension;&#xD;
 }&#xD;
&#xD;
 this.suffix = suffix;&#xD;
 visualizationData = null;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oigde6k6Ee-lntgJ_JlK2w" name="VisualizationObject" specification="_odD8wqk6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_oigdfKk6Ee-lntgJ_JlK2w" name="fm" type="_n0HGYKk6Ee-lntgJ_JlK2w"/>
                <ownedParameter xmi:id="_oigdfak6Ee-lntgJ_JlK2w" name="nameExtension">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_oigdfqk6Ee-lntgJ_JlK2w" name="suffix">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_oigdf6k6Ee-lntgJ_JlK2w" type="_n6jsoKk6Ee-lntgJ_JlK2w" direction="return"/>
                <language>java</language>
                <body>this.fm = fm;&#xD;
 this.nameExtension = nameExtension;&#xD;
 this.suffix = suffix;&#xD;
 visualizationData = null;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oigdgKk6Ee-lntgJ_JlK2w" name="nameExtension" specification="_ofNR0Kk6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_oigdgak6Ee-lntgJ_JlK2w" name="schName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_oigdgqk6Ee-lntgJ_JlK2w" name="m" type="_oex0AKk6Ee-lntgJ_JlK2w"/>
                <ownedParameter xmi:id="_oigdg6k6Ee-lntgJ_JlK2w" name="e2e">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
                </ownedParameter>
                <ownedParameter xmi:id="_oigdhKk6Ee-lntgJ_JlK2w" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>String extension =&#xD;
     String.format(&quot;%s-%sM-%sE2E&quot;, schName, String.valueOf(m), String.valueOf(e2e));&#xD;
 return extension;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oigdhak6Ee-lntgJ_JlK2w" name="nameExtension" specification="_n6mv8Kk6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_oigdhqk6Ee-lntgJ_JlK2w" name="schName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_oigdh6k6Ee-lntgJ_JlK2w" name="numFaults">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_oigdiKk6Ee-lntgJ_JlK2w" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>String extension = String.format(&quot;%s-%sFaults&quot;, schName, String.valueOf(numFaults));&#xD;
 return extension;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oigdiak6Ee-lntgJ_JlK2w" name="getFileManager" specification="_n6nXAak6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_oigdiqk6Ee-lntgJ_JlK2w" type="_n0HGYKk6Ee-lntgJ_JlK2w" direction="return"/>
                <language>java</language>
                <body>return fm;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oigdi6k6Ee-lntgJ_JlK2w" name="visualization" specification="_n6nXAqk6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_oigdjKk6Ee-lntgJ_JlK2w" type="_nzwhEKk6Ee-lntgJ_JlK2w" direction="return"/>
                <language>java</language>
                <body>Description content = new Description();&#xD;
 var data = createVisualizationData();&#xD;
&#xD;
 if (data != null) {&#xD;
   String nodeString = String.join(&quot;\t&quot;, createColumnHeader()) + &quot;\n&quot;;&#xD;
   content.add(nodeString);&#xD;
&#xD;
   for (int rowIndex = 0; rowIndex &lt; data.length; rowIndex++) {&#xD;
     var row = data[rowIndex];&#xD;
     String rowString = String.join(&quot;\t&quot;, row) + &quot;\n&quot;;&#xD;
     content.add(rowString);&#xD;
   }&#xD;
 } else {&#xD;
   content.add(NOT_IMPLEMENTED);&#xD;
 }&#xD;
 return content;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oihEgKk6Ee-lntgJ_JlK2w" name="createFile" specification="_n6n-EKk6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_oihEgak6Ee-lntgJ_JlK2w" name="fileNameTemplate">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_oihEgqk6Ee-lntgJ_JlK2w" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return fm.createFile(fileNameTemplate, nameExtension, suffix);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oihEg6k6Ee-lntgJ_JlK2w" name="fileVisualization" specification="_n6n-E6k6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_oihEhKk6Ee-lntgJ_JlK2w" type="_nzwhEKk6Ee-lntgJ_JlK2w" direction="return"/>
                <language>java</language>
                <body>Description fileContent = createHeader();&#xD;
 fileContent.addAll(visualization());&#xD;
 fileContent.addAll(createFooter());&#xD;
 return fileContent;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oihEhak6Ee-lntgJ_JlK2w" name="displayVisualization" specification="_n6olIKk6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_oihEhqk6Ee-lntgJ_JlK2w" type="_n01fIKk6Ee-lntgJ_JlK2w" direction="return"/>
                <language>java</language>
                <body>return null; // not implemented&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oihEh6k6Ee-lntgJ_JlK2w" name="createHeader" specification="_n6olIak6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_oihEiKk6Ee-lntgJ_JlK2w" type="_nzwhEKk6Ee-lntgJ_JlK2w" direction="return"/>
                <language>java</language>
                <body>Description header = new Description();&#xD;
 return header;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oihEiak6Ee-lntgJ_JlK2w" name="createFooter" specification="_n6olIqk6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_oihEiqk6Ee-lntgJ_JlK2w" type="_nzwhEKk6Ee-lntgJ_JlK2w" direction="return"/>
                <language>java</language>
                <body>Description footer = new Description();&#xD;
 return footer;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oihEi6k6Ee-lntgJ_JlK2w" name="createColumnHeader" specification="_n6pMMKk6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_oihEjKk6Ee-lntgJ_JlK2w" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oihEjak6Ee-lntgJ_JlK2w" value="*"/>
                </ownedParameter>
                <language>java</language>
                <body>return new String[] {NOT_IMPLEMENTED};&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oihEjqk6Ee-lntgJ_JlK2w" name="createVisualizationData" specification="_n6rocak6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_oihEj6k6Ee-lntgJ_JlK2w" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oihEkKk6Ee-lntgJ_JlK2w" value="*"/>
                </ownedParameter>
                <language>java</language>
                <body>return visualizationData; // not implemented--returns null&#xD;
  </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_n6mv8Kk6Ee-lntgJ_JlK2w" name="nameExtension" visibility="private" method="_oigdhak6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_n6mv8ak6Ee-lntgJ_JlK2w" name="schName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_n6mv8qk6Ee-lntgJ_JlK2w" name="numFaults">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_n6nXAKk6Ee-lntgJ_JlK2w" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_n6nXAak6Ee-lntgJ_JlK2w" name="getFileManager" method="_oigdiak6Ee-lntgJ_JlK2w">
                <ownedComment xmi:id="_ojDQBqk6Ee-lntgJ_JlK2w">
                  <body>@return the fm</body>
                </ownedComment>
                <ownedParameter xmi:id="_odEj0Kk6Ee-lntgJ_JlK2w" type="_n0HGYKk6Ee-lntgJ_JlK2w" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_n6nXAqk6Ee-lntgJ_JlK2w" name="visualization" method="_oigdi6k6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_odEj0ak6Ee-lntgJ_JlK2w" type="_nzwhEKk6Ee-lntgJ_JlK2w" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_n6n-EKk6Ee-lntgJ_JlK2w" name="createFile" method="_oihEgKk6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_n6n-Eak6Ee-lntgJ_JlK2w" name="fileNameTemplate">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_n6n-Eqk6Ee-lntgJ_JlK2w" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_n6n-E6k6Ee-lntgJ_JlK2w" name="fileVisualization" method="_oihEg6k6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_odEj0qk6Ee-lntgJ_JlK2w" type="_nzwhEKk6Ee-lntgJ_JlK2w" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_n6olIKk6Ee-lntgJ_JlK2w" name="displayVisualization" method="_oihEhak6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_odEj06k6Ee-lntgJ_JlK2w" type="_n01fIKk6Ee-lntgJ_JlK2w" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_n6olIak6Ee-lntgJ_JlK2w" name="createHeader" visibility="protected" method="_oihEh6k6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_odEj1Kk6Ee-lntgJ_JlK2w" type="_nzwhEKk6Ee-lntgJ_JlK2w" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_n6olIqk6Ee-lntgJ_JlK2w" name="createFooter" visibility="protected" method="_oihEiak6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_odEj1ak6Ee-lntgJ_JlK2w" type="_nzwhEKk6Ee-lntgJ_JlK2w" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_n6pMMKk6Ee-lntgJ_JlK2w" name="createColumnHeader" visibility="protected" method="_oihEi6k6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_n6pMMak6Ee-lntgJ_JlK2w" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_n6pzQKk6Ee-lntgJ_JlK2w" value="*"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_n6rocak6Ee-lntgJ_JlK2w" name="createVisualizationData" visibility="protected" method="_oihEjqk6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_n6sPgKk6Ee-lntgJ_JlK2w" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_n6sPgak6Ee-lntgJ_JlK2w" value="*"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_odCHkKk6Ee-lntgJ_JlK2w" name="VisualizationObject" visibility="package" method="_oif2a6k6Ee-lntgJ_JlK2w">
                <eAnnotations xmi:id="_odCuo6k6Ee-lntgJ_JlK2w" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_odCupKk6Ee-lntgJ_JlK2w" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_odCuoKk6Ee-lntgJ_JlK2w" name="fm" type="_n0HGYKk6Ee-lntgJ_JlK2w"/>
                <ownedParameter xmi:id="_odCuoak6Ee-lntgJ_JlK2w" name="workLoad" type="_n8NScKk6Ee-lntgJ_JlK2w"/>
                <ownedParameter xmi:id="_odCuoqk6Ee-lntgJ_JlK2w" name="suffix">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_odCupak6Ee-lntgJ_JlK2w" type="_n6jsoKk6Ee-lntgJ_JlK2w" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_odCupqk6Ee-lntgJ_JlK2w" name="VisualizationObject" visibility="package" method="_oigdcKk6Ee-lntgJ_JlK2w">
                <eAnnotations xmi:id="_odDVsqk6Ee-lntgJ_JlK2w" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_odDVs6k6Ee-lntgJ_JlK2w" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_odCup6k6Ee-lntgJ_JlK2w" name="fm" type="_n0HGYKk6Ee-lntgJ_JlK2w"/>
                <ownedParameter xmi:id="_odDVsKk6Ee-lntgJ_JlK2w" name="warp" type="_n5sJ8Kk6Ee-lntgJ_JlK2w"/>
                <ownedParameter xmi:id="_odDVsak6Ee-lntgJ_JlK2w" name="suffix">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_odDVtKk6Ee-lntgJ_JlK2w" type="_n6jsoKk6Ee-lntgJ_JlK2w" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_odDVtak6Ee-lntgJ_JlK2w" name="VisualizationObject" visibility="package" method="_oigddak6Ee-lntgJ_JlK2w">
                <eAnnotations xmi:id="_odDVuqk6Ee-lntgJ_JlK2w" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_odD8wKk6Ee-lntgJ_JlK2w" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_odDVtqk6Ee-lntgJ_JlK2w" name="fm" type="_n0HGYKk6Ee-lntgJ_JlK2w"/>
                <ownedParameter xmi:id="_odDVt6k6Ee-lntgJ_JlK2w" name="warp" type="_n5sJ8Kk6Ee-lntgJ_JlK2w"/>
                <ownedParameter xmi:id="_odDVuKk6Ee-lntgJ_JlK2w" name="nameExtension">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_odDVuak6Ee-lntgJ_JlK2w" name="suffix">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_odD8wak6Ee-lntgJ_JlK2w" type="_n6jsoKk6Ee-lntgJ_JlK2w" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_odD8wqk6Ee-lntgJ_JlK2w" name="VisualizationObject" visibility="package" method="_oigde6k6Ee-lntgJ_JlK2w">
                <eAnnotations xmi:id="_odD8xqk6Ee-lntgJ_JlK2w" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_odD8x6k6Ee-lntgJ_JlK2w" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_odD8w6k6Ee-lntgJ_JlK2w" name="fm" type="_n0HGYKk6Ee-lntgJ_JlK2w"/>
                <ownedParameter xmi:id="_odD8xKk6Ee-lntgJ_JlK2w" name="nameExtension">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_odD8xak6Ee-lntgJ_JlK2w" name="suffix">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_odD8yKk6Ee-lntgJ_JlK2w" type="_n6jsoKk6Ee-lntgJ_JlK2w" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_ofNR0Kk6Ee-lntgJ_JlK2w" name="nameExtension" visibility="private" method="_oigdgKk6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_ofN44Kk6Ee-lntgJ_JlK2w" name="schName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ofN44ak6Ee-lntgJ_JlK2w" name="m" type="_oex0AKk6Ee-lntgJ_JlK2w"/>
                <ownedParameter xmi:id="_ofN44qk6Ee-lntgJ_JlK2w" name="e2e">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ofOf8Kk6Ee-lntgJ_JlK2w" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_n6xIAKk6Ee-lntgJ_JlK2w" name="Warp">
              <ownedComment xmi:id="_ojDQB6k6Ee-lntgJ_JlK2w">
                <body>The Warp class sets default values of constants and also sets the warp parameters for the&#xD;
given input. It creates and visualizes any requested output files and runs verification&#xD;
checks to make sure deadlines and reliability targets are met, and that there are no &#xD;
channel conflicts. Runs additional tests to make sure everything will run smoothly. This&#xD;
class also prints out all warp parameters along with Boolean expressions for if any flags&#xD;
are requested. &#xD;
@author sgoddard&#xD;
@version 1.8 Fall 2024</body>
              </ownedComment>
              <ownedAttribute xmi:id="_og4s0ak6Ee-lntgJ_JlK2w" name="NUM_CHANNELS" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_og4s0qk6Ee-lntgJ_JlK2w" value="16"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_og5T4Kk6Ee-lntgJ_JlK2w" name="MIN_LQ" visibility="private" isLeaf="true" isStatic="true" type="_oex0AKk6Ee-lntgJ_JlK2w" isReadOnly="true">
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_og5T4ak6Ee-lntgJ_JlK2w" value="0.9"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_og5T4qk6Ee-lntgJ_JlK2w" name="E2E" visibility="private" isLeaf="true" isStatic="true" type="_oex0AKk6Ee-lntgJ_JlK2w" isReadOnly="true">
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_og5T46k6Ee-lntgJ_JlK2w" value="0.99"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_og5T5Kk6Ee-lntgJ_JlK2w" name="DEFAULT_OUTPUT_SUB_DIRECTORY" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_og5T5ak6Ee-lntgJ_JlK2w" value="&quot;OutputFiles/&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_og5T5qk6Ee-lntgJ_JlK2w" name="DEFAULT_SCHEDULER" visibility="private" isLeaf="true" isStatic="true" type="_n5v0UKk6Ee-lntgJ_JlK2w" isReadOnly="true">
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_og5T56k6Ee-lntgJ_JlK2w" value="ScheduleChoices.PRIORITY"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_og5T6Kk6Ee-lntgJ_JlK2w" name="DEFAULT_FAULTS_TOLERATED" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_og5T6ak6Ee-lntgJ_JlK2w" value="0"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_og568Kk6Ee-lntgJ_JlK2w" name="nChannels" visibility="private" isStatic="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_og568qk6Ee-lntgJ_JlK2w" name="numFaults" visibility="private" isStatic="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_og569Kk6Ee-lntgJ_JlK2w" name="minLQ" visibility="private" isStatic="true" type="_oex0AKk6Ee-lntgJ_JlK2w"/>
              <ownedAttribute xmi:id="_og569qk6Ee-lntgJ_JlK2w" name="e2e" visibility="private" isStatic="true" type="_oex0AKk6Ee-lntgJ_JlK2w"/>
              <ownedAttribute xmi:id="_og6iAak6Ee-lntgJ_JlK2w" name="outputSubDirectory" visibility="private" isStatic="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_og6iA6k6Ee-lntgJ_JlK2w" name="guiRequested" isStatic="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_og6iBak6Ee-lntgJ_JlK2w" name="gvRequested" visibility="private" isStatic="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_og7JEak6Ee-lntgJ_JlK2w" name="wfRequested" visibility="private" isStatic="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_og7JE6k6Ee-lntgJ_JlK2w" name="raRequested" visibility="private" isStatic="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_og7JFak6Ee-lntgJ_JlK2w" name="laRequested" visibility="private" isStatic="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_og7wIKk6Ee-lntgJ_JlK2w" name="caRequested" visibility="private" isStatic="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_og7wIqk6Ee-lntgJ_JlK2w" name="simRequested" visibility="private" isStatic="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_og7wJKk6Ee-lntgJ_JlK2w" name="allRequested" visibility="private" isStatic="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_og8XMak6Ee-lntgJ_JlK2w" name="latencyRequested" visibility="private" isStatic="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_og8XM6k6Ee-lntgJ_JlK2w" name="schedulerRequested" visibility="private" isStatic="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_og8XNKk6Ee-lntgJ_JlK2w" value="false"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_og8-Qak6Ee-lntgJ_JlK2w" name="verboseMode" visibility="private" isStatic="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_og8-Q6k6Ee-lntgJ_JlK2w" name="inputFile" visibility="private" isStatic="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_og9lUak6Ee-lntgJ_JlK2w" name="schedulerSelected" visibility="private" isStatic="true" type="_n5v0UKk6Ee-lntgJ_JlK2w"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oihrkKk6Ee-lntgJ_JlK2w" name="main" specification="_n60LUKk6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_oihrkak6Ee-lntgJ_JlK2w" name="args">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oihrkqk6Ee-lntgJ_JlK2w" value="*"/>
                </ownedParameter>
                <language>java</language>
                <body>// parse command-line options and set WARP system parameters&#xD;
 setWarpParameters(args);&#xD;
&#xD;
 // and print out the values if in verbose mode&#xD;
 if (verboseMode) {&#xD;
   printWarpParameters();&#xD;
 }&#xD;
&#xD;
 // Create and visualize the workload&#xD;
 // inputFile string, which may be null,&#xD;
 WorkLoad workLoad = new WorkLoad(numFaults, minLQ, e2e, inputFile);&#xD;
 if (allRequested) {&#xD;
   for (WorkLoadChoices choice : WorkLoadChoices.values()) {&#xD;
     visualize(workLoad, choice); // visualize all Program choices&#xD;
   }&#xD;
   // Create and visualize the Warp System&#xD;
   if (schedulerRequested) {&#xD;
     WarpInterface warp = SystemFactory.create(workLoad, nChannels, schedulerSelected);&#xD;
     verifyPerformanceRequirements(warp);&#xD;
     for (SystemChoices choice : SystemChoices.values()) {&#xD;
       visualize(warp, choice); // visualize all System choices&#xD;
     }&#xD;
   } else { // create a system for all scheduler choices&#xD;
     for (ScheduleChoices sch : ScheduleChoices.values()) {&#xD;
       schedulerSelected = sch;&#xD;
       WarpInterface warp = SystemFactory.create(workLoad, nChannels, schedulerSelected);&#xD;
       verifyPerformanceRequirements(warp);&#xD;
       for (SystemChoices choice : SystemChoices.values()) {&#xD;
         visualize(warp, choice); // visualize all System choices&#xD;
       }&#xD;
     }&#xD;
   }&#xD;
 } else { // visualize warp workload, source program and other requested items&#xD;
   visualize(workLoad, WorkLoadChoices.INPUT_GRAPH);&#xD;
   if (wfRequested) {&#xD;
     visualize(workLoad, WorkLoadChoices.COMUNICATION_GRAPH);&#xD;
   }&#xD;
   if (gvRequested) {&#xD;
     visualize(workLoad, WorkLoadChoices.GRAPHVIZ);&#xD;
   }&#xD;
   WarpInterface warp = SystemFactory.create(workLoad, nChannels, schedulerSelected);&#xD;
   verifyPerformanceRequirements(warp);&#xD;
   visualize(warp, SystemChoices.SOURCE);&#xD;
   if (caRequested) {&#xD;
     visualize(warp, SystemChoices.CHANNEL);&#xD;
   }&#xD;
   if (laRequested) {&#xD;
     visualize(warp, SystemChoices.LATENCY);&#xD;
   }&#xD;
   if (latencyRequested || laRequested) {&#xD;
     visualize(warp, SystemChoices.LATENCY_REPORT);&#xD;
   }&#xD;
   if (raRequested) {&#xD;
     visualize(warp, SystemChoices.RELIABILITIES);&#xD;
   }&#xD;
 }&#xD;
&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oihrk6k6Ee-lntgJ_JlK2w" name="visualize" specification="_odI1QKk6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_oihrlKk6Ee-lntgJ_JlK2w" name="workLoad" type="_n8NScKk6Ee-lntgJ_JlK2w"/>
                <ownedParameter xmi:id="_oihrlak6Ee-lntgJ_JlK2w" name="choice" type="_n6IO0Kk6Ee-lntgJ_JlK2w"/>
                <language>java</language>
                <body>var viz =&#xD;
     VisualizationFactory.createVisualization(workLoad, outputSubDirectory, choice);&#xD;
 if (viz != null) {&#xD;
   if (verboseMode) {&#xD;
     System.out.println(viz.toString());&#xD;
   }&#xD;
   viz.toFile();&#xD;
   if (guiRequested) {&#xD;
     viz.toDisplay();&#xD;
   }&#xD;
 }&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oihrlqk6Ee-lntgJ_JlK2w" name="visualize" specification="_odJcUKk6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_oihrl6k6Ee-lntgJ_JlK2w" name="warp" type="_n7T6kKk6Ee-lntgJ_JlK2w"/>
                <ownedParameter xmi:id="_oihrmKk6Ee-lntgJ_JlK2w" name="choice" type="_n6FykKk6Ee-lntgJ_JlK2w"/>
                <language>java</language>
                <body>var viz = VisualizationFactory.createVisualization(warp, outputSubDirectory, choice);&#xD;
 if (viz != null) {&#xD;
   viz.toFile();&#xD;
   if (guiRequested &amp;&amp; schedulerRequested) {&#xD;
     /* Only display window when a specific scheduler has been requested */&#xD;
     viz.toDisplay();&#xD;
   }&#xD;
 }&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oihrmak6Ee-lntgJ_JlK2w" name="verifyPerformanceRequirements" specification="_odJcU6k6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_oihrmqk6Ee-lntgJ_JlK2w" name="warp" type="_n7T6kKk6Ee-lntgJ_JlK2w"/>
                <language>java</language>
                <body>verifyDeadlines(warp);&#xD;
 verifyReliabilities(warp);&#xD;
 verifyNoChannelConflicts(warp);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oiiSoKk6Ee-lntgJ_JlK2w" name="verifyReliabilities" specification="_odJcVak6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_oiiSoak6Ee-lntgJ_JlK2w" name="warp" type="_n7T6kKk6Ee-lntgJ_JlK2w"/>
                <language>java</language>
                <body>if (schedulerSelected != ScheduleChoices.RTHART) {&#xD;
   /* RealTime HART doesn't adhere to reliability targets */&#xD;
   if (!warp.reliabilitiesMet()) {&#xD;
     System.err.printf(&#xD;
         &quot;\n\tERROR: Not all flows meet the end-to-end &quot;&#xD;
             + &quot;reliability of %s under %s scheduling.\n&quot;,&#xD;
         String.valueOf(e2e), schedulerSelected.toString());&#xD;
   } else if (verboseMode) {&#xD;
     System.out.printf(&#xD;
         &quot;\n\tAll flows meet the end-to-end reliability &quot; + &quot;of %s under %s scheduling.\n&quot;,&#xD;
         String.valueOf(e2e), schedulerSelected.toString());&#xD;
   }&#xD;
 }&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oiiSoqk6Ee-lntgJ_JlK2w" name="verifyDeadlines" specification="_odJcV6k6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_oiiSo6k6Ee-lntgJ_JlK2w" name="warp" type="_n7T6kKk6Ee-lntgJ_JlK2w"/>
                <language>java</language>
                <body>if (!warp.deadlinesMet()) {&#xD;
   System.err.printf(&quot;\n\tERROR: Not all flows meet their deadlines under %s scheduling.\n&quot;,&#xD;
       schedulerSelected.toString());&#xD;
   visualize(warp, SystemChoices.DEADLINE_REPORT);&#xD;
 } else if (verboseMode) {&#xD;
   System.out.printf(&quot;\n\tAll flows meet their deadlines under %s scheduling.\n&quot;,&#xD;
       schedulerSelected.toString());&#xD;
 }&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oiiSpKk6Ee-lntgJ_JlK2w" name="verifyNoChannelConflicts" specification="_odJcWak6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_oiiSpak6Ee-lntgJ_JlK2w" name="warp" type="_n7T6kKk6Ee-lntgJ_JlK2w"/>
                <language>java</language>
                <body>if (warp.toChannelAnalysis().isChannelConflict()) {&#xD;
   System.err&#xD;
       .printf(&quot;\n\tERROR: Channel conficts exists. See Channel Visualization for details.\n&quot;);&#xD;
   if (!caRequested) { // only need to create the visualization if not already requested&#xD;
     visualize(warp, SystemChoices.CHANNEL);&#xD;
   }&#xD;
 } else if (verboseMode) {&#xD;
   System.out.printf(&quot;\n\tNo channel conflicts detected.\n&quot;);&#xD;
 }&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oiiSpqk6Ee-lntgJ_JlK2w" name="setWarpParameters" specification="_n61ZcKk6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_oiiSp6k6Ee-lntgJ_JlK2w" name="args">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oiiSqKk6Ee-lntgJ_JlK2w" value="*"/>
                </ownedParameter>
                <language>java</language>
                <body>// move command line parsing into this&#xD;
                                                      // function--need to set up globals?&#xD;
&#xD;
 // create holder objects for storing results ...&#xD;
 // BooleanHolder debug = new BooleanHolder();&#xD;
 StringHolder schedulerSelected = new StringHolder();&#xD;
 IntHolder channels = new IntHolder();&#xD;
 IntHolder faults = new IntHolder();&#xD;
 DoubleHolder m = new DoubleHolder();&#xD;
 DoubleHolder end2end = new DoubleHolder();&#xD;
 BooleanHolder gui = new BooleanHolder();&#xD;
 BooleanHolder gv = new BooleanHolder();&#xD;
 BooleanHolder wf = new BooleanHolder();&#xD;
 BooleanHolder ra = new BooleanHolder();&#xD;
 BooleanHolder la = new BooleanHolder();&#xD;
 BooleanHolder ca = new BooleanHolder();&#xD;
 BooleanHolder s = new BooleanHolder();&#xD;
 BooleanHolder all = new BooleanHolder();&#xD;
 BooleanHolder latency = new BooleanHolder();&#xD;
 BooleanHolder verbose = new BooleanHolder();&#xD;
 StringHolder input = new StringHolder();&#xD;
 StringHolder output = new StringHolder();&#xD;
&#xD;
 // create the parser and specify the allowed options ...&#xD;
 ArgParser parser = new ArgParser(&quot;java -jar warp.jar&quot;);&#xD;
 parser.addOption(&quot;-sch, --schedule %s {priority,rm,dm,rtHart,poset} #scheduler options&quot;,&#xD;
     schedulerSelected);&#xD;
 parser.addOption(&quot;-c, --channels %d {[1,16]} #number of wireless channels&quot;, channels);&#xD;
 parser.addOption(&quot;-m %f {[0.5,1.0]} #minimum link quality in the system&quot;, m);&#xD;
 parser.addOption(&#xD;
     &quot;-e, --e2e %f {[0.5,1.0]} #global end-to-end communcation reliability for all flows&quot;,&#xD;
     end2end);&#xD;
 parser.addOption(&quot;-f, --faults %d {[1,10]} #number of faults per edge in a flow (per period)&quot;,&#xD;
     faults);&#xD;
 parser.addOption(&quot;-gui %v #create a gui visualizations&quot;, gui);&#xD;
 parser.addOption(&quot;-gv %v #create a graph visualization (.gv) file for GraphViz&quot;, gv);&#xD;
 parser.addOption(&#xD;
     &quot;-wf  %v #create a WARP (.wf) file that shows the maximum number of transmissions on each segment of the flow needed to meet the end-to-end reliability&quot;,&#xD;
     wf);&#xD;
 parser.addOption(&#xD;
     &quot;-ra  %v #create a reliability analysis file (tab delimited .csv) for the warp program&quot;,&#xD;
     ra);&#xD;
 parser.addOption(&#xD;
     &quot;-la  %v #create a latency analysis file (tab delimited .csv) for the warp program&quot;, la);&#xD;
 parser.addOption(&#xD;
     &quot;-ca  %v #create a channel analysis file (tab delimited .csv) for the warp program&quot;, ca);&#xD;
 parser.addOption(&quot;-s  %v #create a simulator input file (.txt) for the warp program&quot;, s);&#xD;
 parser.addOption(&quot;-a, --all  %v #create all output files (activates -gv, -wf, -ra, -s)&quot;, all);&#xD;
 parser.addOption(&quot;-l, --latency  %v #generates end-to-end latency report file (.txt)&quot;, latency);&#xD;
 parser.addOption(&quot;-i, --input %s #&lt;InputFile> of graph flows (workload)&quot;, input);&#xD;
 parser.addOption(&quot;-o, --output %s #&lt;OutputDIRECTORY> where output files will be placed&quot;,&#xD;
     output);&#xD;
 parser.addOption(&#xD;
     &quot;-v, --verbose %v #Echo input file name and parsed contents. Then for each flow instance: show maximum E2E latency and min/max communication cost for that instance of the flow&quot;,&#xD;
     verbose);&#xD;
 // parser.addOption (&quot;-d, -debug, --debug %v #Debug mode: base directory =&#xD;
 // $HOME/Documents/WARP/&quot;, debug);&#xD;
&#xD;
&#xD;
 // match the arguments ...&#xD;
 parser.matchAllArgs(args);&#xD;
&#xD;
 // Set WARP system configuration options&#xD;
 if (channels.value > 0) {&#xD;
   nChannels = channels.value; // set option specified&#xD;
 } else {&#xD;
   nChannels = NUM_CHANNELS; // set to default&#xD;
 }&#xD;
 if (faults.value > 0) { // global variable for # of Faults tolerated per edge&#xD;
   numFaults = faults.value; // set option specified&#xD;
 } else {&#xD;
   numFaults = DEFAULT_FAULTS_TOLERATED; // set to default&#xD;
 }&#xD;
 if (m.value > 0.0) { // global variable for minimum Link Quality in system&#xD;
   minLQ = m.value; // set option specified&#xD;
 } else {&#xD;
   minLQ = MIN_LQ; // set to default&#xD;
 }&#xD;
 if (end2end.value > 0.0) { // global variable for minimum Link Quality in system&#xD;
   e2e = end2end.value; // set option specified&#xD;
 } else {&#xD;
   e2e = E2E; // set to default&#xD;
 }&#xD;
 if (output.value != null) { // default output subdirectory (from working directory)&#xD;
   outputSubDirectory = output.value; // set option specified&#xD;
 } else {&#xD;
   outputSubDirectory = DEFAULT_OUTPUT_SUB_DIRECTORY; // set to default&#xD;
 }&#xD;
&#xD;
 guiRequested = gui.value; // GraphVis file requested flag&#xD;
 gvRequested = gv.value; // GraphVis file requested flag&#xD;
 wfRequested = wf.value; // WARP file requested flag&#xD;
 raRequested = ra.value; // Reliability Analysis file requested flag&#xD;
 laRequested = la.value; // Latency Analysis file requested flag&#xD;
 caRequested = ca.value; // Latency Analysis file requested flag&#xD;
 simRequested = s.value; // Simulation file requested flag&#xD;
 allRequested = all.value; // all out files requested flag&#xD;
 latencyRequested = latency.value; // latency report requested flag&#xD;
 verboseMode = verbose.value; // verbose mode flag (mainly for running in IDE)&#xD;
 // debugMode = debug.value; // debug mode flag (mainly for running in IDE)&#xD;
 inputFile = input.value; // input file specified&#xD;
 if (schedulerSelected.value != null) { // can't switch on a null value so check then switch&#xD;
   schedulerRequested = true;&#xD;
   switch (schedulerSelected.value) {&#xD;
     case &quot;priority&quot;:&#xD;
       Warp.schedulerSelected = ScheduleChoices.PRIORITY;&#xD;
       break;&#xD;
&#xD;
     case &quot;rm&quot;:&#xD;
       Warp.schedulerSelected = ScheduleChoices.RM;&#xD;
       break;&#xD;
&#xD;
     case &quot;dm&quot;:&#xD;
       Warp.schedulerSelected = ScheduleChoices.DM;&#xD;
       break;&#xD;
&#xD;
     case &quot;rtHart&quot;:&#xD;
       Warp.schedulerSelected = ScheduleChoices.RTHART;&#xD;
       break;&#xD;
&#xD;
     case &quot;poset&quot;:&#xD;
       Warp.schedulerSelected = ScheduleChoices.POSET_PRIORITY;&#xD;
       break;&#xD;
&#xD;
     default:&#xD;
       Warp.schedulerSelected = ScheduleChoices.PRIORITY;&#xD;
       break;&#xD;
   }&#xD;
 } else { // null value when no scheduler specified; so use default&#xD;
   Warp.schedulerSelected = DEFAULT_SCHEDULER;&#xD;
 }&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oii5sKk6Ee-lntgJ_JlK2w" name="printWarpParameters" specification="_n62Agak6Ee-lntgJ_JlK2w">
                <language>java</language>
                <body>// print all system configuration parameters&#xD;
 // Print out each of the system configuration values&#xD;
 System.out.println(&quot;WARP system configuration values:&quot;);&#xD;
 System.out.println(&quot;\tScheduler=&quot; + schedulerSelected);&#xD;
 System.out.println(&quot;\tnChanels=&quot; + nChannels);&#xD;
 System.out.println(&quot;\tnumFaults=&quot; + numFaults);&#xD;
 System.out.println(&quot;\tminLQ=&quot; + minLQ);&#xD;
 System.out.println(&quot;\tE2E=&quot; + e2e);&#xD;
 System.out.println(&quot;\tguiRequest flag=&quot; + guiRequested);&#xD;
 System.out.println(&quot;\tgvRequest flag=&quot; + gvRequested);&#xD;
 System.out.println(&quot;\twfRequest flag=&quot; + wfRequested);&#xD;
 System.out.println(&quot;\traRequest flag=&quot; + raRequested);&#xD;
 System.out.println(&quot;\tlaRequest flag=&quot; + laRequested);&#xD;
 System.out.println(&quot;\tcaRequest flag=&quot; + caRequested);&#xD;
 System.out.println(&quot;\tsimRequest flag=&quot; + simRequested);&#xD;
 System.out.println(&quot;\tallOutFilesRequest flag=&quot; + allRequested);&#xD;
 System.out.println(&quot;\tlatency flag=&quot; + latencyRequested);&#xD;
 if (inputFile != null) {&#xD;
   System.out.println(&quot;\tinput file=&quot; + inputFile);&#xD;
 } else {&#xD;
   System.out.println(&quot;\tNo input file specified; will be requested when needed.&quot;);&#xD;
 }&#xD;
 System.out.println(&quot;\toutputSubDirectory=&quot; + outputSubDirectory);&#xD;
 System.out.println(&quot;\tverbose flag=&quot; + verboseMode);&#xD;
 // System.out.println (&quot;\tdebug flag=&quot; + debugMode);&#xD;
  </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_n60LUKk6Ee-lntgJ_JlK2w" name="main" isStatic="true" method="_oihrkKk6Ee-lntgJ_JlK2w">
                <ownedComment xmi:id="_ojD3EKk6Ee-lntgJ_JlK2w">
                  <body>Main method sets warp parameters with given input arguments and prints out the parameters&#xD;
   * if in verbose mode. It creates and visualizes the new workload. If the all output files &#xD;
   * flag is requested, it visualizes all workLoad Program choices and creates and visualizes&#xD;
   * the Warp System with all warp System choices. If not all output files are requested, it&#xD;
   * still visualizes the ones asked for of warp workload, source program, and other requested&#xD;
   * output items.&#xD;
   * @param args Command-line arguments passed to the application.</body>
                </ownedComment>
                <ownedParameter xmi:id="_n60LUak6Ee-lntgJ_JlK2w" name="args">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_n60LUqk6Ee-lntgJ_JlK2w" value="*"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_n61ZcKk6Ee-lntgJ_JlK2w" name="setWarpParameters" visibility="private" isStatic="true" method="_oiiSpqk6Ee-lntgJ_JlK2w">
                <ownedComment xmi:id="_ojD3F6k6Ee-lntgJ_JlK2w">
                  <body>Creates holder objects to store results and creates the parser to process and comprehend &#xD;
   * the input data. Also checks that all arguments are valid and sets values for parser. It &#xD;
   * checks which flags are present and stores this as a Boolean value. Additionally, checks &#xD;
   * if schedulerSelected value is null and cannot run is null. Then checks value of &#xD;
   * schedulerSelected to see what the value wants to do and runs method before it breaks.&#xD;
   * @param args</body>
                </ownedComment>
                <ownedParameter xmi:id="_n61Zcak6Ee-lntgJ_JlK2w" name="args">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_n61Zcqk6Ee-lntgJ_JlK2w" value="*"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_n62Agak6Ee-lntgJ_JlK2w" name="printWarpParameters" visibility="private" isStatic="true" method="_oii5sKk6Ee-lntgJ_JlK2w">
                <ownedComment xmi:id="_ojD3GKk6Ee-lntgJ_JlK2w">
                  <body>Prints out all system configuration parameters including the scheduler, channels,&#xD;
   * number of faults, minimum Link Quality, end-to-end reliability, and if any flags&#xD;
   * are requested. Prints out the input file if given and if there is not one, it &#xD;
   * alerts that one will be needed.</body>
                </ownedComment>
              </ownedOperation>
              <ownedOperation xmi:id="_odI1QKk6Ee-lntgJ_JlK2w" name="visualize" visibility="private" isStatic="true" method="_oihrk6k6Ee-lntgJ_JlK2w">
                <ownedComment xmi:id="_ojD3Eak6Ee-lntgJ_JlK2w">
                  <body>Creates a visualization instance of input WorkLoad workLoad and WorkLoadChoices&#xD;
   * choice. If the visualization is null and if verboseMode holds True, prints out&#xD;
   * viz as a String, otherwise, convert viz to a file and if gui flag is requested,&#xD;
   * convert viz to a display.&#xD;
   * @param workLoad&#xD;
   * @param choice</body>
                </ownedComment>
                <ownedParameter xmi:id="_odI1Qak6Ee-lntgJ_JlK2w" name="workLoad" type="_n8NScKk6Ee-lntgJ_JlK2w"/>
                <ownedParameter xmi:id="_odI1Qqk6Ee-lntgJ_JlK2w" name="choice" type="_n6IO0Kk6Ee-lntgJ_JlK2w"/>
              </ownedOperation>
              <ownedOperation xmi:id="_odJcUKk6Ee-lntgJ_JlK2w" name="visualize" visibility="private" isStatic="true" method="_oihrlqk6Ee-lntgJ_JlK2w">
                <ownedComment xmi:id="_ojD3Eqk6Ee-lntgJ_JlK2w">
                  <body>Creates a visualization instance of input WarpInterface warp with SystemChoices &#xD;
   * choice. If visualization is null, turns viz to a file, and if gui and schedule &#xD;
   * flags are requested, turn viz into a display.&#xD;
   * @param warp&#xD;
   * @param choice</body>
                </ownedComment>
                <ownedParameter xmi:id="_odJcUak6Ee-lntgJ_JlK2w" name="warp" type="_n7T6kKk6Ee-lntgJ_JlK2w"/>
                <ownedParameter xmi:id="_odJcUqk6Ee-lntgJ_JlK2w" name="choice" type="_n6FykKk6Ee-lntgJ_JlK2w"/>
              </ownedOperation>
              <ownedOperation xmi:id="_odJcU6k6Ee-lntgJ_JlK2w" name="verifyPerformanceRequirements" visibility="private" isStatic="true" method="_oihrmak6Ee-lntgJ_JlK2w">
                <ownedComment xmi:id="_ojD3E6k6Ee-lntgJ_JlK2w">
                  <body>Runs verification checks over if deadlines are met, if reliability targets&#xD;
   * are met, and if there are channel conflicts for the input WarpInterface warp.&#xD;
   * @param warp</body>
                </ownedComment>
                <ownedParameter xmi:id="_odJcVKk6Ee-lntgJ_JlK2w" name="warp" type="_n7T6kKk6Ee-lntgJ_JlK2w"/>
              </ownedOperation>
              <ownedOperation xmi:id="_odJcVak6Ee-lntgJ_JlK2w" name="verifyReliabilities" visibility="private" isStatic="true" method="_oiiSoKk6Ee-lntgJ_JlK2w">
                <ownedComment xmi:id="_ojD3FKk6Ee-lntgJ_JlK2w">
                  <body>Checks that the reliability targets are met in input warp. If reliability&#xD;
   * is not met, prints an error statement. If verboseMode is True with the input, &#xD;
   * prints out statement that flows meet reliability in this instance.&#xD;
   * @param warp</body>
                </ownedComment>
                <ownedParameter xmi:id="_odJcVqk6Ee-lntgJ_JlK2w" name="warp" type="_n7T6kKk6Ee-lntgJ_JlK2w"/>
              </ownedOperation>
              <ownedOperation xmi:id="_odJcV6k6Ee-lntgJ_JlK2w" name="verifyDeadlines" visibility="private" isStatic="true" method="_oiiSoqk6Ee-lntgJ_JlK2w">
                <ownedComment xmi:id="_ojD3Fak6Ee-lntgJ_JlK2w">
                  <body>Checks if the deadlines are met in input warp. If deadlines are not met, prints&#xD;
   * out an error message and visualizes a Deadline Report. If verboseMode is true for&#xD;
   * input, prints out a message telling the deadlines are all met.&#xD;
   * @param warp</body>
                </ownedComment>
                <ownedParameter xmi:id="_odJcWKk6Ee-lntgJ_JlK2w" name="warp" type="_n7T6kKk6Ee-lntgJ_JlK2w"/>
              </ownedOperation>
              <ownedOperation xmi:id="_odJcWak6Ee-lntgJ_JlK2w" name="verifyNoChannelConflicts" visibility="private" isStatic="true" method="_oiiSpKk6Ee-lntgJ_JlK2w">
                <ownedComment xmi:id="_ojD3Fqk6Ee-lntgJ_JlK2w">
                  <body>Determines if there is a channel conflict in the WarpInterface warp given &#xD;
   * as input. Creates a Channel Analysis visualization if not already requested.&#xD;
   * @param warp</body>
                </ownedComment>
                <ownedParameter xmi:id="_odJcWqk6Ee-lntgJ_JlK2w" name="warp" type="_n7T6kKk6Ee-lntgJ_JlK2w"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_n68uMKk6Ee-lntgJ_JlK2w" name="WarpDSL">
              <ownedComment xmi:id="_ojD3Gak6Ee-lntgJ_JlK2w">
                <body>@author sgoddard&#xD;
 *</body>
              </ownedComment>
              <ownedAttribute xmi:id="_og-zcKk6Ee-lntgJ_JlK2w" name="UNKNOWN" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_og-zcak6Ee-lntgJ_JlK2w" value="&quot;unknown&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_og-zcqk6Ee-lntgJ_JlK2w" name="UNUSED" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_og-zc6k6Ee-lntgJ_JlK2w" value="&quot;unused&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_og-zdKk6Ee-lntgJ_JlK2w" name="PUSH" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_og-zdak6Ee-lntgJ_JlK2w" value="&quot;push&quot;"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oikH1qk6Ee-lntgJ_JlK2w" name="getInstructionParameters" specification="_n7GfMKk6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_oikH16k6Ee-lntgJ_JlK2w" name="instruction">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_oikH2Kk6Ee-lntgJ_JlK2w" type="_oawPoKk6Ee-lntgJ_JlK2w" direction="return"/>
                <language>java</language>
                <body>ArrayList&lt;InstructionParameters> instructionParametersArrayList;&#xD;
 	var dsl = new ListenerDsl();&#xD;
     // Read input file and build AST of graph&#xD;
     try {&#xD;
     	CharStream inputInstruction = CharStreams.fromString(instruction);&#xD;
     	var lexer = new WARPdslLexer(inputInstruction);&#xD;
     	var instructionTokens = new CommonTokenStream(lexer);&#xD;
     	var parser = new WARPdslParser(instructionTokens);&#xD;
     	ParseTree instructionTree = parser.instruction(); // begin parsing at rule 'warp'&#xD;
     	var warp = new ParseTreeWalker();&#xD;
     	warp.walk(dsl, instructionTree);&#xD;
     } catch (Exception e) {&#xD;
     	e.printStackTrace();&#xD;
     	System.err.println(&quot;Unable to parse instruction instruction from the schedule entry:&quot; + e.getMessage());&#xD;
     }&#xD;
     instructionParametersArrayList = dsl.getInstructionParameters();&#xD;
     return instructionParametersArrayList;&#xD;
 </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_n7GfMKk6Ee-lntgJ_JlK2w" name="getInstructionParameters" method="_oikH1qk6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_n7GfMak6Ee-lntgJ_JlK2w" name="instruction">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ofRjQKk6Ee-lntgJ_JlK2w" type="_oawPoKk6Ee-lntgJ_JlK2w" direction="return"/>
              </ownedOperation>
              <nestedClassifier xmi:type="uml:Class" xmi:id="_n69VQKk6Ee-lntgJ_JlK2w" name="InstructionParameters">
                <ownedAttribute xmi:id="_og-zdqk6Ee-lntgJ_JlK2w" name="name" isReadOnly="true">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <defaultValue xmi:type="uml:LiteralString" xmi:id="_og-zd6k6Ee-lntgJ_JlK2w" value="UNUSED"/>
                </ownedAttribute>
                <ownedAttribute xmi:id="_og_agKk6Ee-lntgJ_JlK2w" name="flow" isReadOnly="true">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <defaultValue xmi:type="uml:LiteralString" xmi:id="_og_agak6Ee-lntgJ_JlK2w" value="UNUSED"/>
                </ownedAttribute>
                <ownedAttribute xmi:id="_og_agqk6Ee-lntgJ_JlK2w" name="src" isReadOnly="true">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <defaultValue xmi:type="uml:LiteralString" xmi:id="_og_ag6k6Ee-lntgJ_JlK2w" value="UNUSED"/>
                </ownedAttribute>
                <ownedAttribute xmi:id="_og_ahKk6Ee-lntgJ_JlK2w" name="snk" isReadOnly="true">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <defaultValue xmi:type="uml:LiteralString" xmi:id="_og_ahak6Ee-lntgJ_JlK2w" value="UNUSED"/>
                </ownedAttribute>
                <ownedAttribute xmi:id="_og_ahqk6Ee-lntgJ_JlK2w" name="channel" isReadOnly="true">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <defaultValue xmi:type="uml:LiteralString" xmi:id="_og_ah6k6Ee-lntgJ_JlK2w" value="UNUSED"/>
                </ownedAttribute>
                <ownedAttribute xmi:id="_ohABkKk6Ee-lntgJ_JlK2w" name="coordinator" visibility="private">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <defaultValue xmi:type="uml:LiteralString" xmi:id="_ohABkak6Ee-lntgJ_JlK2w" value="UNKNOWN"/>
                </ownedAttribute>
                <ownedAttribute xmi:id="_ohABk6k6Ee-lntgJ_JlK2w" name="listener">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <defaultValue xmi:type="uml:LiteralString" xmi:id="_ohAooKk6Ee-lntgJ_JlK2w" value="UNKNOWN"/>
                </ownedAttribute>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oii5sak6Ee-lntgJ_JlK2w" name="getCoordinator" specification="_n6-jYKk6Ee-lntgJ_JlK2w">
                  <ownedParameter xmi:id="_oii5sqk6Ee-lntgJ_JlK2w" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>return coordinator;&#xD;
		</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oijgwKk6Ee-lntgJ_JlK2w" name="setCoordinator" specification="_n6_Kcak6Ee-lntgJ_JlK2w">
                  <ownedParameter xmi:id="_oijgwak6Ee-lntgJ_JlK2w" name="coordinator">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>this.coordinator = coordinator;&#xD;
		</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oijgwqk6Ee-lntgJ_JlK2w" name="setName" specification="_n6_xgKk6Ee-lntgJ_JlK2w">
                  <ownedParameter xmi:id="_oijgw6k6Ee-lntgJ_JlK2w" name="name">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>this.name = name;&#xD;
     </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oijgxKk6Ee-lntgJ_JlK2w" name="setFlow" specification="_n6_xgqk6Ee-lntgJ_JlK2w">
                  <ownedParameter xmi:id="_oijgxak6Ee-lntgJ_JlK2w" name="flow">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>this.flow = flow;&#xD;
     </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oijgxqk6Ee-lntgJ_JlK2w" name="setSrc" specification="_n7AYkKk6Ee-lntgJ_JlK2w">
                  <ownedParameter xmi:id="_oijgx6k6Ee-lntgJ_JlK2w" name="src">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>this.src = src;&#xD;
     </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oikH0Kk6Ee-lntgJ_JlK2w" name="setSnk" specification="_n7A_oak6Ee-lntgJ_JlK2w">
                  <ownedParameter xmi:id="_oikH0ak6Ee-lntgJ_JlK2w" name="snk">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>this.snk = snk;&#xD;
     </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oikH0qk6Ee-lntgJ_JlK2w" name="setChannel" specification="_n7BmsKk6Ee-lntgJ_JlK2w">
                  <ownedParameter xmi:id="_oikH06k6Ee-lntgJ_JlK2w" name="channel">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>this.channel = channel;&#xD;
     </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oikH1Kk6Ee-lntgJ_JlK2w" name="unused" specification="_n7Bmsqk6Ee-lntgJ_JlK2w">
                  <ownedParameter xmi:id="_oikH1ak6Ee-lntgJ_JlK2w" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>return UNUSED;&#xD;
		</body>
                </ownedBehavior>
                <ownedOperation xmi:id="_n6-jYKk6Ee-lntgJ_JlK2w" name="getCoordinator" method="_oii5sak6Ee-lntgJ_JlK2w">
                  <ownedComment xmi:id="_ojD3Gqk6Ee-lntgJ_JlK2w">
                    <body>@return the coordinator</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_n6_KcKk6Ee-lntgJ_JlK2w" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_n6_Kcak6Ee-lntgJ_JlK2w" name="setCoordinator" method="_oijgwKk6Ee-lntgJ_JlK2w">
                  <ownedComment xmi:id="_ojD3G6k6Ee-lntgJ_JlK2w">
                    <body>@param coordinator the coordinator to set</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_n6_Kcqk6Ee-lntgJ_JlK2w" name="coordinator">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_n6_xgKk6Ee-lntgJ_JlK2w" name="setName" visibility="private" method="_oijgwqk6Ee-lntgJ_JlK2w">
                  <ownedParameter xmi:id="_n6_xgak6Ee-lntgJ_JlK2w" name="name">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_n6_xgqk6Ee-lntgJ_JlK2w" name="setFlow" visibility="private" method="_oijgxKk6Ee-lntgJ_JlK2w">
                  <ownedParameter xmi:id="_n6_xg6k6Ee-lntgJ_JlK2w" name="flow">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_n7AYkKk6Ee-lntgJ_JlK2w" name="setSrc" visibility="private" method="_oijgxqk6Ee-lntgJ_JlK2w">
                  <ownedParameter xmi:id="_n7A_oKk6Ee-lntgJ_JlK2w" name="src">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_n7A_oak6Ee-lntgJ_JlK2w" name="setSnk" visibility="private" method="_oikH0Kk6Ee-lntgJ_JlK2w">
                  <ownedParameter xmi:id="_n7A_oqk6Ee-lntgJ_JlK2w" name="snk">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_n7BmsKk6Ee-lntgJ_JlK2w" name="setChannel" visibility="private" method="_oikH0qk6Ee-lntgJ_JlK2w">
                  <ownedParameter xmi:id="_n7Bmsak6Ee-lntgJ_JlK2w" name="channel">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_n7Bmsqk6Ee-lntgJ_JlK2w" name="unused" method="_oikH1Kk6Ee-lntgJ_JlK2w">
                  <ownedParameter xmi:id="_n7Bms6k6Ee-lntgJ_JlK2w" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                </ownedOperation>
              </nestedClassifier>
              <nestedClassifier xmi:type="uml:Class" xmi:id="_n7IUYKk6Ee-lntgJ_JlK2w" name="ListenerDsl" visibility="private" isLeaf="true">
                <generalization xmi:id="_ofTYcKk6Ee-lntgJ_JlK2w" general="_ofSKUKk6Ee-lntgJ_JlK2w"/>
                <ownedAttribute xmi:id="_ohAooak6Ee-lntgJ_JlK2w" name="inAction" visibility="package">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedAttribute>
                <ownedAttribute xmi:id="_ohAoo6k6Ee-lntgJ_JlK2w" name="instructionParametersArrayList" visibility="package" type="_oawPoKk6Ee-lntgJ_JlK2w" association="_okVpcKk6Ee-lntgJ_JlK2w"/>
                <ownedAttribute xmi:id="_ohBPsqk6Ee-lntgJ_JlK2w" name="instructionParameters" visibility="package" type="_n69VQKk6Ee-lntgJ_JlK2w" association="_okWQgKk6Ee-lntgJ_JlK2w"/>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oiku4Kk6Ee-lntgJ_JlK2w" name="ListenerDsl" specification="_n7I7cKk6Ee-lntgJ_JlK2w">
                  <ownedParameter xmi:id="_oiku4ak6Ee-lntgJ_JlK2w" type="_n7IUYKk6Ee-lntgJ_JlK2w" direction="return"/>
                  <language>java</language>
                  <body>inAction = false;&#xD;
         instructionParametersArrayList = new ArrayList&lt;InstructionParameters>();&#xD;
     </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oiku4qk6Ee-lntgJ_JlK2w" name="getInstructionParameters" specification="_n7I7dKk6Ee-lntgJ_JlK2w">
                  <ownedParameter xmi:id="_oiku46k6Ee-lntgJ_JlK2w" type="_oawPoKk6Ee-lntgJ_JlK2w" direction="return"/>
                  <language>java</language>
                  <body>return instructionParametersArrayList;&#xD;
     </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oiku5Kk6Ee-lntgJ_JlK2w" name="enterAction" specification="_odNGsak6Ee-lntgJ_JlK2w">
                  <ownedParameter xmi:id="_oiku5ak6Ee-lntgJ_JlK2w" name="ctx" type="_odMfoKk6Ee-lntgJ_JlK2w"/>
                  <language>java</language>
                  <body>inAction = true;&#xD;
         instructionParameters = new InstructionParameters();  // create a new instance of the parameter structure with default initialization&#xD;
     </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oiku5qk6Ee-lntgJ_JlK2w" name="exitAction" specification="_odOU0Kk6Ee-lntgJ_JlK2w">
                  <ownedParameter xmi:id="_oiku56k6Ee-lntgJ_JlK2w" name="ctx" type="_odMfoKk6Ee-lntgJ_JlK2w"/>
                  <language>java</language>
                  <body>inAction = false;&#xD;
         instructionParametersArrayList.add(instructionParameters);  // this action is done, so add the parameters to the list&#xD;
     </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oilV8Kk6Ee-lntgJ_JlK2w" name="exitFlowName" specification="_odO74qk6Ee-lntgJ_JlK2w">
                  <ownedParameter xmi:id="_oilV8ak6Ee-lntgJ_JlK2w" name="ctx" type="_odO74Kk6Ee-lntgJ_JlK2w"/>
                  <language>java</language>
                  <body>if (inAction) {&#xD;
             String flowName = ctx.getText(); // get the flow name&#xD;
             instructionParameters.setFlow(flowName);&#xD;
         }&#xD;
     </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oilV8qk6Ee-lntgJ_JlK2w" name="exitCmd" specification="_odQxEak6Ee-lntgJ_JlK2w">
                  <ownedParameter xmi:id="_oilV86k6Ee-lntgJ_JlK2w" name="ctx" type="_odQKAqk6Ee-lntgJ_JlK2w"/>
                  <language>java</language>
                  <body>String command = ctx.getText(); // get the command/instruction name&#xD;
         instructionParameters.setName(command);&#xD;
     </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oilV9Kk6Ee-lntgJ_JlK2w" name="exitSrcNode" specification="_odRYIqk6Ee-lntgJ_JlK2w">
                  <ownedParameter xmi:id="_oilV9ak6Ee-lntgJ_JlK2w" name="ctx" type="_odRYIKk6Ee-lntgJ_JlK2w"/>
                  <language>java</language>
                  <body>String srcName = ctx.getText(); // get the src node name&#xD;
         instructionParameters.setSrc(srcName);&#xD;
         var command = instructionParameters.getName();&#xD;
         if (command.equals(PUSH)) {&#xD;
         	/* if push then coordinator is src &#xD;
         	 */&#xD;
         	instructionParameters.setCoordinator(srcName);&#xD;
         }else {&#xD;
         	/* otherwise listener is src */&#xD;
         	instructionParameters.setListener(srcName);&#xD;
         }&#xD;
     </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oilV9qk6Ee-lntgJ_JlK2w" name="exitSnkNode" specification="_odSmQak6Ee-lntgJ_JlK2w">
                  <ownedParameter xmi:id="_oilV96k6Ee-lntgJ_JlK2w" name="ctx" type="_odR_M6k6Ee-lntgJ_JlK2w"/>
                  <language>java</language>
                  <body>String snkName = ctx.getText(); // get the snk node name&#xD;
         instructionParameters.setSnk(snkName);&#xD;
         var command = instructionParameters.getName();&#xD;
         if (command.equals(PUSH)) {&#xD;
         	/* if push then listener is snk */&#xD;
         	instructionParameters.setListener(snkName);&#xD;
         }else {&#xD;
         	/* otherwise coordinator is snk &#xD;
         	 */&#xD;
         	instructionParameters.setCoordinator(snkName);&#xD;
         }&#xD;
     </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oilV-Kk6Ee-lntgJ_JlK2w" name="exitChannel" specification="_odT0Yak6Ee-lntgJ_JlK2w">
                  <ownedParameter xmi:id="_oilV-ak6Ee-lntgJ_JlK2w" name="ctx" type="_odTNU6k6Ee-lntgJ_JlK2w"/>
                  <language>java</language>
                  <body>String channelString = ctx.getText(); // get the snk node name&#xD;
     	String channel; // resulting channel that will be extracted from the channel string&#xD;
     	Integer index = channelString.indexOf('#');&#xD;
     	if (index >= 0 &amp;&amp; index &lt; channelString.length()) {&#xD;
     		channel = channelString.substring(index+1); // get string starting at first channel number&#xD;
     	} else {&#xD;
     		channel = UNKNOWN; // no valid channel in the channelString, so set to UNKNOWN&#xD;
     	}	&#xD;
         instructionParameters.setChannel(channel); &#xD;
     </body>
                </ownedBehavior>
                <ownedOperation xmi:id="_n7I7cKk6Ee-lntgJ_JlK2w" name="ListenerDsl" visibility="package" method="_oiku4Kk6Ee-lntgJ_JlK2w">
                  <eAnnotations xmi:id="_n7I7cak6Ee-lntgJ_JlK2w" source="http://www.eclipse.org/uml2/2.0.0/UML">
                    <details xmi:id="_n7I7cqk6Ee-lntgJ_JlK2w" key="create"/>
                  </eAnnotations>
                  <ownedParameter xmi:id="_n7I7c6k6Ee-lntgJ_JlK2w" type="_n7IUYKk6Ee-lntgJ_JlK2w" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_n7I7dKk6Ee-lntgJ_JlK2w" name="getInstructionParameters" method="_oiku4qk6Ee-lntgJ_JlK2w">
                  <ownedParameter xmi:id="_ofSxYak6Ee-lntgJ_JlK2w" type="_oawPoKk6Ee-lntgJ_JlK2w" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_odNGsak6Ee-lntgJ_JlK2w" name="enterAction" method="_oiku5Kk6Ee-lntgJ_JlK2w">
                  <ownedParameter xmi:id="_odNGsqk6Ee-lntgJ_JlK2w" name="ctx" type="_odMfoKk6Ee-lntgJ_JlK2w"/>
                </ownedOperation>
                <ownedOperation xmi:id="_odOU0Kk6Ee-lntgJ_JlK2w" name="exitAction" method="_oiku5qk6Ee-lntgJ_JlK2w">
                  <ownedParameter xmi:id="_odOU0ak6Ee-lntgJ_JlK2w" name="ctx" type="_odMfoKk6Ee-lntgJ_JlK2w"/>
                </ownedOperation>
                <ownedOperation xmi:id="_odO74qk6Ee-lntgJ_JlK2w" name="exitFlowName" method="_oilV8Kk6Ee-lntgJ_JlK2w">
                  <ownedParameter xmi:id="_odO746k6Ee-lntgJ_JlK2w" name="ctx" type="_odO74Kk6Ee-lntgJ_JlK2w"/>
                </ownedOperation>
                <ownedOperation xmi:id="_odQxEak6Ee-lntgJ_JlK2w" name="exitCmd" method="_oilV8qk6Ee-lntgJ_JlK2w">
                  <ownedParameter xmi:id="_odQxEqk6Ee-lntgJ_JlK2w" name="ctx" type="_odQKAqk6Ee-lntgJ_JlK2w"/>
                </ownedOperation>
                <ownedOperation xmi:id="_odRYIqk6Ee-lntgJ_JlK2w" name="exitSrcNode" method="_oilV9Kk6Ee-lntgJ_JlK2w">
                  <ownedParameter xmi:id="_odRYI6k6Ee-lntgJ_JlK2w" name="ctx" type="_odRYIKk6Ee-lntgJ_JlK2w"/>
                </ownedOperation>
                <ownedOperation xmi:id="_odSmQak6Ee-lntgJ_JlK2w" name="exitSnkNode" method="_oilV9qk6Ee-lntgJ_JlK2w">
                  <ownedParameter xmi:id="_odSmQqk6Ee-lntgJ_JlK2w" name="ctx" type="_odR_M6k6Ee-lntgJ_JlK2w"/>
                </ownedOperation>
                <ownedOperation xmi:id="_odT0Yak6Ee-lntgJ_JlK2w" name="exitChannel" method="_oilV-Kk6Ee-lntgJ_JlK2w">
                  <ownedParameter xmi:id="_odT0Yqk6Ee-lntgJ_JlK2w" name="ctx" type="_odTNU6k6Ee-lntgJ_JlK2w"/>
                </ownedOperation>
              </nestedClassifier>
            </packagedElement>
            <packagedElement xmi:type="uml:Interface" xmi:id="_n7T6kKk6Ee-lntgJ_JlK2w" name="WarpInterface">
              <ownedComment xmi:id="_ojEeIKk6Ee-lntgJ_JlK2w">
                <body>@author sgoddard&#xD;
@version 1.4</body>
              </ownedComment>
              <generalization xmi:id="_odVpkKk6Ee-lntgJ_JlK2w" general="_n5sJ8Kk6Ee-lntgJ_JlK2w"/>
              <ownedOperation xmi:id="_n7W94Kk6Ee-lntgJ_JlK2w" name="toWorkload">
                <ownedParameter xmi:id="_odVpkak6Ee-lntgJ_JlK2w" type="_n8NScKk6Ee-lntgJ_JlK2w" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_n7Xk8Kk6Ee-lntgJ_JlK2w" name="toProgram">
                <ownedParameter xmi:id="_odVpkqk6Ee-lntgJ_JlK2w" type="_n2BK4Kk6Ee-lntgJ_JlK2w" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_n7Xk8ak6Ee-lntgJ_JlK2w" name="toReliabilityAnalysis">
                <ownedParameter xmi:id="_odVpk6k6Ee-lntgJ_JlK2w" type="_n22RUKk6Ee-lntgJ_JlK2w" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_n7Xk8qk6Ee-lntgJ_JlK2w" name="toSimulator">
                <ownedParameter xmi:id="_odWQoKk6Ee-lntgJ_JlK2w" type="_n5lcQKk6Ee-lntgJ_JlK2w" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_n7YMAKk6Ee-lntgJ_JlK2w" name="toLatencyAnalysis">
                <ownedParameter xmi:id="_odWQoak6Ee-lntgJ_JlK2w" type="_n1Gk4Kk6Ee-lntgJ_JlK2w" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_n7YMAak6Ee-lntgJ_JlK2w" name="toChannelAnalysis">
                <ownedParameter xmi:id="_odWQoqk6Ee-lntgJ_JlK2w" type="_nyqU4Kk6Ee-lntgJ_JlK2w" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_n7YzEKk6Ee-lntgJ_JlK2w" name="toSensorNetwork"/>
              <ownedOperation xmi:id="_n7YzEak6Ee-lntgJ_JlK2w" name="reliabilitiesMet">
                <ownedParameter xmi:id="_n7YzEqk6Ee-lntgJ_JlK2w" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_n7YzE6k6Ee-lntgJ_JlK2w" name="deadlinesMet">
                <ownedParameter xmi:id="_n7YzFKk6Ee-lntgJ_JlK2w" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_n7b2YKk6Ee-lntgJ_JlK2w" name="WarpPoset">
              <ownedComment xmi:id="_ojEeIak6Ee-lntgJ_JlK2w">
                <body>ConnectivityPoset extends Poset by selecting&#xD;
the base station in the flow as the primary &#xD;
coordinator&#xD;
&#xD;
@author sgoddard</body>
              </ownedComment>
              <generalization xmi:id="_odW3s6k6Ee-lntgJ_JlK2w" general="_n1m7MKk6Ee-lntgJ_JlK2w"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oil9AKk6Ee-lntgJ_JlK2w" name="WarpPoset" specification="_odWQo6k6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_oil9Aak6Ee-lntgJ_JlK2w" name="workload" type="_n8NScKk6Ee-lntgJ_JlK2w"/>
                <ownedParameter xmi:id="_oil9Aqk6Ee-lntgJ_JlK2w" type="_n7b2YKk6Ee-lntgJ_JlK2w" direction="return"/>
                <language>java</language>
                <body>super(workload);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oimkEKk6Ee-lntgJ_JlK2w" name="findCoordinator" specification="_ofUmkKk6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_oimkEak6Ee-lntgJ_JlK2w" name="nodesInFlow" type="_oawPoKk6Ee-lntgJ_JlK2w"/>
                <ownedParameter xmi:id="_oimkEqk6Ee-lntgJ_JlK2w" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var baseStation = findBaseStation();&#xD;
		var baseName = baseStation.getName();&#xD;
		var size = nodesInFlow.size();&#xD;
		/* assume flow sink is the coordinator */&#xD;
		Integer coordinatorIndex = size-1;&#xD;
&#xD;
		if (baseName.equals(nodesInFlow.get(0).getName())) {&#xD;
			/* flow src is coordinator, so update index */&#xD;
			coordinatorIndex = 0;&#xD;
		}&#xD;
		return coordinatorIndex;&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_odWQo6k6Ee-lntgJ_JlK2w" name="WarpPoset" visibility="package" method="_oil9AKk6Ee-lntgJ_JlK2w">
                <eAnnotations xmi:id="_odW3sKk6Ee-lntgJ_JlK2w" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_odW3sak6Ee-lntgJ_JlK2w" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_odWQpKk6Ee-lntgJ_JlK2w" name="workload" type="_n8NScKk6Ee-lntgJ_JlK2w"/>
                <ownedParameter xmi:id="_odW3sqk6Ee-lntgJ_JlK2w" type="_n7b2YKk6Ee-lntgJ_JlK2w" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_ofUmkKk6Ee-lntgJ_JlK2w" name="findCoordinator" visibility="protected" method="_oimkEKk6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_ofVNoKk6Ee-lntgJ_JlK2w" name="nodesInFlow" type="_oawPoKk6Ee-lntgJ_JlK2w"/>
                <ownedParameter xmi:id="_ofVNoak6Ee-lntgJ_JlK2w" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_n7drkKk6Ee-lntgJ_JlK2w" name="WarpSystem">
              <ownedComment xmi:id="_ojEeIqk6Ee-lntgJ_JlK2w">
                <body>@author sgoddard&#xD;
@version 1.4</body>
              </ownedComment>
              <ownedAttribute xmi:id="_ohB2wKk6Ee-lntgJ_JlK2w" name="program" visibility="private" type="_n2BK4Kk6Ee-lntgJ_JlK2w" association="_okWQg6k6Ee-lntgJ_JlK2w"/>
              <ownedAttribute xmi:id="_ohCd0ak6Ee-lntgJ_JlK2w" name="workLoad" visibility="private" type="_n8NScKk6Ee-lntgJ_JlK2w" association="_okW3kak6Ee-lntgJ_JlK2w"/>
              <ownedAttribute xmi:id="_ohCd06k6Ee-lntgJ_JlK2w" name="ra" visibility="private" type="_n22RUKk6Ee-lntgJ_JlK2w" association="_okXeoak6Ee-lntgJ_JlK2w"/>
              <ownedAttribute xmi:id="_ohDE4ak6Ee-lntgJ_JlK2w" name="la" visibility="private" type="_n1Gk4Kk6Ee-lntgJ_JlK2w" association="_okYFsak6Ee-lntgJ_JlK2w"/>
              <ownedAttribute xmi:id="_ohDr8ak6Ee-lntgJ_JlK2w" name="ca" visibility="private" type="_nyqU4Kk6Ee-lntgJ_JlK2w" association="_okYswak6Ee-lntgJ_JlK2w"/>
              <ownedAttribute xmi:id="_ohDr86k6Ee-lntgJ_JlK2w" name="numChannels" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_ohE6Eqk6Ee-lntgJ_JlK2w" name="verboseMode" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_ohE6E6k6Ee-lntgJ_JlK2w" value="false"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_ohFhIak6Ee-lntgJ_JlK2w" name="latencyRequested" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_ohFhIqk6Ee-lntgJ_JlK2w" value="false"/>
              </ownedAttribute>
              <interfaceRealization xmi:id="_odXewKk6Ee-lntgJ_JlK2w" client="_n7drkKk6Ee-lntgJ_JlK2w" supplier="_n7T6kKk6Ee-lntgJ_JlK2w" contract="_n7T6kKk6Ee-lntgJ_JlK2w"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oimkFak6Ee-lntgJ_JlK2w" name="WarpSystem" specification="_ofXC0Kk6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_oimkFqk6Ee-lntgJ_JlK2w" name="workLoad" type="_n8NScKk6Ee-lntgJ_JlK2w"/>
                <ownedParameter xmi:id="_oimkF6k6Ee-lntgJ_JlK2w" name="numChannels">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_oimkGKk6Ee-lntgJ_JlK2w" name="choice" type="_oetikKk6Ee-lntgJ_JlK2w"/>
                <ownedParameter xmi:id="_oimkGak6Ee-lntgJ_JlK2w" type="_n7drkKk6Ee-lntgJ_JlK2w" direction="return"/>
                <language>java</language>
                <body>this.workLoad = workLoad;&#xD;
 this.numChannels = numChannels;&#xD;
 createProgram(workLoad, numChannels, choice);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oinLIKk6Ee-lntgJ_JlK2w" name="toWorkload" specification="_n7e5sKk6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_oinLIak6Ee-lntgJ_JlK2w" type="_n8NScKk6Ee-lntgJ_JlK2w" direction="return"/>
                <language>java</language>
                <body>return workLoad;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oinLIqk6Ee-lntgJ_JlK2w" name="toProgram" specification="_n7h9Aqk6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_oinLI6k6Ee-lntgJ_JlK2w" type="_n2BK4Kk6Ee-lntgJ_JlK2w" direction="return"/>
                <language>java</language>
                <body>return program;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oinLJKk6Ee-lntgJ_JlK2w" name="toReliabilityAnalysis" specification="_n7lAUak6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_oinLJak6Ee-lntgJ_JlK2w" type="_n22RUKk6Ee-lntgJ_JlK2w" direction="return"/>
                <language>java</language>
                <body>ra = new ReliabilityAnalysis(program);&#xD;
 return ra;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oinLJqk6Ee-lntgJ_JlK2w" name="toSimulator" specification="_n7m1gKk6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_oinLJ6k6Ee-lntgJ_JlK2w" type="_n5lcQKk6Ee-lntgJ_JlK2w" direction="return"/>
                <language>java</language>
                <body>return null;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oinLKKk6Ee-lntgJ_JlK2w" name="toLatencyAnalysis" specification="_n7pRwKk6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_oinLKak6Ee-lntgJ_JlK2w" type="_n1Gk4Kk6Ee-lntgJ_JlK2w" direction="return"/>
                <language>java</language>
                <body>la = new LatencyAnalysis(this);&#xD;
 return la;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oinyMKk6Ee-lntgJ_JlK2w" name="toChannelAnalysis" specification="_n7rG8ak6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_oinyMak6Ee-lntgJ_JlK2w" type="_nyqU4Kk6Ee-lntgJ_JlK2w" direction="return"/>
                <language>java</language>
                <body>ca = new ChannelAnalysis(this);&#xD;
 return ca;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oinyMqk6Ee-lntgJ_JlK2w" name="reliabilitiesMet" specification="_n7sVEak6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_oinyM6k6Ee-lntgJ_JlK2w" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>if (ra == null) {&#xD;
   ra = new ReliabilityAnalysis(program);&#xD;
 }&#xD;
 return ra.verifyReliabilities();&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oinyNKk6Ee-lntgJ_JlK2w" name="deadlinesMet" specification="_n7s8Iqk6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_oinyNak6Ee-lntgJ_JlK2w" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>Boolean result = true;&#xD;
 if (program.deadlineMisses().size() > 0) {&#xD;
   result = false;&#xD;
 }&#xD;
 return result;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oinyNqk6Ee-lntgJ_JlK2w" name="createProgram" specification="_ofXp4Kk6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_oinyN6k6Ee-lntgJ_JlK2w" name="workLoad" type="_n8NScKk6Ee-lntgJ_JlK2w"/>
                <ownedParameter xmi:id="_oinyOKk6Ee-lntgJ_JlK2w" name="numChannels">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_oinyOak6Ee-lntgJ_JlK2w" name="choice" type="_oetikKk6Ee-lntgJ_JlK2w"/>
                <language>java</language>
                <body>program = new Program(workLoad, numChannels, choice, verboseMode, latencyRequested);&#xD;
&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oinyOqk6Ee-lntgJ_JlK2w" name="getNumFaults" specification="_n7uxUKk6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_oinyO6k6Ee-lntgJ_JlK2w" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>return program.getNumFaults();&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oinyPKk6Ee-lntgJ_JlK2w" name="getMinPacketReceptionRate" specification="_n7wmgKk6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_oinyPak6Ee-lntgJ_JlK2w" type="_oex0AKk6Ee-lntgJ_JlK2w" direction="return"/>
                <language>java</language>
                <body>return workLoad.getMinPacketReceptionRate();&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oinyPqk6Ee-lntgJ_JlK2w" name="getE2e" specification="_n7x0oak6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_oinyP6k6Ee-lntgJ_JlK2w" type="_oex0AKk6Ee-lntgJ_JlK2w" direction="return"/>
                <language>java</language>
                <body>return workLoad.getE2e();&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oioZQKk6Ee-lntgJ_JlK2w" name="getName" specification="_n70Q4Kk6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_oioZQak6Ee-lntgJ_JlK2w" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return workLoad.getName();&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oioZQqk6Ee-lntgJ_JlK2w" name="getSchedulerName" specification="_n7038qk6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_oioZQ6k6Ee-lntgJ_JlK2w" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return program.getSchedulerName();&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oipAUKk6Ee-lntgJ_JlK2w" name="getNumTransmissions" specification="_n71fAqk6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_oipAUak6Ee-lntgJ_JlK2w" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>return program.getNumTransmissions();&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oipAUqk6Ee-lntgJ_JlK2w" name="getOptimizationFlag" specification="_n72GEqk6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_oipAU6k6Ee-lntgJ_JlK2w" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>return program.getOptimizationFlag();&#xD;
  </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_n7e5sKk6Ee-lntgJ_JlK2w" name="toWorkload" method="_oinLIKk6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_odYF0Kk6Ee-lntgJ_JlK2w" type="_n8NScKk6Ee-lntgJ_JlK2w" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_n7h9Aqk6Ee-lntgJ_JlK2w" name="toProgram" method="_oinLIqk6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_odYF0ak6Ee-lntgJ_JlK2w" type="_n2BK4Kk6Ee-lntgJ_JlK2w" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_n7lAUak6Ee-lntgJ_JlK2w" name="toReliabilityAnalysis" method="_oinLJKk6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_odYs4Kk6Ee-lntgJ_JlK2w" type="_n22RUKk6Ee-lntgJ_JlK2w" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_n7m1gKk6Ee-lntgJ_JlK2w" name="toSimulator" method="_oinLJqk6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_odYs4ak6Ee-lntgJ_JlK2w" type="_n5lcQKk6Ee-lntgJ_JlK2w" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_n7pRwKk6Ee-lntgJ_JlK2w" name="toLatencyAnalysis" method="_oinLKKk6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_odYs4qk6Ee-lntgJ_JlK2w" type="_n1Gk4Kk6Ee-lntgJ_JlK2w" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_n7rG8ak6Ee-lntgJ_JlK2w" name="toChannelAnalysis" method="_oinyMKk6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_odYs46k6Ee-lntgJ_JlK2w" type="_nyqU4Kk6Ee-lntgJ_JlK2w" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_n7sVEak6Ee-lntgJ_JlK2w" name="reliabilitiesMet" method="_oinyMqk6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_n7sVEqk6Ee-lntgJ_JlK2w" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_n7s8Iqk6Ee-lntgJ_JlK2w" name="deadlinesMet" method="_oinyNKk6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_n7s8I6k6Ee-lntgJ_JlK2w" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_n7uxUKk6Ee-lntgJ_JlK2w" name="getNumFaults" method="_oinyOqk6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_n7vYYKk6Ee-lntgJ_JlK2w" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_n7wmgKk6Ee-lntgJ_JlK2w" name="getMinPacketReceptionRate" method="_oinyPKk6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_ofYQ8Kk6Ee-lntgJ_JlK2w" type="_oex0AKk6Ee-lntgJ_JlK2w" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_n7x0oak6Ee-lntgJ_JlK2w" name="getE2e" method="_oinyPqk6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_ofYQ8ak6Ee-lntgJ_JlK2w" type="_oex0AKk6Ee-lntgJ_JlK2w" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_n70Q4Kk6Ee-lntgJ_JlK2w" name="getName" method="_oioZQKk6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_n70Q4ak6Ee-lntgJ_JlK2w" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_n7038qk6Ee-lntgJ_JlK2w" name="getSchedulerName" method="_oioZQqk6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_n70386k6Ee-lntgJ_JlK2w" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_n71fAqk6Ee-lntgJ_JlK2w" name="getNumTransmissions" method="_oipAUKk6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_n71fA6k6Ee-lntgJ_JlK2w" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_n72GEqk6Ee-lntgJ_JlK2w" name="getOptimizationFlag" method="_oipAUqk6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_n72tIKk6Ee-lntgJ_JlK2w" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_n737Qqk6Ee-lntgJ_JlK2w" name="toSensorNetwork"/>
              <ownedOperation xmi:id="_ofXC0Kk6Ee-lntgJ_JlK2w" name="WarpSystem" method="_oimkFak6Ee-lntgJ_JlK2w">
                <eAnnotations xmi:id="_ofXC1Kk6Ee-lntgJ_JlK2w" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_ofXC1ak6Ee-lntgJ_JlK2w" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_ofXC0ak6Ee-lntgJ_JlK2w" name="workLoad" type="_n8NScKk6Ee-lntgJ_JlK2w"/>
                <ownedParameter xmi:id="_ofXC0qk6Ee-lntgJ_JlK2w" name="numChannels">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ofXC06k6Ee-lntgJ_JlK2w" name="choice" type="_oetikKk6Ee-lntgJ_JlK2w"/>
                <ownedParameter xmi:id="_ofXC1qk6Ee-lntgJ_JlK2w" type="_n7drkKk6Ee-lntgJ_JlK2w" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_ofXp4Kk6Ee-lntgJ_JlK2w" name="createProgram" visibility="private" method="_oinyNqk6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_ofXp4ak6Ee-lntgJ_JlK2w" name="workLoad" type="_n8NScKk6Ee-lntgJ_JlK2w"/>
                <ownedParameter xmi:id="_ofXp4qk6Ee-lntgJ_JlK2w" name="numChannels">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ofXp46k6Ee-lntgJ_JlK2w" name="choice" type="_oetikKk6Ee-lntgJ_JlK2w"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_n7_3EKk6Ee-lntgJ_JlK2w" name="WorkLoadDescription">
              <ownedComment xmi:id="_ojEeI6k6Ee-lntgJ_JlK2w">
                <body>Reads the input file, whose name is passed as input parameter to the constructor, and builds a&#xD;
Description object based on the contents. Each line of the file is an entry (string) in the&#xD;
Description object.&#xD;
&#xD;
@author sgoddard&#xD;
@version 1.8 Fall 2024</body>
              </ownedComment>
              <generalization xmi:id="_odbJIqk6Ee-lntgJ_JlK2w" general="_n6jsoKk6Ee-lntgJ_JlK2w"/>
              <ownedAttribute xmi:id="_ohGIMKk6Ee-lntgJ_JlK2w" name="EMPTY" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_ohGIMak6Ee-lntgJ_JlK2w" value="&quot;&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_ohGvQKk6Ee-lntgJ_JlK2w" name="INPUT_FILE_SUFFIX" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_ohGvQak6Ee-lntgJ_JlK2w" value="&quot;.wld&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_ohGvQqk6Ee-lntgJ_JlK2w" name="description" visibility="private" type="_nzwhEKk6Ee-lntgJ_JlK2w" association="_okZT0Kk6Ee-lntgJ_JlK2w"/>
              <ownedAttribute xmi:id="_ohGvRKk6Ee-lntgJ_JlK2w" name="inputGraphString" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_ohGvRqk6Ee-lntgJ_JlK2w" name="fm" visibility="private" type="_n0HGYKk6Ee-lntgJ_JlK2w" association="_okZT06k6Ee-lntgJ_JlK2w"/>
              <ownedAttribute xmi:id="_ohHWUak6Ee-lntgJ_JlK2w" name="inputFileName" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oipnYKk6Ee-lntgJ_JlK2w" name="WorkLoadDescription" specification="_n8BFMKk6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_oipnYak6Ee-lntgJ_JlK2w" name="inputFileName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_oipnYqk6Ee-lntgJ_JlK2w" type="_n7_3EKk6Ee-lntgJ_JlK2w" direction="return"/>
                <language>java</language>
                <body>super(new FileManager(), EMPTY, INPUT_FILE_SUFFIX); // VisualizationObject constructor&#xD;
 this.fm = this.getFileManager();&#xD;
 initialize(inputFileName);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oipnY6k6Ee-lntgJ_JlK2w" name="visualization" specification="_n8CTUak6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_oipnZKk6Ee-lntgJ_JlK2w" type="_nzwhEKk6Ee-lntgJ_JlK2w" direction="return"/>
                <language>java</language>
                <body>return description;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oipnZak6Ee-lntgJ_JlK2w" name="fileVisualization" specification="_n8Dhcqk6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_oipnZqk6Ee-lntgJ_JlK2w" type="_nzwhEKk6Ee-lntgJ_JlK2w" direction="return"/>
                <language>java</language>
                <body>return description;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oiqOcKk6Ee-lntgJ_JlK2w" name="toString" specification="_n8Evkak6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_oiqOcak6Ee-lntgJ_JlK2w" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return inputGraphString;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oiqOcqk6Ee-lntgJ_JlK2w" name="initialize" specification="_n8F9sKk6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_oiqOc6k6Ee-lntgJ_JlK2w" name="inputFile">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>// Get the input graph file name and read its contents&#xD;
 InputGraphFile gf = new InputGraphFile(fm);&#xD;
 inputGraphString = gf.readGraphFile(inputFile);&#xD;
 this.inputFileName = gf.getGraphFileName();&#xD;
 description = new Description(inputGraphString);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oiqOdKk6Ee-lntgJ_JlK2w" name="main" specification="_n8F9sqk6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_oiqOdak6Ee-lntgJ_JlK2w" name="args">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oiqOdqk6Ee-lntgJ_JlK2w" value="*"/>
                </ownedParameter>
                <language>java</language>
                <body>WorkLoadDescription myWorkLoad = new WorkLoadDescription(&quot;StressTest.txt&quot;);&#xD;
	  Description myDescription = myWorkLoad.description;&#xD;
	  &#xD;
	  /* Deletes end of line behind graph name */&#xD;
	  System.out.println(myDescription.getFirst().split(&quot; &quot;)[0]);&#xD;
	  &#xD;
	  /* First and last lines of file don't hold a flow */&#xD;
	  myDescription.remove(0);&#xD;
	  myDescription.remove(myDescription.size()-1);&#xD;
	  &#xD;
	  /* Imported Collections.sort() method alphabetizes array lists */&#xD;
	  Collections.sort(myDescription);&#xD;
	  for (int i=1; i&lt;myDescription.size()+1; i++) {&#xD;
		  System.out.print(&quot;Flow &quot; + i + &quot;: &quot; + myDescription.get(i-1));&#xD;
	  }&#xD;
  </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_n8BFMKk6Ee-lntgJ_JlK2w" name="WorkLoadDescription" visibility="package" method="_oipnYKk6Ee-lntgJ_JlK2w">
                <eAnnotations xmi:id="_n8BsQak6Ee-lntgJ_JlK2w" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_n8BsQqk6Ee-lntgJ_JlK2w" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_n8BsQKk6Ee-lntgJ_JlK2w" name="inputFileName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_n8CTUKk6Ee-lntgJ_JlK2w" type="_n7_3EKk6Ee-lntgJ_JlK2w" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_n8CTUak6Ee-lntgJ_JlK2w" name="visualization" method="_oipnY6k6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_odbJIKk6Ee-lntgJ_JlK2w" type="_nzwhEKk6Ee-lntgJ_JlK2w" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_n8Dhcqk6Ee-lntgJ_JlK2w" name="fileVisualization" method="_oipnZak6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_odbJIak6Ee-lntgJ_JlK2w" type="_nzwhEKk6Ee-lntgJ_JlK2w" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_n8Evkak6Ee-lntgJ_JlK2w" name="toString" method="_oiqOcKk6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_n8FWoKk6Ee-lntgJ_JlK2w" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_n8F9sKk6Ee-lntgJ_JlK2w" name="initialize" visibility="private" method="_oiqOcqk6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_n8F9sak6Ee-lntgJ_JlK2w" name="inputFile">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_n8F9sqk6Ee-lntgJ_JlK2w" name="main" isStatic="true" method="_oiqOdKk6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_n8F9s6k6Ee-lntgJ_JlK2w" name="args">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_n8GkwKk6Ee-lntgJ_JlK2w" value="*"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_n8IZ8Kk6Ee-lntgJ_JlK2w" name="WorkLoadListener" visibility="package" isLeaf="true">
              <ownedComment xmi:id="_ojEeJKk6Ee-lntgJ_JlK2w">
                <body>@author sgoddard&#xD;
 *</body>
              </ownedComment>
              <generalization xmi:id="_ofZfEKk6Ee-lntgJ_JlK2w" general="_obgdkak6Ee-lntgJ_JlK2w"/>
              <ownedAttribute xmi:id="_ohHWUqk6Ee-lntgJ_JlK2w" name="workLoad" visibility="package" type="_n8NScKk6Ee-lntgJ_JlK2w" association="_okZ64ak6Ee-lntgJ_JlK2w"/>
              <ownedAttribute xmi:id="_ohHWVKk6Ee-lntgJ_JlK2w" name="currentFlow" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oiq1gKk6Ee-lntgJ_JlK2w" name="WorkLoadListener" specification="_odbwMKk6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_oiq1gak6Ee-lntgJ_JlK2w" name="workLoad" type="_n8NScKk6Ee-lntgJ_JlK2w"/>
                <ownedParameter xmi:id="_oiq1gqk6Ee-lntgJ_JlK2w" type="_n8IZ8Kk6Ee-lntgJ_JlK2w" direction="return"/>
                <language>java</language>
                <body>this.workLoad = workLoad; // used to populate the workLoad as the input file is read&#xD;
     this.currentFlow = new String();&#xD;
  // Read input file and build AST of graphFile&#xD;
     try {&#xD;
     	CharStream inputGraph = CharStreams.fromString(workLoad.toString());&#xD;
     	var lexer = new WARPLexer(inputGraph);&#xD;
     	var tokens = new CommonTokenStream(lexer);&#xD;
     	var parser = new WARPParser(tokens);&#xD;
     	ParseTree warpTree = parser.warp(); // begin parsing at rule 'warp'&#xD;
     	var warp = new ParseTreeWalker();&#xD;
     	 // Now populate build the workLoad by walking the input Graph tokens&#xD;
     	warp.walk(this, warpTree);&#xD;
     } catch (Exception e) {&#xD;
     	e.printStackTrace();&#xD;
     	System.err.println(&quot;ERROR: Unable to parse graphFile&quot; + e.getMessage());&#xD;
     }&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oiq1g6k6Ee-lntgJ_JlK2w" name="buildNodesAndFlows" specification="_odcXQak6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_oiq1hKk6Ee-lntgJ_JlK2w" name="workLoad" type="_n8NScKk6Ee-lntgJ_JlK2w"/>
                <language>java</language>
                <body>/*&#xD;
 	 * Create the listener object, which will read the workLoad &#xD;
 	 * description and then buid the node and flow objects that&#xD;
 	 * instantiates the workLoad. This object is not needed&#xD;
 	 * after that.&#xD;
 	 */&#xD;
 	new WorkLoadListener(workLoad); &#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oiq1hak6Ee-lntgJ_JlK2w" name="testPrintStdOut" specification="_n8JoEKk6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_oiq1hqk6Ee-lntgJ_JlK2w" name="msg">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>System.out.printf(&quot;\n In WARPworkLoad Listener!!\n&quot;);&#xD;
 	System.out.printf(msg);&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oiq1h6k6Ee-lntgJ_JlK2w" name="enterWarpName" specification="_odcXQ6k6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_oiq1iKk6Ee-lntgJ_JlK2w" name="ctx" type="_obi50qk6Ee-lntgJ_JlK2w"/>
                <language>java</language>
                <body>var name = ctx.getText();  // get the name of the graph &#xD;
     workLoad.setName(name); // store the  name for later reference&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oiq1iak6Ee-lntgJ_JlK2w" name="enterFlowName" specification="_odc-Uak6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_oiq1iqk6Ee-lntgJ_JlK2w" name="ctx" type="_obl9Iqk6Ee-lntgJ_JlK2w"/>
                <language>java</language>
                <body>currentFlow = ctx.getText();&#xD;
     workLoad.addFlow(currentFlow);&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oirckKk6Ee-lntgJ_JlK2w" name="exitPriority" specification="_odeMcKk6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_oirckak6Ee-lntgJ_JlK2w" name="ctx" type="_oddlYKk6Ee-lntgJ_JlK2w"/>
                <language>java</language>
                <body>var priority = Integer.parseInt(ctx.getText());  // get priority from the AST&#xD;
     workLoad.setFlowPriority(currentFlow, priority);&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oirckqk6Ee-lntgJ_JlK2w" name="exitPeriod" specification="_odezgak6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_oirck6k6Ee-lntgJ_JlK2w" name="ctx" type="_odeMdak6Ee-lntgJ_JlK2w"/>
                <language>java</language>
                <body>var period = Integer.parseInt(ctx.getText());// get period from the AST&#xD;
     workLoad.setFlowPeriod(currentFlow, period);&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oirclKk6Ee-lntgJ_JlK2w" name="exitDeadline" specification="_odgosak6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_oirclak6Ee-lntgJ_JlK2w" name="ctx" type="_odgBoKk6Ee-lntgJ_JlK2w"/>
                <language>java</language>
                <body>var deadline = Integer.parseInt(ctx.getText());// get deadline from the AST&#xD;
     workLoad.setFlowDeadline(currentFlow, deadline);&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oirclqk6Ee-lntgJ_JlK2w" name="exitPhase" specification="_odid4ak6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_oircl6k6Ee-lntgJ_JlK2w" name="ctx" type="_odh20Kk6Ee-lntgJ_JlK2w"/>
                <language>java</language>
                <body>var phase = Integer.parseInt(ctx.getText());// get phase from the AST&#xD;
     workLoad.setFlowPhase(currentFlow, phase);&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oircmKk6Ee-lntgJ_JlK2w" name="exitSrcNode" specification="_odjsAKk6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_oircmak6Ee-lntgJ_JlK2w" name="ctx" type="_obnyUKk6Ee-lntgJ_JlK2w"/>
                <language>java</language>
                <body>var nodeName = ctx.getText(); // get the src node name&#xD;
     workLoad.addNodeToFlow(currentFlow, nodeName);&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oisDoKk6Ee-lntgJ_JlK2w" name="exitSnkNode" specification="_odkTEKk6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_oisDoak6Ee-lntgJ_JlK2w" name="ctx" type="_obpAcKk6Ee-lntgJ_JlK2w"/>
                <language>java</language>
                <body>var nodeName = ctx.getText(); // get the snk node name&#xD;
     workLoad.addNodeToFlow(currentFlow, nodeName);&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oisDoqk6Ee-lntgJ_JlK2w" name="exitFlow" specification="_odkTFak6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_oisDo6k6Ee-lntgJ_JlK2w" name="ctx" type="_obpng6k6Ee-lntgJ_JlK2w"/>
                <language>java</language>
                <body>workLoad.finalizeCurrentFlow(currentFlow);&#xD;
 </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_n8JoEKk6Ee-lntgJ_JlK2w" name="testPrintStdOut" method="_oiq1hak6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_n8JoEak6Ee-lntgJ_JlK2w" name="msg">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_odbwMKk6Ee-lntgJ_JlK2w" name="WorkLoadListener" visibility="private" method="_oiq1gKk6Ee-lntgJ_JlK2w">
                <eAnnotations xmi:id="_odbwMqk6Ee-lntgJ_JlK2w" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_odbwM6k6Ee-lntgJ_JlK2w" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_odbwMak6Ee-lntgJ_JlK2w" name="workLoad" type="_n8NScKk6Ee-lntgJ_JlK2w"/>
                <ownedParameter xmi:id="_odcXQKk6Ee-lntgJ_JlK2w" type="_n8IZ8Kk6Ee-lntgJ_JlK2w" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_odcXQak6Ee-lntgJ_JlK2w" name="buildNodesAndFlows" isStatic="true" method="_oiq1g6k6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_odcXQqk6Ee-lntgJ_JlK2w" name="workLoad" type="_n8NScKk6Ee-lntgJ_JlK2w"/>
              </ownedOperation>
              <ownedOperation xmi:id="_odcXQ6k6Ee-lntgJ_JlK2w" name="enterWarpName" method="_oiq1h6k6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_odcXRKk6Ee-lntgJ_JlK2w" name="ctx" type="_obi50qk6Ee-lntgJ_JlK2w"/>
              </ownedOperation>
              <ownedOperation xmi:id="_odc-Uak6Ee-lntgJ_JlK2w" name="enterFlowName" method="_oiq1iak6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_odc-Uqk6Ee-lntgJ_JlK2w" name="ctx" type="_obl9Iqk6Ee-lntgJ_JlK2w"/>
              </ownedOperation>
              <ownedOperation xmi:id="_odeMcKk6Ee-lntgJ_JlK2w" name="exitPriority" method="_oirckKk6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_odeMcak6Ee-lntgJ_JlK2w" name="ctx" type="_oddlYKk6Ee-lntgJ_JlK2w"/>
              </ownedOperation>
              <ownedOperation xmi:id="_odezgak6Ee-lntgJ_JlK2w" name="exitPeriod" method="_oirckqk6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_odezgqk6Ee-lntgJ_JlK2w" name="ctx" type="_odeMdak6Ee-lntgJ_JlK2w"/>
              </ownedOperation>
              <ownedOperation xmi:id="_odgosak6Ee-lntgJ_JlK2w" name="exitDeadline" method="_oirclKk6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_odgosqk6Ee-lntgJ_JlK2w" name="ctx" type="_odgBoKk6Ee-lntgJ_JlK2w"/>
              </ownedOperation>
              <ownedOperation xmi:id="_odid4ak6Ee-lntgJ_JlK2w" name="exitPhase" method="_oirclqk6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_odid4qk6Ee-lntgJ_JlK2w" name="ctx" type="_odh20Kk6Ee-lntgJ_JlK2w"/>
              </ownedOperation>
              <ownedOperation xmi:id="_odjsAKk6Ee-lntgJ_JlK2w" name="exitSrcNode" method="_oircmKk6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_odjsAak6Ee-lntgJ_JlK2w" name="ctx" type="_obnyUKk6Ee-lntgJ_JlK2w"/>
              </ownedOperation>
              <ownedOperation xmi:id="_odkTEKk6Ee-lntgJ_JlK2w" name="exitSnkNode" method="_oisDoKk6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_odkTEak6Ee-lntgJ_JlK2w" name="ctx" type="_obpAcKk6Ee-lntgJ_JlK2w"/>
              </ownedOperation>
              <ownedOperation xmi:id="_odkTFak6Ee-lntgJ_JlK2w" name="exitFlow" method="_oisDoqk6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_odkTFqk6Ee-lntgJ_JlK2w" name="ctx" type="_obpng6k6Ee-lntgJ_JlK2w"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_n8NScKk6Ee-lntgJ_JlK2w" name="WorkLoad">
              <ownedComment xmi:id="_ojFFMKk6Ee-lntgJ_JlK2w">
                <body>Build the nodes and flows for the workload described in the workload description file, whose name&#xD;
is passed into the Constructor via the parameter inputFileName. Good default values for the&#xD;
constructors are m = 0.9, e2e = 0.99, and numFaults = 1 when the second constructor is used.&#xD;
&#xD;
Initializes nodes and flows from the specified workload description file (`inputFileName`). &#xD;
Default values for the second constructor are m = 0.9, e2e = 0.99, and numFaults = 1.&#xD;
&#xD;
@author sgoddard&#xD;
@jcbates&#xD;
@version 1.4&#xD;
&#xD;
 *&#xD;
 *</body>
              </ownedComment>
              <generalization xmi:id="_odokg6k6Ee-lntgJ_JlK2w" general="_n7_3EKk6Ee-lntgJ_JlK2w"/>
              <ownedAttribute xmi:id="_ohH9YKk6Ee-lntgJ_JlK2w" name="DEFAULT_PRIORITY" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_ohIkcKk6Ee-lntgJ_JlK2w" value="0"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_ohIkcak6Ee-lntgJ_JlK2w" name="DEFAULT_INDEX" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_ohIkcqk6Ee-lntgJ_JlK2w" value="0"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_ohIkc6k6Ee-lntgJ_JlK2w" name="DEFAULT_TX_NUM" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_ohIkdKk6Ee-lntgJ_JlK2w" value="0"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_ohIkdak6Ee-lntgJ_JlK2w" name="FLOW_WARNING" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_ohIkdqk6Ee-lntgJ_JlK2w" value="&quot;\n\tWarning! Bad situation: &quot; + &quot;Flow %s doesn't exist but trying to &quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_ohIkd6k6Ee-lntgJ_JlK2w" name="numFaults" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_ohJLgKk6Ee-lntgJ_JlK2w" value="0"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_ohJLgak6Ee-lntgJ_JlK2w" name="minPacketReceptionRate" type="_oex0AKk6Ee-lntgJ_JlK2w" isReadOnly="true">
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_ohJLgqk6Ee-lntgJ_JlK2w" value="0.0"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_ohJLg6k6Ee-lntgJ_JlK2w" name="e2e" visibility="private" type="_oex0AKk6Ee-lntgJ_JlK2w">
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_ohJLhKk6Ee-lntgJ_JlK2w" value="0.0"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_ohJLhqk6Ee-lntgJ_JlK2w" name="intForNodeNames">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_ohJykKk6Ee-lntgJ_JlK2w" value="false"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_ohJykak6Ee-lntgJ_JlK2w" name="intForFlowNames" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_ohJykqk6Ee-lntgJ_JlK2w" value="false"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_ohJylKk6Ee-lntgJ_JlK2w" name="flows" type="_n0jyUKk6Ee-lntgJ_JlK2w" association="_ojFFMak6Ee-lntgJ_JlK2w"/>
              <ownedAttribute xmi:id="_ohKZoKk6Ee-lntgJ_JlK2w" name="nodes" type="_n1cjIKk6Ee-lntgJ_JlK2w" association="_ojFsQKk6Ee-lntgJ_JlK2w"/>
              <ownedAttribute xmi:id="_ohKZoak6Ee-lntgJ_JlK2w" name="name" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_ohKZo6k6Ee-lntgJ_JlK2w" name="flowNamesInOriginalOrder" type="_oawPoKk6Ee-lntgJ_JlK2w" association="_okah8ak6Ee-lntgJ_JlK2w">
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_ohLAsak6Ee-lntgJ_JlK2w" value="new ArrayList&lt;>()"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_ohLAsqk6Ee-lntgJ_JlK2w" name="flowNamesInPriorityOrder" type="_oawPoKk6Ee-lntgJ_JlK2w" association="_okbJAak6Ee-lntgJ_JlK2w">
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_ohMO0Kk6Ee-lntgJ_JlK2w" value="new ArrayList&lt;>()"/>
              </ownedAttribute>
              <interfaceRealization xmi:id="_odmIQak6Ee-lntgJ_JlK2w" client="_n8NScKk6Ee-lntgJ_JlK2w" supplier="_n29mEKk6Ee-lntgJ_JlK2w" contract="_n29mEKk6Ee-lntgJ_JlK2w"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oisqsKk6Ee-lntgJ_JlK2w" name="WorkLoad" specification="_ofbUQKk6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_oisqsak6Ee-lntgJ_JlK2w" name="m" type="_oex0AKk6Ee-lntgJ_JlK2w"/>
                <ownedParameter xmi:id="_oisqsqk6Ee-lntgJ_JlK2w" name="e2e" type="_oex0AKk6Ee-lntgJ_JlK2w"/>
                <ownedParameter xmi:id="_oisqs6k6Ee-lntgJ_JlK2w" name="inputFileName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_oisqtKk6Ee-lntgJ_JlK2w" type="_n8NScKk6Ee-lntgJ_JlK2w" direction="return"/>
                <language>java</language>
                <body>super(inputFileName);&#xD;
 setDefaultParameters();&#xD;
 minPacketReceptionRate = m; // use file manager passed to this object&#xD;
 this.e2e = e2e; // use populate this flows object as the input file is read&#xD;
 /*&#xD;
  * Read input file, build the AST of graph and the listener will build the node and flow data&#xD;
  * objects&#xD;
  */&#xD;
 WorkLoadListener.buildNodesAndFlows(this);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oisqtak6Ee-lntgJ_JlK2w" name="WorkLoad" specification="_ofb7U6k6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_oisqtqk6Ee-lntgJ_JlK2w" name="numFaults">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_oisqt6k6Ee-lntgJ_JlK2w" name="m" type="_oex0AKk6Ee-lntgJ_JlK2w"/>
                <ownedParameter xmi:id="_oisquKk6Ee-lntgJ_JlK2w" name="e2e" type="_oex0AKk6Ee-lntgJ_JlK2w"/>
                <ownedParameter xmi:id="_oisquak6Ee-lntgJ_JlK2w" name="inputFileName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_oisquqk6Ee-lntgJ_JlK2w" type="_n8NScKk6Ee-lntgJ_JlK2w" direction="return"/>
                <language>java</language>
                <body>super(inputFileName);&#xD;
 setDefaultParameters();&#xD;
 this.numFaults = numFaults;&#xD;
 minPacketReceptionRate = m; // use file manager passed to this object&#xD;
 this.e2e = e2e; // use populate this flows object as the input file is read&#xD;
 /*&#xD;
  * Read input file, build the AST of graph and the listener will build the node and flow data&#xD;
  * objects&#xD;
  */&#xD;
 WorkLoadListener.buildNodesAndFlows(this);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oisqu6k6Ee-lntgJ_JlK2w" name="setDefaultParameters" specification="_n8Rj4Kk6Ee-lntgJ_JlK2w">
                <language>java</language>
                <body>intForNodeNames = true; // default is that node names are all alpha names&#xD;
 intForFlowNames = true; // default is that node names are all alpha names&#xD;
 flows = new FlowMap(); // map of all flow nodes in the WARP graph (&lt;name, Flow>)&#xD;
 nodes = new NodeMap(); // map of all graph nodes in the WARP graph (&lt;name, Node>)&#xD;
 flowNamesInOriginalOrder = new ArrayList&lt;>(); // array to hold names of flows to preserve their&#xD;
                                               // order&#xD;
 flowNamesInPriorityOrder = new ArrayList&lt;>();&#xD;
 numFaults = DEFAULT_TX_NUM;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oisqvKk6Ee-lntgJ_JlK2w" name="getE2e" specification="_n8Rj4ak6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_oisqvak6Ee-lntgJ_JlK2w" type="_oex0AKk6Ee-lntgJ_JlK2w" direction="return"/>
                <language>java</language>
                <body>return e2e;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oitRwKk6Ee-lntgJ_JlK2w" name="getIntForFlowNames" specification="_n8Rj4qk6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_oitRwak6Ee-lntgJ_JlK2w" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>return intForFlowNames;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oitRwqk6Ee-lntgJ_JlK2w" name="getName" specification="_n8SK8Kk6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_oitRw6k6Ee-lntgJ_JlK2w" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return name;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oitRxKk6Ee-lntgJ_JlK2w" name="setMinPacketReceptionRate" specification="_ofdJcak6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_oitRxak6Ee-lntgJ_JlK2w" name="minPacketReceptionRate" type="_oex0AKk6Ee-lntgJ_JlK2w"/>
                <language>java</language>
                <body>this.minPacketReceptionRate = minPacketReceptionRate;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oitRxqk6Ee-lntgJ_JlK2w" name="getMaxPhase" specification="_n8SK8qk6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_oitRx6k6Ee-lntgJ_JlK2w" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var queue = new SchedulableObjectQueue&lt;Flow>(new MaxPhaseComparator&lt;Flow>(), flows.values());&#xD;
 return queue.poll().getPhase();&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oitRyKk6Ee-lntgJ_JlK2w" name="getMinPeriod" specification="_n8SK9Kk6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_oitRyak6Ee-lntgJ_JlK2w" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var queue = new SchedulableObjectQueue&lt;Flow>(new PeriodComparator&lt;Flow>(), flows.values());&#xD;
 return queue.poll().getPeriod();&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oitRyqk6Ee-lntgJ_JlK2w" name="setE2e" specification="_ofdwgKk6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_oitRy6k6Ee-lntgJ_JlK2w" name="e2e" type="_oex0AKk6Ee-lntgJ_JlK2w"/>
                <language>java</language>
                <body>this.e2e = e2e;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oit40Kk6Ee-lntgJ_JlK2w" name="setIntForFlowNames" specification="_n8SyAKk6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_oit40ak6Ee-lntgJ_JlK2w" name="intForFlowNames">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>this.intForFlowNames = intForFlowNames;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oit40qk6Ee-lntgJ_JlK2w" name="setName" specification="_n8SyAqk6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_oit406k6Ee-lntgJ_JlK2w" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>this.name = name;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oit41Kk6Ee-lntgJ_JlK2w" name="setNodeChannel" specification="_n8TZEKk6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_oit41ak6Ee-lntgJ_JlK2w" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_oit41qk6Ee-lntgJ_JlK2w" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var node = nodes.get(name); // get the node object&#xD;
 node.setChannel(channel);&#xD;
 nodes.put(name, node); // update the nodes map with the updated object&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oit416k6Ee-lntgJ_JlK2w" name="getNodeChannel" specification="_n8V1UKk6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_oit42Kk6Ee-lntgJ_JlK2w" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_oit42ak6Ee-lntgJ_JlK2w" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var node = nodes.get(name); // get the node object&#xD;
 return node.getChannel();&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oit42qk6Ee-lntgJ_JlK2w" name="addFlow" specification="_n8WcYKk6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_oit426k6Ee-lntgJ_JlK2w" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>if (flows.containsKey(flowName)) {&#xD;
   System.out.printf(&quot;\n\tWarning! A flow with name %s already exists. &quot;&#xD;
       + &quot;It has been replaced with a new flow\n.&quot;, flowName);&#xD;
 }&#xD;
 var index = flows.size();&#xD;
 var flowNode = new Flow(flowName, index, index);&#xD;
 flows.put(flowName, flowNode);&#xD;
 if (!Utilities.isInteger(flowName) &amp;&amp; intForFlowNames) {&#xD;
   intForFlowNames = false; // set false because name not is a number; &amp;&amp; above makes sure we&#xD;
                            // only set it once&#xD;
 }&#xD;
 flowNamesInOriginalOrder.add(flowName);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oit43Kk6Ee-lntgJ_JlK2w" name="isIntForNodeNames" specification="_n8WcYqk6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_oit43ak6Ee-lntgJ_JlK2w" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>return intForNodeNames;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oiuf4Kk6Ee-lntgJ_JlK2w" name="isIntForFlowNames" specification="_n8WcZKk6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_oiuf4ak6Ee-lntgJ_JlK2w" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>// returns true if all flow names are an ints&#xD;
 return intForFlowNames;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oiuf4qk6Ee-lntgJ_JlK2w" name="addNodeToFlow" specification="_n8XqgKk6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_oiuf46k6Ee-lntgJ_JlK2w" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_oiuf5Kk6Ee-lntgJ_JlK2w" name="nodeName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>if (!Utilities.isInteger(nodeName) &amp;&amp; intForNodeNames) {&#xD;
   /* set false because name not is a number; &amp;&amp; above makes sure we only set it once */&#xD;
   intForNodeNames = false;&#xD;
 }&#xD;
 if (!nodes.containsKey(nodeName)) { // create the node and add it to nodes if map doesn't have&#xD;
                                     // this node already.&#xD;
   /* If the node already exists, just need to add to the flow */&#xD;
   var index = nodes.size(); // nodeIndex will be the order added&#xD;
   var graphNode = new Node(nodeName, DEFAULT_PRIORITY, index); // create a new graph node&#xD;
   nodes.put(nodeName, graphNode); // add it to the map of nodes&#xD;
 }&#xD;
 /*&#xD;
  * Node is now created and in the nodes map Next we need to get the current flow and add this&#xD;
  * node to that flow by appending it to the node array for that flow&#xD;
  */&#xD;
 var flowNode = getFlow(flowName);&#xD;
 var graphNode = new Node(nodeName, flowNode.nodes.size(), DEFAULT_INDEX);&#xD;
 /* the priority is the node's index in the flow, which is the current array size */&#xD;
 flowNode.addNode(graphNode);&#xD;
 flowNode.linkTxAndTotalCost.add(DEFAULT_TX_NUM);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oiuf5ak6Ee-lntgJ_JlK2w" name="getFlowPriority" specification="_n8Xqg6k6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_oiuf5qk6Ee-lntgJ_JlK2w" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_oiuf56k6Ee-lntgJ_JlK2w" name="nodeName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_oiuf6Kk6Ee-lntgJ_JlK2w" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var priority = 0;&#xD;
 var flow = getFlow(flowName);&#xD;
 Iterator&lt;Node> nodes = flow.nodes.iterator();&#xD;
 while (nodes.hasNext()) {&#xD;
   var node = nodes.next();&#xD;
   if (node.getName() == nodeName) {&#xD;
     priority = node.getPriority(); // found the src node, set its index&#xD;
     break;&#xD;
   }&#xD;
 }&#xD;
 return priority;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oiuf6ak6Ee-lntgJ_JlK2w" name="setFlowPriority" specification="_n8YRkKk6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_oiuf6qk6Ee-lntgJ_JlK2w" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_oiuf66k6Ee-lntgJ_JlK2w" name="priority">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var flowNode = getFlow(flowName);&#xD;
 flowNode.setPriority(priority);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oiuf7Kk6Ee-lntgJ_JlK2w" name="setFlowPeriod" specification="_n8Y4oKk6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_oiuf7ak6Ee-lntgJ_JlK2w" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_oiuf7qk6Ee-lntgJ_JlK2w" name="period">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var flowNode = getFlow(flowName);&#xD;
 flowNode.setPeriod(period);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oiuf76k6Ee-lntgJ_JlK2w" name="setFlowDeadline" specification="_n8Y4o6k6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_oiuf8Kk6Ee-lntgJ_JlK2w" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_oiuf8ak6Ee-lntgJ_JlK2w" name="deadline">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var flowNode = getFlow(flowName);&#xD;
 flowNode.setDeadline(deadline);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oivG8Kk6Ee-lntgJ_JlK2w" name="setFlowPhase" specification="_n8aGwKk6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_oivG8ak6Ee-lntgJ_JlK2w" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_oivG8qk6Ee-lntgJ_JlK2w" name="phase">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var flowNode = getFlow(flowName);&#xD;
 flowNode.setPhase(phase);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oivG86k6Ee-lntgJ_JlK2w" name="getFlowIndex" specification="_n8b78Kk6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_oivG9Kk6Ee-lntgJ_JlK2w" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_oivG9ak6Ee-lntgJ_JlK2w" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var flowNode = getFlow(flowName);&#xD;
 return flowNode.index;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oivG9qk6Ee-lntgJ_JlK2w" name="getFlowPriority" specification="_n8cjAKk6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_oivG96k6Ee-lntgJ_JlK2w" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_oivG-Kk6Ee-lntgJ_JlK2w" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var flowNode = getFlow(flowName);&#xD;
 return flowNode.getPriority();&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oivG-ak6Ee-lntgJ_JlK2w" name="getFlowPeriod" specification="_n8cjA6k6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_oivG-qk6Ee-lntgJ_JlK2w" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_oivG-6k6Ee-lntgJ_JlK2w" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var flowNode = getFlow(flowName);&#xD;
 return flowNode.getPeriod();&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oivG_Kk6Ee-lntgJ_JlK2w" name="getFlowDeadline" specification="_n8dKEak6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_oivG_ak6Ee-lntgJ_JlK2w" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_oivG_qk6Ee-lntgJ_JlK2w" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var flowNode = getFlow(flowName);&#xD;
 return flowNode.getDeadline();&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oivG_6k6Ee-lntgJ_JlK2w" name="getFlowPhase" specification="_n8dxIKk6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_oivHAKk6Ee-lntgJ_JlK2w" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_oivHAak6Ee-lntgJ_JlK2w" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var flowNode = getFlow(flowName);&#xD;
 return flowNode.getPhase();&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oivHAqk6Ee-lntgJ_JlK2w" name="getFlowTxAttemptsPerLink" specification="_n8dxI6k6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_oivHA6k6Ee-lntgJ_JlK2w" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_oivHBKk6Ee-lntgJ_JlK2w" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var flowNode = getFlow(flowName);&#xD;
 return flowNode.numTxPerLink;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oivuAKk6Ee-lntgJ_JlK2w" name="setFlowsInPriorityOrder" specification="_n8hbgKk6Ee-lntgJ_JlK2w">
                <language>java</language>
                <body>// create a list of Flow objects from the FlowMap using the stream interface.&#xD;
 List&lt;Flow> unsortedFlows = flows.values().stream().collect(Collectors.toList());&#xD;
 // Now sort by a secondary key, which is index in this case&#xD;
 List&lt;Flow> sortedByIndex = unsortedFlows.stream().sorted(Comparator.comparing(Flow::getIndex))&#xD;
     .collect(Collectors.toList());&#xD;
 // Now sort by primary key, which is priority in this case&#xD;
 List&lt;Flow> sortedFlows = sortedByIndex.stream().sorted(Comparator.comparing(Flow::getPriority))&#xD;
     .collect(Collectors.toList());&#xD;
 // Finally, create a new flowNamesInPriorityOrder that contains the flow names in the requested&#xD;
 // order&#xD;
 flowNamesInPriorityOrder = new ArrayList&lt;>();&#xD;
 sortedFlows.forEach((node) -> flowNamesInPriorityOrder.add(node.getName()));&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oivuAak6Ee-lntgJ_JlK2w" name="setFlowsInDMorder" specification="_n8hbgak6Ee-lntgJ_JlK2w">
                <language>java</language>
                <body>/* create a list of Flow objects from the FlowMap using the stream interface. */&#xD;
 List&lt;Flow> unsortedFlows = flows.values().stream().collect(Collectors.toList());&#xD;
 /* Now sort by a secondary key, which is priority in this case */&#xD;
 List&lt;Flow> sortedByPriority = unsortedFlows.stream()&#xD;
     .sorted(Comparator.comparing(Flow::getPriority)).collect(Collectors.toList());&#xD;
 /* Now sort by primary key, which is deadline in this case */&#xD;
 List&lt;Flow> sortedFlows = sortedByPriority.stream()&#xD;
     .sorted(Comparator.comparing(Flow::getDeadline)).collect(Collectors.toList());&#xD;
 /*&#xD;
  * Finally, create a new flowNamesInPriorityOrder that contains the flow names in the requested&#xD;
  * order&#xD;
  */&#xD;
 flowNamesInPriorityOrder = new ArrayList&lt;>();&#xD;
 sortedFlows.forEach((node) -> flowNamesInPriorityOrder.add(node.getName()));&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oivuAqk6Ee-lntgJ_JlK2w" name="setFlowsInRMorder" specification="_n8hbgqk6Ee-lntgJ_JlK2w">
                <language>java</language>
                <body>// create a list of Flow objects from the FlowMap using the stream interface.&#xD;
 List&lt;Flow> unsortedFlows = flows.values().stream().collect(Collectors.toList());&#xD;
 // Now sort by a secondary key, which is priority in this case&#xD;
 List&lt;Flow> sortedByPriority = unsortedFlows.stream()&#xD;
     .sorted(Comparator.comparing(Flow::getPriority)).collect(Collectors.toList());&#xD;
 // Now sort by primary key, which is period in this case&#xD;
 List&lt;Flow> sortedFlows = sortedByPriority.stream().sorted(Comparator.comparing(Flow::getPeriod))&#xD;
     .collect(Collectors.toList());&#xD;
 // Finally, create a new flowNamesInPriorityOrder that contains the flow names in the requested&#xD;
 // order&#xD;
 flowNamesInPriorityOrder = new ArrayList&lt;>();&#xD;
 sortedFlows.forEach((node) -> flowNamesInPriorityOrder.add(node.getName()));&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oivuA6k6Ee-lntgJ_JlK2w" name="setFlowsInRealTimeHARTorder" specification="_n8iCkKk6Ee-lntgJ_JlK2w">
                <language>java</language>
                <body>setFlowsInPriorityOrder(); // use Priority order for RealTimeHART&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oivuBKk6Ee-lntgJ_JlK2w" name="finalizeCurrentFlow" specification="_n8iCkak6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_oivuBak6Ee-lntgJ_JlK2w" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>if (numFaults > 0) {&#xD;
   finalizeFlowWithFixedFaultTolerance(flowName);&#xD;
 } else {&#xD;
   finalizeFlowWithE2eParameters(flowName);&#xD;
 }&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oivuBqk6Ee-lntgJ_JlK2w" name="nextReleaseTime" specification="_n8ipoKk6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_oivuB6k6Ee-lntgJ_JlK2w" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_oivuCKk6Ee-lntgJ_JlK2w" name="currentTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_oivuCak6Ee-lntgJ_JlK2w" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var flow = getFlow(flowName);&#xD;
 flow.setLastUpdateTime(currentTime);&#xD;
 flow.setNextReleaseTime(currentTime);&#xD;
 return flow.getReleaseTime(); // next release Time at or after currentTime&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oivuCqk6Ee-lntgJ_JlK2w" name="nextAbsoluteDeadline" specification="_n8ippKk6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_oivuC6k6Ee-lntgJ_JlK2w" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_oivuDKk6Ee-lntgJ_JlK2w" name="currentTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_oivuDak6Ee-lntgJ_JlK2w" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var flow = getFlow(flowName);&#xD;
 flow.setLastUpdateTime(currentTime);&#xD;
 flow.setNextReleaseTime(currentTime);&#xD;
 return flow.getReleaseTime() + flow.getDeadline(); // next deadline after currentTime&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oivuDqk6Ee-lntgJ_JlK2w" name="finalizeFlowWithE2eParameters" specification="_n8lF4Kk6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_oivuD6k6Ee-lntgJ_JlK2w" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>var flowNode = flows.get(flowName);&#xD;
 var m = minPacketReceptionRate; // shorten the name :-)&#xD;
 if (flowNode != null) {&#xD;
   var nodes = flowNode.nodes;&#xD;
   int nHops = nodes.size();&#xD;
   if (nHops &lt; 1) {&#xD;
     /*&#xD;
      * number of hops in flow, but make sure it will be at least 1, else it isn't a flow! || was&#xD;
      * -1 at end&#xD;
      */&#xD;
     nHops = 2;&#xD;
   }&#xD;
   Double nTx = 1.0; // set nTx to 1 by default (1 transmission per link required at a minimum&#xD;
                     // and when m == 1.0&#xD;
   if (m &lt; 1.0) {&#xD;
     /*&#xD;
      * now compute nTXper link based on Ryan's formula: log(1 - e2e^(1/hops)) / log(1 - M) = #&#xD;
      * txs per hop&#xD;
      */&#xD;
     nTx = Math.log((1.0 - Math.pow(e2e, (1.0 / (double) nHops)))) / Math.log(1.0 - m);&#xD;
   }&#xD;
   /* set numTxPerLink based on M, E2E, and flow length */&#xD;
   flowNode.numTxPerLink = (int) Math.ceil(nTx);&#xD;
   /* Now compute nTx per link to reach E2E requirement. */&#xD;
   ReliabilityAnalysis linkTxTotalCost2 = new ReliabilityAnalysis(e2e, m);&#xD;
   flowNode.linkTxAndTotalCost = linkTxTotalCost2.numTxPerLinkAndTotalTxCost(flowNode);&#xD;
   flows.put(flowName, flowNode); // update flow node in Flows array&#xD;
 } else { // should never happen...&#xD;
   System.out.printf(&quot;\n\tWarning! Bad situation: Flow %s doesn't exist but &quot;&#xD;
       + &quot;trying to get its numTxPerLink property\n.&quot;, flowName);&#xD;
 }&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oivuEKk6Ee-lntgJ_JlK2w" name="finalizeFlowWithFixedFaultTolerance" specification="_n8ls8Kk6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_oivuEak6Ee-lntgJ_JlK2w" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>var flowNode = flows.get(flowName);&#xD;
 if (flowNode != null) {&#xD;
   /* set numTxPerLink based on numFaults */&#xD;
   flowNode.numTxPerLink = numFaults + 1;&#xD;
   /* Now compute nTx per link to reach E2E requirement. */&#xD;
   ReliabilityAnalysis linkTxTotalCost2 = new ReliabilityAnalysis(numFaults);&#xD;
   flowNode.linkTxAndTotalCost = linkTxTotalCost2.numTxPerLinkAndTotalTxCost(flowNode);&#xD;
   flows.put(flowName, flowNode); // update flow node in Flows array&#xD;
 } else { // should never happen...&#xD;
   System.out.printf(&quot;\n\tWarning! Bad situation: Flow %s doesn't exist but &quot;&#xD;
       + &quot;trying to get its numTxPerLink property\n.&quot;, flowName);&#xD;
 }&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oiwVEKk6Ee-lntgJ_JlK2w" name="getNodeNamesOrderedAlphabetically" specification="_n8ls8qk6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_oiwVEak6Ee-lntgJ_JlK2w" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oiwVEqk6Ee-lntgJ_JlK2w" value="*"/>
                </ownedParameter>
                <language>java</language>
                <body>var nodes = getNodes();&#xD;
 Set&lt;String> keys = nodes.keySet(); // get the names from the node map&#xD;
 String[] nodeNames = keys.toArray(new String[keys.size()]);&#xD;
 Arrays.sort(nodeNames); // NodeNames are now sorted&#xD;
 // However, if names are actually strings of integers, then the sort doesn't come out&#xD;
 // the way we would like. So, handle that case&#xD;
 var nodeNamesAsInts = new Integer[nodeNames.length];&#xD;
 var allIntNames = true; // flag to see if all names are Ints or not&#xD;
 for (int i = 0; i &lt; nodeNames.length; i++) {&#xD;
   var nodeName = nodeNames[i];&#xD;
   if (Utilities.isInteger(nodeName) &amp;&amp; allIntNames) {&#xD;
     // nodeName is an alpha representation of an integer&#xD;
     nodeNamesAsInts[i] = Integer.parseInt(nodeName);&#xD;
   } else {&#xD;
     // nodeName is an alpha name and not an integer, so set flag and terminate loop&#xD;
     allIntNames = false; // set false because name not is a number; &amp;&amp; above makes sure we only&#xD;
                          // set it once&#xD;
     break; // can stop the loop once we know not all of the names are ints&#xD;
   }&#xD;
 }&#xD;
 if (allIntNames) {&#xD;
   // If all names are ints, then we need to sort them accordingly&#xD;
   // Otherwise, we get names in what appears to not be in order because&#xD;
   Arrays.sort(nodeNamesAsInts); // sort the ints in assending order&#xD;
   for (int i = 0; i &lt; nodeNamesAsInts.length; i++) {&#xD;
     nodeNames[i] = Integer.toString(nodeNamesAsInts[i]); // convert int to string&#xD;
   }&#xD;
 }&#xD;
 return nodeNames;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oiwVE6k6Ee-lntgJ_JlK2w" name="getFlow" specification="_n8mUAak6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_oiwVFKk6Ee-lntgJ_JlK2w" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_oiwVFak6Ee-lntgJ_JlK2w" type="_n0QQUKk6Ee-lntgJ_JlK2w" direction="return"/>
                <language>java</language>
                <body>var flow = flows.get(flowName); // get the requested flow node&#xD;
 if (flow == null) {// return empty node if not found&#xD;
   flow = new Flow();&#xD;
   System.out.printf(FLOW_WARNING + &quot;retrieve it\n.&quot;, flowName);&#xD;
 }&#xD;
 return flow;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oiwVFqk6Ee-lntgJ_JlK2w" name="getFlowNames" specification="_n8m7EKk6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_oiwVF6k6Ee-lntgJ_JlK2w" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oiwVGKk6Ee-lntgJ_JlK2w" value="*"/>
                </ownedParameter>
                <language>java</language>
                <body>return flowNamesInOriginalOrder.toArray(new String[0]);&#xD;
 // could use new String[list.size()], but due to JVM optimizations new (new String[0] is better&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oiwVGak6Ee-lntgJ_JlK2w" name="getNodeIndex" specification="_n8niIak6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_oiwVGqk6Ee-lntgJ_JlK2w" name="nodeName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_oiwVG6k6Ee-lntgJ_JlK2w" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var index = 0;&#xD;
 var node = nodes.get(nodeName); // could throw an exception if null, but just return 0 for now&#xD;
 if (node != null) {&#xD;
   index = node.getIndex();&#xD;
 }&#xD;
 return index;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oiwVHKk6Ee-lntgJ_JlK2w" name="getNodesInFlow" specification="_n8oJMKk6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_oiwVHak6Ee-lntgJ_JlK2w" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_oiwVHqk6Ee-lntgJ_JlK2w" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oiwVH6k6Ee-lntgJ_JlK2w" value="*"/>
                </ownedParameter>
                <language>java</language>
                <body>// get the flow node for requested Flow and then loop through the&#xD;
 // nodes in the flow to create an array of the node names in&#xD;
 // the same order as they exist in the flow specification (i.e., Graph file)&#xD;
 var flow = flows.get(flowName);&#xD;
 String[] nodes;&#xD;
 if (flow != null) {&#xD;
   nodes = new String[flow.nodes.size()];&#xD;
   for (int i = 0; i &lt; nodes.length; i++) {&#xD;
     var node = flow.nodes.get(i); // get the node from the arrayList&#xD;
     nodes[i] = node.getName(); // get the name and store it in the array&#xD;
   }&#xD;
&#xD;
 } else {&#xD;
   nodes = new String[0]; // return empty array&#xD;
   System.out.printf(&quot;\n\t Warning! No Flow with name %s.\n&quot;, flowName);&#xD;
 }&#xD;
 return nodes;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oiw8IKk6Ee-lntgJ_JlK2w" name="getHyperPeriod" specification="_n8owQKk6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_oiw8Iak6Ee-lntgJ_JlK2w" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var hyperPeriod = 1; // hyperPeriod is LCM of all periods. Initialize to 1&#xD;
 for (String flowName : getFlowNames()) {&#xD;
   // var dm = new Utlitities();&#xD;
   hyperPeriod = Utilities.lcm(hyperPeriod, getFlowPeriod(flowName)); // Find LCM of hyperPeriod&#xD;
                                                                      // so far and the current&#xD;
                                                                      // period, then update the&#xD;
                                                                      // hyperPeriod with that&#xD;
                                                                      // value&#xD;
 }&#xD;
 return hyperPeriod;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oiw8Iqk6Ee-lntgJ_JlK2w" name="getTotalTxAttemptsInFlow" specification="_n8owQqk6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_oiw8I6k6Ee-lntgJ_JlK2w" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_oiw8JKk6Ee-lntgJ_JlK2w" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var flow = getFlow(flowName);&#xD;
 var linkTxAndTotalCost = flow.getLinkTxAndTotalCost();&#xD;
 var totalCostIndex = linkTxAndTotalCost.size() - 1;&#xD;
 var totalCost = linkTxAndTotalCost.get(totalCostIndex);&#xD;
 return totalCost;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oiw8Jak6Ee-lntgJ_JlK2w" name="getNumTxAttemptsPerLink" specification="_n8p-YKk6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_oiw8Jqk6Ee-lntgJ_JlK2w" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_oiw8J6k6Ee-lntgJ_JlK2w" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oiw8KKk6Ee-lntgJ_JlK2w" value="*"/>
                </ownedParameter>
                <language>java</language>
                <body>var flow = getFlow(flowName);&#xD;
 var linkTxAndTotalCost = new ArrayList&lt;Integer>(flow.getLinkTxAndTotalCost());&#xD;
 var lastElement = linkTxAndTotalCost.size() - 1;&#xD;
 linkTxAndTotalCost.remove(lastElement); // remove the last element, because that is the sum of&#xD;
                                         // others&#xD;
 return linkTxAndTotalCost.toArray(new Integer[0]);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oiw8Kak6Ee-lntgJ_JlK2w" name="addEdge" specification="_odokgKk6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_oiw8Kqk6Ee-lntgJ_JlK2w" name="nodeName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_oiw8K6k6Ee-lntgJ_JlK2w" name="edge" type="_nz2AoKk6Ee-lntgJ_JlK2w"/>
                <language>java</language>
                <body>var node = nodes.get(nodeName); // get the node object&#xD;
 node.addEdge(edge);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oiw8LKk6Ee-lntgJ_JlK2w" name="maxFlowLength" specification="_n8saoKk6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_oiw8Lak6Ee-lntgJ_JlK2w" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>Integer maxLength = 0;&#xD;
 for (Flow flow : flows.values()) {&#xD;
   maxLength = Math.max(maxLength, flow.nodes.size());&#xD;
 }&#xD;
 return maxLength;&#xD;
  </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_n8Rj4Kk6Ee-lntgJ_JlK2w" name="setDefaultParameters" visibility="private" method="_oisqu6k6Ee-lntgJ_JlK2w">
                <ownedComment xmi:id="_ojFsRKk6Ee-lntgJ_JlK2w">
                  <body>Initialize the default parameters for the WorkLoad object</body>
                </ownedComment>
              </ownedOperation>
              <ownedOperation xmi:id="_n8Rj4ak6Ee-lntgJ_JlK2w" name="getE2e" method="_oisqvKk6Ee-lntgJ_JlK2w">
                <ownedComment xmi:id="_ojFsRak6Ee-lntgJ_JlK2w">
                  <body>@return the e2e</body>
                </ownedComment>
                <ownedParameter xmi:id="_ofdJcKk6Ee-lntgJ_JlK2w" type="_oex0AKk6Ee-lntgJ_JlK2w" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_n8Rj4qk6Ee-lntgJ_JlK2w" name="getIntForFlowNames" method="_oitRwKk6Ee-lntgJ_JlK2w">
                <ownedComment xmi:id="_ojFsRqk6Ee-lntgJ_JlK2w">
                  <body>@return the intForFlowNames</body>
                </ownedComment>
                <ownedParameter xmi:id="_n8Rj46k6Ee-lntgJ_JlK2w" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_n8SK8Kk6Ee-lntgJ_JlK2w" name="getName" method="_oitRwqk6Ee-lntgJ_JlK2w">
                <ownedComment xmi:id="_ojFsR6k6Ee-lntgJ_JlK2w">
                  <body>@return the name</body>
                </ownedComment>
                <ownedParameter xmi:id="_n8SK8ak6Ee-lntgJ_JlK2w" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_n8SK8qk6Ee-lntgJ_JlK2w" name="getMaxPhase" method="_oitRxqk6Ee-lntgJ_JlK2w">
                <ownedComment xmi:id="_ojGTUak6Ee-lntgJ_JlK2w">
                  <body>@return the maximum phase of all flows</body>
                </ownedComment>
                <ownedParameter xmi:id="_n8SK86k6Ee-lntgJ_JlK2w" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_n8SK9Kk6Ee-lntgJ_JlK2w" name="getMinPeriod" method="_oitRyKk6Ee-lntgJ_JlK2w">
                <ownedComment xmi:id="_ojGTUqk6Ee-lntgJ_JlK2w">
                  <body>@return the minimum period of all flows</body>
                </ownedComment>
                <ownedParameter xmi:id="_n8SK9ak6Ee-lntgJ_JlK2w" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_n8SyAKk6Ee-lntgJ_JlK2w" name="setIntForFlowNames" method="_oit40Kk6Ee-lntgJ_JlK2w">
                <ownedComment xmi:id="_ojGTVKk6Ee-lntgJ_JlK2w">
                  <body>@param intForFlowNames the intForFlowNames to set</body>
                </ownedComment>
                <ownedParameter xmi:id="_n8SyAak6Ee-lntgJ_JlK2w" name="intForFlowNames">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_n8SyAqk6Ee-lntgJ_JlK2w" name="setName" method="_oit40qk6Ee-lntgJ_JlK2w">
                <ownedComment xmi:id="_ojGTVak6Ee-lntgJ_JlK2w">
                  <body>@param name the name to set</body>
                </ownedComment>
                <ownedParameter xmi:id="_n8SyA6k6Ee-lntgJ_JlK2w" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_n8TZEKk6Ee-lntgJ_JlK2w" name="setNodeChannel" method="_oit41Kk6Ee-lntgJ_JlK2w">
                <ownedComment xmi:id="_ojGTVqk6Ee-lntgJ_JlK2w">
                  <body>@param name the node whose channel is to be set&#xD;
   * @param channel the channel to set</body>
                </ownedComment>
                <ownedParameter xmi:id="_n8TZEak6Ee-lntgJ_JlK2w" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_n8UAIKk6Ee-lntgJ_JlK2w" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_n8V1UKk6Ee-lntgJ_JlK2w" name="getNodeChannel" method="_oit416k6Ee-lntgJ_JlK2w">
                <ownedComment xmi:id="_ojGTV6k6Ee-lntgJ_JlK2w">
                  <body>@return the node channel</body>
                </ownedComment>
                <ownedParameter xmi:id="_n8V1Uak6Ee-lntgJ_JlK2w" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_n8V1Uqk6Ee-lntgJ_JlK2w" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_n8WcYKk6Ee-lntgJ_JlK2w" name="addFlow" method="_oit42qk6Ee-lntgJ_JlK2w">
                <ownedComment xmi:id="_ojGTWKk6Ee-lntgJ_JlK2w">
                  <body>add a new flow node to the Flows dictionary. Only name, priority, and index are changed from&#xD;
    default values priority is set to the number of flows already added (index), 0 for first flow&#xD;
    This will create a default priority equal to the order listed in the input graph file. We&#xD;
    also set index to the same value so we can preserve that order as a secondary sort key. The&#xD;
    initalPriority field is probably not needed, but it might be useful in the future?? If the&#xD;
    optional flow parameters (priority, period, ...) is set, then this default priority will be&#xD;
    over written&#xD;
    &#xD;
    Initializes default parameters for the WorkLoad object, including settings for node and flow names,  &#xD;
    and initializes maps for flow and node storage.&#xD;
 @param flowName</body>
                </ownedComment>
                <ownedParameter xmi:id="_n8WcYak6Ee-lntgJ_JlK2w" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_n8WcYqk6Ee-lntgJ_JlK2w" name="isIntForNodeNames" method="_oit43Kk6Ee-lntgJ_JlK2w">
                <ownedComment xmi:id="_ojGTWak6Ee-lntgJ_JlK2w">
                  <body>@return returns true if all node names are ints</body>
                </ownedComment>
                <ownedParameter xmi:id="_n8WcY6k6Ee-lntgJ_JlK2w" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_n8WcZKk6Ee-lntgJ_JlK2w" name="isIntForFlowNames" method="_oiuf4Kk6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_n8WcZak6Ee-lntgJ_JlK2w" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_n8XqgKk6Ee-lntgJ_JlK2w" name="addNodeToFlow" method="_oiuf4qk6Ee-lntgJ_JlK2w">
                <ownedComment xmi:id="_ojGTWqk6Ee-lntgJ_JlK2w">
                  <body>Adds node to flow creating one if no node exists &#xD;
@param flowName&#xD;
@param nodeName</body>
                </ownedComment>
                <ownedParameter xmi:id="_n8Xqgak6Ee-lntgJ_JlK2w" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_n8Xqgqk6Ee-lntgJ_JlK2w" name="nodeName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_n8Xqg6k6Ee-lntgJ_JlK2w" name="getFlowPriority" method="_oiuf5ak6Ee-lntgJ_JlK2w">
                <ownedComment xmi:id="_ojGTW6k6Ee-lntgJ_JlK2w">
                  <body>Iterates over nodes and returns the priority node &#xD;
&#xD;
@param flowName&#xD;
@param nodeName&#xD;
@return the node priority</body>
                </ownedComment>
                <ownedParameter xmi:id="_n8XqhKk6Ee-lntgJ_JlK2w" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_n8Xqhak6Ee-lntgJ_JlK2w" name="nodeName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_n8Xqhqk6Ee-lntgJ_JlK2w" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_n8YRkKk6Ee-lntgJ_JlK2w" name="setFlowPriority" method="_oiuf6ak6Ee-lntgJ_JlK2w">
                <ownedComment xmi:id="_ojGTXKk6Ee-lntgJ_JlK2w">
                  <body>Sets the flow node and makes it priority&#xD;
   * @param flowName&#xD;
   * @param priority</body>
                </ownedComment>
                <ownedParameter xmi:id="_n8YRkak6Ee-lntgJ_JlK2w" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_n8YRkqk6Ee-lntgJ_JlK2w" name="priority">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_n8Y4oKk6Ee-lntgJ_JlK2w" name="setFlowPeriod" method="_oiuf7Kk6Ee-lntgJ_JlK2w">
                <ownedComment xmi:id="_ojGTXak6Ee-lntgJ_JlK2w">
                  <body>Takes in the flowNode and sets the period&#xD;
	 * @param flowName&#xD;
	 * @param period</body>
                </ownedComment>
                <ownedParameter xmi:id="_n8Y4oak6Ee-lntgJ_JlK2w" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_n8Y4oqk6Ee-lntgJ_JlK2w" name="period">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_n8Y4o6k6Ee-lntgJ_JlK2w" name="setFlowDeadline" method="_oiuf76k6Ee-lntgJ_JlK2w">
                <ownedComment xmi:id="_ojG6YKk6Ee-lntgJ_JlK2w">
                  <body>Gets the flow Node and sets the deadline &#xD;
   * @param flowName&#xD;
   * @param deadline</body>
                </ownedComment>
                <ownedParameter xmi:id="_n8Y4pKk6Ee-lntgJ_JlK2w" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_n8Y4pak6Ee-lntgJ_JlK2w" name="deadline">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_n8aGwKk6Ee-lntgJ_JlK2w" name="setFlowPhase" method="_oivG8Kk6Ee-lntgJ_JlK2w">
                <ownedComment xmi:id="_ojG6Yak6Ee-lntgJ_JlK2w">
                  <body>Gets the flow Node and sets the Phase&#xD;
   * @param flowName&#xD;
   * @param phase</body>
                </ownedComment>
                <ownedParameter xmi:id="_n8aGwak6Ee-lntgJ_JlK2w" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_n8aGwqk6Ee-lntgJ_JlK2w" name="phase">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_n8b78Kk6Ee-lntgJ_JlK2w" name="getFlowIndex" method="_oivG86k6Ee-lntgJ_JlK2w">
                <ownedComment xmi:id="_ojG6Yqk6Ee-lntgJ_JlK2w">
                  <body>Sets the flowNode with the flowName and Returns the Nodes Index&#xD;
   * @param flowName&#xD;
   * @return flowNode Index</body>
                </ownedComment>
                <ownedParameter xmi:id="_n8b78ak6Ee-lntgJ_JlK2w" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_n8b78qk6Ee-lntgJ_JlK2w" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_n8cjAKk6Ee-lntgJ_JlK2w" name="getFlowPriority" method="_oivG9qk6Ee-lntgJ_JlK2w">
                <ownedComment xmi:id="_ojG6Y6k6Ee-lntgJ_JlK2w">
                  <body>Takes in the flowName, sets it to flowNode, and returns the Node Priority&#xD;
   * @param flowName&#xD;
   * @return flowNode Priority</body>
                </ownedComment>
                <ownedParameter xmi:id="_n8cjAak6Ee-lntgJ_JlK2w" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_n8cjAqk6Ee-lntgJ_JlK2w" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_n8cjA6k6Ee-lntgJ_JlK2w" name="getFlowPeriod" method="_oivG-ak6Ee-lntgJ_JlK2w">
                <ownedComment xmi:id="_ojG6ZKk6Ee-lntgJ_JlK2w">
                  <body>Takes in flowName, sets it to flowNode, and returns the Nodes Period&#xD;
   * @param flowName&#xD;
   * @return flowNode Period</body>
                </ownedComment>
                <ownedParameter xmi:id="_n8cjBKk6Ee-lntgJ_JlK2w" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_n8dKEKk6Ee-lntgJ_JlK2w" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_n8dKEak6Ee-lntgJ_JlK2w" name="getFlowDeadline" method="_oivG_Kk6Ee-lntgJ_JlK2w">
                <ownedComment xmi:id="_ojG6Zak6Ee-lntgJ_JlK2w">
                  <body>gets flow deadline from flowname&#xD;
   * @param flowName&#xD;
   * @return flowDeadline</body>
                </ownedComment>
                <ownedParameter xmi:id="_n8dKEqk6Ee-lntgJ_JlK2w" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_n8dKE6k6Ee-lntgJ_JlK2w" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_n8dxIKk6Ee-lntgJ_JlK2w" name="getFlowPhase" method="_oivG_6k6Ee-lntgJ_JlK2w">
                <ownedComment xmi:id="_ojG6Zqk6Ee-lntgJ_JlK2w">
                  <body>Retrieves the phase of a flow node based on the specified flow name.&#xD;
   * @param flowName&#xD;
   * @return Flow node</body>
                </ownedComment>
                <ownedParameter xmi:id="_n8dxIak6Ee-lntgJ_JlK2w" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_n8dxIqk6Ee-lntgJ_JlK2w" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_n8dxI6k6Ee-lntgJ_JlK2w" name="getFlowTxAttemptsPerLink" method="_oivHAqk6Ee-lntgJ_JlK2w">
                <ownedComment xmi:id="_ojG6Z6k6Ee-lntgJ_JlK2w">
                  <body>Retrieves priority of a specified node within a given flow&#xD;
   * @param flowName&#xD;
   * @return flow node</body>
                </ownedComment>
                <ownedParameter xmi:id="_n8dxJKk6Ee-lntgJ_JlK2w" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_n8dxJak6Ee-lntgJ_JlK2w" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_n8hbgKk6Ee-lntgJ_JlK2w" name="setFlowsInPriorityOrder" method="_oivuAKk6Ee-lntgJ_JlK2w">
                <ownedComment xmi:id="_ojG6aKk6Ee-lntgJ_JlK2w">
                  <body>Sorts the flows in priority order and updates the flow names list accordingly.</body>
                </ownedComment>
              </ownedOperation>
              <ownedOperation xmi:id="_n8hbgak6Ee-lntgJ_JlK2w" name="setFlowsInDMorder" method="_oivuAak6Ee-lntgJ_JlK2w">
                <ownedComment xmi:id="_ojG6aak6Ee-lntgJ_JlK2w">
                  <body>Sorts the flows in Deadline-Monotonic (DM) order and updates the flow names list accordingly.</body>
                </ownedComment>
              </ownedOperation>
              <ownedOperation xmi:id="_n8hbgqk6Ee-lntgJ_JlK2w" name="setFlowsInRMorder" method="_oivuAqk6Ee-lntgJ_JlK2w">
                <ownedComment xmi:id="_ojG6aqk6Ee-lntgJ_JlK2w">
                  <body>Create list Flow objects and sort them by the secondary key (Priority)&#xD;
   * Next sort them by the primary key (Period) and create flowNamesInPriority Order&#xD;
   * With names in requested order</body>
                </ownedComment>
              </ownedOperation>
              <ownedOperation xmi:id="_n8iCkKk6Ee-lntgJ_JlK2w" name="setFlowsInRealTimeHARTorder" method="_oivuA6k6Ee-lntgJ_JlK2w">
                <ownedComment xmi:id="_ojG6a6k6Ee-lntgJ_JlK2w">
                  <body>*</body>
                </ownedComment>
              </ownedOperation>
              <ownedOperation xmi:id="_n8iCkak6Ee-lntgJ_JlK2w" name="finalizeCurrentFlow" method="_oivuBKk6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_n8iCkqk6Ee-lntgJ_JlK2w" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_n8ipoKk6Ee-lntgJ_JlK2w" name="nextReleaseTime" method="_oivuBqk6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_n8ipoak6Ee-lntgJ_JlK2w" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_n8ipoqk6Ee-lntgJ_JlK2w" name="currentTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_n8ipo6k6Ee-lntgJ_JlK2w" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_n8ippKk6Ee-lntgJ_JlK2w" name="nextAbsoluteDeadline" method="_oivuCqk6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_n8ippak6Ee-lntgJ_JlK2w" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_n8ippqk6Ee-lntgJ_JlK2w" name="currentTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_n8ipp6k6Ee-lntgJ_JlK2w" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_n8lF4Kk6Ee-lntgJ_JlK2w" name="finalizeFlowWithE2eParameters" visibility="private" method="_oivuDqk6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_n8lF4ak6Ee-lntgJ_JlK2w" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_n8ls8Kk6Ee-lntgJ_JlK2w" name="finalizeFlowWithFixedFaultTolerance" visibility="private" method="_oivuEKk6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_n8ls8ak6Ee-lntgJ_JlK2w" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_n8ls8qk6Ee-lntgJ_JlK2w" name="getNodeNamesOrderedAlphabetically" method="_oiwVEKk6Ee-lntgJ_JlK2w">
                <ownedComment xmi:id="_ojG6bKk6Ee-lntgJ_JlK2w">
                  <body>Retrieves and returns an array of node names sorted alphabetically or numerically if the names represent integers.&#xD;
   * @return nodeNames</body>
                </ownedComment>
                <ownedParameter xmi:id="_n8ls86k6Ee-lntgJ_JlK2w" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_n8ls9Kk6Ee-lntgJ_JlK2w" value="*"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_n8mUAak6Ee-lntgJ_JlK2w" name="getFlow" visibility="private" method="_oiwVE6k6Ee-lntgJ_JlK2w">
                <ownedParameter xmi:id="_n8mUAqk6Ee-lntgJ_JlK2w" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_odn9cKk6Ee-lntgJ_JlK2w" type="_n0QQUKk6Ee-lntgJ_JlK2w" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_n8m7EKk6Ee-lntgJ_JlK2w" name="getFlowNames" method="_oiwVFqk6Ee-lntgJ_JlK2w">
                <ownedComment xmi:id="_ojHhcKk6Ee-lntgJ_JlK2w">
                  <body>to return an array of flow names in the order they were read from the graph file&#xD;
   * @return Flow Names in Original Order</body>
                </ownedComment>
                <ownedParameter xmi:id="_n8m7Eak6Ee-lntgJ_JlK2w" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_n8m7Eqk6Ee-lntgJ_JlK2w" value="*"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_n8niIak6Ee-lntgJ_JlK2w" name="getNodeIndex" method="_oiwVGak6Ee-lntgJ_JlK2w">
                <ownedComment xmi:id="_ojHhcak6Ee-lntgJ_JlK2w">
                  <body>return the dictionary of nodes&#xD;
   * @param nodeName&#xD;
   * @return node index</body>
                </ownedComment>
                <ownedParameter xmi:id="_n8niIqk6Ee-lntgJ_JlK2w" name="nodeName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_n8niI6k6Ee-lntgJ_JlK2w" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_n8oJMKk6Ee-lntgJ_JlK2w" name="getNodesInFlow" method="_oiwVHKk6Ee-lntgJ_JlK2w">
                <ownedComment xmi:id="_ojHhcqk6Ee-lntgJ_JlK2w">
                  <body>Returns an array of node names for the specified flow in the order they appear in the flow specification.&#xD;
   * @param flowName&#xD;
   * @return Array of node names</body>
                </ownedComment>
                <ownedParameter xmi:id="_n8oJMak6Ee-lntgJ_JlK2w" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_n8oJMqk6Ee-lntgJ_JlK2w" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_n8oJM6k6Ee-lntgJ_JlK2w" value="*"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_n8owQKk6Ee-lntgJ_JlK2w" name="getHyperPeriod" method="_oiw8IKk6Ee-lntgJ_JlK2w">
                <ownedComment xmi:id="_ojHhc6k6Ee-lntgJ_JlK2w">
                  <body>Set hyperPeriods to 1 and find the LCM and update the hyperPeriod&#xD;
   * @return the HyperPeriod</body>
                </ownedComment>
                <ownedParameter xmi:id="_n8owQak6Ee-lntgJ_JlK2w" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_n8owQqk6Ee-lntgJ_JlK2w" name="getTotalTxAttemptsInFlow" method="_oiw8Iqk6Ee-lntgJ_JlK2w">
                <ownedComment xmi:id="_ojHhdKk6Ee-lntgJ_JlK2w">
                  <body>Gets the total transmission attempts for the specified flow and returns it as total cost&#xD;
   * @param flowName&#xD;
   * @return totalCost</body>
                </ownedComment>
                <ownedParameter xmi:id="_n8pXUKk6Ee-lntgJ_JlK2w" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_n8pXUak6Ee-lntgJ_JlK2w" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_n8p-YKk6Ee-lntgJ_JlK2w" name="getNumTxAttemptsPerLink" method="_oiw8Jak6Ee-lntgJ_JlK2w">
                <ownedComment xmi:id="_ojHhdak6Ee-lntgJ_JlK2w">
                  <body>Retrieves the number of transmission attempts for each link in the specified flow.&#xD;
   * @param flowName&#xD;
   * @return return an array of the number of transmission needed for each</body>
                </ownedComment>
                <ownedParameter xmi:id="_n8p-Yak6Ee-lntgJ_JlK2w" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_n8qlcKk6Ee-lntgJ_JlK2w" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_n8qlcak6Ee-lntgJ_JlK2w" value="*"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_n8saoKk6Ee-lntgJ_JlK2w" name="maxFlowLength" method="_oiw8LKk6Ee-lntgJ_JlK2w">
                <ownedComment xmi:id="_ojHhd6k6Ee-lntgJ_JlK2w">
                  <body>Start with the max flow length to 0 return the max length of flow Nodes&#xD;
   * @return maxLength</body>
                </ownedComment>
                <ownedParameter xmi:id="_n8saoak6Ee-lntgJ_JlK2w" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_odokgKk6Ee-lntgJ_JlK2w" name="addEdge" method="_oiw8Kak6Ee-lntgJ_JlK2w">
                <ownedComment xmi:id="_ojHhdqk6Ee-lntgJ_JlK2w">
                  <body>Get the node object and add it to the edge &#xD;
   * @param nodeName&#xD;
   * @param edge</body>
                </ownedComment>
                <ownedParameter xmi:id="_odokgak6Ee-lntgJ_JlK2w" name="nodeName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_odokgqk6Ee-lntgJ_JlK2w" name="edge" type="_nz2AoKk6Ee-lntgJ_JlK2w"/>
              </ownedOperation>
              <ownedOperation xmi:id="_ofbUQKk6Ee-lntgJ_JlK2w" name="WorkLoad" visibility="package" method="_oisqsKk6Ee-lntgJ_JlK2w">
                <eAnnotations xmi:id="_ofb7UKk6Ee-lntgJ_JlK2w" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_ofb7Uak6Ee-lntgJ_JlK2w" key="create"/>
                </eAnnotations>
                <ownedComment xmi:id="_ojFsQqk6Ee-lntgJ_JlK2w">
                  <body>Constructs a WorkLoad object by reading and processing an input file to build node and flow data.&#xD;
   * @param m&#xD;
   * @param e2e&#xD;
   * @param inputFileName</body>
                </ownedComment>
                <ownedParameter xmi:id="_ofbUQak6Ee-lntgJ_JlK2w" name="m" type="_oex0AKk6Ee-lntgJ_JlK2w"/>
                <ownedParameter xmi:id="_ofbUQqk6Ee-lntgJ_JlK2w" name="e2e" type="_oex0AKk6Ee-lntgJ_JlK2w"/>
                <ownedParameter xmi:id="_ofbUQ6k6Ee-lntgJ_JlK2w" name="inputFileName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ofb7Uqk6Ee-lntgJ_JlK2w" type="_n8NScKk6Ee-lntgJ_JlK2w" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_ofb7U6k6Ee-lntgJ_JlK2w" name="WorkLoad" visibility="package" method="_oisqtak6Ee-lntgJ_JlK2w">
                <eAnnotations xmi:id="_ofciZKk6Ee-lntgJ_JlK2w" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_ofciZak6Ee-lntgJ_JlK2w" key="create"/>
                </eAnnotations>
                <ownedComment xmi:id="_ojFsQ6k6Ee-lntgJ_JlK2w">
                  <body>Constructs a WorkLoad object with specified fault tolerance parameters by reading and processing an input file.&#xD;
   * @param numFaults&#xD;
   * @param m&#xD;
   * @param e2e&#xD;
   * @param inputFileName</body>
                </ownedComment>
                <ownedParameter xmi:id="_ofciYKk6Ee-lntgJ_JlK2w" name="numFaults">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ofciYak6Ee-lntgJ_JlK2w" name="m" type="_oex0AKk6Ee-lntgJ_JlK2w"/>
                <ownedParameter xmi:id="_ofciYqk6Ee-lntgJ_JlK2w" name="e2e" type="_oex0AKk6Ee-lntgJ_JlK2w"/>
                <ownedParameter xmi:id="_ofciY6k6Ee-lntgJ_JlK2w" name="inputFileName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ofciZqk6Ee-lntgJ_JlK2w" type="_n8NScKk6Ee-lntgJ_JlK2w" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_ofdJcak6Ee-lntgJ_JlK2w" name="setMinPacketReceptionRate" method="_oitRxKk6Ee-lntgJ_JlK2w">
                <ownedComment xmi:id="_ojGTUKk6Ee-lntgJ_JlK2w">
                  <body>@param minPacketReceptionRate the minPacketReceptionRate to set</body>
                </ownedComment>
                <ownedParameter xmi:id="_ofdJcqk6Ee-lntgJ_JlK2w" name="minPacketReceptionRate" type="_oex0AKk6Ee-lntgJ_JlK2w"/>
              </ownedOperation>
              <ownedOperation xmi:id="_ofdwgKk6Ee-lntgJ_JlK2w" name="setE2e" method="_oitRyqk6Ee-lntgJ_JlK2w">
                <ownedComment xmi:id="_ojGTU6k6Ee-lntgJ_JlK2w">
                  <body>@param e2e the e2e to set</body>
                </ownedComment>
                <ownedParameter xmi:id="_ofdwgak6Ee-lntgJ_JlK2w" name="e2e" type="_oex0AKk6Ee-lntgJ_JlK2w"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_n8zIUKk6Ee-lntgJ_JlK2w" name="ReliabilityVisualizationTest" visibility="package">
              <eAnnotations xmi:id="_n80WcKk6Ee-lntgJ_JlK2w" source="http://ns.yatta.de/umllab">
                <contents xmi:type="ecore:EAnnotation" xmi:id="_n80Wcak6Ee-lntgJ_JlK2w" source="codegen">
                  <details xmi:id="_n80Wcqk6Ee-lntgJ_JlK2w" key="codegenDirectory" value="/cs2820-fall24/test"/>
                </contents>
              </eAnnotations>
              <ownedAttribute xmi:id="_ohNc8Kk6Ee-lntgJ_JlK2w" name="workload" visibility="private" type="_n8NScKk6Ee-lntgJ_JlK2w" association="_okbwEKk6Ee-lntgJ_JlK2w"/>
              <ownedAttribute xmi:id="_ohOEAak6Ee-lntgJ_JlK2w" name="numChannels" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_ohOrEKk6Ee-lntgJ_JlK2w" name="warp" visibility="private" type="_n7T6kKk6Ee-lntgJ_JlK2w" association="_okcXIak6Ee-lntgJ_JlK2w"/>
              <ownedAttribute xmi:id="_ohOrEqk6Ee-lntgJ_JlK2w" name="viz" visibility="private" type="_n4IqwKk6Ee-lntgJ_JlK2w" association="_okc-MKk6Ee-lntgJ_JlK2w"/>
              <ownedAttribute xmi:id="_ohPSIKk6Ee-lntgJ_JlK2w" name="OBJECT_NAME" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_ohPSIak6Ee-lntgJ_JlK2w" value="&quot;Reliability Analysis&quot;"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oixjMKk6Ee-lntgJ_JlK2w" name="setUp" specification="_n809gKk6Ee-lntgJ_JlK2w">
                <language>java</language>
                <body>workload = new WorkLoad(0.9,	0.99, &quot;StressTest4.txt&quot;); &#xD;
	  numChannels = 16; &#xD;
	  warp = SystemFactory.create(workload, numChannels, ScheduleChoices.PRIORITY);&#xD;
	  viz = new ReliabilityVisualization(warp); &#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oixjMak6Ee-lntgJ_JlK2w" name="createColumnHeaderTest_NonEmptyHeader" specification="_n82Loak6Ee-lntgJ_JlK2w">
                <language>java</language>
                <body>String[] header = viz.createColumnHeader();	&#xD;
	  assert(header.length != 0);		&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oixjMqk6Ee-lntgJ_JlK2w" name="createColumnHeaderTest_containsCorrectValues" specification="_n82ys6k6Ee-lntgJ_JlK2w">
                <language>java</language>
                <body>String[] header = viz.createColumnHeader();&#xD;
	  String firstLine = header[0];	  &#xD;
	  assertEquals(firstLine, &quot;Time Slot&quot;);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oixjM6k6Ee-lntgJ_JlK2w" name="createColumnHeaderTest_containsCorrectColumnNames" specification="_n84A06k6Ee-lntgJ_JlK2w">
                <language>java</language>
                <body>String[] header = viz.createColumnHeader();&#xD;
	  int headerCount = 0;&#xD;
	  for (int i = 1; i &lt; header.length; i++) {&#xD;
		headerCount +=1;&#xD;
	  }&#xD;
	  assertNotEquals(headerCount, 0);&#xD;
	  //In stresstest4, the correct column names will be capitals &quot;A&quot;-&quot;L&quot;, containing 12 values total&#xD;
	  assertEquals(headerCount, 12);&#xD;
		  &#xD;
	  //Compare string of header column names to intended correct column names and ensure printed in same order.&#xD;
	  String correctColumns = &quot;ABCDEFGHIJKL&quot;;&#xD;
	  String[] inputColumnNames = new String[header.length-1];&#xD;
	  for (int i = 1; i &lt; header.length; i++) {&#xD;
		inputColumnNames[i - 1] = header[i];&#xD;
	  }&#xD;
	  String inputColumnNamesString = String.join(&quot;,&quot;, inputColumnNames).replace(&quot;,&quot;, &quot;&quot;);&#xD;
	  assertEquals(correctColumns, inputColumnNamesString);&#xD;
		  &#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oixjNKk6Ee-lntgJ_JlK2w" name="createHeader_testIfHeaderActuallyCreated" specification="_n84n46k6Ee-lntgJ_JlK2w">
                <language>java</language>
                <body>Description header = viz.createHeader();&#xD;
	  assertNotNull(header);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oixjNak6Ee-lntgJ_JlK2w" name="createHeader_testCorrectTitle" specification="_n85O8qk6Ee-lntgJ_JlK2w">
                <language>java</language>
                <body>Description header = viz.createHeader();&#xD;
	  assertEquals(header.get(0), String.format(OBJECT_NAME + &quot; for graph %s\n&quot;, warp.getName()));&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oixjNqk6Ee-lntgJ_JlK2w" name="createHeader_testCorrectSchedulerName" specification="_n852Aqk6Ee-lntgJ_JlK2w">
                <language>java</language>
                <body>Description header = viz.createHeader();&#xD;
	  assertEquals(header.get(1), String.format(&quot;Scheduler Name: %s\n&quot;, warp.getSchedulerName()));&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oixjN6k6Ee-lntgJ_JlK2w" name="createHeader_testIfNumFaultsAre0" specification="_n86dEak6Ee-lntgJ_JlK2w">
                <language>java</language>
                <body>assertEquals(warp.getNumFaults(), 0);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oixjOKk6Ee-lntgJ_JlK2w" name="createHeader_testCorrectM" specification="_n87EIqk6Ee-lntgJ_JlK2w">
                <language>java</language>
                <body>Description header = viz.createHeader();&#xD;
	  assertEquals(header.get(2), String.format(&quot;M: %s\n&quot;, warp.getMinPacketReceptionRate()));&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oiyKQKk6Ee-lntgJ_JlK2w" name="createHeader_testCorrectE2e" specification="_n87rM6k6Ee-lntgJ_JlK2w">
                <language>java</language>
                <body>Description header = viz.createHeader();&#xD;
	  assertEquals(header.get(3), String.format(&quot;E2E: %s\n&quot;, warp.getE2e()));&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oiyKQak6Ee-lntgJ_JlK2w" name="createHeader_testCorrectnChannels" specification="_n88SQ6k6Ee-lntgJ_JlK2w">
                <language>java</language>
                <body>Description header = viz.createHeader();&#xD;
	  assertEquals(header.get(4), String.format(&quot;nChannels: %s\n&quot;, warp.getNumChannels()));&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oiyKQqk6Ee-lntgJ_JlK2w" name="createFooter_testIfFooterActuallyCreated" specification="_n89gYKk6Ee-lntgJ_JlK2w">
                <language>java</language>
                <body>Description footer = viz.createFooter();&#xD;
	  assertNotNull(footer);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oiyKQ6k6Ee-lntgJ_JlK2w" name="createFooter_testIfWarpDeadlinesMet" specification="_n89gZKk6Ee-lntgJ_JlK2w">
                <language>java</language>
                <body>assertTrue(warp.deadlinesMet());&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oiyKRKk6Ee-lntgJ_JlK2w" name="createFooter_testCorrectDeadlineMsg" specification="_n9Bx0Kk6Ee-lntgJ_JlK2w">
                <language>java</language>
                <body>Description footer = viz.createFooter();&#xD;
	  assertEquals(footer.get(0), &quot;// All flows meet their deadlines\n&quot;);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oiyKRak6Ee-lntgJ_JlK2w" name="testVisualizationDataDimensions" specification="_n9C_8qk6Ee-lntgJ_JlK2w">
                <language>java</language>
                <body>String[][] data = viz.createVisualizationData();&#xD;
	  assertEquals(100, data.length);&#xD;
	  int expectedColumns = viz.createColumnHeader().length;&#xD;
	  assertEquals(expectedColumns, data[0].length);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oiyKRqk6Ee-lntgJ_JlK2w" name="testVisualizationDataInitialization" specification="_n9DnAqk6Ee-lntgJ_JlK2w">
                <language>java</language>
                <body>String[][] data = viz.createVisualizationData();&#xD;
   for (String[] row : data) {&#xD;
	    for (String cell : row) {&#xD;
	      assertEquals(&quot;0\t&quot;, cell);&#xD;
	    }&#xD;
	  }&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oiyKR6k6Ee-lntgJ_JlK2w" name="testVisualizationDataWithColumnHeader" specification="_n9DnBqk6Ee-lntgJ_JlK2w">
                <language>java</language>
                <body>String[] columnNames = viz.createColumnHeader();&#xD;
   int numColumns = columnNames.length;&#xD;
   String[][] data = viz.createVisualizationData();&#xD;
   assertEquals(100, data.length);&#xD;
   assertEquals(numColumns, data[0].length);&#xD;
 </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_n809gKk6Ee-lntgJ_JlK2w" name="setUp" visibility="package" method="_oixjMKk6Ee-lntgJ_JlK2w"/>
              <ownedOperation xmi:id="_n82Loak6Ee-lntgJ_JlK2w" name="createColumnHeaderTest_NonEmptyHeader" method="_oixjMak6Ee-lntgJ_JlK2w"/>
              <ownedOperation xmi:id="_n82ys6k6Ee-lntgJ_JlK2w" name="createColumnHeaderTest_containsCorrectValues" method="_oixjMqk6Ee-lntgJ_JlK2w"/>
              <ownedOperation xmi:id="_n84A06k6Ee-lntgJ_JlK2w" name="createColumnHeaderTest_containsCorrectColumnNames" visibility="package" method="_oixjM6k6Ee-lntgJ_JlK2w"/>
              <ownedOperation xmi:id="_n84n46k6Ee-lntgJ_JlK2w" name="createHeader_testIfHeaderActuallyCreated" method="_oixjNKk6Ee-lntgJ_JlK2w"/>
              <ownedOperation xmi:id="_n85O8qk6Ee-lntgJ_JlK2w" name="createHeader_testCorrectTitle" method="_oixjNak6Ee-lntgJ_JlK2w"/>
              <ownedOperation xmi:id="_n852Aqk6Ee-lntgJ_JlK2w" name="createHeader_testCorrectSchedulerName" method="_oixjNqk6Ee-lntgJ_JlK2w"/>
              <ownedOperation xmi:id="_n86dEak6Ee-lntgJ_JlK2w" name="createHeader_testIfNumFaultsAre0" method="_oixjN6k6Ee-lntgJ_JlK2w"/>
              <ownedOperation xmi:id="_n87EIqk6Ee-lntgJ_JlK2w" name="createHeader_testCorrectM" method="_oixjOKk6Ee-lntgJ_JlK2w"/>
              <ownedOperation xmi:id="_n87rM6k6Ee-lntgJ_JlK2w" name="createHeader_testCorrectE2e" method="_oiyKQKk6Ee-lntgJ_JlK2w"/>
              <ownedOperation xmi:id="_n88SQ6k6Ee-lntgJ_JlK2w" name="createHeader_testCorrectnChannels" method="_oiyKQak6Ee-lntgJ_JlK2w"/>
              <ownedOperation xmi:id="_n89gYKk6Ee-lntgJ_JlK2w" name="createFooter_testIfFooterActuallyCreated" method="_oiyKQqk6Ee-lntgJ_JlK2w"/>
              <ownedOperation xmi:id="_n89gZKk6Ee-lntgJ_JlK2w" name="createFooter_testIfWarpDeadlinesMet" method="_oiyKQ6k6Ee-lntgJ_JlK2w"/>
              <ownedOperation xmi:id="_n9Bx0Kk6Ee-lntgJ_JlK2w" name="createFooter_testCorrectDeadlineMsg" method="_oiyKRKk6Ee-lntgJ_JlK2w"/>
              <ownedOperation xmi:id="_n9C_8qk6Ee-lntgJ_JlK2w" name="testVisualizationDataDimensions" method="_oiyKRak6Ee-lntgJ_JlK2w"/>
              <ownedOperation xmi:id="_n9DnAqk6Ee-lntgJ_JlK2w" name="testVisualizationDataInitialization" method="_oiyKRqk6Ee-lntgJ_JlK2w"/>
              <ownedOperation xmi:id="_n9DnBqk6Ee-lntgJ_JlK2w" name="testVisualizationDataWithColumnHeader" method="_oiyKR6k6Ee-lntgJ_JlK2w"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_n9GDQKk6Ee-lntgJ_JlK2w" name="WorkLoadTest">
              <eAnnotations xmi:id="_n9HRYKk6Ee-lntgJ_JlK2w" source="http://ns.yatta.de/umllab">
                <contents xmi:type="ecore:EAnnotation" xmi:id="_n9HRYak6Ee-lntgJ_JlK2w" source="codegen">
                  <details xmi:id="_n9HRYqk6Ee-lntgJ_JlK2w" key="codegenDirectory" value="/cs2820-fall24/test"/>
                </contents>
              </eAnnotations>
              <ownedAttribute xmi:id="_ohP5MKk6Ee-lntgJ_JlK2w" name="workload" visibility="private" type="_n8NScKk6Ee-lntgJ_JlK2w" association="_okdlQKk6Ee-lntgJ_JlK2w"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oiyKSKk6Ee-lntgJ_JlK2w" name="setUp" specification="_n9H4cKk6Ee-lntgJ_JlK2w">
                <language>java</language>
                <body>workload = new WorkLoad(0.9, 0.99, &quot;StressTest4.txt&quot;);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oiyKSak6Ee-lntgJ_JlK2w" name="addFlowAddTest" specification="_n9JtoKk6Ee-lntgJ_JlK2w">
                <language>java</language>
                <body>workload.addFlow(&quot;F11&quot;);&#xD;
		// ArrayList of actual flow names in original order of &quot;StressTest4.txt&quot;&#xD;
		ArrayList&lt;String> actual = workload.getFlowNamesInOriginalOrder();&#xD;
		// new ArrayList of expected flows in expected order of &quot;StressTest4.txt&quot;&#xD;
		ArrayList&lt;String> exp = new ArrayList&lt;> (Arrays.asList(&quot;F1&quot;, &quot;F5&quot;, &quot;F2&quot;, &quot;F4&quot;, &quot;F3&quot;,&#xD;
				&quot;F6&quot;, &quot;F7&quot;, &quot;F8&quot;, &quot;F9&quot;, &quot;F10&quot;, &quot;F11&quot;));&#xD;
		/*&#xD;
		 * Tests that the expected flow names with an additional flow are in the same order as &#xD;
		 * the actual flow names in the original order &#xD;
		 */&#xD;
		assertEquals(exp, actual, &quot;Did not correctly add a flow&quot;);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oiyxUKk6Ee-lntgJ_JlK2w" name="addFlowOverridingTest" specification="_n9KUsqk6Ee-lntgJ_JlK2w">
                <language>java</language>
                <body>workload.addFlow(&quot;F9&quot;);&#xD;
		ArrayList&lt;String> actual = workload.getFlowNamesInOriginalOrder();&#xD;
		ArrayList&lt;String> exp = new ArrayList&lt;> (Arrays.asList(&quot;F1&quot;, &quot;F5&quot;, &quot;F2&quot;, &quot;F4&quot;, &quot;F3&quot;,&#xD;
				&quot;F6&quot;, &quot;F7&quot;, &quot;F8&quot;, &quot;F9&quot;, &quot;F10&quot;, &quot;F9&quot;));&#xD;
		/*&#xD;
		 * Tests that the expected ArrayList of flows with a repeated flow are in the same order&#xD;
		 * as the actual flow names with the repeated flow&#xD;
		 */&#xD;
		assertEquals(exp, actual, &quot;Did not override new flow correctly&quot;);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oiyxUak6Ee-lntgJ_JlK2w" name="addFlowMultipleAddsTest" specification="_n9Li0ak6Ee-lntgJ_JlK2w">
                <language>java</language>
                <body>workload.addFlow(&quot;F11&quot;);&#xD;
		// adds second new flow &#xD;
		workload.addFlow(&quot;F12&quot;);&#xD;
		// adds third new flow &#xD;
		workload.addFlow(&quot;F13&quot;);&#xD;
		// adds fourth new flow&#xD;
		workload.addFlow(&quot;F14&quot;);&#xD;
		ArrayList&lt;String> actual = workload.getFlowNamesInOriginalOrder();&#xD;
		ArrayList&lt;String> exp = new ArrayList&lt;> (Arrays.asList(&quot;F1&quot;, &quot;F5&quot;, &quot;F2&quot;, &quot;F4&quot;, &quot;F3&quot;,&#xD;
				&quot;F6&quot;, &quot;F7&quot;, &quot;F8&quot;, &quot;F9&quot;, &quot;F10&quot;, &quot;F11&quot;, &quot;F12&quot;, &quot;F13&quot;, &quot;F14&quot;));&#xD;
		/*&#xD;
		 * Tests that the expected ArrayList with an addition of multiple flows is equal&#xD;
		 * to the actual ArrayList with the new flows&#xD;
		 */&#xD;
		assertEquals(exp, actual, &quot;Did not correctly add multiple flows&quot;);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oiyxUqk6Ee-lntgJ_JlK2w" name="addNodeToFlowExistsTest" specification="_n9Li1ak6Ee-lntgJ_JlK2w">
                <language>java</language>
                <body>workload.addNodeToFlow(&quot;F1&quot;, &quot;E&quot;);&#xD;
		String[] actual = workload.getNodesInFlow(&quot;F1&quot;);&#xD;
		String[] exp = {&quot;B&quot;, &quot;C&quot;, &quot;D&quot;, &quot;E&quot;};&#xD;
		/*&#xD;
		 * Tests that each element of the expected array of &quot;F1&quot; with the addition of a new &#xD;
		 * node to &quot;F1&quot; but that already exists within &quot;StressTest4.txt&quot; is equal to the &#xD;
		 * corresponding elements in the actual &quot;F1&quot; array when calling getNodesInFlow()&#xD;
		 */&#xD;
		assertArrayEquals(exp, actual, &quot;Incorrectly inserted existing node into existing flow&quot;);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oiyxU6k6Ee-lntgJ_JlK2w" name="addNodeToFlowDoesntExistTest" specification="_n9OmIqk6Ee-lntgJ_JlK2w">
                <language>java</language>
                <body>workload.addNodeToFlow(&quot;F1&quot;, &quot;newNode&quot;);&#xD;
		String[] actual = workload.getNodesInFlow(&quot;F1&quot;);&#xD;
		String[] exp = {&quot;B&quot;, &quot;C&quot;, &quot;D&quot;, &quot;newNode&quot;};&#xD;
		/*&#xD;
		 * Tests that each element of the expected array of &quot;F1&quot; with the addition of a new &#xD;
		 * node new to the file is equal to the actual array elements when calling getNodesInFLow()&#xD;
		 */&#xD;
		assertArrayEquals(exp, actual, &quot;Incorrectly inserted new node into existing flow&quot;);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oiyxVKk6Ee-lntgJ_JlK2w" name="getTotalTxAttemptsInFlowOneFlowTest" specification="_n9P0QKk6Ee-lntgJ_JlK2w">
                <language>java</language>
                <body>Integer actual = workload.getTotalTxAttemptsInFlow(&quot;F1&quot;);&#xD;
		Integer exp = 4;&#xD;
		/*&#xD;
		 * Tests that the expected totalCost of &quot;F1&quot; is equal to the actual cost as found with&#xD;
		 * getTotalTxAttemptsInFlow()&#xD;
		 */&#xD;
		assertEquals(exp, actual, &quot;Produces the incorrect total cost&quot;);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oiyxVak6Ee-lntgJ_JlK2w" name="getTotalTxAttemptsInFlowMultiFlowsTest" specification="_n9QbUKk6Ee-lntgJ_JlK2w">
                <language>java</language>
                <body>Integer flowOneCost = workload.getTotalTxAttemptsInFlow(&quot;F1&quot;);&#xD;
		// finds number of transmission attempts for &quot;F2&quot; and returns as totalCost&#xD;
		Integer flowTwoCost = workload.getTotalTxAttemptsInFlow(&quot;F2&quot;);&#xD;
		// finds number of transmission attempts for &quot;F3&quot; and returns as totalCost&#xD;
		Integer flowThreeCost = workload.getTotalTxAttemptsInFlow(&quot;F3&quot;);&#xD;
		// sum of &quot;F1&quot;, &quot;F2&quot;, and &quot;F3&quot; total cost&#xD;
		Integer actual = flowOneCost + flowTwoCost + flowThreeCost;&#xD;
		Integer exp = 21;&#xD;
		/* &#xD;
		 * Tests that the expected sum of multiple flows' costs is equal to the actual sum as&#xD;
		 * found with getTotalTxAttemptsInFlow() to conclude that the method can accurately find&#xD;
		 * multiple flows' costs&#xD;
		 */&#xD;
		assertEquals(exp, actual, &quot;Incorrectly adds total cost of multiple flows&quot;);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oiyxVqk6Ee-lntgJ_JlK2w" name="getFlowPriorityTest" specification="_n9SQgqk6Ee-lntgJ_JlK2w">
                <language>java</language>
                <body>var actual = workload.getFlowPriority(&quot;F1&quot;, &quot;C&quot;);&#xD;
		var exp = 0;&#xD;
		/*&#xD;
		 * Tests that the expected priority of node &quot;C&quot; in &quot;F1&quot; is equal to the actual&#xD;
		 * priority as found with getFlowPriority()&#xD;
		 */&#xD;
		assertEquals(exp, actual, &quot;Returns incorrect priority for src node&quot;);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oiyxV6k6Ee-lntgJ_JlK2w" name="setFlowPriorityTest" specification="_n9Teo6k6Ee-lntgJ_JlK2w">
                <language>java</language>
                <body>workload.setFlowPriority(&quot;F1&quot;, 5);&#xD;
		Integer actual = workload.getFlowPriority(&quot;F1&quot;);&#xD;
		Integer exp = 5;&#xD;
		/*&#xD;
		 * Tests that the expected priority of flow node in &quot;F1&quot; is equal to the actual&#xD;
		 * priority as set with setFlowPriority()&#xD;
		 */&#xD;
		assertEquals(exp, actual, &quot;Does not set current flow priority&quot;);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oiyxWKk6Ee-lntgJ_JlK2w" name="getFlowTxAttemptsPerLinkTest" specification="_n9UFs6k6Ee-lntgJ_JlK2w">
                <language>java</language>
                <body>Integer actual = workload.getFlowTxAttemptsPerLink(&quot;F1&quot;);&#xD;
		Integer exp = 3;&#xD;
		/* &#xD;
		 * Tests that the expected priority of flow &quot;F1&quot; is equal to the actual priority&#xD;
		 * found with getFlowTxAttemptsPerLink()&#xD;
		 */&#xD;
		assertEquals(exp, actual, &quot;Returns incorrect priority of specified flow&quot;);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oiyxWak6Ee-lntgJ_JlK2w" name="getFlowTxAttemptsPerLinkEmptyTest" specification="_n9VT0ak6Ee-lntgJ_JlK2w">
                <language>java</language>
                <body>Integer actual = workload.getFlowTxAttemptsPerLink(null);&#xD;
		Integer exp = 1;&#xD;
		/*&#xD;
		 * Tests that the expected priority of a null input, an empty list, is equal to &#xD;
		 * the actual priority of an empty list found with getFlowTxAttemptsPerLink()&#xD;
		 */&#xD;
		assertEquals(exp, actual, &quot;Returns incorrect default priority of flow&quot;);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oiyxWqk6Ee-lntgJ_JlK2w" name="setFlowsInRMorderCorrectOrderTest" specification="_n9XJAqk6Ee-lntgJ_JlK2w">
                <language>java</language>
                <body>String[] actual = workload.getFlowNames();&#xD;
		String[] exp = {&quot;F1&quot;, &quot;F5&quot;, &quot;F2&quot;, &quot;F4&quot;, &quot;F3&quot;, &quot;F6&quot;, &quot;F7&quot;, &quot;F8&quot;, &quot;F9&quot;, &quot;F10&quot;};&#xD;
		/*&#xD;
		 * Tests that the expected array of ordered flow names in &quot;StressTest4.txt&quot; is &#xD;
		 * equal to the actual order of flow names in this file as found with getFlowNames()&#xD;
		 */&#xD;
		assertArrayEquals(actual, exp, &quot;Does not correctly order flows&quot;);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oiyxW6k6Ee-lntgJ_JlK2w" name="setFlowsInRMorderAddFlowsTest" specification="_n9YXIqk6Ee-lntgJ_JlK2w">
                <language>java</language>
                <body>workload.addFlow(&quot;F11&quot;);&#xD;
		// adds new flow &quot;F12&quot; to &quot;StressTest4.txt&quot;&#xD;
		workload.addFlow(&quot;F12&quot;);&#xD;
		// adds new flow &quot;F13&quot; to &quot;StressTest4.txt&quot;&#xD;
		workload.addFlow(&quot;F13&quot;);&#xD;
		// orders flow names with three new flows&#xD;
		String[] actual = workload.getFlowNames();&#xD;
		String[] exp = {&quot;F1&quot;, &quot;F5&quot;, &quot;F2&quot;, &quot;F4&quot;, &quot;F3&quot;, &quot;F6&quot;, &quot;F7&quot;, &quot;F8&quot;, &quot;F9&quot;, &quot;F10&quot;, &quot;F11&quot;, &quot;F12&quot;, &quot;F13&quot;};&#xD;
		/*&#xD;
		 * Tests that the expected array of ordered flows of &quot;StressTest4.txt&quot; with three new flows&#xD;
		 * is equivalent to the actual ordered array with getFlowNames()&#xD;
		 */&#xD;
		assertArrayEquals(actual, exp, &quot;Does not correctly order flows with new additional flows&quot;);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oiyxXKk6Ee-lntgJ_JlK2w" name="getNodeNamesOrderedAlphabeticallyTest" specification="_n9azYKk6Ee-lntgJ_JlK2w">
                <language>java</language>
                <body>String[] actual = workload.getFlowNames();&#xD;
		String[] exp = {&quot;F1&quot;, &quot;F5&quot;, &quot;F2&quot;, &quot;F4&quot;, &quot;F3&quot;, &quot;F6&quot;, &quot;F7&quot;, &quot;F8&quot;, &quot;F9&quot;, &quot;F10&quot;};&#xD;
		/*&#xD;
		 * Tests that the expected array of alphabetically ordered flows is equivalent to the &#xD;
		 * actual array order using getFlowNames() to find actual order&#xD;
		 */&#xD;
		assertArrayEquals(exp, actual, &quot;Incorrectly orders flows alphabetically with new flows&quot;);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oiyxXak6Ee-lntgJ_JlK2w" name="getNodeNamesOrderedAlphabeticallyAdditionalFlowsTest" specification="_n9cokKk6Ee-lntgJ_JlK2w">
                <language>java</language>
                <body>workload.addFlow(&quot;F11&quot;);&#xD;
		// adds new flow &quot;F12&quot; to &quot;StressTest4.txt&quot;&#xD;
		workload.addFlow(&quot;F12&quot;);&#xD;
		// adds new flow &quot;F13&quot; to &quot;StressTest4.txt&quot;&#xD;
		workload.addFlow(&quot;F13&quot;);&#xD;
		// alphabetically ordered array of flow names in &quot;StressTest4.txt&quot; with three new flows&#xD;
		String[] actual = workload.getFlowNames();&#xD;
		String[] exp = {&quot;F1&quot;, &quot;F5&quot;, &quot;F2&quot;, &quot;F4&quot;, &quot;F3&quot;, &quot;F6&quot;, &quot;F7&quot;, &quot;F8&quot;, &quot;F9&quot;, &quot;F10&quot;, &quot;F11&quot;, &quot;F12&quot;, &quot;F13&quot;};&#xD;
		/*&#xD;
		 * Tests that the expected alphabetically ordered array of flows in &quot;StressTest4.txt&quot; with &#xD;
		 * three new flows is equal to the actual alphabetical order of flows using getFlowNames()&#xD;
		 */&#xD;
		assertArrayEquals(exp, actual, &quot;Incorrectly orders flows alphabetically with new flows&quot;);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oizYYKk6Ee-lntgJ_JlK2w" name="testGetFlowNames" specification="_n9dPo6k6Ee-lntgJ_JlK2w">
                <language>java</language>
                <body>workload.addFlow(&quot;Flow1&quot;);&#xD;
		workload.addFlow(&quot;Flow2&quot;);&#xD;
		workload.addFlow(&quot;Flow3&quot;);&#xD;
		// Expected array after adding new flows&#xD;
		String[] expectedFlowNames = {&quot;F1&quot;, &quot;F5&quot;, &quot;F2&quot;, &quot;F4&quot;, &quot;F3&quot;, &quot;F6&quot;, &quot;F7&quot;, &quot;F8&quot;, &quot;F9&quot;, &quot;F10&quot;, &quot;Flow1&quot;, &quot;Flow2&quot;, &quot;Flow3&quot;};&#xD;
		// Get actual flow names from workload&#xD;
		String[] actualFlowNames = workload.getFlowNames();&#xD;
		// Assert actual flow names match expected names&#xD;
		assertArrayEquals(expectedFlowNames, actualFlowNames, &quot;FlowNames are incorrect&quot;);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oizYYak6Ee-lntgJ_JlK2w" name="testGetFlowNamesEmpty" specification="_n9d2s6k6Ee-lntgJ_JlK2w">
                <language>java</language>
                <body>WorkLoad emptyWorkload = new WorkLoad(0.9, 0.99, &quot;Test1.txt&quot;);&#xD;
		// Get flow names from the empty workload&#xD;
		String[] actualFlowNames = emptyWorkload.getFlowNames();&#xD;
		// Assert the array of flow names is empty&#xD;
		assertEquals(0, actualFlowNames.length, &quot;Array is not empty!&quot;);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oizYYqk6Ee-lntgJ_JlK2w" name="testGetNodeIndexNonExistentNode" specification="_n9edw6k6Ee-lntgJ_JlK2w">
                <language>java</language>
                <body>Integer expectedIndex = 0;&#xD;
		// Get the actual index of a non-existent node &quot;Z&quot;&#xD;
		Integer actualIndex = workload.getNodeIndex(&quot;Z&quot;);&#xD;
		// Assert that the actual index matches the expected index&#xD;
		assertEquals(expectedIndex, actualIndex, &quot;The method should return 0 for a non-existent node&quot;);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oizYY6k6Ee-lntgJ_JlK2w" name="testGetNodeIndexExistingNode" specification="_n9fE06k6Ee-lntgJ_JlK2w">
                <language>java</language>
                <body>Integer actualIndex = workload.getNodeIndex(&quot;C&quot;);&#xD;
		// Assert that the actual index of node &quot;C&quot; is correct&#xD;
		assertEquals(1, actualIndex, &quot;The index for node C is incorrect&quot;);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oizYZKk6Ee-lntgJ_JlK2w" name="testGetNodesInFlowValidFlowF1" specification="_n9fr46k6Ee-lntgJ_JlK2w">
                <language>java</language>
                <body>String[] expectedNodes = {&quot;B&quot;, &quot;C&quot;, &quot;D&quot;};&#xD;
		// Getting the actual nodes in the flow &quot;F1&quot;&#xD;
		String[] actualNodes = workload.getNodesInFlow(&quot;F1&quot;);&#xD;
		// Assert that the actual nodes match the expected nodes&#xD;
		assertArrayEquals(expectedNodes, actualNodes, &quot;Incorrect nodes for flow F1&quot;);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oizYZak6Ee-lntgJ_JlK2w" name="testGetNodesInFlowNonExistentFlow" specification="_n9gS8Kk6Ee-lntgJ_JlK2w">
                <language>java</language>
                <body>String[] expectedNodes = new String[0];  &#xD;
		// Getting the actual nodes in the non-existent flow &quot;F99&quot;&#xD;
     String[] actualNodes = workload.getNodesInFlow(&quot;F99&quot;);&#xD;
     // Asserting that the actual nodes match the expected empty array&#xD;
     assertArrayEquals(expectedNodes, actualNodes, &quot;Expected empty array for non-existent flow F99&quot;);&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oizYZqk6Ee-lntgJ_JlK2w" name="testGetNodesInFlowNullFlow" specification="_n9gS9Kk6Ee-lntgJ_JlK2w">
                <language>java</language>
                <body>String[] expectedNodes = new String[0];&#xD;
     // Getting the actual nodes in a null flow&#xD;
     String[] actualNodes = workload.getNodesInFlow(null);&#xD;
     // Asserting that the actual nodes match the expected empty array&#xD;
     assertArrayEquals(expectedNodes, actualNodes, &quot;Expected empty array for null flow name&quot;);&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oizYZ6k6Ee-lntgJ_JlK2w" name="testGetHyperPeriodValidFlows" specification="_n9iIIak6Ee-lntgJ_JlK2w">
                <language>java</language>
                <body>int expectedHyperPeriod = 300;&#xD;
		// Getting the actual hyper period from the workload&#xD;
     int actualHyperPeriod = workload.getHyperPeriod();&#xD;
     // Asserting that the actual hyper period matches the expected value&#xD;
     assertEquals(expectedHyperPeriod, actualHyperPeriod, &quot;HyperPeriod calculation is incorrect for valid flows&quot;);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oiz_cKk6Ee-lntgJ_JlK2w" name="testGetHyperPeriodEmptyFlow" specification="_n9ivMqk6Ee-lntgJ_JlK2w">
                <language>java</language>
                <body>workload = new WorkLoad(0.9, 0.99, &quot;Test1.txt&quot;);  &#xD;
     // Expected hyper period when no flows exist&#xD;
     int expectedHyperPeriod = 1;&#xD;
     // Getting the actual hyper period from the empty workload&#xD;
     int actualHyperPeriod = workload.getHyperPeriod();&#xD;
     // Asserting that the actual hyper period matches the expected value&#xD;
     assertEquals(expectedHyperPeriod, actualHyperPeriod, &quot;HyperPeriod should be 1 when no flows exist&quot;);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oiz_cak6Ee-lntgJ_JlK2w" name="testMaxFlowLengthStressTest4" specification="_n9jWQ6k6Ee-lntgJ_JlK2w">
                <language>java</language>
                <body>Integer expectedMaxFlowLength = 8;&#xD;
		// Getting the actual max flow length from the workload&#xD;
		Integer actualMaxFlowLength = workload.maxFlowLength();&#xD;
		// Asserting that the actual max flow length matches the expected value&#xD;
		assertEquals(expectedMaxFlowLength, actualMaxFlowLength, &quot;Max flow length is incorrect for StressTest4.&quot;);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oiz_cqk6Ee-lntgJ_JlK2w" name="testMaxFlowLengthNoFlows" specification="_n9j9U6k6Ee-lntgJ_JlK2w">
                <language>java</language>
                <body>WorkLoad emptyWorkload = new WorkLoad(0.9, 0.99, &quot;Test1.txt&quot;);&#xD;
		// Expected max flow length when there are no flows&#xD;
		Integer expectedMaxFlowLength = 0;&#xD;
		// Getting the actual max flow length from the empty workload&#xD;
		Integer actualMaxFlowLength = emptyWorkload.maxFlowLength();&#xD;
		// Asserting that the actual max flow length matches the expected value&#xD;
		assertEquals(expectedMaxFlowLength, actualMaxFlowLength, &quot;Max flow length should be 0 for no flows.&quot;);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oiz_c6k6Ee-lntgJ_JlK2w" name="testGetFlowDeadlineValidFlow" specification="_n9kkYKk6Ee-lntgJ_JlK2w">
                <language>java</language>
                <body>Integer expectedDeadline = 20;&#xD;
     // Getting the actual deadline for the flow &quot;F1&quot;&#xD;
     Integer actualDeadline = workload.getFlowDeadline(&quot;F1&quot;);&#xD;
     // Asserting that the actual deadline matches the expected value&#xD;
     assertEquals(expectedDeadline, actualDeadline, &quot;The deadline for flow F1 should be 20.&quot;);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oiz_dKk6Ee-lntgJ_JlK2w" name="testGetFlowDeadlineInvalidFlow" specification="_n9lLcak6Ee-lntgJ_JlK2w">
                <language>java</language>
                <body>Integer actualDeadline = workload.getFlowDeadline(&quot;InvalidFlow&quot;);&#xD;
		// Expected deadline for a non-existent flow&#xD;
		Integer expectedDeadline = 100;&#xD;
		// Asserting that the actual deadline matches the expected value&#xD;
		assertEquals(expectedDeadline, actualDeadline, &quot;The deadline for a non-existent flow should be 100.&quot;);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oiz_dak6Ee-lntgJ_JlK2w" name="testSetFlowDeadlineValidFlow" specification="_n9qD8ak6Ee-lntgJ_JlK2w">
                <language>java</language>
                <body>Integer newDeadline = 50;&#xD;
		// Setting the new deadline for the flow &quot;F1&quot;&#xD;
		workload.setFlowDeadline(&quot;F1&quot;, newDeadline);&#xD;
		// Getting the actual deadline after setting the new value&#xD;
		Integer actualDeadline = workload.getFlowDeadline(&quot;F1&quot;);&#xD;
		// Asserting that the actual deadline matches the new deadline&#xD;
		assertEquals(newDeadline, actualDeadline, &quot;The deadline for flow F1 should be set to 50.&quot;);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oiz_dqk6Ee-lntgJ_JlK2w" name="testSetFlowDeadlineUpdateExistingFlow" specification="_n9uVYak6Ee-lntgJ_JlK2w">
                <language>java</language>
                <body>Integer initialDeadline = 30;&#xD;
		workload.setFlowDeadline(&quot;F1&quot;, initialDeadline);&#xD;
		// Updated deadline to set for the flow &quot;F1&quot;&#xD;
		Integer updatedDeadline = 75;&#xD;
		// Setting the updated deadline for the flow &quot;F1&quot;&#xD;
		workload.setFlowDeadline(&quot;F1&quot;, updatedDeadline);&#xD;
		// Getting the actual deadline after updating the value&#xD;
		Integer actualDeadline = workload.getFlowDeadline(&quot;F1&quot;);&#xD;
		// Asserting that the actual deadline matches the updated deadline&#xD;
		assertEquals(updatedDeadline, actualDeadline, &quot;The deadline for flow F1 should be updated to 75.&quot;);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oiz_d6k6Ee-lntgJ_JlK2w" name="testGetNumTxAttemptsPerLink_ExistingFlow" specification="_n9vjgak6Ee-lntgJ_JlK2w">
                <language>java</language>
                <body>String flowName = &quot;F1&quot;;&#xD;
		// Getting the transmission attempts per link for the existing flow&#xD;
		Integer[] txAttemptsPerLink = workload.getNumTxAttemptsPerLink(flowName);&#xD;
		// Asserting that the array is not null for an existing flow&#xD;
		assertNotNull(txAttemptsPerLink, &quot;The Tx attempts per link array should not be null for an existing flow.&quot;);&#xD;
		// Asserting that the array size is as expected&#xD;
		assertEquals(3, txAttemptsPerLink.length, &quot;The array size should be equal to the number of links in the flow minus the total cost.&quot;);&#xD;
		// Asserting that the Tx attempts per link match expected values&#xD;
		assertArrayEquals(new Integer[]{3, 3, 0}, txAttemptsPerLink, &quot;The Tx attempts per link should match expected values.&quot;);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oiz_eKk6Ee-lntgJ_JlK2w" name="testGetNumTxAttemptsPerLink_MultipleFlows" specification="_n9wKkqk6Ee-lntgJ_JlK2w">
                <language>java</language>
                <body>String flowName1 = &quot;F1&quot;;  &#xD;
		String flowName2 = &quot;F5&quot;;&#xD;
		// Getting the transmission attempts per link for both flows&#xD;
		Integer[] txAttemptsFlow1 = workload.getNumTxAttemptsPerLink(flowName1);&#xD;
		Integer[] txAttemptsFlow2 = workload.getNumTxAttemptsPerLink(flowName2);&#xD;
		// Asserting that the arrays are not null&#xD;
		assertNotNull(txAttemptsFlow1, &quot;The Tx attempts per link for F1 should not be null.&quot;);&#xD;
		assertNotNull(txAttemptsFlow2, &quot;The Tx attempts per link for F5 should not be null.&quot;);&#xD;
		// Asserting that the array sizes are as expected&#xD;
		assertEquals(3, txAttemptsFlow1.length, &quot;The array size for F1 should match the number of links minus the total cost.&quot;);&#xD;
		assertEquals(5, txAttemptsFlow2.length, &quot;The array size for F5 should match the number of links minus the total cost.&quot;);&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_n9H4cKk6Ee-lntgJ_JlK2w" name="setUp" visibility="package" method="_oiyKSKk6Ee-lntgJ_JlK2w" raisedException="_ofgMwKk6Ee-lntgJ_JlK2w"/>
              <ownedOperation xmi:id="_n9JGkKk6Ee-lntgJ_JlK2w" name="tearDown" visibility="package" raisedException="_ofgMwKk6Ee-lntgJ_JlK2w"/>
              <ownedOperation xmi:id="_n9JtoKk6Ee-lntgJ_JlK2w" name="addFlowAddTest" visibility="package" method="_oiyKSak6Ee-lntgJ_JlK2w"/>
              <ownedOperation xmi:id="_n9KUsqk6Ee-lntgJ_JlK2w" name="addFlowOverridingTest" visibility="package" method="_oiyxUKk6Ee-lntgJ_JlK2w"/>
              <ownedOperation xmi:id="_n9Li0ak6Ee-lntgJ_JlK2w" name="addFlowMultipleAddsTest" visibility="package" method="_oiyxUak6Ee-lntgJ_JlK2w"/>
              <ownedOperation xmi:id="_n9Li1ak6Ee-lntgJ_JlK2w" name="addNodeToFlowExistsTest" visibility="package" method="_oiyxUqk6Ee-lntgJ_JlK2w"/>
              <ownedOperation xmi:id="_n9OmIqk6Ee-lntgJ_JlK2w" name="addNodeToFlowDoesntExistTest" visibility="package" method="_oiyxU6k6Ee-lntgJ_JlK2w"/>
              <ownedOperation xmi:id="_n9P0QKk6Ee-lntgJ_JlK2w" name="getTotalTxAttemptsInFlowOneFlowTest" visibility="package" method="_oiyxVKk6Ee-lntgJ_JlK2w"/>
              <ownedOperation xmi:id="_n9QbUKk6Ee-lntgJ_JlK2w" name="getTotalTxAttemptsInFlowMultiFlowsTest" visibility="package" method="_oiyxVak6Ee-lntgJ_JlK2w"/>
              <ownedOperation xmi:id="_n9SQgqk6Ee-lntgJ_JlK2w" name="getFlowPriorityTest" visibility="package" method="_oiyxVqk6Ee-lntgJ_JlK2w"/>
              <ownedOperation xmi:id="_n9Teo6k6Ee-lntgJ_JlK2w" name="setFlowPriorityTest" visibility="package" method="_oiyxV6k6Ee-lntgJ_JlK2w"/>
              <ownedOperation xmi:id="_n9UFs6k6Ee-lntgJ_JlK2w" name="getFlowTxAttemptsPerLinkTest" visibility="package" method="_oiyxWKk6Ee-lntgJ_JlK2w"/>
              <ownedOperation xmi:id="_n9VT0ak6Ee-lntgJ_JlK2w" name="getFlowTxAttemptsPerLinkEmptyTest" visibility="package" method="_oiyxWak6Ee-lntgJ_JlK2w"/>
              <ownedOperation xmi:id="_n9XJAqk6Ee-lntgJ_JlK2w" name="setFlowsInRMorderCorrectOrderTest" visibility="package" method="_oiyxWqk6Ee-lntgJ_JlK2w"/>
              <ownedOperation xmi:id="_n9YXIqk6Ee-lntgJ_JlK2w" name="setFlowsInRMorderAddFlowsTest" visibility="package" method="_oiyxW6k6Ee-lntgJ_JlK2w"/>
              <ownedOperation xmi:id="_n9azYKk6Ee-lntgJ_JlK2w" name="getNodeNamesOrderedAlphabeticallyTest" visibility="package" method="_oiyxXKk6Ee-lntgJ_JlK2w"/>
              <ownedOperation xmi:id="_n9cokKk6Ee-lntgJ_JlK2w" name="getNodeNamesOrderedAlphabeticallyAdditionalFlowsTest" visibility="package" method="_oiyxXak6Ee-lntgJ_JlK2w"/>
              <ownedOperation xmi:id="_n9dPo6k6Ee-lntgJ_JlK2w" name="testGetFlowNames" visibility="package" method="_oizYYKk6Ee-lntgJ_JlK2w"/>
              <ownedOperation xmi:id="_n9d2s6k6Ee-lntgJ_JlK2w" name="testGetFlowNamesEmpty" visibility="package" method="_oizYYak6Ee-lntgJ_JlK2w"/>
              <ownedOperation xmi:id="_n9edw6k6Ee-lntgJ_JlK2w" name="testGetNodeIndexNonExistentNode" visibility="package" method="_oizYYqk6Ee-lntgJ_JlK2w"/>
              <ownedOperation xmi:id="_n9fE06k6Ee-lntgJ_JlK2w" name="testGetNodeIndexExistingNode" visibility="package" method="_oizYY6k6Ee-lntgJ_JlK2w"/>
              <ownedOperation xmi:id="_n9fr46k6Ee-lntgJ_JlK2w" name="testGetNodesInFlowValidFlowF1" visibility="package" method="_oizYZKk6Ee-lntgJ_JlK2w"/>
              <ownedOperation xmi:id="_n9gS8Kk6Ee-lntgJ_JlK2w" name="testGetNodesInFlowNonExistentFlow" visibility="package" method="_oizYZak6Ee-lntgJ_JlK2w"/>
              <ownedOperation xmi:id="_n9gS9Kk6Ee-lntgJ_JlK2w" name="testGetNodesInFlowNullFlow" visibility="package" method="_oizYZqk6Ee-lntgJ_JlK2w"/>
              <ownedOperation xmi:id="_n9iIIak6Ee-lntgJ_JlK2w" name="testGetHyperPeriodValidFlows" visibility="package" method="_oizYZ6k6Ee-lntgJ_JlK2w"/>
              <ownedOperation xmi:id="_n9ivMqk6Ee-lntgJ_JlK2w" name="testGetHyperPeriodEmptyFlow" visibility="package" method="_oiz_cKk6Ee-lntgJ_JlK2w"/>
              <ownedOperation xmi:id="_n9jWQ6k6Ee-lntgJ_JlK2w" name="testMaxFlowLengthStressTest4" visibility="package" method="_oiz_cak6Ee-lntgJ_JlK2w"/>
              <ownedOperation xmi:id="_n9j9U6k6Ee-lntgJ_JlK2w" name="testMaxFlowLengthNoFlows" visibility="package" method="_oiz_cqk6Ee-lntgJ_JlK2w"/>
              <ownedOperation xmi:id="_n9kkYKk6Ee-lntgJ_JlK2w" name="testGetFlowDeadlineValidFlow" visibility="package" method="_oiz_c6k6Ee-lntgJ_JlK2w"/>
              <ownedOperation xmi:id="_n9lLcak6Ee-lntgJ_JlK2w" name="testGetFlowDeadlineInvalidFlow" visibility="package" method="_oiz_dKk6Ee-lntgJ_JlK2w"/>
              <ownedOperation xmi:id="_n9qD8ak6Ee-lntgJ_JlK2w" name="testSetFlowDeadlineValidFlow" visibility="package" method="_oiz_dak6Ee-lntgJ_JlK2w"/>
              <ownedOperation xmi:id="_n9uVYak6Ee-lntgJ_JlK2w" name="testSetFlowDeadlineUpdateExistingFlow" visibility="package" method="_oiz_dqk6Ee-lntgJ_JlK2w"/>
              <ownedOperation xmi:id="_n9vjgak6Ee-lntgJ_JlK2w" name="testGetNumTxAttemptsPerLink_ExistingFlow" method="_oiz_d6k6Ee-lntgJ_JlK2w"/>
              <ownedOperation xmi:id="_n9wKkqk6Ee-lntgJ_JlK2w" name="testGetNumTxAttemptsPerLink_MultipleFlows" method="_oiz_eKk6Ee-lntgJ_JlK2w"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_oeQPkak6Ee-lntgJ_JlK2w" name="T"/>
            <packagedElement xmi:type="uml:Class" xmi:id="_oepRIKk6Ee-lntgJ_JlK2w" name="ScheduleLocation"/>
            <packagedElement xmi:type="uml:Class" xmi:id="_oetikKk6Ee-lntgJ_JlK2w" name="ScheduleChoices"/>
            <packagedElement xmi:type="uml:Class" xmi:id="_ofJncKk6Ee-lntgJ_JlK2w" name="SystemChoices"/>
            <packagedElement xmi:type="uml:Class" xmi:id="_ofK1kKk6Ee-lntgJ_JlK2w" name="WorkLoadChoices"/>
            <packagedElement xmi:type="uml:Association" xmi:id="_oi77QKk6Ee-lntgJ_JlK2w" name="" memberEnd="_ogENdqk6Ee-lntgJ_JlK2w _oi77Qak6Ee-lntgJ_JlK2w">
              <ownedEnd xmi:id="_oi77Qak6Ee-lntgJ_JlK2w" name="" type="_nz2AoKk6Ee-lntgJ_JlK2w" association="_oi77QKk6Ee-lntgJ_JlK2w"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_ojAMuqk6Ee-lntgJ_JlK2w" name="" memberEnd="_ogsflqk6Ee-lntgJ_JlK2w _ojAzwKk6Ee-lntgJ_JlK2w">
              <ownedEnd xmi:id="_ojAzwKk6Ee-lntgJ_JlK2w" name="" type="_n4iTYKk6Ee-lntgJ_JlK2w" association="_ojAMuqk6Ee-lntgJ_JlK2w"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_ojFFMak6Ee-lntgJ_JlK2w" name="" memberEnd="_ohJylKk6Ee-lntgJ_JlK2w _ojFFMqk6Ee-lntgJ_JlK2w">
              <ownedEnd xmi:id="_ojFFMqk6Ee-lntgJ_JlK2w" name="" type="_n8NScKk6Ee-lntgJ_JlK2w" association="_ojFFMak6Ee-lntgJ_JlK2w"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_ojFsQKk6Ee-lntgJ_JlK2w" name="" memberEnd="_ohKZoKk6Ee-lntgJ_JlK2w _ojFsQak6Ee-lntgJ_JlK2w">
              <ownedEnd xmi:id="_ojFsQak6Ee-lntgJ_JlK2w" name="" type="_n8NScKk6Ee-lntgJ_JlK2w" association="_ojFsQKk6Ee-lntgJ_JlK2w"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_oj16MKk6Ee-lntgJ_JlK2w" name="" memberEnd="_oj16Mak6Ee-lntgJ_JlK2w _ofuPMKk6Ee-lntgJ_JlK2w">
              <ownedEnd xmi:id="_oj16Mak6Ee-lntgJ_JlK2w" name="" type="_nxhscKk6Ee-lntgJ_JlK2w" association="_oj16MKk6Ee-lntgJ_JlK2w"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_oj3IUKk6Ee-lntgJ_JlK2w" name="" memberEnd="_oj3IUak6Ee-lntgJ_JlK2w _ofu2Qak6Ee-lntgJ_JlK2w">
              <ownedEnd xmi:id="_oj3IUak6Ee-lntgJ_JlK2w" name="" type="_nxhscKk6Ee-lntgJ_JlK2w" association="_oj3IUKk6Ee-lntgJ_JlK2w"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_oj3vYKk6Ee-lntgJ_JlK2w" name="" memberEnd="_oj3vYak6Ee-lntgJ_JlK2w _ofwEYKk6Ee-lntgJ_JlK2w">
              <ownedEnd xmi:id="_oj3vYak6Ee-lntgJ_JlK2w" name="" type="_nxhscKk6Ee-lntgJ_JlK2w" association="_oj3vYKk6Ee-lntgJ_JlK2w"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_oj4Wcak6Ee-lntgJ_JlK2w" name="" memberEnd="_oj4Wcqk6Ee-lntgJ_JlK2w _of084Kk6Ee-lntgJ_JlK2w">
              <ownedEnd xmi:id="_oj4Wcqk6Ee-lntgJ_JlK2w" name="" type="_nyqU4Kk6Ee-lntgJ_JlK2w" association="_oj4Wcak6Ee-lntgJ_JlK2w"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_oj6LoKk6Ee-lntgJ_JlK2w" name="" memberEnd="_oj6Loak6Ee-lntgJ_JlK2w _of1j8ak6Ee-lntgJ_JlK2w">
              <ownedEnd xmi:id="_oj6Loak6Ee-lntgJ_JlK2w" name="" type="_nyqU4Kk6Ee-lntgJ_JlK2w" association="_oj6LoKk6Ee-lntgJ_JlK2w"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_oj7ZwKk6Ee-lntgJ_JlK2w" name="" memberEnd="_oj7Zwak6Ee-lntgJ_JlK2w _of3ZIKk6Ee-lntgJ_JlK2w">
              <ownedEnd xmi:id="_oj7Zwak6Ee-lntgJ_JlK2w" name="" type="_nyumUKk6Ee-lntgJ_JlK2w" association="_oj7ZwKk6Ee-lntgJ_JlK2w"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_oj8A0Kk6Ee-lntgJ_JlK2w" name="" memberEnd="_oj8A0ak6Ee-lntgJ_JlK2w _of3ZIqk6Ee-lntgJ_JlK2w">
              <ownedEnd xmi:id="_oj8A0ak6Ee-lntgJ_JlK2w" name="" type="_nyumUKk6Ee-lntgJ_JlK2w" association="_oj8A0Kk6Ee-lntgJ_JlK2w"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_oj8A06k6Ee-lntgJ_JlK2w" name="" memberEnd="_oj8A1Kk6Ee-lntgJ_JlK2w _of5OU6k6Ee-lntgJ_JlK2w">
              <ownedEnd xmi:id="_oj8A1Kk6Ee-lntgJ_JlK2w" name="" type="_nyze0Kk6Ee-lntgJ_JlK2w" association="_oj8A06k6Ee-lntgJ_JlK2w"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_oj8n4ak6Ee-lntgJ_JlK2w" name="" memberEnd="_oj8n4qk6Ee-lntgJ_JlK2w _of7qkak6Ee-lntgJ_JlK2w">
              <ownedEnd xmi:id="_oj8n4qk6Ee-lntgJ_JlK2w" name="" type="_nzIO8Kk6Ee-lntgJ_JlK2w" association="_oj8n4ak6Ee-lntgJ_JlK2w"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_oj9O8ak6Ee-lntgJ_JlK2w" name="" memberEnd="_oj9O8qk6Ee-lntgJ_JlK2w _of9fwak6Ee-lntgJ_JlK2w">
              <ownedEnd xmi:id="_oj9O8qk6Ee-lntgJ_JlK2w" name="" type="_nzIO8Kk6Ee-lntgJ_JlK2w" association="_oj9O8ak6Ee-lntgJ_JlK2w"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_oj9O9Kk6Ee-lntgJ_JlK2w" name="" memberEnd="_oj9O9ak6Ee-lntgJ_JlK2w _ogAjEKk6Ee-lntgJ_JlK2w">
              <ownedEnd xmi:id="_oj9O9ak6Ee-lntgJ_JlK2w" name="" type="_nzgpcKk6Ee-lntgJ_JlK2w" association="_oj9O9Kk6Ee-lntgJ_JlK2w"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_oj92Aak6Ee-lntgJ_JlK2w" name="" memberEnd="_oj92Aqk6Ee-lntgJ_JlK2w _ogC_Uak6Ee-lntgJ_JlK2w">
              <ownedEnd xmi:id="_oj92Aqk6Ee-lntgJ_JlK2w" name="" type="_nzgpcKk6Ee-lntgJ_JlK2w" association="_oj92Aak6Ee-lntgJ_JlK2w"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_oj92BKk6Ee-lntgJ_JlK2w" name="" memberEnd="_oj92Bak6Ee-lntgJ_JlK2w _ogH30ak6Ee-lntgJ_JlK2w">
              <ownedEnd xmi:id="_oj92Bak6Ee-lntgJ_JlK2w" name="" type="_n0QQUKk6Ee-lntgJ_JlK2w" association="_oj92BKk6Ee-lntgJ_JlK2w"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_oj-dEak6Ee-lntgJ_JlK2w" name="" memberEnd="_oj-dEqk6Ee-lntgJ_JlK2w _ogJF8Kk6Ee-lntgJ_JlK2w">
              <ownedEnd xmi:id="_oj-dEqk6Ee-lntgJ_JlK2w" name="" type="_n0QQUKk6Ee-lntgJ_JlK2w" association="_oj-dEak6Ee-lntgJ_JlK2w"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_oj_EIKk6Ee-lntgJ_JlK2w" name="" memberEnd="_oj_EIak6Ee-lntgJ_JlK2w _ogJtAak6Ee-lntgJ_JlK2w">
              <ownedEnd xmi:id="_oj_EIak6Ee-lntgJ_JlK2w" name="" type="_n0QQUKk6Ee-lntgJ_JlK2w" association="_oj_EIKk6Ee-lntgJ_JlK2w"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_oj_EI6k6Ee-lntgJ_JlK2w" name="" memberEnd="_oj_EJKk6Ee-lntgJ_JlK2w _ogKUEqk6Ee-lntgJ_JlK2w">
              <ownedEnd xmi:id="_oj_EJKk6Ee-lntgJ_JlK2w" name="" type="_n0QQUKk6Ee-lntgJ_JlK2w" association="_oj_EI6k6Ee-lntgJ_JlK2w"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_oj_rMak6Ee-lntgJ_JlK2w" name="" memberEnd="_oj_rMqk6Ee-lntgJ_JlK2w _ogK7Iak6Ee-lntgJ_JlK2w">
              <ownedEnd xmi:id="_oj_rMqk6Ee-lntgJ_JlK2w" name="" type="_n0QQUKk6Ee-lntgJ_JlK2w" association="_oj_rMak6Ee-lntgJ_JlK2w"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_oj_rNKk6Ee-lntgJ_JlK2w" name="" memberEnd="_oj_rNak6Ee-lntgJ_JlK2w _ogMwUqk6Ee-lntgJ_JlK2w">
              <ownedEnd xmi:id="_oj_rNak6Ee-lntgJ_JlK2w" name="" type="_n0lngKk6Ee-lntgJ_JlK2w" association="_oj_rNKk6Ee-lntgJ_JlK2w"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_okASQak6Ee-lntgJ_JlK2w" name="" memberEnd="_okASQqk6Ee-lntgJ_JlK2w _ogNXYak6Ee-lntgJ_JlK2w">
              <ownedEnd xmi:id="_okASQqk6Ee-lntgJ_JlK2w" name="" type="_n0lngKk6Ee-lntgJ_JlK2w" association="_okASQak6Ee-lntgJ_JlK2w"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_okASRKk6Ee-lntgJ_JlK2w" name="" memberEnd="_okASRak6Ee-lntgJ_JlK2w _ogN-cKk6Ee-lntgJ_JlK2w">
              <ownedEnd xmi:id="_okASRak6Ee-lntgJ_JlK2w" name="" type="_n0wmoKk6Ee-lntgJ_JlK2w" association="_okASRKk6Ee-lntgJ_JlK2w"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_okA5Uak6Ee-lntgJ_JlK2w" name="" memberEnd="_okA5Uqk6Ee-lntgJ_JlK2w _ogOlgKk6Ee-lntgJ_JlK2w">
              <ownedEnd xmi:id="_okA5Uqk6Ee-lntgJ_JlK2w" name="" type="_n01fIKk6Ee-lntgJ_JlK2w" association="_okA5Uak6Ee-lntgJ_JlK2w"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_okA5VKk6Ee-lntgJ_JlK2w" name="" memberEnd="_okA5Vak6Ee-lntgJ_JlK2w _ogPMkKk6Ee-lntgJ_JlK2w">
              <ownedEnd xmi:id="_okA5Vak6Ee-lntgJ_JlK2w" name="" type="_n01fIKk6Ee-lntgJ_JlK2w" association="_okA5VKk6Ee-lntgJ_JlK2w"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_okBgYak6Ee-lntgJ_JlK2w" name="" memberEnd="_okBgYqk6Ee-lntgJ_JlK2w _ogPzoak6Ee-lntgJ_JlK2w">
              <ownedEnd xmi:id="_okBgYqk6Ee-lntgJ_JlK2w" name="" type="_n06XoKk6Ee-lntgJ_JlK2w" association="_okBgYak6Ee-lntgJ_JlK2w"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_okBgZKk6Ee-lntgJ_JlK2w" name="" memberEnd="_okBgZak6Ee-lntgJ_JlK2w _ogRo1Kk6Ee-lntgJ_JlK2w">
              <ownedEnd xmi:id="_okBgZak6Ee-lntgJ_JlK2w" name="" type="_n1Gk4Kk6Ee-lntgJ_JlK2w" association="_okBgZKk6Ee-lntgJ_JlK2w"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_okCHcak6Ee-lntgJ_JlK2w" name="" memberEnd="_okCHcqk6Ee-lntgJ_JlK2w _ogSP4ak6Ee-lntgJ_JlK2w">
              <ownedEnd xmi:id="_okCHcqk6Ee-lntgJ_JlK2w" name="" type="_n1Gk4Kk6Ee-lntgJ_JlK2w" association="_okCHcak6Ee-lntgJ_JlK2w"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_okCHdKk6Ee-lntgJ_JlK2w" name="" memberEnd="_okCHdak6Ee-lntgJ_JlK2w _ogS28ak6Ee-lntgJ_JlK2w">
              <ownedEnd xmi:id="_okCHdak6Ee-lntgJ_JlK2w" name="" type="_n1Gk4Kk6Ee-lntgJ_JlK2w" association="_okCHdKk6Ee-lntgJ_JlK2w"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_okCugak6Ee-lntgJ_JlK2w" name="" memberEnd="_okCugqk6Ee-lntgJ_JlK2w _ogS286k6Ee-lntgJ_JlK2w">
              <ownedEnd xmi:id="_okCugqk6Ee-lntgJ_JlK2w" name="" type="_n1Gk4Kk6Ee-lntgJ_JlK2w" association="_okCugak6Ee-lntgJ_JlK2w"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_okDVkak6Ee-lntgJ_JlK2w" name="" memberEnd="_okDVkqk6Ee-lntgJ_JlK2w _ogTeAak6Ee-lntgJ_JlK2w">
              <ownedEnd xmi:id="_okDVkqk6Ee-lntgJ_JlK2w" name="" type="_n1Gk4Kk6Ee-lntgJ_JlK2w" association="_okDVkak6Ee-lntgJ_JlK2w"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_okD8oak6Ee-lntgJ_JlK2w" name="" memberEnd="_okD8oqk6Ee-lntgJ_JlK2w _ogUFFKk6Ee-lntgJ_JlK2w">
              <ownedEnd xmi:id="_okD8oqk6Ee-lntgJ_JlK2w" name="" type="_n1NSkKk6Ee-lntgJ_JlK2w" association="_okD8oak6Ee-lntgJ_JlK2w"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_okFKwak6Ee-lntgJ_JlK2w" name="" memberEnd="_okFKwqk6Ee-lntgJ_JlK2w _ogUsIKk6Ee-lntgJ_JlK2w">
              <ownedEnd xmi:id="_okFKwqk6Ee-lntgJ_JlK2w" name="" type="_n1NSkKk6Ee-lntgJ_JlK2w" association="_okFKwak6Ee-lntgJ_JlK2w"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_okFx0ak6Ee-lntgJ_JlK2w" name="" memberEnd="_okFx0qk6Ee-lntgJ_JlK2w _ogVTMak6Ee-lntgJ_JlK2w">
              <ownedEnd xmi:id="_okFx0qk6Ee-lntgJ_JlK2w" name="" type="_n1UAQKk6Ee-lntgJ_JlK2w" association="_okFx0ak6Ee-lntgJ_JlK2w"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_okGY4ak6Ee-lntgJ_JlK2w" name="" memberEnd="_okGY4qk6Ee-lntgJ_JlK2w _ogWhUqk6Ee-lntgJ_JlK2w">
              <ownedEnd xmi:id="_okGY4qk6Ee-lntgJ_JlK2w" name="" type="_n1m7MKk6Ee-lntgJ_JlK2w" association="_okGY4ak6Ee-lntgJ_JlK2w"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_okG_8ak6Ee-lntgJ_JlK2w" name="" memberEnd="_okG_8qk6Ee-lntgJ_JlK2w _ogXIYKk6Ee-lntgJ_JlK2w">
              <ownedEnd xmi:id="_okG_8qk6Ee-lntgJ_JlK2w" name="" type="_n1m7MKk6Ee-lntgJ_JlK2w" association="_okG_8ak6Ee-lntgJ_JlK2w"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_okHnAak6Ee-lntgJ_JlK2w" name="" memberEnd="_okHnAqk6Ee-lntgJ_JlK2w _ogXIYqk6Ee-lntgJ_JlK2w">
              <ownedEnd xmi:id="_okHnAqk6Ee-lntgJ_JlK2w" name="" type="_n1m7MKk6Ee-lntgJ_JlK2w" association="_okHnAak6Ee-lntgJ_JlK2w"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_okIOEak6Ee-lntgJ_JlK2w" name="" memberEnd="_okIOEqk6Ee-lntgJ_JlK2w _ogXvcak6Ee-lntgJ_JlK2w">
              <ownedEnd xmi:id="_okIOEqk6Ee-lntgJ_JlK2w" name="" type="_n1m7MKk6Ee-lntgJ_JlK2w" association="_okIOEak6Ee-lntgJ_JlK2w"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_okI1IKk6Ee-lntgJ_JlK2w" name="" memberEnd="_okI1Iak6Ee-lntgJ_JlK2w _ogXvdqk6Ee-lntgJ_JlK2w">
              <ownedEnd xmi:id="_okI1Iak6Ee-lntgJ_JlK2w" name="" type="_n1m7MKk6Ee-lntgJ_JlK2w" association="_okI1IKk6Ee-lntgJ_JlK2w"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_okI1I6k6Ee-lntgJ_JlK2w" name="" memberEnd="_okI1JKk6Ee-lntgJ_JlK2w _ogXveKk6Ee-lntgJ_JlK2w">
              <ownedEnd xmi:id="_okI1JKk6Ee-lntgJ_JlK2w" name="" type="_n1m7MKk6Ee-lntgJ_JlK2w" association="_okI1I6k6Ee-lntgJ_JlK2w"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_okJcMak6Ee-lntgJ_JlK2w" name="" memberEnd="_okJcMqk6Ee-lntgJ_JlK2w _ogYWgqk6Ee-lntgJ_JlK2w">
              <ownedEnd xmi:id="_okJcMqk6Ee-lntgJ_JlK2w" name="" type="_n1m7MKk6Ee-lntgJ_JlK2w" association="_okJcMak6Ee-lntgJ_JlK2w"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_okKDQak6Ee-lntgJ_JlK2w" name="" memberEnd="_okKDQqk6Ee-lntgJ_JlK2w _ogY9kqk6Ee-lntgJ_JlK2w">
              <ownedEnd xmi:id="_okKDQqk6Ee-lntgJ_JlK2w" name="" type="_n1m7MKk6Ee-lntgJ_JlK2w" association="_okKDQak6Ee-lntgJ_JlK2w"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_okKqUak6Ee-lntgJ_JlK2w" name="" memberEnd="_okKqUqk6Ee-lntgJ_JlK2w _ogcn8qk6Ee-lntgJ_JlK2w">
              <ownedEnd xmi:id="_okKqUqk6Ee-lntgJ_JlK2w" name="" type="_n2BK4Kk6Ee-lntgJ_JlK2w" association="_okKqUak6Ee-lntgJ_JlK2w"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_okLRYak6Ee-lntgJ_JlK2w" name="" memberEnd="_okLRYqk6Ee-lntgJ_JlK2w _ogdPAak6Ee-lntgJ_JlK2w">
              <ownedEnd xmi:id="_okLRYqk6Ee-lntgJ_JlK2w" name="" type="_n2BK4Kk6Ee-lntgJ_JlK2w" association="_okLRYak6Ee-lntgJ_JlK2w"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_okL4cKk6Ee-lntgJ_JlK2w" name="" memberEnd="_okL4cak6Ee-lntgJ_JlK2w _ogdPA6k6Ee-lntgJ_JlK2w">
              <ownedEnd xmi:id="_okL4cak6Ee-lntgJ_JlK2w" name="" type="_n2BK4Kk6Ee-lntgJ_JlK2w" association="_okL4cKk6Ee-lntgJ_JlK2w"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_okL4c6k6Ee-lntgJ_JlK2w" name="" memberEnd="_okL4dKk6Ee-lntgJ_JlK2w _oggSUqk6Ee-lntgJ_JlK2w">
              <ownedEnd xmi:id="_okL4dKk6Ee-lntgJ_JlK2w" name="" type="_n2BK4Kk6Ee-lntgJ_JlK2w" association="_okL4c6k6Ee-lntgJ_JlK2w"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_okNGkKk6Ee-lntgJ_JlK2w" name="" memberEnd="_okNGkak6Ee-lntgJ_JlK2w _oghgc6k6Ee-lntgJ_JlK2w">
              <ownedEnd xmi:id="_okNGkak6Ee-lntgJ_JlK2w" name="" type="_n2BK4Kk6Ee-lntgJ_JlK2w" association="_okNGkKk6Ee-lntgJ_JlK2w"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_okNtoKk6Ee-lntgJ_JlK2w" name="" memberEnd="_okNtoak6Ee-lntgJ_JlK2w _ogjVo6k6Ee-lntgJ_JlK2w">
              <ownedEnd xmi:id="_okNtoak6Ee-lntgJ_JlK2w" name="" type="_n2kkgKk6Ee-lntgJ_JlK2w" association="_okNtoKk6Ee-lntgJ_JlK2w"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_okNto6k6Ee-lntgJ_JlK2w" name="" memberEnd="_okNtpKk6Ee-lntgJ_JlK2w _ogj8sak6Ee-lntgJ_JlK2w">
              <ownedEnd xmi:id="_okNtpKk6Ee-lntgJ_JlK2w" name="" type="_n2kkgKk6Ee-lntgJ_JlK2w" association="_okNto6k6Ee-lntgJ_JlK2w"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_okOUsak6Ee-lntgJ_JlK2w" name="" memberEnd="_okOUsqk6Ee-lntgJ_JlK2w _ogoOIKk6Ee-lntgJ_JlK2w">
              <ownedEnd xmi:id="_okOUsqk6Ee-lntgJ_JlK2w" name="" type="_n4IqwKk6Ee-lntgJ_JlK2w" association="_okOUsak6Ee-lntgJ_JlK2w"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_okO7wak6Ee-lntgJ_JlK2w" name="" memberEnd="_okO7wqk6Ee-lntgJ_JlK2w _ogoOIqk6Ee-lntgJ_JlK2w">
              <ownedEnd xmi:id="_okO7wqk6Ee-lntgJ_JlK2w" name="" type="_n4IqwKk6Ee-lntgJ_JlK2w" association="_okO7wak6Ee-lntgJ_JlK2w"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_okO7xKk6Ee-lntgJ_JlK2w" name="" memberEnd="_okO7xak6Ee-lntgJ_JlK2w _ogo1Mqk6Ee-lntgJ_JlK2w">
              <ownedEnd xmi:id="_okO7xak6Ee-lntgJ_JlK2w" name="" type="_n4ZJcKk6Ee-lntgJ_JlK2w" association="_okO7xKk6Ee-lntgJ_JlK2w"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_okPi0ak6Ee-lntgJ_JlK2w" name="" memberEnd="_okPi0qk6Ee-lntgJ_JlK2w _ogtGoKk6Ee-lntgJ_JlK2w">
              <ownedEnd xmi:id="_okPi0qk6Ee-lntgJ_JlK2w" name="" type="_n4iTYKk6Ee-lntgJ_JlK2w" association="_okPi0ak6Ee-lntgJ_JlK2w"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_okQJ4ak6Ee-lntgJ_JlK2w" name="" memberEnd="_okQJ4qk6Ee-lntgJ_JlK2w _ogtGo6k6Ee-lntgJ_JlK2w">
              <ownedEnd xmi:id="_okQJ4qk6Ee-lntgJ_JlK2w" name="" type="_n4iTYKk6Ee-lntgJ_JlK2w" association="_okQJ4ak6Ee-lntgJ_JlK2w"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_okQw8Kk6Ee-lntgJ_JlK2w" name="" memberEnd="_okQw8ak6Ee-lntgJ_JlK2w _ogwJ9Kk6Ee-lntgJ_JlK2w">
              <ownedEnd xmi:id="_okQw8ak6Ee-lntgJ_JlK2w" name="" type="_n5MasKk6Ee-lntgJ_JlK2w" association="_okQw8Kk6Ee-lntgJ_JlK2w"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_okQw86k6Ee-lntgJ_JlK2w" name="" memberEnd="_okQw9Kk6Ee-lntgJ_JlK2w _ogwxAak6Ee-lntgJ_JlK2w">
              <ownedEnd xmi:id="_okQw9Kk6Ee-lntgJ_JlK2w" name="" type="_n5MasKk6Ee-lntgJ_JlK2w" association="_okQw86k6Ee-lntgJ_JlK2w"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_okRYAak6Ee-lntgJ_JlK2w" name="" memberEnd="_okRYAqk6Ee-lntgJ_JlK2w _ogz0UKk6Ee-lntgJ_JlK2w">
              <ownedEnd xmi:id="_okRYAqk6Ee-lntgJ_JlK2w" name="" type="_n6OVcKk6Ee-lntgJ_JlK2w" association="_okRYAak6Ee-lntgJ_JlK2w"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_okR_Eak6Ee-lntgJ_JlK2w" name="" memberEnd="_okR_Eqk6Ee-lntgJ_JlK2w _ogz0Uqk6Ee-lntgJ_JlK2w">
              <ownedEnd xmi:id="_okR_Eqk6Ee-lntgJ_JlK2w" name="" type="_n6OVcKk6Ee-lntgJ_JlK2w" association="_okR_Eak6Ee-lntgJ_JlK2w"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_okSmIak6Ee-lntgJ_JlK2w" name="" memberEnd="_okSmIqk6Ee-lntgJ_JlK2w _ogz0VKk6Ee-lntgJ_JlK2w">
              <ownedEnd xmi:id="_okSmIqk6Ee-lntgJ_JlK2w" name="" type="_n6OVcKk6Ee-lntgJ_JlK2w" association="_okSmIak6Ee-lntgJ_JlK2w"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_okTNMKk6Ee-lntgJ_JlK2w" name="" memberEnd="_okTNMak6Ee-lntgJ_JlK2w _og1Cc6k6Ee-lntgJ_JlK2w">
              <ownedEnd xmi:id="_okTNMak6Ee-lntgJ_JlK2w" name="" type="_n6OVcKk6Ee-lntgJ_JlK2w" association="_okTNMKk6Ee-lntgJ_JlK2w"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_okT0QKk6Ee-lntgJ_JlK2w" name="" memberEnd="_okT0Qak6Ee-lntgJ_JlK2w _og1pgak6Ee-lntgJ_JlK2w">
              <ownedEnd xmi:id="_okT0Qak6Ee-lntgJ_JlK2w" name="" type="_n6OVcKk6Ee-lntgJ_JlK2w" association="_okT0QKk6Ee-lntgJ_JlK2w"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_okT0Q6k6Ee-lntgJ_JlK2w" name="" memberEnd="_okT0RKk6Ee-lntgJ_JlK2w _og1phKk6Ee-lntgJ_JlK2w">
              <ownedEnd xmi:id="_okT0RKk6Ee-lntgJ_JlK2w" name="" type="_n6OVcKk6Ee-lntgJ_JlK2w" association="_okT0Q6k6Ee-lntgJ_JlK2w"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_okUbUak6Ee-lntgJ_JlK2w" name="" memberEnd="_okUbUqk6Ee-lntgJ_JlK2w _og2Qkak6Ee-lntgJ_JlK2w">
              <ownedEnd xmi:id="_okUbUqk6Ee-lntgJ_JlK2w" name="" type="_n6OVcKk6Ee-lntgJ_JlK2w" association="_okUbUak6Ee-lntgJ_JlK2w"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_okVCYak6Ee-lntgJ_JlK2w" name="" memberEnd="_okVCYqk6Ee-lntgJ_JlK2w _og23oKk6Ee-lntgJ_JlK2w">
              <ownedEnd xmi:id="_okVCYqk6Ee-lntgJ_JlK2w" name="" type="_n6jsoKk6Ee-lntgJ_JlK2w" association="_okVCYak6Ee-lntgJ_JlK2w"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_okVpcKk6Ee-lntgJ_JlK2w" name="" memberEnd="_okVpcak6Ee-lntgJ_JlK2w _ohAoo6k6Ee-lntgJ_JlK2w">
              <ownedEnd xmi:id="_okVpcak6Ee-lntgJ_JlK2w" name="" type="_n7IUYKk6Ee-lntgJ_JlK2w" association="_okVpcKk6Ee-lntgJ_JlK2w"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_okWQgKk6Ee-lntgJ_JlK2w" name="" memberEnd="_okWQgak6Ee-lntgJ_JlK2w _ohBPsqk6Ee-lntgJ_JlK2w">
              <ownedEnd xmi:id="_okWQgak6Ee-lntgJ_JlK2w" name="" type="_n7IUYKk6Ee-lntgJ_JlK2w" association="_okWQgKk6Ee-lntgJ_JlK2w"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_okWQg6k6Ee-lntgJ_JlK2w" name="" memberEnd="_okWQhKk6Ee-lntgJ_JlK2w _ohB2wKk6Ee-lntgJ_JlK2w">
              <ownedEnd xmi:id="_okWQhKk6Ee-lntgJ_JlK2w" name="" type="_n7drkKk6Ee-lntgJ_JlK2w" association="_okWQg6k6Ee-lntgJ_JlK2w"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_okW3kak6Ee-lntgJ_JlK2w" name="" memberEnd="_okW3kqk6Ee-lntgJ_JlK2w _ohCd0ak6Ee-lntgJ_JlK2w">
              <ownedEnd xmi:id="_okW3kqk6Ee-lntgJ_JlK2w" name="" type="_n7drkKk6Ee-lntgJ_JlK2w" association="_okW3kak6Ee-lntgJ_JlK2w"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_okXeoak6Ee-lntgJ_JlK2w" name="" memberEnd="_okXeoqk6Ee-lntgJ_JlK2w _ohCd06k6Ee-lntgJ_JlK2w">
              <ownedEnd xmi:id="_okXeoqk6Ee-lntgJ_JlK2w" name="" type="_n7drkKk6Ee-lntgJ_JlK2w" association="_okXeoak6Ee-lntgJ_JlK2w"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_okYFsak6Ee-lntgJ_JlK2w" name="" memberEnd="_okYFsqk6Ee-lntgJ_JlK2w _ohDE4ak6Ee-lntgJ_JlK2w">
              <ownedEnd xmi:id="_okYFsqk6Ee-lntgJ_JlK2w" name="" type="_n7drkKk6Ee-lntgJ_JlK2w" association="_okYFsak6Ee-lntgJ_JlK2w"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_okYswak6Ee-lntgJ_JlK2w" name="" memberEnd="_okYswqk6Ee-lntgJ_JlK2w _ohDr8ak6Ee-lntgJ_JlK2w">
              <ownedEnd xmi:id="_okYswqk6Ee-lntgJ_JlK2w" name="" type="_n7drkKk6Ee-lntgJ_JlK2w" association="_okYswak6Ee-lntgJ_JlK2w"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_okZT0Kk6Ee-lntgJ_JlK2w" name="" memberEnd="_okZT0ak6Ee-lntgJ_JlK2w _ohGvQqk6Ee-lntgJ_JlK2w">
              <ownedEnd xmi:id="_okZT0ak6Ee-lntgJ_JlK2w" name="" type="_n7_3EKk6Ee-lntgJ_JlK2w" association="_okZT0Kk6Ee-lntgJ_JlK2w"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_okZT06k6Ee-lntgJ_JlK2w" name="" memberEnd="_okZT1Kk6Ee-lntgJ_JlK2w _ohGvRqk6Ee-lntgJ_JlK2w">
              <ownedEnd xmi:id="_okZT1Kk6Ee-lntgJ_JlK2w" name="" type="_n7_3EKk6Ee-lntgJ_JlK2w" association="_okZT06k6Ee-lntgJ_JlK2w"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_okZ64ak6Ee-lntgJ_JlK2w" name="" memberEnd="_okZ64qk6Ee-lntgJ_JlK2w _ohHWUqk6Ee-lntgJ_JlK2w">
              <ownedEnd xmi:id="_okZ64qk6Ee-lntgJ_JlK2w" name="" type="_n8IZ8Kk6Ee-lntgJ_JlK2w" association="_okZ64ak6Ee-lntgJ_JlK2w"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_okah8ak6Ee-lntgJ_JlK2w" name="" memberEnd="_okah8qk6Ee-lntgJ_JlK2w _ohKZo6k6Ee-lntgJ_JlK2w">
              <ownedEnd xmi:id="_okah8qk6Ee-lntgJ_JlK2w" name="" type="_n8NScKk6Ee-lntgJ_JlK2w" association="_okah8ak6Ee-lntgJ_JlK2w"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_okbJAak6Ee-lntgJ_JlK2w" name="" memberEnd="_okbJAqk6Ee-lntgJ_JlK2w _ohLAsqk6Ee-lntgJ_JlK2w">
              <ownedEnd xmi:id="_okbJAqk6Ee-lntgJ_JlK2w" name="" type="_n8NScKk6Ee-lntgJ_JlK2w" association="_okbJAak6Ee-lntgJ_JlK2w"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_okbwEKk6Ee-lntgJ_JlK2w" name="" memberEnd="_okbwEak6Ee-lntgJ_JlK2w _ohNc8Kk6Ee-lntgJ_JlK2w">
              <ownedEnd xmi:id="_okbwEak6Ee-lntgJ_JlK2w" name="" type="_n8zIUKk6Ee-lntgJ_JlK2w" association="_okbwEKk6Ee-lntgJ_JlK2w"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_okcXIak6Ee-lntgJ_JlK2w" name="" memberEnd="_okcXIqk6Ee-lntgJ_JlK2w _ohOrEKk6Ee-lntgJ_JlK2w">
              <ownedEnd xmi:id="_okcXIqk6Ee-lntgJ_JlK2w" name="" type="_n8zIUKk6Ee-lntgJ_JlK2w" association="_okcXIak6Ee-lntgJ_JlK2w"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_okc-MKk6Ee-lntgJ_JlK2w" name="" memberEnd="_okc-Mak6Ee-lntgJ_JlK2w _ohOrEqk6Ee-lntgJ_JlK2w">
              <ownedEnd xmi:id="_okc-Mak6Ee-lntgJ_JlK2w" name="" type="_n8zIUKk6Ee-lntgJ_JlK2w" association="_okc-MKk6Ee-lntgJ_JlK2w"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_okdlQKk6Ee-lntgJ_JlK2w" name="" memberEnd="_okdlQak6Ee-lntgJ_JlK2w _ohP5MKk6Ee-lntgJ_JlK2w">
              <ownedEnd xmi:id="_okdlQak6Ee-lntgJ_JlK2w" name="" type="_n9GDQKk6Ee-lntgJ_JlK2w" association="_okdlQKk6Ee-lntgJ_JlK2w"/>
            </packagedElement>
          </packagedElement>
          <packagedElement xmi:type="uml:Package" xmi:id="_nrjAQqk6Ee-lntgJ_JlK2w" name="warpdsls">
            <packagedElement xmi:type="uml:Class" xmi:id="_obgdkak6Ee-lntgJ_JlK2w" name="WARPBaseListener"/>
            <packagedElement xmi:type="uml:Class" xmi:id="_obhEoak6Ee-lntgJ_JlK2w" name="WARPLexer"/>
            <packagedElement xmi:type="uml:Class" xmi:id="_obhrsak6Ee-lntgJ_JlK2w" name="WARPParser"/>
            <packagedElement xmi:type="uml:Class" xmi:id="_ofSKUKk6Ee-lntgJ_JlK2w" name="WARPdslBaseListener"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Package" xmi:id="_nsKrUKk6Ee-lntgJ_JlK2w" name="utilities">
            <packagedElement xmi:type="uml:Class" xmi:id="_ocHhkKk6Ee-lntgJ_JlK2w" name="Utilities"/>
          </packagedElement>
        </packagedElement>
      </packagedElement>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_np7PoKk6Ee-lntgJ_JlK2w" name="java">
      <packagedElement xmi:type="uml:Package" xmi:id="_np7Poak6Ee-lntgJ_JlK2w" name="util">
        <packagedElement xmi:type="uml:Package" xmi:id="_nqzZYKk6Ee-lntgJ_JlK2w" name="regex">
          <packagedElement xmi:type="uml:Class" xmi:id="_obDxoKk6Ee-lntgJ_JlK2w" name="Pattern"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Package" xmi:id="_nuDhsKk6Ee-lntgJ_JlK2w" name="stream">
          <packagedElement xmi:type="uml:Class" xmi:id="_odlhMqk6Ee-lntgJ_JlK2w" name="Collectors"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_n2zOAKk6Ee-lntgJ_JlK2w" name="PriorityQueue"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_oatzYKk6Ee-lntgJ_JlK2w" name="HashMap"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_oawPoKk6Ee-lntgJ_JlK2w" name="ArrayList"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_oaw2sak6Ee-lntgJ_JlK2w" name="HashSet"/>
        <packagedElement xmi:type="uml:Interface" xmi:id="_oaxdwak6Ee-lntgJ_JlK2w" name="Iterator"/>
        <packagedElement xmi:type="uml:Interface" xmi:id="_oayE0ak6Ee-lntgJ_JlK2w" name="Set"/>
        <packagedElement xmi:type="uml:Interface" xmi:id="_obMUgKk6Ee-lntgJ_JlK2w" name="Comparator"/>
        <packagedElement xmi:type="uml:Interface" xmi:id="_ob8icKk6Ee-lntgJ_JlK2w" name="Collection"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_ocIIoak6Ee-lntgJ_JlK2w" name="Arrays"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_oceG4Kk6Ee-lntgJ_JlK2w" name="Collections"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_ocoe8Kk6Ee-lntgJ_JlK2w" name="LinkedList"/>
        <packagedElement xmi:type="uml:Interface" xmi:id="_ocpGAKk6Ee-lntgJ_JlK2w" name="Queue"/>
        <packagedElement xmi:type="uml:Interface" xmi:id="_odlhMKk6Ee-lntgJ_JlK2w" name="List"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Package" xmi:id="_nrQsYqk6Ee-lntgJ_JlK2w" name="io">
        <packagedElement xmi:type="uml:Class" xmi:id="_obR0Eak6Ee-lntgJ_JlK2w" name="File"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_obSbIak6Ee-lntgJ_JlK2w" name="IOException"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_obugAKk6Ee-lntgJ_JlK2w" name="BufferedReader"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_obvHEak6Ee-lntgJ_JlK2w" name="InputStreamReader"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Package" xmi:id="_nrRTcKk6Ee-lntgJ_JlK2w" name="nio">
        <packagedElement xmi:type="uml:Package" xmi:id="_nrRTcak6Ee-lntgJ_JlK2w" name="file">
          <packagedElement xmi:type="uml:Class" xmi:id="_obTCMak6Ee-lntgJ_JlK2w" name="Files"/>
          <packagedElement xmi:type="uml:Interface" xmi:id="_obTpQak6Ee-lntgJ_JlK2w" name="Path"/>
          <packagedElement xmi:type="uml:Class" xmi:id="_obTpQ6k6Ee-lntgJ_JlK2w" name="Paths"/>
        </packagedElement>
      </packagedElement>
      <packagedElement xmi:type="uml:Package" xmi:id="_nrtYUKk6Ee-lntgJ_JlK2w" name="awt">
        <packagedElement xmi:type="uml:Class" xmi:id="_obq1oak6Ee-lntgJ_JlK2w" name="Component"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Package" xmi:id="_oeC0MKk6Ee-lntgJ_JlK2w" name="lang">
        <packagedElement xmi:type="uml:Interface" xmi:id="_oeC0Mak6Ee-lntgJ_JlK2w" name="Comparable"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_oeZZgKk6Ee-lntgJ_JlK2w" name="RuntimeException"/>
        <packagedElement xmi:type="uml:DataType" xmi:id="_oex0AKk6Ee-lntgJ_JlK2w" name="Double"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_ofgMwKk6Ee-lntgJ_JlK2w" name="Exception"/>
      </packagedElement>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_nrQFUKk6Ee-lntgJ_JlK2w" name="com">
      <packagedElement xmi:type="uml:Package" xmi:id="_nrQsYKk6Ee-lntgJ_JlK2w" name="mkyong">
        <packagedElement xmi:type="uml:Package" xmi:id="_nrQsYak6Ee-lntgJ_JlK2w" name="system">
          <packagedElement xmi:type="uml:Class" xmi:id="_obRNAKk6Ee-lntgJ_JlK2w" name="OSValidator"/>
        </packagedElement>
      </packagedElement>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_nrR6gKk6Ee-lntgJ_JlK2w" name="javax">
      <packagedElement xmi:type="uml:Package" xmi:id="_nrR6gak6Ee-lntgJ_JlK2w" name="swing">
        <packagedElement xmi:type="uml:Package" xmi:id="_nrt_YKk6Ee-lntgJ_JlK2w" name="table">
          <packagedElement xmi:type="uml:Interface" xmi:id="_obsq06k6Ee-lntgJ_JlK2w" name="TableCellRenderer"/>
          <packagedElement xmi:type="uml:Interface" xmi:id="_obtR4ak6Ee-lntgJ_JlK2w" name="TableColumnModel"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_obUQUak6Ee-lntgJ_JlK2w" name="JFileChooser"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_obrcsak6Ee-lntgJ_JlK2w" name="JFrame"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_obsDwak6Ee-lntgJ_JlK2w" name="JScrollPane"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_obsq0ak6Ee-lntgJ_JlK2w" name="JTable"/>
      </packagedElement>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_nriZMKk6Ee-lntgJ_JlK2w" name="org">
      <packagedElement xmi:type="uml:Package" xmi:id="_nriZMak6Ee-lntgJ_JlK2w" name="antlr">
        <packagedElement xmi:type="uml:Package" xmi:id="_nriZMqk6Ee-lntgJ_JlK2w" name="v4">
          <packagedElement xmi:type="uml:Package" xmi:id="_nrjAQKk6Ee-lntgJ_JlK2w" name="runtime">
            <packagedElement xmi:type="uml:Package" xmi:id="_nrjAQak6Ee-lntgJ_JlK2w" name="tree">
              <packagedElement xmi:type="uml:Interface" xmi:id="_obfPcak6Ee-lntgJ_JlK2w" name="ParseTree"/>
              <packagedElement xmi:type="uml:Class" xmi:id="_obf2gak6Ee-lntgJ_JlK2w" name="ParseTreeWalker"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Interface" xmi:id="_obdaQKk6Ee-lntgJ_JlK2w" name="CharStream"/>
            <packagedElement xmi:type="uml:Class" xmi:id="_obeBUak6Ee-lntgJ_JlK2w" name="CharStreams"/>
            <packagedElement xmi:type="uml:Class" xmi:id="_obeoYak6Ee-lntgJ_JlK2w" name="CommonTokenStream"/>
          </packagedElement>
        </packagedElement>
      </packagedElement>
      <packagedElement xmi:type="uml:Package" xmi:id="_nuQWAKk6Ee-lntgJ_JlK2w" name="junit">
        <packagedElement xmi:type="uml:Package" xmi:id="_nuQWAak6Ee-lntgJ_JlK2w" name="jupiter">
          <packagedElement xmi:type="uml:Package" xmi:id="_nuQWAqk6Ee-lntgJ_JlK2w" name="api">
            <packagedElement xmi:type="uml:Class" xmi:id="_oduEEKk6Ee-lntgJ_JlK2w" name="Assertions"/>
            <packagedElement xmi:type="uml:Interface" xmi:id="_odurIak6Ee-lntgJ_JlK2w" name="Test"/>
            <packagedElement xmi:type="uml:Interface" xmi:id="_odv5QKk6Ee-lntgJ_JlK2w" name="BeforeEach"/>
            <packagedElement xmi:type="uml:Interface" xmi:id="_odxHYKk6Ee-lntgJ_JlK2w" name="AfterEach"/>
          </packagedElement>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_odvSMak6Ee-lntgJ_JlK2w" name="Assert"/>
      </packagedElement>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_nrnRsKk6Ee-lntgJ_JlK2w" name="WARPParser">
      <packagedElement xmi:type="uml:Class" xmi:id="_obi50qk6Ee-lntgJ_JlK2w" name="WarpNameContext"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_obkvAKk6Ee-lntgJ_JlK2w" name="WarpContext"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_obl9Iqk6Ee-lntgJ_JlK2w" name="FlowNameContext"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_obnyUKk6Ee-lntgJ_JlK2w" name="SrcNodeContext"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_obpAcKk6Ee-lntgJ_JlK2w" name="SnkNodeContext"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_obpng6k6Ee-lntgJ_JlK2w" name="FlowContext"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_oddlYKk6Ee-lntgJ_JlK2w" name="PriorityContext"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_odeMdak6Ee-lntgJ_JlK2w" name="PeriodContext"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_odgBoKk6Ee-lntgJ_JlK2w" name="DeadlineContext"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_odh20Kk6Ee-lntgJ_JlK2w" name="PhaseContext"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_ntaogKk6Ee-lntgJ_JlK2w" name="argparser">
      <packagedElement xmi:type="uml:Class" xmi:id="_odFK4Kk6Ee-lntgJ_JlK2w" name="ArgParser"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_odFx8ak6Ee-lntgJ_JlK2w" name="BooleanHolder"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_odHAEKk6Ee-lntgJ_JlK2w" name="DoubleHolder"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_odHnIKk6Ee-lntgJ_JlK2w" name="IntHolder"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_odHnIqk6Ee-lntgJ_JlK2w" name="StringHolder"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_ntoD4Kk6Ee-lntgJ_JlK2w" name="WARPdslParser">
      <packagedElement xmi:type="uml:Class" xmi:id="_odMfoKk6Ee-lntgJ_JlK2w" name="ActionContext"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_odO74Kk6Ee-lntgJ_JlK2w" name="FlowNameContext"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_odQKAqk6Ee-lntgJ_JlK2w" name="CmdContext"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_odRYIKk6Ee-lntgJ_JlK2w" name="SrcNodeContext"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_odR_M6k6Ee-lntgJ_JlK2w" name="SnkNodeContext"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_odTNU6k6Ee-lntgJ_JlK2w" name="ChannelContext"/>
    </packagedElement>
    <profileApplication xmi:id="_l3isAKk6Ee-lntgJ_JlK2w">
      <eAnnotations xmi:id="_l3oLkKk6Ee-lntgJ_JlK2w" source="http://www.eclipse.org/uml2/2.0.0/UML">
        <references xmi:type="ecore:EPackage" href="pathmap://UMLLAB_PROFILES/UMLLab.profile.uml#UMLLabProfile-Annotation_2-UMLLabProfile"/>
      </eAnnotations>
      <appliedProfile href="pathmap://UMLLAB_PROFILES/UMLLab.profile.uml#UMLLabProfile"/>
    </profileApplication>
  </uml:Model>
  <UMLLabProfile:TargetLanguage xmi:id="_l3sdAKk6Ee-lntgJ_JlK2w" base_Package="_isivoKk6Ee-lntgJ_JlK2w">
    <languageName>java</languageName>
  </UMLLabProfile:TargetLanguage>
  <UMLLabProfile:Generics xmi:id="_nxXUYKk6Ee-lntgJ_JlK2w" genericsValue="T,E" base_Element="_nxRNwKk6Ee-lntgJ_JlK2w"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_nxnzEKk6Ee-lntgJ_JlK2w" base_Element="_nxmk8Kk6Ee-lntgJ_JlK2w"/>
  <UMLLabProfile:Annotations xmi:id="_nxpoQKk6Ee-lntgJ_JlK2w" base_Element="_nxmk8Kk6Ee-lntgJ_JlK2w">
    <annotations xmi:id="_nx3qsKk6Ee-lntgJ_JlK2w" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_nx6uAKk6Ee-lntgJ_JlK2w" genericsValue="Edge" base_Element="_nx440Kk6Ee-lntgJ_JlK2w"/>
  <UMLLabProfile:Generics xmi:id="_nx9KQKk6Ee-lntgJ_JlK2w" genericsValue="Edge" base_Element="_nx7VEKk6Ee-lntgJ_JlK2w"/>
  <UMLLabProfile:Generics xmi:id="_nyA0oKk6Ee-lntgJ_JlK2w" genericsValue="Edge" base_Element="_nx9xUKk6Ee-lntgJ_JlK2w"/>
  <UMLLabProfile:Generics xmi:id="_nyD38Kk6Ee-lntgJ_JlK2w" genericsValue="Edge" base_Element="_nyCCwKk6Ee-lntgJ_JlK2w"/>
  <UMLLabProfile:Generics xmi:id="_nyFtIKk6Ee-lntgJ_JlK2w" genericsValue="Edge" base_Element="_nyEfAKk6Ee-lntgJ_JlK2w"/>
  <UMLLabProfile:Generics xmi:id="_ny924Kk6Ee-lntgJ_JlK2w" genericsValue="String" base_Element="_ny6zkKk6Ee-lntgJ_JlK2w"/>
  <UMLLabProfile:Generics xmi:id="_nzO8oKk6Ee-lntgJ_JlK2w" genericsValue="String" base_Element="_nzNugak6Ee-lntgJ_JlK2w"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_nzjFsKk6Ee-lntgJ_JlK2w" base_Element="_nzieoKk6Ee-lntgJ_JlK2w"/>
  <UMLLabProfile:Annotations xmi:id="_nzjswKk6Ee-lntgJ_JlK2w" base_Element="_nzieoKk6Ee-lntgJ_JlK2w">
    <annotations xmi:id="_nzkT0Kk6Ee-lntgJ_JlK2w" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_nzlh8Kk6Ee-lntgJ_JlK2w" base_Element="_nzkT0ak6Ee-lntgJ_JlK2w"/>
  <UMLLabProfile:Annotations xmi:id="_nzlh8ak6Ee-lntgJ_JlK2w" base_Element="_nzkT0ak6Ee-lntgJ_JlK2w">
    <annotations xmi:id="_nzlh8qk6Ee-lntgJ_JlK2w" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_nzmJAak6Ee-lntgJ_JlK2w" base_Element="_nzmJAKk6Ee-lntgJ_JlK2w"/>
  <UMLLabProfile:Annotations xmi:id="_nzmwEKk6Ee-lntgJ_JlK2w" base_Element="_nzmJAKk6Ee-lntgJ_JlK2w">
    <annotations xmi:id="_nzmwEak6Ee-lntgJ_JlK2w" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_nzuE0Kk6Ee-lntgJ_JlK2w" genericsValue="T extends SchedulableObject" base_Element="_nzs2sKk6Ee-lntgJ_JlK2w"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_nz0LcKk6Ee-lntgJ_JlK2w" base_Element="_nzy9VKk6Ee-lntgJ_JlK2w"/>
  <UMLLabProfile:Annotations xmi:id="_nz0ygKk6Ee-lntgJ_JlK2w" base_Element="_nzy9VKk6Ee-lntgJ_JlK2w">
    <annotations xmi:id="_nz0ygak6Ee-lntgJ_JlK2w" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_nz5D8Kk6Ee-lntgJ_JlK2w" base_Element="_nz4c4Kk6Ee-lntgJ_JlK2w"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_nz-jgKk6Ee-lntgJ_JlK2w" base_Element="_nz9VYKk6Ee-lntgJ_JlK2w"/>
  <UMLLabProfile:Annotations xmi:id="_nz-jgak6Ee-lntgJ_JlK2w" base_Element="_nz9VYKk6Ee-lntgJ_JlK2w">
    <annotations xmi:id="_nz_KkKk6Ee-lntgJ_JlK2w" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_n0AYsKk6Ee-lntgJ_JlK2w" base_Element="_nz_Kkak6Ee-lntgJ_JlK2w"/>
  <UMLLabProfile:Annotations xmi:id="_n0A_wKk6Ee-lntgJ_JlK2w" base_Element="_nz_Kkak6Ee-lntgJ_JlK2w">
    <annotations xmi:id="_n0A_wak6Ee-lntgJ_JlK2w" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_n0Bm0ak6Ee-lntgJ_JlK2w" base_Element="_n0Bm0Kk6Ee-lntgJ_JlK2w"/>
  <UMLLabProfile:Annotations xmi:id="_n0CN4Kk6Ee-lntgJ_JlK2w" base_Element="_n0Bm0Kk6Ee-lntgJ_JlK2w">
    <annotations xmi:id="_n0CN4ak6Ee-lntgJ_JlK2w" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_n0W-AKk6Ee-lntgJ_JlK2w" genericsValue="Node" base_Element="_n0Vv4qk6Ee-lntgJ_JlK2w"/>
  <UMLLabProfile:Generics xmi:id="_n0YzMKk6Ee-lntgJ_JlK2w" genericsValue="Edge" base_Element="_n0XlEKk6Ee-lntgJ_JlK2w"/>
  <UMLLabProfile:Generics xmi:id="_n0aoYKk6Ee-lntgJ_JlK2w" genericsValue="Integer" base_Element="_n0ZaQKk6Ee-lntgJ_JlK2w"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_n0e50Kk6Ee-lntgJ_JlK2w" base_Element="_n0eSwKk6Ee-lntgJ_JlK2w"/>
  <UMLLabProfile:Annotations xmi:id="_n0e50ak6Ee-lntgJ_JlK2w" base_Element="_n0eSwKk6Ee-lntgJ_JlK2w">
    <annotations xmi:id="_n0fg4Kk6Ee-lntgJ_JlK2w" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_n0oq0Kk6Ee-lntgJ_JlK2w" base_Element="_n0oDwKk6Ee-lntgJ_JlK2w"/>
  <UMLLabProfile:Annotations xmi:id="_n0pR4Kk6Ee-lntgJ_JlK2w" base_Element="_n0oDwKk6Ee-lntgJ_JlK2w">
    <annotations xmi:id="_n0pR4ak6Ee-lntgJ_JlK2w" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Array xmi:id="_n04icak6Ee-lntgJ_JlK2w" dimensions="2" base_Element="_n03UU6k6Ee-lntgJ_JlK2w"/>
  <UMLLabProfile:Generics xmi:id="_n1QV4Kk6Ee-lntgJ_JlK2w" genericsValue="T extends SchedulableObject" base_Element="_n1PHwKk6Ee-lntgJ_JlK2w"/>
  <UMLLabProfile:Generics xmi:id="_n1SyIKk6Ee-lntgJ_JlK2w" genericsValue="T extends SchedulableObject" base_Element="_n1SLEKk6Ee-lntgJ_JlK2w"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_n1V1cqk6Ee-lntgJ_JlK2w" base_Element="_n1V1cKk6Ee-lntgJ_JlK2w"/>
  <UMLLabProfile:Annotations xmi:id="_n1WcgKk6Ee-lntgJ_JlK2w" base_Element="_n1V1cKk6Ee-lntgJ_JlK2w">
    <annotations xmi:id="_n1Wcgak6Ee-lntgJ_JlK2w" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_n1YRsKk6Ee-lntgJ_JlK2w" base_Element="_n1XqoKk6Ee-lntgJ_JlK2w"/>
  <UMLLabProfile:Annotations xmi:id="_n1YRsak6Ee-lntgJ_JlK2w" base_Element="_n1XqoKk6Ee-lntgJ_JlK2w">
    <annotations xmi:id="_n1Y4wKk6Ee-lntgJ_JlK2w" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_n1Y4wqk6Ee-lntgJ_JlK2w" base_Element="_n1Y4wak6Ee-lntgJ_JlK2w"/>
  <UMLLabProfile:Annotations xmi:id="_n1Zf0Kk6Ee-lntgJ_JlK2w" base_Element="_n1Y4wak6Ee-lntgJ_JlK2w">
    <annotations xmi:id="_n1Zf0ak6Ee-lntgJ_JlK2w" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_n1jQ0Kk6Ee-lntgJ_JlK2w" base_Element="_n1ipw6k6Ee-lntgJ_JlK2w"/>
  <UMLLabProfile:Annotations xmi:id="_n1jQ0ak6Ee-lntgJ_JlK2w" base_Element="_n1ipw6k6Ee-lntgJ_JlK2w">
    <annotations xmi:id="_n1jQ0qk6Ee-lntgJ_JlK2w" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_n1lGAKk6Ee-lntgJ_JlK2w" genericsValue="T extends SchedulableObject" base_Element="_n1ke8Kk6Ee-lntgJ_JlK2w"/>
  <UMLLabProfile:Generics xmi:id="_n1p-gKk6Ee-lntgJ_JlK2w" genericsValue="String, Integer" base_Element="_n1owYKk6Ee-lntgJ_JlK2w"/>
  <UMLLabProfile:Generics xmi:id="_n1rMoKk6Ee-lntgJ_JlK2w" genericsValue="String" base_Element="_n1p-gak6Ee-lntgJ_JlK2w"/>
  <UMLLabProfile:Array xmi:id="_n1sawKk6Ee-lntgJ_JlK2w" base_Element="_n1rMoak6Ee-lntgJ_JlK2w"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_n17EQKk6Ee-lntgJ_JlK2w" base_Element="_n16dMKk6Ee-lntgJ_JlK2w"/>
  <UMLLabProfile:Annotations xmi:id="_n17rUKk6Ee-lntgJ_JlK2w" base_Element="_n16dMKk6Ee-lntgJ_JlK2w">
    <annotations xmi:id="_n17rUak6Ee-lntgJ_JlK2w" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_n2Aj0Kk6Ee-lntgJ_JlK2w" genericsValue="T extends SchedulableObject" base_Element="_n1_8wKk6Ee-lntgJ_JlK2w"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_n2PNUKk6Ee-lntgJ_JlK2w" base_Element="_n2OmQKk6Ee-lntgJ_JlK2w"/>
  <UMLLabProfile:Annotations xmi:id="_n2PNUak6Ee-lntgJ_JlK2w" base_Element="_n2OmQKk6Ee-lntgJ_JlK2w">
    <annotations xmi:id="_n2P0YKk6Ee-lntgJ_JlK2w" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_n2Qbcqk6Ee-lntgJ_JlK2w" base_Element="_n2QbcKk6Ee-lntgJ_JlK2w"/>
  <UMLLabProfile:Annotations xmi:id="_n2RCgKk6Ee-lntgJ_JlK2w" base_Element="_n2QbcKk6Ee-lntgJ_JlK2w">
    <annotations xmi:id="_n2RCgak6Ee-lntgJ_JlK2w" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_n2Rpkak6Ee-lntgJ_JlK2w" base_Element="_n2RCgqk6Ee-lntgJ_JlK2w"/>
  <UMLLabProfile:Annotations xmi:id="_n2Rpkqk6Ee-lntgJ_JlK2w" base_Element="_n2RCgqk6Ee-lntgJ_JlK2w">
    <annotations xmi:id="_n2SQoKk6Ee-lntgJ_JlK2w" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_n2S3sqk6Ee-lntgJ_JlK2w" base_Element="_n2S3sak6Ee-lntgJ_JlK2w"/>
  <UMLLabProfile:Annotations xmi:id="_n2TewKk6Ee-lntgJ_JlK2w" base_Element="_n2S3sak6Ee-lntgJ_JlK2w">
    <annotations xmi:id="_n2Tewak6Ee-lntgJ_JlK2w" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_n2UF0ak6Ee-lntgJ_JlK2w" base_Element="_n2UF0Kk6Ee-lntgJ_JlK2w"/>
  <UMLLabProfile:Annotations xmi:id="_n2Us4Kk6Ee-lntgJ_JlK2w" base_Element="_n2UF0Kk6Ee-lntgJ_JlK2w">
    <annotations xmi:id="_n2Us4ak6Ee-lntgJ_JlK2w" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_n2VT8ak6Ee-lntgJ_JlK2w" base_Element="_n2Us4qk6Ee-lntgJ_JlK2w"/>
  <UMLLabProfile:Annotations xmi:id="_n2VT8qk6Ee-lntgJ_JlK2w" base_Element="_n2Us4qk6Ee-lntgJ_JlK2w">
    <annotations xmi:id="_n2VT86k6Ee-lntgJ_JlK2w" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_n2V7Aqk6Ee-lntgJ_JlK2w" base_Element="_n2V7AKk6Ee-lntgJ_JlK2w"/>
  <UMLLabProfile:Annotations xmi:id="_n2WiEKk6Ee-lntgJ_JlK2w" base_Element="_n2V7AKk6Ee-lntgJ_JlK2w">
    <annotations xmi:id="_n2WiEak6Ee-lntgJ_JlK2w" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_n2XJIqk6Ee-lntgJ_JlK2w" base_Element="_n2XJIKk6Ee-lntgJ_JlK2w"/>
  <UMLLabProfile:Annotations xmi:id="_n2XwMKk6Ee-lntgJ_JlK2w" base_Element="_n2XJIKk6Ee-lntgJ_JlK2w">
    <annotations xmi:id="_n2XwMak6Ee-lntgJ_JlK2w" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_n2YXQKk6Ee-lntgJ_JlK2w" genericsValue="String, Integer" base_Element="_n2XwMqk6Ee-lntgJ_JlK2w"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_n2lyoak6Ee-lntgJ_JlK2w" base_Element="_n2lyoKk6Ee-lntgJ_JlK2w"/>
  <UMLLabProfile:Annotations xmi:id="_n2mZsKk6Ee-lntgJ_JlK2w" base_Element="_n2lyoKk6Ee-lntgJ_JlK2w">
    <annotations xmi:id="_n2mZsak6Ee-lntgJ_JlK2w" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_n2nAwak6Ee-lntgJ_JlK2w" base_Element="_n2nAwKk6Ee-lntgJ_JlK2w"/>
  <UMLLabProfile:Annotations xmi:id="_n2nn0Kk6Ee-lntgJ_JlK2w" base_Element="_n2nAwKk6Ee-lntgJ_JlK2w">
    <annotations xmi:id="_n2nn0ak6Ee-lntgJ_JlK2w" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_n2oO4Kk6Ee-lntgJ_JlK2w" base_Element="_n2nn0qk6Ee-lntgJ_JlK2w"/>
  <UMLLabProfile:Annotations xmi:id="_n2o18Kk6Ee-lntgJ_JlK2w" base_Element="_n2nn0qk6Ee-lntgJ_JlK2w">
    <annotations xmi:id="_n2o18ak6Ee-lntgJ_JlK2w" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Array xmi:id="_n2pdAqk6Ee-lntgJ_JlK2w" base_Element="_n2o18qk6Ee-lntgJ_JlK2w"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_n2qEEKk6Ee-lntgJ_JlK2w" base_Element="_n2o18qk6Ee-lntgJ_JlK2w"/>
  <UMLLabProfile:Annotations xmi:id="_n2qEEak6Ee-lntgJ_JlK2w" base_Element="_n2o18qk6Ee-lntgJ_JlK2w">
    <annotations xmi:id="_n2qEEqk6Ee-lntgJ_JlK2w" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Array xmi:id="_n2qrI6k6Ee-lntgJ_JlK2w" dimensions="2" base_Element="_n2qrIKk6Ee-lntgJ_JlK2w"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_n2rSMKk6Ee-lntgJ_JlK2w" base_Element="_n2qrIKk6Ee-lntgJ_JlK2w"/>
  <UMLLabProfile:Annotations xmi:id="_n2rSMak6Ee-lntgJ_JlK2w" base_Element="_n2qrIKk6Ee-lntgJ_JlK2w">
    <annotations xmi:id="_n2rSMqk6Ee-lntgJ_JlK2w" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_n2u8kKk6Ee-lntgJ_JlK2w" genericsValue="T extends SchedulableObject" base_Element="_n2uVgKk6Ee-lntgJ_JlK2w"/>
  <UMLLabProfile:Generics xmi:id="_n2x_4Kk6Ee-lntgJ_JlK2w" genericsValue="T extends SchedulableObject" base_Element="_n2wxwKk6Ee-lntgJ_JlK2w"/>
  <UMLLabProfile:Reference xmi:id="_n20cIKk6Ee-lntgJ_JlK2w" base_Element="_n2zOAKk6Ee-lntgJ_JlK2w"/>
  <UMLLabProfile:Generics xmi:id="_n21qQKk6Ee-lntgJ_JlK2w" genericsValue="T" base_Element="_n21DMKk6Ee-lntgJ_JlK2w"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_n4OKUak6Ee-lntgJ_JlK2w" base_Element="_n4OKUKk6Ee-lntgJ_JlK2w"/>
  <UMLLabProfile:Annotations xmi:id="_n4OxYKk6Ee-lntgJ_JlK2w" base_Element="_n4OKUKk6Ee-lntgJ_JlK2w">
    <annotations xmi:id="_n4OxYak6Ee-lntgJ_JlK2w" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_n4P_gKk6Ee-lntgJ_JlK2w" base_Element="_n4PYcKk6Ee-lntgJ_JlK2w"/>
  <UMLLabProfile:Annotations xmi:id="_n4P_gak6Ee-lntgJ_JlK2w" base_Element="_n4PYcKk6Ee-lntgJ_JlK2w">
    <annotations xmi:id="_n4P_gqk6Ee-lntgJ_JlK2w" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Array xmi:id="_n4R0sKk6Ee-lntgJ_JlK2w" dimensions="1" base_Element="_n4P_g6k6Ee-lntgJ_JlK2w"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_n4R0sak6Ee-lntgJ_JlK2w" base_Element="_n4P_g6k6Ee-lntgJ_JlK2w"/>
  <UMLLabProfile:Annotations xmi:id="_n4SbwKk6Ee-lntgJ_JlK2w" base_Element="_n4P_g6k6Ee-lntgJ_JlK2w">
    <annotations xmi:id="_n4Sbwak6Ee-lntgJ_JlK2w" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Array xmi:id="_n4TC0qk6Ee-lntgJ_JlK2w" dimensions="2" base_Element="_n4Sbwqk6Ee-lntgJ_JlK2w"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_n4Tp4Kk6Ee-lntgJ_JlK2w" base_Element="_n4Sbwqk6Ee-lntgJ_JlK2w"/>
  <UMLLabProfile:Annotations xmi:id="_n4Tp4ak6Ee-lntgJ_JlK2w" base_Element="_n4Sbwqk6Ee-lntgJ_JlK2w">
    <annotations xmi:id="_n4Tp4qk6Ee-lntgJ_JlK2w" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_n4U4AKk6Ee-lntgJ_JlK2w" base_Element="_n4UQ8Kk6Ee-lntgJ_JlK2w"/>
  <UMLLabProfile:Annotations xmi:id="_n4VfEKk6Ee-lntgJ_JlK2w" base_Element="_n4UQ8Kk6Ee-lntgJ_JlK2w">
    <annotations xmi:id="_n4VfEak6Ee-lntgJ_JlK2w" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_n4aXkak6Ee-lntgJ_JlK2w" base_Element="_n4aXkKk6Ee-lntgJ_JlK2w"/>
  <UMLLabProfile:Annotations xmi:id="_n4a-oKk6Ee-lntgJ_JlK2w" base_Element="_n4aXkKk6Ee-lntgJ_JlK2w">
    <annotations xmi:id="_n4a-oak6Ee-lntgJ_JlK2w" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_n4f3IKk6Ee-lntgJ_JlK2w" genericsValue="T" base_Element="_n4eB8Kk6Ee-lntgJ_JlK2w"/>
  <UMLLabProfile:Generics xmi:id="_n4sEYKk6Ee-lntgJ_JlK2w" genericsValue="Integer" base_Element="_n4oaAak6Ee-lntgJ_JlK2w"/>
  <UMLLabProfile:Generics xmi:id="_n5FtAKk6Ee-lntgJ_JlK2w" genericsValue="T extends SchedulableObject" base_Element="_n5A0gKk6Ee-lntgJ_JlK2w"/>
  <UMLLabProfile:Generics xmi:id="_n5KlgKk6Ee-lntgJ_JlK2w" genericsValue="T" base_Element="_n5IJQKk6Ee-lntgJ_JlK2w"/>
  <UMLLabProfile:Generics xmi:id="_n5n4gKk6Ee-lntgJ_JlK2w" genericsValue="T extends SchedulableObject" base_Element="_n5nRcKk6Ee-lntgJ_JlK2w"/>
  <UMLLabProfile:Generics xmi:id="_n5ri4Kk6Ee-lntgJ_JlK2w" genericsValue="T" base_Element="_n5q70Kk6Ee-lntgJ_JlK2w"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_n5xCcKk6Ee-lntgJ_JlK2w" base_Element="_n5v0UKk6Ee-lntgJ_JlK2w"/>
  <UMLLabProfile:Generics xmi:id="_n5_r8Kk6Ee-lntgJ_JlK2w" genericsValue="T,E extends ArrayList&lt;T>" base_Element="_n5_E4Kk6Ee-lntgJ_JlK2w"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_n6GZoKk6Ee-lntgJ_JlK2w" base_Element="_n6FykKk6Ee-lntgJ_JlK2w"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_n6IO0ak6Ee-lntgJ_JlK2w" base_Element="_n6IO0Kk6Ee-lntgJ_JlK2w"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_n6R_0Kk6Ee-lntgJ_JlK2w" base_Element="_n6RYwKk6Ee-lntgJ_JlK2w"/>
  <UMLLabProfile:Annotations xmi:id="_n6Sm4Kk6Ee-lntgJ_JlK2w" base_Element="_n6RYwKk6Ee-lntgJ_JlK2w">
    <annotations xmi:id="_n6Sm4ak6Ee-lntgJ_JlK2w" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_n6WRQKk6Ee-lntgJ_JlK2w" base_Element="_n6Sm4qk6Ee-lntgJ_JlK2w"/>
  <UMLLabProfile:Annotations xmi:id="_n6W4UKk6Ee-lntgJ_JlK2w" base_Element="_n6Sm4qk6Ee-lntgJ_JlK2w">
    <annotations xmi:id="_n6XfYKk6Ee-lntgJ_JlK2w" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_n6YGcqk6Ee-lntgJ_JlK2w" base_Element="_n6YGcKk6Ee-lntgJ_JlK2w"/>
  <UMLLabProfile:Annotations xmi:id="_n6YtgKk6Ee-lntgJ_JlK2w" base_Element="_n6YGcKk6Ee-lntgJ_JlK2w">
    <annotations xmi:id="_n6Ytgak6Ee-lntgJ_JlK2w" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Array xmi:id="_n6rocKk6Ee-lntgJ_JlK2w" base_Element="_n6pMMKk6Ee-lntgJ_JlK2w"/>
  <UMLLabProfile:Array xmi:id="_n6s2kKk6Ee-lntgJ_JlK2w" dimensions="2" base_Element="_n6rocak6Ee-lntgJ_JlK2w"/>
  <UMLLabProfile:Array xmi:id="_n62AgKk6Ee-lntgJ_JlK2w" base_Element="_n61Zcak6Ee-lntgJ_JlK2w"/>
  <UMLLabProfile:Generics xmi:id="_n7HGQKk6Ee-lntgJ_JlK2w" genericsValue="InstructionParameters" base_Element="_n7GfMKk6Ee-lntgJ_JlK2w"/>
  <UMLLabProfile:Generics xmi:id="_n7LXsKk6Ee-lntgJ_JlK2w" genericsValue="InstructionParameters" base_Element="_n7I7dKk6Ee-lntgJ_JlK2w"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_n7e5sak6Ee-lntgJ_JlK2w" base_Element="_n7e5sKk6Ee-lntgJ_JlK2w"/>
  <UMLLabProfile:Annotations xmi:id="_n7h9AKk6Ee-lntgJ_JlK2w" base_Element="_n7e5sKk6Ee-lntgJ_JlK2w">
    <annotations xmi:id="_n7h9Aak6Ee-lntgJ_JlK2w" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_n7ikEKk6Ee-lntgJ_JlK2w" base_Element="_n7h9Aqk6Ee-lntgJ_JlK2w"/>
  <UMLLabProfile:Annotations xmi:id="_n7jyMKk6Ee-lntgJ_JlK2w" base_Element="_n7h9Aqk6Ee-lntgJ_JlK2w">
    <annotations xmi:id="_n7lAUKk6Ee-lntgJ_JlK2w" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_n7lnYKk6Ee-lntgJ_JlK2w" base_Element="_n7lAUak6Ee-lntgJ_JlK2w"/>
  <UMLLabProfile:Annotations xmi:id="_n7mOcKk6Ee-lntgJ_JlK2w" base_Element="_n7lAUak6Ee-lntgJ_JlK2w">
    <annotations xmi:id="_n7mOcak6Ee-lntgJ_JlK2w" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_n7nckKk6Ee-lntgJ_JlK2w" base_Element="_n7m1gKk6Ee-lntgJ_JlK2w"/>
  <UMLLabProfile:Annotations xmi:id="_n7oqsKk6Ee-lntgJ_JlK2w" base_Element="_n7m1gKk6Ee-lntgJ_JlK2w">
    <annotations xmi:id="_n7oqsak6Ee-lntgJ_JlK2w" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_n7p40Kk6Ee-lntgJ_JlK2w" base_Element="_n7pRwKk6Ee-lntgJ_JlK2w"/>
  <UMLLabProfile:Annotations xmi:id="_n7qf4Kk6Ee-lntgJ_JlK2w" base_Element="_n7pRwKk6Ee-lntgJ_JlK2w">
    <annotations xmi:id="_n7rG8Kk6Ee-lntgJ_JlK2w" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_n7ruAKk6Ee-lntgJ_JlK2w" base_Element="_n7rG8ak6Ee-lntgJ_JlK2w"/>
  <UMLLabProfile:Annotations xmi:id="_n7ruAak6Ee-lntgJ_JlK2w" base_Element="_n7rG8ak6Ee-lntgJ_JlK2w">
    <annotations xmi:id="_n7sVEKk6Ee-lntgJ_JlK2w" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_n7sVE6k6Ee-lntgJ_JlK2w" base_Element="_n7sVEak6Ee-lntgJ_JlK2w"/>
  <UMLLabProfile:Annotations xmi:id="_n7s8IKk6Ee-lntgJ_JlK2w" base_Element="_n7sVEak6Ee-lntgJ_JlK2w">
    <annotations xmi:id="_n7s8Iak6Ee-lntgJ_JlK2w" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_n7s8JKk6Ee-lntgJ_JlK2w" base_Element="_n7s8Iqk6Ee-lntgJ_JlK2w"/>
  <UMLLabProfile:Annotations xmi:id="_n7uKQKk6Ee-lntgJ_JlK2w" base_Element="_n7s8Iqk6Ee-lntgJ_JlK2w">
    <annotations xmi:id="_n7uKQak6Ee-lntgJ_JlK2w" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_n7vYYak6Ee-lntgJ_JlK2w" base_Element="_n7uxUKk6Ee-lntgJ_JlK2w"/>
  <UMLLabProfile:Annotations xmi:id="_n7v_cKk6Ee-lntgJ_JlK2w" base_Element="_n7uxUKk6Ee-lntgJ_JlK2w">
    <annotations xmi:id="_n7v_cak6Ee-lntgJ_JlK2w" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_n7xNkKk6Ee-lntgJ_JlK2w" base_Element="_n7wmgKk6Ee-lntgJ_JlK2w"/>
  <UMLLabProfile:Annotations xmi:id="_n7xNkak6Ee-lntgJ_JlK2w" base_Element="_n7wmgKk6Ee-lntgJ_JlK2w">
    <annotations xmi:id="_n7x0oKk6Ee-lntgJ_JlK2w" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_n7ybsKk6Ee-lntgJ_JlK2w" base_Element="_n7x0oak6Ee-lntgJ_JlK2w"/>
  <UMLLabProfile:Annotations xmi:id="_n7zp0Kk6Ee-lntgJ_JlK2w" base_Element="_n7x0oak6Ee-lntgJ_JlK2w">
    <annotations xmi:id="_n7zp0ak6Ee-lntgJ_JlK2w" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_n70Q4qk6Ee-lntgJ_JlK2w" base_Element="_n70Q4Kk6Ee-lntgJ_JlK2w"/>
  <UMLLabProfile:Annotations xmi:id="_n7038Kk6Ee-lntgJ_JlK2w" base_Element="_n70Q4Kk6Ee-lntgJ_JlK2w">
    <annotations xmi:id="_n7038ak6Ee-lntgJ_JlK2w" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_n7039Kk6Ee-lntgJ_JlK2w" base_Element="_n7038qk6Ee-lntgJ_JlK2w"/>
  <UMLLabProfile:Annotations xmi:id="_n71fAKk6Ee-lntgJ_JlK2w" base_Element="_n7038qk6Ee-lntgJ_JlK2w">
    <annotations xmi:id="_n71fAak6Ee-lntgJ_JlK2w" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_n71fBKk6Ee-lntgJ_JlK2w" base_Element="_n71fAqk6Ee-lntgJ_JlK2w"/>
  <UMLLabProfile:Annotations xmi:id="_n72GEKk6Ee-lntgJ_JlK2w" base_Element="_n71fAqk6Ee-lntgJ_JlK2w">
    <annotations xmi:id="_n72GEak6Ee-lntgJ_JlK2w" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_n72tIak6Ee-lntgJ_JlK2w" base_Element="_n72GEqk6Ee-lntgJ_JlK2w"/>
  <UMLLabProfile:Annotations xmi:id="_n737QKk6Ee-lntgJ_JlK2w" base_Element="_n72GEqk6Ee-lntgJ_JlK2w">
    <annotations xmi:id="_n737Qak6Ee-lntgJ_JlK2w" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_n737Q6k6Ee-lntgJ_JlK2w" base_Element="_n737Qqk6Ee-lntgJ_JlK2w"/>
  <UMLLabProfile:Annotations xmi:id="_n74iUKk6Ee-lntgJ_JlK2w" base_Element="_n737Qqk6Ee-lntgJ_JlK2w">
    <annotations xmi:id="_n74iUak6Ee-lntgJ_JlK2w" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_n8C6YKk6Ee-lntgJ_JlK2w" base_Element="_n8CTUak6Ee-lntgJ_JlK2w"/>
  <UMLLabProfile:Annotations xmi:id="_n8DhcKk6Ee-lntgJ_JlK2w" base_Element="_n8CTUak6Ee-lntgJ_JlK2w">
    <annotations xmi:id="_n8Dhcak6Ee-lntgJ_JlK2w" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_n8EIgKk6Ee-lntgJ_JlK2w" base_Element="_n8Dhcqk6Ee-lntgJ_JlK2w"/>
  <UMLLabProfile:Annotations xmi:id="_n8EIgak6Ee-lntgJ_JlK2w" base_Element="_n8Dhcqk6Ee-lntgJ_JlK2w">
    <annotations xmi:id="_n8EvkKk6Ee-lntgJ_JlK2w" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_n8FWoak6Ee-lntgJ_JlK2w" base_Element="_n8Evkak6Ee-lntgJ_JlK2w"/>
  <UMLLabProfile:Annotations xmi:id="_n8FWoqk6Ee-lntgJ_JlK2w" base_Element="_n8Evkak6Ee-lntgJ_JlK2w">
    <annotations xmi:id="_n8FWo6k6Ee-lntgJ_JlK2w" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Array xmi:id="_n8mUAKk6Ee-lntgJ_JlK2w" base_Element="_n8ls8qk6Ee-lntgJ_JlK2w"/>
  <UMLLabProfile:Array xmi:id="_n8niIKk6Ee-lntgJ_JlK2w" base_Element="_n8m7EKk6Ee-lntgJ_JlK2w"/>
  <UMLLabProfile:Array xmi:id="_n8oJNKk6Ee-lntgJ_JlK2w" base_Element="_n8oJMKk6Ee-lntgJ_JlK2w"/>
  <UMLLabProfile:Array xmi:id="_n8rzkKk6Ee-lntgJ_JlK2w" dimensions="1" base_Element="_n8p-YKk6Ee-lntgJ_JlK2w"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_n81kkKk6Ee-lntgJ_JlK2w" base_Element="_n809gKk6Ee-lntgJ_JlK2w"/>
  <UMLLabProfile:Annotations xmi:id="_n81kkak6Ee-lntgJ_JlK2w" base_Element="_n809gKk6Ee-lntgJ_JlK2w">
    <annotations xmi:id="_n82LoKk6Ee-lntgJ_JlK2w" name="BeforeEach"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_n82ysKk6Ee-lntgJ_JlK2w" base_Element="_n82Loak6Ee-lntgJ_JlK2w"/>
  <UMLLabProfile:Annotations xmi:id="_n82ysak6Ee-lntgJ_JlK2w" base_Element="_n82Loak6Ee-lntgJ_JlK2w">
    <annotations xmi:id="_n82ysqk6Ee-lntgJ_JlK2w" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_n84A0Kk6Ee-lntgJ_JlK2w" base_Element="_n82ys6k6Ee-lntgJ_JlK2w"/>
  <UMLLabProfile:Annotations xmi:id="_n84A0ak6Ee-lntgJ_JlK2w" base_Element="_n82ys6k6Ee-lntgJ_JlK2w">
    <annotations xmi:id="_n84A0qk6Ee-lntgJ_JlK2w" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_n84n4Kk6Ee-lntgJ_JlK2w" base_Element="_n84A06k6Ee-lntgJ_JlK2w"/>
  <UMLLabProfile:Annotations xmi:id="_n84n4ak6Ee-lntgJ_JlK2w" base_Element="_n84A06k6Ee-lntgJ_JlK2w">
    <annotations xmi:id="_n84n4qk6Ee-lntgJ_JlK2w" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_n84n5Kk6Ee-lntgJ_JlK2w" base_Element="_n84n46k6Ee-lntgJ_JlK2w"/>
  <UMLLabProfile:Annotations xmi:id="_n85O8Kk6Ee-lntgJ_JlK2w" base_Element="_n84n46k6Ee-lntgJ_JlK2w">
    <annotations xmi:id="_n85O8ak6Ee-lntgJ_JlK2w" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_n85O86k6Ee-lntgJ_JlK2w" base_Element="_n85O8qk6Ee-lntgJ_JlK2w"/>
  <UMLLabProfile:Annotations xmi:id="_n852AKk6Ee-lntgJ_JlK2w" base_Element="_n85O8qk6Ee-lntgJ_JlK2w">
    <annotations xmi:id="_n852Aak6Ee-lntgJ_JlK2w" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_n852A6k6Ee-lntgJ_JlK2w" base_Element="_n852Aqk6Ee-lntgJ_JlK2w"/>
  <UMLLabProfile:Annotations xmi:id="_n852BKk6Ee-lntgJ_JlK2w" base_Element="_n852Aqk6Ee-lntgJ_JlK2w">
    <annotations xmi:id="_n86dEKk6Ee-lntgJ_JlK2w" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_n86dEqk6Ee-lntgJ_JlK2w" base_Element="_n86dEak6Ee-lntgJ_JlK2w"/>
  <UMLLabProfile:Annotations xmi:id="_n87EIKk6Ee-lntgJ_JlK2w" base_Element="_n86dEak6Ee-lntgJ_JlK2w">
    <annotations xmi:id="_n87EIak6Ee-lntgJ_JlK2w" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_n87rMKk6Ee-lntgJ_JlK2w" base_Element="_n87EIqk6Ee-lntgJ_JlK2w"/>
  <UMLLabProfile:Annotations xmi:id="_n87rMak6Ee-lntgJ_JlK2w" base_Element="_n87EIqk6Ee-lntgJ_JlK2w">
    <annotations xmi:id="_n87rMqk6Ee-lntgJ_JlK2w" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_n88SQKk6Ee-lntgJ_JlK2w" base_Element="_n87rM6k6Ee-lntgJ_JlK2w"/>
  <UMLLabProfile:Annotations xmi:id="_n88SQak6Ee-lntgJ_JlK2w" base_Element="_n87rM6k6Ee-lntgJ_JlK2w">
    <annotations xmi:id="_n88SQqk6Ee-lntgJ_JlK2w" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_n885UKk6Ee-lntgJ_JlK2w" base_Element="_n88SQ6k6Ee-lntgJ_JlK2w"/>
  <UMLLabProfile:Annotations xmi:id="_n885Uak6Ee-lntgJ_JlK2w" base_Element="_n88SQ6k6Ee-lntgJ_JlK2w">
    <annotations xmi:id="_n885Uqk6Ee-lntgJ_JlK2w" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_n89gYak6Ee-lntgJ_JlK2w" base_Element="_n89gYKk6Ee-lntgJ_JlK2w"/>
  <UMLLabProfile:Annotations xmi:id="_n89gYqk6Ee-lntgJ_JlK2w" base_Element="_n89gYKk6Ee-lntgJ_JlK2w">
    <annotations xmi:id="_n89gY6k6Ee-lntgJ_JlK2w" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_n8-ugKk6Ee-lntgJ_JlK2w" base_Element="_n89gZKk6Ee-lntgJ_JlK2w"/>
  <UMLLabProfile:Annotations xmi:id="_n8-ugak6Ee-lntgJ_JlK2w" base_Element="_n89gZKk6Ee-lntgJ_JlK2w">
    <annotations xmi:id="_n8-ugqk6Ee-lntgJ_JlK2w" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_n9CY4Kk6Ee-lntgJ_JlK2w" base_Element="_n9Bx0Kk6Ee-lntgJ_JlK2w"/>
  <UMLLabProfile:Annotations xmi:id="_n9C_8Kk6Ee-lntgJ_JlK2w" base_Element="_n9Bx0Kk6Ee-lntgJ_JlK2w">
    <annotations xmi:id="_n9C_8ak6Ee-lntgJ_JlK2w" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_n9C_86k6Ee-lntgJ_JlK2w" base_Element="_n9C_8qk6Ee-lntgJ_JlK2w"/>
  <UMLLabProfile:Annotations xmi:id="_n9DnAKk6Ee-lntgJ_JlK2w" base_Element="_n9C_8qk6Ee-lntgJ_JlK2w">
    <annotations xmi:id="_n9DnAak6Ee-lntgJ_JlK2w" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_n9DnA6k6Ee-lntgJ_JlK2w" base_Element="_n9DnAqk6Ee-lntgJ_JlK2w"/>
  <UMLLabProfile:Annotations xmi:id="_n9DnBKk6Ee-lntgJ_JlK2w" base_Element="_n9DnAqk6Ee-lntgJ_JlK2w">
    <annotations xmi:id="_n9DnBak6Ee-lntgJ_JlK2w" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_n9EOEKk6Ee-lntgJ_JlK2w" base_Element="_n9DnBqk6Ee-lntgJ_JlK2w"/>
  <UMLLabProfile:Annotations xmi:id="_n9EOEak6Ee-lntgJ_JlK2w" base_Element="_n9DnBqk6Ee-lntgJ_JlK2w">
    <annotations xmi:id="_n9EOEqk6Ee-lntgJ_JlK2w" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_n9IfgKk6Ee-lntgJ_JlK2w" base_Element="_n9H4cKk6Ee-lntgJ_JlK2w"/>
  <UMLLabProfile:Annotations xmi:id="_n9Ifgak6Ee-lntgJ_JlK2w" base_Element="_n9H4cKk6Ee-lntgJ_JlK2w">
    <annotations xmi:id="_n9Ifgqk6Ee-lntgJ_JlK2w" name="BeforeEach"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_n9JGkak6Ee-lntgJ_JlK2w" base_Element="_n9JGkKk6Ee-lntgJ_JlK2w"/>
  <UMLLabProfile:Annotations xmi:id="_n9JGkqk6Ee-lntgJ_JlK2w" base_Element="_n9JGkKk6Ee-lntgJ_JlK2w">
    <annotations xmi:id="_n9JGk6k6Ee-lntgJ_JlK2w" name="AfterEach"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_n9Jtoak6Ee-lntgJ_JlK2w" base_Element="_n9JtoKk6Ee-lntgJ_JlK2w"/>
  <UMLLabProfile:Annotations xmi:id="_n9KUsKk6Ee-lntgJ_JlK2w" base_Element="_n9JtoKk6Ee-lntgJ_JlK2w">
    <annotations xmi:id="_n9KUsak6Ee-lntgJ_JlK2w" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_n9K7wKk6Ee-lntgJ_JlK2w" base_Element="_n9KUsqk6Ee-lntgJ_JlK2w"/>
  <UMLLabProfile:Annotations xmi:id="_n9K7wak6Ee-lntgJ_JlK2w" base_Element="_n9KUsqk6Ee-lntgJ_JlK2w">
    <annotations xmi:id="_n9Li0Kk6Ee-lntgJ_JlK2w" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_n9Li0qk6Ee-lntgJ_JlK2w" base_Element="_n9Li0ak6Ee-lntgJ_JlK2w"/>
  <UMLLabProfile:Annotations xmi:id="_n9Li06k6Ee-lntgJ_JlK2w" base_Element="_n9Li0ak6Ee-lntgJ_JlK2w">
    <annotations xmi:id="_n9Li1Kk6Ee-lntgJ_JlK2w" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_n9Mw8Kk6Ee-lntgJ_JlK2w" base_Element="_n9Li1ak6Ee-lntgJ_JlK2w"/>
  <UMLLabProfile:Annotations xmi:id="_n9OmIKk6Ee-lntgJ_JlK2w" base_Element="_n9Li1ak6Ee-lntgJ_JlK2w">
    <annotations xmi:id="_n9OmIak6Ee-lntgJ_JlK2w" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_n9PNMKk6Ee-lntgJ_JlK2w" base_Element="_n9OmIqk6Ee-lntgJ_JlK2w"/>
  <UMLLabProfile:Annotations xmi:id="_n9PNMak6Ee-lntgJ_JlK2w" base_Element="_n9OmIqk6Ee-lntgJ_JlK2w">
    <annotations xmi:id="_n9PNMqk6Ee-lntgJ_JlK2w" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_n9P0Qak6Ee-lntgJ_JlK2w" base_Element="_n9P0QKk6Ee-lntgJ_JlK2w"/>
  <UMLLabProfile:Annotations xmi:id="_n9P0Qqk6Ee-lntgJ_JlK2w" base_Element="_n9P0QKk6Ee-lntgJ_JlK2w">
    <annotations xmi:id="_n9P0Q6k6Ee-lntgJ_JlK2w" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_n9RCYKk6Ee-lntgJ_JlK2w" base_Element="_n9QbUKk6Ee-lntgJ_JlK2w"/>
  <UMLLabProfile:Annotations xmi:id="_n9SQgKk6Ee-lntgJ_JlK2w" base_Element="_n9QbUKk6Ee-lntgJ_JlK2w">
    <annotations xmi:id="_n9SQgak6Ee-lntgJ_JlK2w" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_n9TeoKk6Ee-lntgJ_JlK2w" base_Element="_n9SQgqk6Ee-lntgJ_JlK2w"/>
  <UMLLabProfile:Annotations xmi:id="_n9Teoak6Ee-lntgJ_JlK2w" base_Element="_n9SQgqk6Ee-lntgJ_JlK2w">
    <annotations xmi:id="_n9Teoqk6Ee-lntgJ_JlK2w" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_n9UFsKk6Ee-lntgJ_JlK2w" base_Element="_n9Teo6k6Ee-lntgJ_JlK2w"/>
  <UMLLabProfile:Annotations xmi:id="_n9UFsak6Ee-lntgJ_JlK2w" base_Element="_n9Teo6k6Ee-lntgJ_JlK2w">
    <annotations xmi:id="_n9UFsqk6Ee-lntgJ_JlK2w" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_n9UFtKk6Ee-lntgJ_JlK2w" base_Element="_n9UFs6k6Ee-lntgJ_JlK2w"/>
  <UMLLabProfile:Annotations xmi:id="_n9UswKk6Ee-lntgJ_JlK2w" base_Element="_n9UFs6k6Ee-lntgJ_JlK2w">
    <annotations xmi:id="_n9VT0Kk6Ee-lntgJ_JlK2w" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_n9VT0qk6Ee-lntgJ_JlK2w" base_Element="_n9VT0ak6Ee-lntgJ_JlK2w"/>
  <UMLLabProfile:Annotations xmi:id="_n9XJAKk6Ee-lntgJ_JlK2w" base_Element="_n9VT0ak6Ee-lntgJ_JlK2w">
    <annotations xmi:id="_n9XJAak6Ee-lntgJ_JlK2w" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_n9XwEKk6Ee-lntgJ_JlK2w" base_Element="_n9XJAqk6Ee-lntgJ_JlK2w"/>
  <UMLLabProfile:Annotations xmi:id="_n9YXIKk6Ee-lntgJ_JlK2w" base_Element="_n9XJAqk6Ee-lntgJ_JlK2w">
    <annotations xmi:id="_n9YXIak6Ee-lntgJ_JlK2w" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_n9ZlQKk6Ee-lntgJ_JlK2w" base_Element="_n9YXIqk6Ee-lntgJ_JlK2w"/>
  <UMLLabProfile:Annotations xmi:id="_n9aMUKk6Ee-lntgJ_JlK2w" base_Element="_n9YXIqk6Ee-lntgJ_JlK2w">
    <annotations xmi:id="_n9aMUak6Ee-lntgJ_JlK2w" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_n9azYak6Ee-lntgJ_JlK2w" base_Element="_n9azYKk6Ee-lntgJ_JlK2w"/>
  <UMLLabProfile:Annotations xmi:id="_n9azYqk6Ee-lntgJ_JlK2w" base_Element="_n9azYKk6Ee-lntgJ_JlK2w">
    <annotations xmi:id="_n9bacKk6Ee-lntgJ_JlK2w" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_n9dPoKk6Ee-lntgJ_JlK2w" base_Element="_n9cokKk6Ee-lntgJ_JlK2w"/>
  <UMLLabProfile:Annotations xmi:id="_n9dPoak6Ee-lntgJ_JlK2w" base_Element="_n9cokKk6Ee-lntgJ_JlK2w">
    <annotations xmi:id="_n9dPoqk6Ee-lntgJ_JlK2w" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_n9d2sKk6Ee-lntgJ_JlK2w" base_Element="_n9dPo6k6Ee-lntgJ_JlK2w"/>
  <UMLLabProfile:Annotations xmi:id="_n9d2sak6Ee-lntgJ_JlK2w" base_Element="_n9dPo6k6Ee-lntgJ_JlK2w">
    <annotations xmi:id="_n9d2sqk6Ee-lntgJ_JlK2w" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_n9edwKk6Ee-lntgJ_JlK2w" base_Element="_n9d2s6k6Ee-lntgJ_JlK2w"/>
  <UMLLabProfile:Annotations xmi:id="_n9edwak6Ee-lntgJ_JlK2w" base_Element="_n9d2s6k6Ee-lntgJ_JlK2w">
    <annotations xmi:id="_n9edwqk6Ee-lntgJ_JlK2w" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_n9fE0Kk6Ee-lntgJ_JlK2w" base_Element="_n9edw6k6Ee-lntgJ_JlK2w"/>
  <UMLLabProfile:Annotations xmi:id="_n9fE0ak6Ee-lntgJ_JlK2w" base_Element="_n9edw6k6Ee-lntgJ_JlK2w">
    <annotations xmi:id="_n9fE0qk6Ee-lntgJ_JlK2w" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_n9fr4Kk6Ee-lntgJ_JlK2w" base_Element="_n9fE06k6Ee-lntgJ_JlK2w"/>
  <UMLLabProfile:Annotations xmi:id="_n9fr4ak6Ee-lntgJ_JlK2w" base_Element="_n9fE06k6Ee-lntgJ_JlK2w">
    <annotations xmi:id="_n9fr4qk6Ee-lntgJ_JlK2w" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_n9fr5Kk6Ee-lntgJ_JlK2w" base_Element="_n9fr46k6Ee-lntgJ_JlK2w"/>
  <UMLLabProfile:Annotations xmi:id="_n9fr5ak6Ee-lntgJ_JlK2w" base_Element="_n9fr46k6Ee-lntgJ_JlK2w">
    <annotations xmi:id="_n9fr5qk6Ee-lntgJ_JlK2w" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_n9gS8ak6Ee-lntgJ_JlK2w" base_Element="_n9gS8Kk6Ee-lntgJ_JlK2w"/>
  <UMLLabProfile:Annotations xmi:id="_n9gS8qk6Ee-lntgJ_JlK2w" base_Element="_n9gS8Kk6Ee-lntgJ_JlK2w">
    <annotations xmi:id="_n9gS86k6Ee-lntgJ_JlK2w" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_n9gS9ak6Ee-lntgJ_JlK2w" base_Element="_n9gS9Kk6Ee-lntgJ_JlK2w"/>
  <UMLLabProfile:Annotations xmi:id="_n9hhEKk6Ee-lntgJ_JlK2w" base_Element="_n9gS9Kk6Ee-lntgJ_JlK2w">
    <annotations xmi:id="_n9iIIKk6Ee-lntgJ_JlK2w" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_n9iIIqk6Ee-lntgJ_JlK2w" base_Element="_n9iIIak6Ee-lntgJ_JlK2w"/>
  <UMLLabProfile:Annotations xmi:id="_n9ivMKk6Ee-lntgJ_JlK2w" base_Element="_n9iIIak6Ee-lntgJ_JlK2w">
    <annotations xmi:id="_n9ivMak6Ee-lntgJ_JlK2w" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_n9jWQKk6Ee-lntgJ_JlK2w" base_Element="_n9ivMqk6Ee-lntgJ_JlK2w"/>
  <UMLLabProfile:Annotations xmi:id="_n9jWQak6Ee-lntgJ_JlK2w" base_Element="_n9ivMqk6Ee-lntgJ_JlK2w">
    <annotations xmi:id="_n9jWQqk6Ee-lntgJ_JlK2w" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_n9j9UKk6Ee-lntgJ_JlK2w" base_Element="_n9jWQ6k6Ee-lntgJ_JlK2w"/>
  <UMLLabProfile:Annotations xmi:id="_n9j9Uak6Ee-lntgJ_JlK2w" base_Element="_n9jWQ6k6Ee-lntgJ_JlK2w">
    <annotations xmi:id="_n9j9Uqk6Ee-lntgJ_JlK2w" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_n9j9VKk6Ee-lntgJ_JlK2w" base_Element="_n9j9U6k6Ee-lntgJ_JlK2w"/>
  <UMLLabProfile:Annotations xmi:id="_n9j9Vak6Ee-lntgJ_JlK2w" base_Element="_n9j9U6k6Ee-lntgJ_JlK2w">
    <annotations xmi:id="_n9j9Vqk6Ee-lntgJ_JlK2w" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_n9kkYak6Ee-lntgJ_JlK2w" base_Element="_n9kkYKk6Ee-lntgJ_JlK2w"/>
  <UMLLabProfile:Annotations xmi:id="_n9kkYqk6Ee-lntgJ_JlK2w" base_Element="_n9kkYKk6Ee-lntgJ_JlK2w">
    <annotations xmi:id="_n9lLcKk6Ee-lntgJ_JlK2w" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_n9lLcqk6Ee-lntgJ_JlK2w" base_Element="_n9lLcak6Ee-lntgJ_JlK2w"/>
  <UMLLabProfile:Annotations xmi:id="_n9pc4Kk6Ee-lntgJ_JlK2w" base_Element="_n9lLcak6Ee-lntgJ_JlK2w">
    <annotations xmi:id="_n9qD8Kk6Ee-lntgJ_JlK2w" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_n9tuUKk6Ee-lntgJ_JlK2w" base_Element="_n9qD8ak6Ee-lntgJ_JlK2w"/>
  <UMLLabProfile:Annotations xmi:id="_n9tuUak6Ee-lntgJ_JlK2w" base_Element="_n9qD8ak6Ee-lntgJ_JlK2w">
    <annotations xmi:id="_n9uVYKk6Ee-lntgJ_JlK2w" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_n9u8cKk6Ee-lntgJ_JlK2w" base_Element="_n9uVYak6Ee-lntgJ_JlK2w"/>
  <UMLLabProfile:Annotations xmi:id="_n9u8cak6Ee-lntgJ_JlK2w" base_Element="_n9uVYak6Ee-lntgJ_JlK2w">
    <annotations xmi:id="_n9vjgKk6Ee-lntgJ_JlK2w" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_n9vjgqk6Ee-lntgJ_JlK2w" base_Element="_n9vjgak6Ee-lntgJ_JlK2w"/>
  <UMLLabProfile:Annotations xmi:id="_n9wKkKk6Ee-lntgJ_JlK2w" base_Element="_n9vjgak6Ee-lntgJ_JlK2w">
    <annotations xmi:id="_n9wKkak6Ee-lntgJ_JlK2w" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_n9wKk6k6Ee-lntgJ_JlK2w" base_Element="_n9wKkqk6Ee-lntgJ_JlK2w"/>
  <UMLLabProfile:Annotations xmi:id="_n9wxoKk6Ee-lntgJ_JlK2w" base_Element="_n9wKkqk6Ee-lntgJ_JlK2w">
    <annotations xmi:id="_n9wxoak6Ee-lntgJ_JlK2w" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_oavBgKk6Ee-lntgJ_JlK2w" base_Element="_oatzYKk6Ee-lntgJ_JlK2w"/>
  <UMLLabProfile:Reference xmi:id="_oaw2sKk6Ee-lntgJ_JlK2w" base_Element="_oawPoKk6Ee-lntgJ_JlK2w"/>
  <UMLLabProfile:Reference xmi:id="_oaxdwKk6Ee-lntgJ_JlK2w" base_Element="_oaw2sak6Ee-lntgJ_JlK2w"/>
  <UMLLabProfile:Reference xmi:id="_oayE0Kk6Ee-lntgJ_JlK2w" base_Element="_oaxdwak6Ee-lntgJ_JlK2w"/>
  <UMLLabProfile:Reference xmi:id="_oayE0qk6Ee-lntgJ_JlK2w" base_Element="_oayE0ak6Ee-lntgJ_JlK2w"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_oa3kYKk6Ee-lntgJ_JlK2w" base_Element="_oa1IIak6Ee-lntgJ_JlK2w"/>
  <UMLLabProfile:Annotations xmi:id="_oa4LcKk6Ee-lntgJ_JlK2w" base_Element="_oa1IIak6Ee-lntgJ_JlK2w">
    <annotations xmi:id="_oa4Lcak6Ee-lntgJ_JlK2w" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_oa6AoKk6Ee-lntgJ_JlK2w" genericsValue="Edge" base_Element="_oa5ZlKk6Ee-lntgJ_JlK2w"/>
  <UMLLabProfile:Generics xmi:id="_oa6nsKk6Ee-lntgJ_JlK2w" genericsValue="Edge" base_Element="_oa6Aoqk6Ee-lntgJ_JlK2w"/>
  <UMLLabProfile:Generics xmi:id="_oa-SEKk6Ee-lntgJ_JlK2w" genericsValue="String, Activation" base_Element="_oa9rAKk6Ee-lntgJ_JlK2w"/>
  <UMLLabProfile:Reference xmi:id="_obEYsKk6Ee-lntgJ_JlK2w" base_Element="_obDxoKk6Ee-lntgJ_JlK2w"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_obHcAKk6Ee-lntgJ_JlK2w" base_Element="_obG09qk6Ee-lntgJ_JlK2w"/>
  <UMLLabProfile:Annotations xmi:id="_obHcAak6Ee-lntgJ_JlK2w" base_Element="_obG09qk6Ee-lntgJ_JlK2w">
    <annotations xmi:id="_obHcAqk6Ee-lntgJ_JlK2w" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_obM7kKk6Ee-lntgJ_JlK2w" base_Element="_obMUgKk6Ee-lntgJ_JlK2w"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_obOwwqk6Ee-lntgJ_JlK2w" base_Element="_obOJsKk6Ee-lntgJ_JlK2w"/>
  <UMLLabProfile:Annotations xmi:id="_obOww6k6Ee-lntgJ_JlK2w" base_Element="_obOJsKk6Ee-lntgJ_JlK2w">
    <annotations xmi:id="_obOwxKk6Ee-lntgJ_JlK2w" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_obR0EKk6Ee-lntgJ_JlK2w" base_Element="_obRNAKk6Ee-lntgJ_JlK2w"/>
  <UMLLabProfile:Reference xmi:id="_obSbIKk6Ee-lntgJ_JlK2w" base_Element="_obR0Eak6Ee-lntgJ_JlK2w"/>
  <UMLLabProfile:Reference xmi:id="_obTCMKk6Ee-lntgJ_JlK2w" base_Element="_obSbIak6Ee-lntgJ_JlK2w"/>
  <UMLLabProfile:Reference xmi:id="_obTpQKk6Ee-lntgJ_JlK2w" base_Element="_obTCMak6Ee-lntgJ_JlK2w"/>
  <UMLLabProfile:Reference xmi:id="_obTpQqk6Ee-lntgJ_JlK2w" base_Element="_obTpQak6Ee-lntgJ_JlK2w"/>
  <UMLLabProfile:Reference xmi:id="_obUQUKk6Ee-lntgJ_JlK2w" base_Element="_obTpQ6k6Ee-lntgJ_JlK2w"/>
  <UMLLabProfile:Reference xmi:id="_obU3YKk6Ee-lntgJ_JlK2w" base_Element="_obUQUak6Ee-lntgJ_JlK2w"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_obWskak6Ee-lntgJ_JlK2w" base_Element="_obWFgqk6Ee-lntgJ_JlK2w"/>
  <UMLLabProfile:Annotations xmi:id="_obWskqk6Ee-lntgJ_JlK2w" base_Element="_obWFgqk6Ee-lntgJ_JlK2w">
    <annotations xmi:id="_obXToKk6Ee-lntgJ_JlK2w" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_obaW8Kk6Ee-lntgJ_JlK2w" genericsValue="String, Flow" base_Element="_obZv4Kk6Ee-lntgJ_JlK2w"/>
  <UMLLabProfile:Generics xmi:id="_oba-AKk6Ee-lntgJ_JlK2w" genericsValue="Node, Activation" base_Element="_obaW8ak6Ee-lntgJ_JlK2w"/>
  <UMLLabProfile:Reference xmi:id="_obeBUKk6Ee-lntgJ_JlK2w" base_Element="_obdaQKk6Ee-lntgJ_JlK2w"/>
  <UMLLabProfile:Reference xmi:id="_obeoYKk6Ee-lntgJ_JlK2w" base_Element="_obeBUak6Ee-lntgJ_JlK2w"/>
  <UMLLabProfile:Reference xmi:id="_obfPcKk6Ee-lntgJ_JlK2w" base_Element="_obeoYak6Ee-lntgJ_JlK2w"/>
  <UMLLabProfile:Reference xmi:id="_obf2gKk6Ee-lntgJ_JlK2w" base_Element="_obfPcak6Ee-lntgJ_JlK2w"/>
  <UMLLabProfile:Reference xmi:id="_obgdkKk6Ee-lntgJ_JlK2w" base_Element="_obf2gak6Ee-lntgJ_JlK2w"/>
  <UMLLabProfile:Reference xmi:id="_obhEoKk6Ee-lntgJ_JlK2w" base_Element="_obgdkak6Ee-lntgJ_JlK2w"/>
  <UMLLabProfile:Reference xmi:id="_obhrsKk6Ee-lntgJ_JlK2w" base_Element="_obhEoak6Ee-lntgJ_JlK2w"/>
  <UMLLabProfile:Reference xmi:id="_obiSwKk6Ee-lntgJ_JlK2w" base_Element="_obhrsak6Ee-lntgJ_JlK2w"/>
  <UMLLabProfile:Reference xmi:id="_objg4Kk6Ee-lntgJ_JlK2w" base_Element="_obi50qk6Ee-lntgJ_JlK2w"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_obkH8Kk6Ee-lntgJ_JlK2w" base_Element="_objg4ak6Ee-lntgJ_JlK2w"/>
  <UMLLabProfile:Annotations xmi:id="_obkH8ak6Ee-lntgJ_JlK2w" base_Element="_objg4ak6Ee-lntgJ_JlK2w">
    <annotations xmi:id="_obkH8qk6Ee-lntgJ_JlK2w" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_oblWEKk6Ee-lntgJ_JlK2w" base_Element="_obkvAKk6Ee-lntgJ_JlK2w"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_oblWE6k6Ee-lntgJ_JlK2w" base_Element="_oblWEak6Ee-lntgJ_JlK2w"/>
  <UMLLabProfile:Annotations xmi:id="_obl9IKk6Ee-lntgJ_JlK2w" base_Element="_oblWEak6Ee-lntgJ_JlK2w">
    <annotations xmi:id="_obl9Iak6Ee-lntgJ_JlK2w" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_obmkMKk6Ee-lntgJ_JlK2w" base_Element="_obl9Iqk6Ee-lntgJ_JlK2w"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_obnLQKk6Ee-lntgJ_JlK2w" base_Element="_obmkMak6Ee-lntgJ_JlK2w"/>
  <UMLLabProfile:Annotations xmi:id="_obnLQak6Ee-lntgJ_JlK2w" base_Element="_obmkMak6Ee-lntgJ_JlK2w">
    <annotations xmi:id="_obnLQqk6Ee-lntgJ_JlK2w" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_obnyUak6Ee-lntgJ_JlK2w" base_Element="_obnyUKk6Ee-lntgJ_JlK2w"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_oboZYqk6Ee-lntgJ_JlK2w" base_Element="_oboZYKk6Ee-lntgJ_JlK2w"/>
  <UMLLabProfile:Annotations xmi:id="_oboZY6k6Ee-lntgJ_JlK2w" base_Element="_oboZYKk6Ee-lntgJ_JlK2w">
    <annotations xmi:id="_oboZZKk6Ee-lntgJ_JlK2w" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_obpAcak6Ee-lntgJ_JlK2w" base_Element="_obpAcKk6Ee-lntgJ_JlK2w"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_obpngKk6Ee-lntgJ_JlK2w" base_Element="_obpAcqk6Ee-lntgJ_JlK2w"/>
  <UMLLabProfile:Annotations xmi:id="_obpngak6Ee-lntgJ_JlK2w" base_Element="_obpAcqk6Ee-lntgJ_JlK2w">
    <annotations xmi:id="_obpngqk6Ee-lntgJ_JlK2w" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_obqOkKk6Ee-lntgJ_JlK2w" base_Element="_obpng6k6Ee-lntgJ_JlK2w"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_obqOk6k6Ee-lntgJ_JlK2w" base_Element="_obqOkak6Ee-lntgJ_JlK2w"/>
  <UMLLabProfile:Annotations xmi:id="_obqOlKk6Ee-lntgJ_JlK2w" base_Element="_obqOkak6Ee-lntgJ_JlK2w">
    <annotations xmi:id="_obq1oKk6Ee-lntgJ_JlK2w" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_obrcsKk6Ee-lntgJ_JlK2w" base_Element="_obq1oak6Ee-lntgJ_JlK2w"/>
  <UMLLabProfile:Reference xmi:id="_obsDwKk6Ee-lntgJ_JlK2w" base_Element="_obrcsak6Ee-lntgJ_JlK2w"/>
  <UMLLabProfile:Reference xmi:id="_obsq0Kk6Ee-lntgJ_JlK2w" base_Element="_obsDwak6Ee-lntgJ_JlK2w"/>
  <UMLLabProfile:Reference xmi:id="_obsq0qk6Ee-lntgJ_JlK2w" base_Element="_obsq0ak6Ee-lntgJ_JlK2w"/>
  <UMLLabProfile:Reference xmi:id="_obtR4Kk6Ee-lntgJ_JlK2w" base_Element="_obsq06k6Ee-lntgJ_JlK2w"/>
  <UMLLabProfile:Reference xmi:id="_obt48Kk6Ee-lntgJ_JlK2w" base_Element="_obtR4ak6Ee-lntgJ_JlK2w"/>
  <UMLLabProfile:Reference xmi:id="_obvHEKk6Ee-lntgJ_JlK2w" base_Element="_obugAKk6Ee-lntgJ_JlK2w"/>
  <UMLLabProfile:Reference xmi:id="_obvuIKk6Ee-lntgJ_JlK2w" base_Element="_obvHEak6Ee-lntgJ_JlK2w"/>
  <UMLLabProfile:Generics xmi:id="_obyKYKk6Ee-lntgJ_JlK2w" genericsValue="String" base_Element="_obxjUKk6Ee-lntgJ_JlK2w"/>
  <UMLLabProfile:Reference xmi:id="_obyxcKk6Ee-lntgJ_JlK2w" base_Element="_obyKYak6Ee-lntgJ_JlK2w"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ob3C46k6Ee-lntgJ_JlK2w" base_Element="_ob3C4Kk6Ee-lntgJ_JlK2w"/>
  <UMLLabProfile:Annotations xmi:id="_ob3p8Kk6Ee-lntgJ_JlK2w" base_Element="_ob3C4Kk6Ee-lntgJ_JlK2w">
    <annotations xmi:id="_ob3p8ak6Ee-lntgJ_JlK2w" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_ob6GMKk6Ee-lntgJ_JlK2w" genericsValue="String, Node" base_Element="_ob5fIKk6Ee-lntgJ_JlK2w"/>
  <UMLLabProfile:Reference xmi:id="_ob9JgKk6Ee-lntgJ_JlK2w" base_Element="_ob8icKk6Ee-lntgJ_JlK2w"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ocCCA6k6Ee-lntgJ_JlK2w" base_Element="_ocCCAKk6Ee-lntgJ_JlK2w"/>
  <UMLLabProfile:Annotations xmi:id="_ocCpEKk6Ee-lntgJ_JlK2w" base_Element="_ocCCAKk6Ee-lntgJ_JlK2w">
    <annotations xmi:id="_ocCpEak6Ee-lntgJ_JlK2w" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_ocD3Mak6Ee-lntgJ_JlK2w" genericsValue="ScheduleTime" base_Element="_ocDQIKk6Ee-lntgJ_JlK2w"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ocGTcKk6Ee-lntgJ_JlK2w" base_Element="_ocFsYqk6Ee-lntgJ_JlK2w"/>
  <UMLLabProfile:Annotations xmi:id="_ocGTcak6Ee-lntgJ_JlK2w" base_Element="_ocFsYqk6Ee-lntgJ_JlK2w">
    <annotations xmi:id="_ocGTcqk6Ee-lntgJ_JlK2w" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_ocIIoKk6Ee-lntgJ_JlK2w" base_Element="_ocHhkKk6Ee-lntgJ_JlK2w"/>
  <UMLLabProfile:Reference xmi:id="_ocIvsKk6Ee-lntgJ_JlK2w" base_Element="_ocIIoak6Ee-lntgJ_JlK2w"/>
  <UMLLabProfile:Generics xmi:id="_ocZ1cKk6Ee-lntgJ_JlK2w" genericsValue="String,InstructionTimeSlot" base_Element="_ocZOYKk6Ee-lntgJ_JlK2w"/>
  <UMLLabProfile:Generics xmi:id="_ocdf0Kk6Ee-lntgJ_JlK2w" genericsValue="T" base_Element="_occ4wak6Ee-lntgJ_JlK2w"/>
  <UMLLabProfile:Reference xmi:id="_ocet8Kk6Ee-lntgJ_JlK2w" base_Element="_oceG4Kk6Ee-lntgJ_JlK2w"/>
  <UMLLabProfile:Generics xmi:id="_ocgjIak6Ee-lntgJ_JlK2w" genericsValue="Integer" base_Element="_ocf8FKk6Ee-lntgJ_JlK2w"/>
  <UMLLabProfile:Generics xmi:id="_ockNgKk6Ee-lntgJ_JlK2w" genericsValue="Double" base_Element="_ocjmcKk6Ee-lntgJ_JlK2w"/>
  <UMLLabProfile:Generics xmi:id="_ocmCsKk6Ee-lntgJ_JlK2w" genericsValue="Double,ReliabilityRow" base_Element="_oclboKk6Ee-lntgJ_JlK2w"/>
  <UMLLabProfile:Reference xmi:id="_ocoe8ak6Ee-lntgJ_JlK2w" base_Element="_ocoe8Kk6Ee-lntgJ_JlK2w"/>
  <UMLLabProfile:Reference xmi:id="_ocptEKk6Ee-lntgJ_JlK2w" base_Element="_ocpGAKk6Ee-lntgJ_JlK2w"/>
  <UMLLabProfile:Generics xmi:id="_oc6y0Kk6Ee-lntgJ_JlK2w" genericsValue="Activation,Row&lt;Activation>" base_Element="_oc6LwKk6Ee-lntgJ_JlK2w"/>
  <UMLLabProfile:Generics xmi:id="_oc8A8Kk6Ee-lntgJ_JlK2w" genericsValue="T" base_Element="_oc7Z4ak6Ee-lntgJ_JlK2w"/>
  <UMLLabProfile:Reference xmi:id="_oc9PEKk6Ee-lntgJ_JlK2w" base_Element="_oc8oAKk6Ee-lntgJ_JlK2w"/>
  <UMLLabProfile:Reference xmi:id="_oc-dMKk6Ee-lntgJ_JlK2w" base_Element="_oc92IKk6Ee-lntgJ_JlK2w"/>
  <UMLLabProfile:Reference xmi:id="_oc_EQKk6Ee-lntgJ_JlK2w" base_Element="_oc-dMak6Ee-lntgJ_JlK2w"/>
  <UMLLabProfile:Reference xmi:id="_odFx8Kk6Ee-lntgJ_JlK2w" base_Element="_odFK4Kk6Ee-lntgJ_JlK2w"/>
  <UMLLabProfile:Reference xmi:id="_odGZAKk6Ee-lntgJ_JlK2w" base_Element="_odFx8ak6Ee-lntgJ_JlK2w"/>
  <UMLLabProfile:Reference xmi:id="_odHAEak6Ee-lntgJ_JlK2w" base_Element="_odHAEKk6Ee-lntgJ_JlK2w"/>
  <UMLLabProfile:Reference xmi:id="_odHnIak6Ee-lntgJ_JlK2w" base_Element="_odHnIKk6Ee-lntgJ_JlK2w"/>
  <UMLLabProfile:Reference xmi:id="_odIOMKk6Ee-lntgJ_JlK2w" base_Element="_odHnIqk6Ee-lntgJ_JlK2w"/>
  <UMLLabProfile:Reference xmi:id="_odNGsKk6Ee-lntgJ_JlK2w" base_Element="_odMfoKk6Ee-lntgJ_JlK2w"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_odNtwKk6Ee-lntgJ_JlK2w" base_Element="_odNGsak6Ee-lntgJ_JlK2w"/>
  <UMLLabProfile:Annotations xmi:id="_odNtwak6Ee-lntgJ_JlK2w" base_Element="_odNGsak6Ee-lntgJ_JlK2w">
    <annotations xmi:id="_odNtwqk6Ee-lntgJ_JlK2w" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_odOU0qk6Ee-lntgJ_JlK2w" base_Element="_odOU0Kk6Ee-lntgJ_JlK2w"/>
  <UMLLabProfile:Annotations xmi:id="_odOU06k6Ee-lntgJ_JlK2w" base_Element="_odOU0Kk6Ee-lntgJ_JlK2w">
    <annotations xmi:id="_odOU1Kk6Ee-lntgJ_JlK2w" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_odO74ak6Ee-lntgJ_JlK2w" base_Element="_odO74Kk6Ee-lntgJ_JlK2w"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_odPi8Kk6Ee-lntgJ_JlK2w" base_Element="_odO74qk6Ee-lntgJ_JlK2w"/>
  <UMLLabProfile:Annotations xmi:id="_odQKAKk6Ee-lntgJ_JlK2w" base_Element="_odO74qk6Ee-lntgJ_JlK2w">
    <annotations xmi:id="_odQKAak6Ee-lntgJ_JlK2w" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_odQxEKk6Ee-lntgJ_JlK2w" base_Element="_odQKAqk6Ee-lntgJ_JlK2w"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_odQxE6k6Ee-lntgJ_JlK2w" base_Element="_odQxEak6Ee-lntgJ_JlK2w"/>
  <UMLLabProfile:Annotations xmi:id="_odQxFKk6Ee-lntgJ_JlK2w" base_Element="_odQxEak6Ee-lntgJ_JlK2w">
    <annotations xmi:id="_odQxFak6Ee-lntgJ_JlK2w" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_odRYIak6Ee-lntgJ_JlK2w" base_Element="_odRYIKk6Ee-lntgJ_JlK2w"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_odR_MKk6Ee-lntgJ_JlK2w" base_Element="_odRYIqk6Ee-lntgJ_JlK2w"/>
  <UMLLabProfile:Annotations xmi:id="_odR_Mak6Ee-lntgJ_JlK2w" base_Element="_odRYIqk6Ee-lntgJ_JlK2w">
    <annotations xmi:id="_odR_Mqk6Ee-lntgJ_JlK2w" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_odSmQKk6Ee-lntgJ_JlK2w" base_Element="_odR_M6k6Ee-lntgJ_JlK2w"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_odTNUKk6Ee-lntgJ_JlK2w" base_Element="_odSmQak6Ee-lntgJ_JlK2w"/>
  <UMLLabProfile:Annotations xmi:id="_odTNUak6Ee-lntgJ_JlK2w" base_Element="_odSmQak6Ee-lntgJ_JlK2w">
    <annotations xmi:id="_odTNUqk6Ee-lntgJ_JlK2w" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_odT0YKk6Ee-lntgJ_JlK2w" base_Element="_odTNU6k6Ee-lntgJ_JlK2w"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_odT0Y6k6Ee-lntgJ_JlK2w" base_Element="_odT0Yak6Ee-lntgJ_JlK2w"/>
  <UMLLabProfile:Annotations xmi:id="_odT0ZKk6Ee-lntgJ_JlK2w" base_Element="_odT0Yak6Ee-lntgJ_JlK2w">
    <annotations xmi:id="_odT0Zak6Ee-lntgJ_JlK2w" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_odcXRak6Ee-lntgJ_JlK2w" base_Element="_odcXQ6k6Ee-lntgJ_JlK2w"/>
  <UMLLabProfile:Annotations xmi:id="_odcXRqk6Ee-lntgJ_JlK2w" base_Element="_odcXQ6k6Ee-lntgJ_JlK2w">
    <annotations xmi:id="_odc-UKk6Ee-lntgJ_JlK2w" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_odc-U6k6Ee-lntgJ_JlK2w" base_Element="_odc-Uak6Ee-lntgJ_JlK2w"/>
  <UMLLabProfile:Annotations xmi:id="_odc-VKk6Ee-lntgJ_JlK2w" base_Element="_odc-Uak6Ee-lntgJ_JlK2w">
    <annotations xmi:id="_odc-Vak6Ee-lntgJ_JlK2w" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_oddlYak6Ee-lntgJ_JlK2w" base_Element="_oddlYKk6Ee-lntgJ_JlK2w"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_odeMcqk6Ee-lntgJ_JlK2w" base_Element="_odeMcKk6Ee-lntgJ_JlK2w"/>
  <UMLLabProfile:Annotations xmi:id="_odeMc6k6Ee-lntgJ_JlK2w" base_Element="_odeMcKk6Ee-lntgJ_JlK2w">
    <annotations xmi:id="_odeMdKk6Ee-lntgJ_JlK2w" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_odezgKk6Ee-lntgJ_JlK2w" base_Element="_odeMdak6Ee-lntgJ_JlK2w"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_odfakKk6Ee-lntgJ_JlK2w" base_Element="_odezgak6Ee-lntgJ_JlK2w"/>
  <UMLLabProfile:Annotations xmi:id="_odfakak6Ee-lntgJ_JlK2w" base_Element="_odezgak6Ee-lntgJ_JlK2w">
    <annotations xmi:id="_odfakqk6Ee-lntgJ_JlK2w" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_odgosKk6Ee-lntgJ_JlK2w" base_Element="_odgBoKk6Ee-lntgJ_JlK2w"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_odhPwKk6Ee-lntgJ_JlK2w" base_Element="_odgosak6Ee-lntgJ_JlK2w"/>
  <UMLLabProfile:Annotations xmi:id="_odhPwak6Ee-lntgJ_JlK2w" base_Element="_odgosak6Ee-lntgJ_JlK2w">
    <annotations xmi:id="_odhPwqk6Ee-lntgJ_JlK2w" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_odid4Kk6Ee-lntgJ_JlK2w" base_Element="_odh20Kk6Ee-lntgJ_JlK2w"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_odjE8Kk6Ee-lntgJ_JlK2w" base_Element="_odid4ak6Ee-lntgJ_JlK2w"/>
  <UMLLabProfile:Annotations xmi:id="_odjE8ak6Ee-lntgJ_JlK2w" base_Element="_odid4ak6Ee-lntgJ_JlK2w">
    <annotations xmi:id="_odjE8qk6Ee-lntgJ_JlK2w" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_odjsAqk6Ee-lntgJ_JlK2w" base_Element="_odjsAKk6Ee-lntgJ_JlK2w"/>
  <UMLLabProfile:Annotations xmi:id="_odjsA6k6Ee-lntgJ_JlK2w" base_Element="_odjsAKk6Ee-lntgJ_JlK2w">
    <annotations xmi:id="_odjsBKk6Ee-lntgJ_JlK2w" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_odkTEqk6Ee-lntgJ_JlK2w" base_Element="_odkTEKk6Ee-lntgJ_JlK2w"/>
  <UMLLabProfile:Annotations xmi:id="_odkTE6k6Ee-lntgJ_JlK2w" base_Element="_odkTEKk6Ee-lntgJ_JlK2w">
    <annotations xmi:id="_odkTFKk6Ee-lntgJ_JlK2w" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_odkTF6k6Ee-lntgJ_JlK2w" base_Element="_odkTFak6Ee-lntgJ_JlK2w"/>
  <UMLLabProfile:Annotations xmi:id="_odk6IKk6Ee-lntgJ_JlK2w" base_Element="_odkTFak6Ee-lntgJ_JlK2w">
    <annotations xmi:id="_odk6Iak6Ee-lntgJ_JlK2w" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_odlhMak6Ee-lntgJ_JlK2w" base_Element="_odlhMKk6Ee-lntgJ_JlK2w"/>
  <UMLLabProfile:Reference xmi:id="_odmIQKk6Ee-lntgJ_JlK2w" base_Element="_odlhMqk6Ee-lntgJ_JlK2w"/>
  <UMLLabProfile:Reference xmi:id="_odurIKk6Ee-lntgJ_JlK2w" base_Element="_oduEEKk6Ee-lntgJ_JlK2w"/>
  <UMLLabProfile:Reference xmi:id="_odvSMKk6Ee-lntgJ_JlK2w" base_Element="_odurIak6Ee-lntgJ_JlK2w"/>
  <UMLLabProfile:Reference xmi:id="_odvSMqk6Ee-lntgJ_JlK2w" base_Element="_odvSMak6Ee-lntgJ_JlK2w"/>
  <UMLLabProfile:Reference xmi:id="_odv5Qak6Ee-lntgJ_JlK2w" base_Element="_odv5QKk6Ee-lntgJ_JlK2w"/>
  <UMLLabProfile:Reference xmi:id="_odxucKk6Ee-lntgJ_JlK2w" base_Element="_odxHYKk6Ee-lntgJ_JlK2w"/>
  <UMLLabProfile:Generics xmi:id="_oeCNIKk6Ee-lntgJ_JlK2w" genericsValue="T, E" base_Element="_oeBmEKk6Ee-lntgJ_JlK2w"/>
  <UMLLabProfile:Reference xmi:id="_oeDbQKk6Ee-lntgJ_JlK2w" base_Element="_oeC0Mak6Ee-lntgJ_JlK2w"/>
  <UMLLabProfile:Generics xmi:id="_oeECUKk6Ee-lntgJ_JlK2w" genericsValue="Activation" base_Element="_oeDbQak6Ee-lntgJ_JlK2w"/>
  <UMLLabProfile:Generics xmi:id="_oeFQcKk6Ee-lntgJ_JlK2w" genericsValue="Edge" base_Element="_oeEpYak6Ee-lntgJ_JlK2w"/>
  <UMLLabProfile:Generics xmi:id="_oeFQc6k6Ee-lntgJ_JlK2w" genericsValue="String" base_Element="_oeFQcqk6Ee-lntgJ_JlK2w"/>
  <UMLLabProfile:Generics xmi:id="_oeF3gqk6Ee-lntgJ_JlK2w" genericsValue="String" base_Element="_oeF3gak6Ee-lntgJ_JlK2w"/>
  <UMLLabProfile:Generics xmi:id="_oeGekqk6Ee-lntgJ_JlK2w" genericsValue="ScheduleTime" base_Element="_oeGekak6Ee-lntgJ_JlK2w"/>
  <UMLLabProfile:Generics xmi:id="_oeITwKk6Ee-lntgJ_JlK2w" genericsValue="String" base_Element="_oeHssKk6Ee-lntgJ_JlK2w"/>
  <UMLLabProfile:Generics xmi:id="_oeKI8Kk6Ee-lntgJ_JlK2w" genericsValue="Edge" base_Element="_oeJh4qk6Ee-lntgJ_JlK2w"/>
  <UMLLabProfile:Generics xmi:id="_oeKwAKk6Ee-lntgJ_JlK2w" genericsValue="String" base_Element="_oeJh46k6Ee-lntgJ_JlK2w"/>
  <UMLLabProfile:Generics xmi:id="_oeLXEKk6Ee-lntgJ_JlK2w" genericsValue="String" base_Element="_oeKwA6k6Ee-lntgJ_JlK2w"/>
  <UMLLabProfile:Generics xmi:id="_oeL-IKk6Ee-lntgJ_JlK2w" genericsValue="String" base_Element="_oeLXEqk6Ee-lntgJ_JlK2w"/>
  <UMLLabProfile:Generics xmi:id="_oeNMQKk6Ee-lntgJ_JlK2w" genericsValue="Activation" base_Element="_oeMlMKk6Ee-lntgJ_JlK2w"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_oeOaY6k6Ee-lntgJ_JlK2w" base_Element="_oeOaYKk6Ee-lntgJ_JlK2w"/>
  <UMLLabProfile:Generics xmi:id="_oePBcKk6Ee-lntgJ_JlK2w" genericsValue="Node" base_Element="_oeOaYak6Ee-lntgJ_JlK2w"/>
  <UMLLabProfile:Annotations xmi:id="_oePBcak6Ee-lntgJ_JlK2w" base_Element="_oeOaYKk6Ee-lntgJ_JlK2w">
    <annotations xmi:id="_oePBcqk6Ee-lntgJ_JlK2w" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_oeQPkKk6Ee-lntgJ_JlK2w" genericsValue="T" base_Element="_oePogKk6Ee-lntgJ_JlK2w"/>
  <UMLLabProfile:Reference xmi:id="_oeQ2oKk6Ee-lntgJ_JlK2w" base_Element="_oeQPkak6Ee-lntgJ_JlK2w"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_oeRdsKk6Ee-lntgJ_JlK2w" base_Element="_oeQ2oak6Ee-lntgJ_JlK2w"/>
  <UMLLabProfile:Annotations xmi:id="_oeRdsak6Ee-lntgJ_JlK2w" base_Element="_oeQ2oak6Ee-lntgJ_JlK2w">
    <annotations xmi:id="_oeRdsqk6Ee-lntgJ_JlK2w" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_oeSEwak6Ee-lntgJ_JlK2w" genericsValue="String" base_Element="_oeSEwKk6Ee-lntgJ_JlK2w"/>
  <UMLLabProfile:Generics xmi:id="_oeSr0ak6Ee-lntgJ_JlK2w" genericsValue="Edge" base_Element="_oeSr0Kk6Ee-lntgJ_JlK2w"/>
  <UMLLabProfile:Generics xmi:id="_oeUhAKk6Ee-lntgJ_JlK2w" genericsValue="Flow" base_Element="_oeT58Kk6Ee-lntgJ_JlK2w"/>
  <UMLLabProfile:Generics xmi:id="_oeWWMak6Ee-lntgJ_JlK2w" genericsValue="Node" base_Element="_oeWWMKk6Ee-lntgJ_JlK2w"/>
  <UMLLabProfile:Generics xmi:id="_oeW9Qak6Ee-lntgJ_JlK2w" genericsValue="Integer" base_Element="_oeW9QKk6Ee-lntgJ_JlK2w"/>
  <UMLLabProfile:Reference xmi:id="_oeaAkKk6Ee-lntgJ_JlK2w" base_Element="_oeZZgKk6Ee-lntgJ_JlK2w"/>
  <UMLLabProfile:Generics xmi:id="_oedD4Kk6Ee-lntgJ_JlK2w" genericsValue="T" base_Element="_oecc0Kk6Ee-lntgJ_JlK2w"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_oeh8YKk6Ee-lntgJ_JlK2w" base_Element="_oedD4ak6Ee-lntgJ_JlK2w"/>
  <UMLLabProfile:Annotations xmi:id="_oeh8Yak6Ee-lntgJ_JlK2w" base_Element="_oedD4ak6Ee-lntgJ_JlK2w">
    <annotations xmi:id="_oeh8Yqk6Ee-lntgJ_JlK2w" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_oeijcak6Ee-lntgJ_JlK2w" genericsValue="T" base_Element="_oeijcKk6Ee-lntgJ_JlK2w"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_oejKhKk6Ee-lntgJ_JlK2w" base_Element="_oejKgKk6Ee-lntgJ_JlK2w"/>
  <UMLLabProfile:Annotations xmi:id="_oejxkKk6Ee-lntgJ_JlK2w" base_Element="_oejKgKk6Ee-lntgJ_JlK2w">
    <annotations xmi:id="_oejxkak6Ee-lntgJ_JlK2w" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_oekYoKk6Ee-lntgJ_JlK2w" genericsValue="Node" base_Element="_oejxkqk6Ee-lntgJ_JlK2w"/>
  <UMLLabProfile:Generics xmi:id="_oelmwKk6Ee-lntgJ_JlK2w" genericsValue="T" base_Element="_oek_sKk6Ee-lntgJ_JlK2w"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_oemN06k6Ee-lntgJ_JlK2w" base_Element="_oelmwak6Ee-lntgJ_JlK2w"/>
  <UMLLabProfile:Annotations xmi:id="_oemN1Kk6Ee-lntgJ_JlK2w" base_Element="_oelmwak6Ee-lntgJ_JlK2w">
    <annotations xmi:id="_oemN1ak6Ee-lntgJ_JlK2w" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_oenb8ak6Ee-lntgJ_JlK2w" genericsValue="Node" base_Element="_oem046k6Ee-lntgJ_JlK2w"/>
  <UMLLabProfile:Array xmi:id="_oeoDBKk6Ee-lntgJ_JlK2w" base_Element="_oeoDAKk6Ee-lntgJ_JlK2w"/>
  <UMLLabProfile:Generics xmi:id="_oeoqEKk6Ee-lntgJ_JlK2w" genericsValue="Node" base_Element="_oeoDAak6Ee-lntgJ_JlK2w"/>
  <UMLLabProfile:Reference xmi:id="_oep4MKk6Ee-lntgJ_JlK2w" base_Element="_oepRIKk6Ee-lntgJ_JlK2w"/>
  <UMLLabProfile:Generics xmi:id="_oertYKk6Ee-lntgJ_JlK2w" genericsValue="T" base_Element="_oerGUak6Ee-lntgJ_JlK2w"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_oes7gKk6Ee-lntgJ_JlK2w" base_Element="_oesUcKk6Ee-lntgJ_JlK2w"/>
  <UMLLabProfile:Annotations xmi:id="_oes7gak6Ee-lntgJ_JlK2w" base_Element="_oesUcKk6Ee-lntgJ_JlK2w">
    <annotations xmi:id="_oes7gqk6Ee-lntgJ_JlK2w" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_oeuJoKk6Ee-lntgJ_JlK2w" base_Element="_oetikKk6Ee-lntgJ_JlK2w"/>
  <UMLLabProfile:Reference xmi:id="_oeybEKk6Ee-lntgJ_JlK2w" base_Element="_oex0AKk6Ee-lntgJ_JlK2w"/>
  <UMLLabProfile:Generics xmi:id="_oe3TkKk6Ee-lntgJ_JlK2w" genericsValue="T" base_Element="_oe2FcKk6Ee-lntgJ_JlK2w"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_oe5Iwak6Ee-lntgJ_JlK2w" base_Element="_oe4hsKk6Ee-lntgJ_JlK2w"/>
  <UMLLabProfile:Annotations xmi:id="_oe5v0Kk6Ee-lntgJ_JlK2w" base_Element="_oe4hsKk6Ee-lntgJ_JlK2w">
    <annotations xmi:id="_oe5v0ak6Ee-lntgJ_JlK2w" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_oe8MEKk6Ee-lntgJ_JlK2w" genericsValue="Integer" base_Element="_oe7lAak6Ee-lntgJ_JlK2w"/>
  <UMLLabProfile:Generics xmi:id="_oe8zIKk6Ee-lntgJ_JlK2w" genericsValue="Node" base_Element="_oe7lAqk6Ee-lntgJ_JlK2w"/>
  <UMLLabProfile:Generics xmi:id="_oe9aMqk6Ee-lntgJ_JlK2w" genericsValue="Integer" base_Element="_oe9aMKk6Ee-lntgJ_JlK2w"/>
  <UMLLabProfile:Generics xmi:id="_oe-BQak6Ee-lntgJ_JlK2w" genericsValue="Node" base_Element="_oe9aMak6Ee-lntgJ_JlK2w"/>
  <UMLLabProfile:Generics xmi:id="_ofC5wKk6Ee-lntgJ_JlK2w" genericsValue="T" base_Element="_ofCSsak6Ee-lntgJ_JlK2w"/>
  <UMLLabProfile:Generics xmi:id="_ofF9Eak6Ee-lntgJ_JlK2w" genericsValue="T" base_Element="_ofFWAak6Ee-lntgJ_JlK2w"/>
  <UMLLabProfile:Generics xmi:id="_ofHLMKk6Ee-lntgJ_JlK2w" genericsValue="T" base_Element="_ofGkIak6Ee-lntgJ_JlK2w"/>
  <UMLLabProfile:Generics xmi:id="_ofHLMak6Ee-lntgJ_JlK2w" genericsValue="T" base_Element="_ofGkIqk6Ee-lntgJ_JlK2w"/>
  <UMLLabProfile:Generics xmi:id="_ofJAYKk6Ee-lntgJ_JlK2w" genericsValue="E" base_Element="_ofIZVak6Ee-lntgJ_JlK2w"/>
  <UMLLabProfile:Reference xmi:id="_ofKOgKk6Ee-lntgJ_JlK2w" base_Element="_ofJncKk6Ee-lntgJ_JlK2w"/>
  <UMLLabProfile:Reference xmi:id="_ofK1kak6Ee-lntgJ_JlK2w" base_Element="_ofK1kKk6Ee-lntgJ_JlK2w"/>
  <UMLLabProfile:TypeParameterDeclaration xmi:id="_ofMDsqk6Ee-lntgJ_JlK2w" typeParameterDeclarationValue="T extends VisualizationObject" base_Operation="_ofMDsKk6Ee-lntgJ_JlK2w"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ofMDs6k6Ee-lntgJ_JlK2w" base_Element="_ofMDsKk6Ee-lntgJ_JlK2w"/>
  <UMLLabProfile:Reference xmi:id="_ofSxYKk6Ee-lntgJ_JlK2w" base_Element="_ofSKUKk6Ee-lntgJ_JlK2w"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ofVNoqk6Ee-lntgJ_JlK2w" base_Element="_ofUmkKk6Ee-lntgJ_JlK2w"/>
  <UMLLabProfile:Generics xmi:id="_ofV0sKk6Ee-lntgJ_JlK2w" genericsValue="Node" base_Element="_ofVNoKk6Ee-lntgJ_JlK2w"/>
  <UMLLabProfile:Annotations xmi:id="_ofV0sak6Ee-lntgJ_JlK2w" base_Element="_ofUmkKk6Ee-lntgJ_JlK2w">
    <annotations xmi:id="_ofV0sqk6Ee-lntgJ_JlK2w" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_ofgz0Kk6Ee-lntgJ_JlK2w" base_Element="_ofgMwKk6Ee-lntgJ_JlK2w"/>
  <UMLLabProfile:Generics xmi:id="_ofu2QKk6Ee-lntgJ_JlK2w" genericsValue="String" base_Element="_ofuPMKk6Ee-lntgJ_JlK2w"/>
  <UMLLabProfile:Generics xmi:id="_ofvdUKk6Ee-lntgJ_JlK2w" genericsValue="Edge" base_Element="_ofu2Qak6Ee-lntgJ_JlK2w"/>
  <UMLLabProfile:Generics xmi:id="_ofygoKk6Ee-lntgJ_JlK2w" genericsValue="ScheduleTime" base_Element="_ofwEYKk6Ee-lntgJ_JlK2w"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_of1j8Kk6Ee-lntgJ_JlK2w" base_Element="_of084Kk6Ee-lntgJ_JlK2w"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_of2LAKk6Ee-lntgJ_JlK2w" base_Element="_of1j8ak6Ee-lntgJ_JlK2w"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_of2LAqk6Ee-lntgJ_JlK2w" base_Element="_of2LAak6Ee-lntgJ_JlK2w"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_of3ZIak6Ee-lntgJ_JlK2w" base_Element="_of3ZIKk6Ee-lntgJ_JlK2w"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_of4AMKk6Ee-lntgJ_JlK2w" base_Element="_of3ZIqk6Ee-lntgJ_JlK2w"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_of5OUKk6Ee-lntgJ_JlK2w" base_Element="_of4nQqk6Ee-lntgJ_JlK2w"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_of5OUqk6Ee-lntgJ_JlK2w" base_Element="_of5OUak6Ee-lntgJ_JlK2w"/>
  <UMLLabProfile:Generics xmi:id="_of6ccKk6Ee-lntgJ_JlK2w" genericsValue="ChannelSet" base_Element="_of5OU6k6Ee-lntgJ_JlK2w"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_of6ccak6Ee-lntgJ_JlK2w" base_Element="_of5OU6k6Ee-lntgJ_JlK2w"/>
  <UMLLabProfile:Generics xmi:id="_of8RoKk6Ee-lntgJ_JlK2w" genericsValue="Edge" base_Element="_of7qkak6Ee-lntgJ_JlK2w"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_of8Roak6Ee-lntgJ_JlK2w" base_Element="_of7qkak6Ee-lntgJ_JlK2w"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_of9fwKk6Ee-lntgJ_JlK2w" base_Element="_of84sKk6Ee-lntgJ_JlK2w"/>
  <UMLLabProfile:Generics xmi:id="_of-G0Kk6Ee-lntgJ_JlK2w" genericsValue="String" base_Element="_of9fwak6Ee-lntgJ_JlK2w"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_of-G0ak6Ee-lntgJ_JlK2w" base_Element="_of9fwak6Ee-lntgJ_JlK2w"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_of_U8Kk6Ee-lntgJ_JlK2w" base_Element="_of-t4Kk6Ee-lntgJ_JlK2w"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_of_U8qk6Ee-lntgJ_JlK2w" base_Element="_of_U8ak6Ee-lntgJ_JlK2w"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ogBxMKk6Ee-lntgJ_JlK2w" base_Element="_ogAjEKk6Ee-lntgJ_JlK2w"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ogCYQak6Ee-lntgJ_JlK2w" base_Element="_ogCYQKk6Ee-lntgJ_JlK2w"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ogC_UKk6Ee-lntgJ_JlK2w" base_Element="_ogCYQqk6Ee-lntgJ_JlK2w"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ogC_Uqk6Ee-lntgJ_JlK2w" base_Element="_ogC_Uak6Ee-lntgJ_JlK2w"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ogFbkak6Ee-lntgJ_JlK2w" base_Element="_ogFbkKk6Ee-lntgJ_JlK2w"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ogGptKk6Ee-lntgJ_JlK2w" base_Element="_ogGpsqk6Ee-lntgJ_JlK2w"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ogHQwak6Ee-lntgJ_JlK2w" base_Element="_ogHQwKk6Ee-lntgJ_JlK2w"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ogH30Kk6Ee-lntgJ_JlK2w" base_Element="_ogHQwqk6Ee-lntgJ_JlK2w"/>
  <UMLLabProfile:Generics xmi:id="_ogIe4Kk6Ee-lntgJ_JlK2w" genericsValue="Node" base_Element="_ogH30ak6Ee-lntgJ_JlK2w"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ogIe4ak6Ee-lntgJ_JlK2w" base_Element="_ogH30ak6Ee-lntgJ_JlK2w"/>
  <UMLLabProfile:Generics xmi:id="_ogJF8ak6Ee-lntgJ_JlK2w" genericsValue="Integer" base_Element="_ogJF8Kk6Ee-lntgJ_JlK2w"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ogJtAKk6Ee-lntgJ_JlK2w" base_Element="_ogJF8Kk6Ee-lntgJ_JlK2w"/>
  <UMLLabProfile:Generics xmi:id="_ogKUEKk6Ee-lntgJ_JlK2w" genericsValue="Edge" base_Element="_ogJtAak6Ee-lntgJ_JlK2w"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ogKUEak6Ee-lntgJ_JlK2w" base_Element="_ogJtAak6Ee-lntgJ_JlK2w"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ogK7IKk6Ee-lntgJ_JlK2w" base_Element="_ogKUEqk6Ee-lntgJ_JlK2w"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ogK7Iqk6Ee-lntgJ_JlK2w" base_Element="_ogK7Iak6Ee-lntgJ_JlK2w"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ogMJRqk6Ee-lntgJ_JlK2w" base_Element="_ogMJRak6Ee-lntgJ_JlK2w"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ogMwUak6Ee-lntgJ_JlK2w" base_Element="_ogMwUKk6Ee-lntgJ_JlK2w"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ogMwU6k6Ee-lntgJ_JlK2w" base_Element="_ogMwUqk6Ee-lntgJ_JlK2w"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ogMwVak6Ee-lntgJ_JlK2w" base_Element="_ogMwVKk6Ee-lntgJ_JlK2w"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ogNXYKk6Ee-lntgJ_JlK2w" base_Element="_ogMwVqk6Ee-lntgJ_JlK2w"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ogNXYqk6Ee-lntgJ_JlK2w" base_Element="_ogNXYak6Ee-lntgJ_JlK2w"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ogN-cak6Ee-lntgJ_JlK2w" base_Element="_ogN-cKk6Ee-lntgJ_JlK2w"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ogOlgak6Ee-lntgJ_JlK2w" base_Element="_ogOlgKk6Ee-lntgJ_JlK2w"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ogPMkak6Ee-lntgJ_JlK2w" base_Element="_ogPMkKk6Ee-lntgJ_JlK2w"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ogPzoqk6Ee-lntgJ_JlK2w" base_Element="_ogPzoak6Ee-lntgJ_JlK2w"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ogQasak6Ee-lntgJ_JlK2w" base_Element="_ogQasKk6Ee-lntgJ_JlK2w"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ogQatKk6Ee-lntgJ_JlK2w" base_Element="_ogQasqk6Ee-lntgJ_JlK2w"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ogRo0Kk6Ee-lntgJ_JlK2w" base_Element="_ogRBwqk6Ee-lntgJ_JlK2w"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ogRo0qk6Ee-lntgJ_JlK2w" base_Element="_ogRo0ak6Ee-lntgJ_JlK2w"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ogSP4Kk6Ee-lntgJ_JlK2w" base_Element="_ogRo1Kk6Ee-lntgJ_JlK2w"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ogS28Kk6Ee-lntgJ_JlK2w" base_Element="_ogSP4ak6Ee-lntgJ_JlK2w"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ogS28qk6Ee-lntgJ_JlK2w" base_Element="_ogS28ak6Ee-lntgJ_JlK2w"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ogTeAKk6Ee-lntgJ_JlK2w" base_Element="_ogS286k6Ee-lntgJ_JlK2w"/>
  <UMLLabProfile:Generics xmi:id="_ogTeAqk6Ee-lntgJ_JlK2w" genericsValue="String, Integer" base_Element="_ogTeAak6Ee-lntgJ_JlK2w"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ogTeA6k6Ee-lntgJ_JlK2w" base_Element="_ogTeAak6Ee-lntgJ_JlK2w"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ogUFFak6Ee-lntgJ_JlK2w" base_Element="_ogUFFKk6Ee-lntgJ_JlK2w"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ogUsIak6Ee-lntgJ_JlK2w" base_Element="_ogUsIKk6Ee-lntgJ_JlK2w"/>
  <UMLLabProfile:Generics xmi:id="_ogVTMqk6Ee-lntgJ_JlK2w" genericsValue="Edge" base_Element="_ogVTMak6Ee-lntgJ_JlK2w"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ogWhU6k6Ee-lntgJ_JlK2w" base_Element="_ogWhUqk6Ee-lntgJ_JlK2w"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ogXIYak6Ee-lntgJ_JlK2w" base_Element="_ogXIYKk6Ee-lntgJ_JlK2w"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ogXvcKk6Ee-lntgJ_JlK2w" base_Element="_ogXIYqk6Ee-lntgJ_JlK2w"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ogXvdak6Ee-lntgJ_JlK2w" base_Element="_ogXvcak6Ee-lntgJ_JlK2w"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ogXvd6k6Ee-lntgJ_JlK2w" base_Element="_ogXvdqk6Ee-lntgJ_JlK2w"/>
  <UMLLabProfile:Generics xmi:id="_ogYWgKk6Ee-lntgJ_JlK2w" genericsValue="Activation" base_Element="_ogXveKk6Ee-lntgJ_JlK2w"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ogYWgak6Ee-lntgJ_JlK2w" base_Element="_ogXveKk6Ee-lntgJ_JlK2w"/>
  <UMLLabProfile:Generics xmi:id="_ogY9kKk6Ee-lntgJ_JlK2w" genericsValue="String, Integer" base_Element="_ogYWgqk6Ee-lntgJ_JlK2w"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ogY9kak6Ee-lntgJ_JlK2w" base_Element="_ogYWgqk6Ee-lntgJ_JlK2w"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ogY9k6k6Ee-lntgJ_JlK2w" base_Element="_ogY9kqk6Ee-lntgJ_JlK2w"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ogdPAKk6Ee-lntgJ_JlK2w" base_Element="_ogcn8qk6Ee-lntgJ_JlK2w"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ogdPAqk6Ee-lntgJ_JlK2w" base_Element="_ogdPAak6Ee-lntgJ_JlK2w"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ogedIKk6Ee-lntgJ_JlK2w" base_Element="_ogdPA6k6Ee-lntgJ_JlK2w"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ogedIqk6Ee-lntgJ_JlK2w" base_Element="_ogedIak6Ee-lntgJ_JlK2w"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ogfEMak6Ee-lntgJ_JlK2w" base_Element="_ogfEMKk6Ee-lntgJ_JlK2w"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ogfrQKk6Ee-lntgJ_JlK2w" base_Element="_ogfEMqk6Ee-lntgJ_JlK2w"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ogfrQqk6Ee-lntgJ_JlK2w" base_Element="_ogfrQak6Ee-lntgJ_JlK2w"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_oggSUak6Ee-lntgJ_JlK2w" base_Element="_oggSUKk6Ee-lntgJ_JlK2w"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ogg5YKk6Ee-lntgJ_JlK2w" base_Element="_oggSUqk6Ee-lntgJ_JlK2w"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ogg5Yqk6Ee-lntgJ_JlK2w" base_Element="_ogg5Yak6Ee-lntgJ_JlK2w"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_oghgcKk6Ee-lntgJ_JlK2w" base_Element="_ogg5Y6k6Ee-lntgJ_JlK2w"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_oghgcqk6Ee-lntgJ_JlK2w" base_Element="_oghgcak6Ee-lntgJ_JlK2w"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_oghgdKk6Ee-lntgJ_JlK2w" base_Element="_oghgc6k6Ee-lntgJ_JlK2w"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ogj8sKk6Ee-lntgJ_JlK2w" base_Element="_ogjVo6k6Ee-lntgJ_JlK2w"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ogj8sqk6Ee-lntgJ_JlK2w" base_Element="_ogj8sak6Ee-lntgJ_JlK2w"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ogkjwKk6Ee-lntgJ_JlK2w" base_Element="_ogj8s6k6Ee-lntgJ_JlK2w"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_oglx4Kk6Ee-lntgJ_JlK2w" base_Element="_oglK0ak6Ee-lntgJ_JlK2w"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_oglx46k6Ee-lntgJ_JlK2w" base_Element="_oglx4ak6Ee-lntgJ_JlK2w"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ogmY8qk6Ee-lntgJ_JlK2w" base_Element="_ogmY8Kk6Ee-lntgJ_JlK2w"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ogmY9Kk6Ee-lntgJ_JlK2w" base_Element="_ogmY86k6Ee-lntgJ_JlK2w"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ogoOIak6Ee-lntgJ_JlK2w" base_Element="_ogoOIKk6Ee-lntgJ_JlK2w"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ogoOI6k6Ee-lntgJ_JlK2w" base_Element="_ogoOIqk6Ee-lntgJ_JlK2w"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ogpcQKk6Ee-lntgJ_JlK2w" base_Element="_ogo1Mqk6Ee-lntgJ_JlK2w"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ogpcQqk6Ee-lntgJ_JlK2w" base_Element="_ogpcQak6Ee-lntgJ_JlK2w"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ogrRdKk6Ee-lntgJ_JlK2w" base_Element="_ogrRc6k6Ee-lntgJ_JlK2w"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ogr4hKk6Ee-lntgJ_JlK2w" base_Element="_ogr4g6k6Ee-lntgJ_JlK2w"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ogsfkKk6Ee-lntgJ_JlK2w" base_Element="_ogr4hak6Ee-lntgJ_JlK2w"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ogsfkqk6Ee-lntgJ_JlK2w" base_Element="_ogsfkak6Ee-lntgJ_JlK2w"/>
  <UMLLabProfile:Generics xmi:id="_ogtGoak6Ee-lntgJ_JlK2w" genericsValue="Integer" base_Element="_ogtGoKk6Ee-lntgJ_JlK2w"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ogtGoqk6Ee-lntgJ_JlK2w" base_Element="_ogtGoKk6Ee-lntgJ_JlK2w"/>
  <UMLLabProfile:Generics xmi:id="_ogttsKk6Ee-lntgJ_JlK2w" genericsValue="SchedulableObject" base_Element="_ogtGo6k6Ee-lntgJ_JlK2w"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ogvi4Kk6Ee-lntgJ_JlK2w" base_Element="_ogu706k6Ee-lntgJ_JlK2w"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ogvi4qk6Ee-lntgJ_JlK2w" base_Element="_ogvi4ak6Ee-lntgJ_JlK2w"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ogwJ8ak6Ee-lntgJ_JlK2w" base_Element="_ogvi46k6Ee-lntgJ_JlK2w"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ogwJ86k6Ee-lntgJ_JlK2w" base_Element="_ogwJ8qk6Ee-lntgJ_JlK2w"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ogwxAKk6Ee-lntgJ_JlK2w" base_Element="_ogwJ9Kk6Ee-lntgJ_JlK2w"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ogwxAqk6Ee-lntgJ_JlK2w" base_Element="_ogwxAak6Ee-lntgJ_JlK2w"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ogxYEKk6Ee-lntgJ_JlK2w" base_Element="_ogwxA6k6Ee-lntgJ_JlK2w"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ogxYEqk6Ee-lntgJ_JlK2w" base_Element="_ogxYEak6Ee-lntgJ_JlK2w"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ogz0Uak6Ee-lntgJ_JlK2w" base_Element="_ogz0UKk6Ee-lntgJ_JlK2w"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ogz0U6k6Ee-lntgJ_JlK2w" base_Element="_ogz0Uqk6Ee-lntgJ_JlK2w"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_og0bYKk6Ee-lntgJ_JlK2w" base_Element="_ogz0VKk6Ee-lntgJ_JlK2w"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_og0bYqk6Ee-lntgJ_JlK2w" base_Element="_og0bYak6Ee-lntgJ_JlK2w"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_og1CcKk6Ee-lntgJ_JlK2w" base_Element="_og0bY6k6Ee-lntgJ_JlK2w"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_og1Ccqk6Ee-lntgJ_JlK2w" base_Element="_og1Ccak6Ee-lntgJ_JlK2w"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_og1pgKk6Ee-lntgJ_JlK2w" base_Element="_og1Cc6k6Ee-lntgJ_JlK2w"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_og1pg6k6Ee-lntgJ_JlK2w" base_Element="_og1pgak6Ee-lntgJ_JlK2w"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_og2QkKk6Ee-lntgJ_JlK2w" base_Element="_og1phKk6Ee-lntgJ_JlK2w"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_og2Qkqk6Ee-lntgJ_JlK2w" base_Element="_og2Qkak6Ee-lntgJ_JlK2w"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_og23oak6Ee-lntgJ_JlK2w" base_Element="_og23oKk6Ee-lntgJ_JlK2w"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_og3esak6Ee-lntgJ_JlK2w" base_Element="_og3esKk6Ee-lntgJ_JlK2w"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_og3es6k6Ee-lntgJ_JlK2w" base_Element="_og3esqk6Ee-lntgJ_JlK2w"/>
  <UMLLabProfile:Array xmi:id="_og4Fw6k6Ee-lntgJ_JlK2w" dimensions="2" base_Element="_og4Fwak6Ee-lntgJ_JlK2w"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_og4s0Kk6Ee-lntgJ_JlK2w" base_Element="_og4Fwak6Ee-lntgJ_JlK2w"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_og568ak6Ee-lntgJ_JlK2w" base_Element="_og568Kk6Ee-lntgJ_JlK2w"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_og5686k6Ee-lntgJ_JlK2w" base_Element="_og568qk6Ee-lntgJ_JlK2w"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_og569ak6Ee-lntgJ_JlK2w" base_Element="_og569Kk6Ee-lntgJ_JlK2w"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_og6iAKk6Ee-lntgJ_JlK2w" base_Element="_og569qk6Ee-lntgJ_JlK2w"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_og6iAqk6Ee-lntgJ_JlK2w" base_Element="_og6iAak6Ee-lntgJ_JlK2w"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_og6iBKk6Ee-lntgJ_JlK2w" base_Element="_og6iA6k6Ee-lntgJ_JlK2w"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_og7JEKk6Ee-lntgJ_JlK2w" base_Element="_og6iBak6Ee-lntgJ_JlK2w"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_og7JEqk6Ee-lntgJ_JlK2w" base_Element="_og7JEak6Ee-lntgJ_JlK2w"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_og7JFKk6Ee-lntgJ_JlK2w" base_Element="_og7JE6k6Ee-lntgJ_JlK2w"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_og7JFqk6Ee-lntgJ_JlK2w" base_Element="_og7JFak6Ee-lntgJ_JlK2w"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_og7wIak6Ee-lntgJ_JlK2w" base_Element="_og7wIKk6Ee-lntgJ_JlK2w"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_og7wI6k6Ee-lntgJ_JlK2w" base_Element="_og7wIqk6Ee-lntgJ_JlK2w"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_og8XMKk6Ee-lntgJ_JlK2w" base_Element="_og7wJKk6Ee-lntgJ_JlK2w"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_og8XMqk6Ee-lntgJ_JlK2w" base_Element="_og8XMak6Ee-lntgJ_JlK2w"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_og8-QKk6Ee-lntgJ_JlK2w" base_Element="_og8XM6k6Ee-lntgJ_JlK2w"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_og8-Qqk6Ee-lntgJ_JlK2w" base_Element="_og8-Qak6Ee-lntgJ_JlK2w"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_og9lUKk6Ee-lntgJ_JlK2w" base_Element="_og8-Q6k6Ee-lntgJ_JlK2w"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_og9lUqk6Ee-lntgJ_JlK2w" base_Element="_og9lUak6Ee-lntgJ_JlK2w"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ohABkqk6Ee-lntgJ_JlK2w" base_Element="_ohABkKk6Ee-lntgJ_JlK2w"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ohAooqk6Ee-lntgJ_JlK2w" base_Element="_ohAooak6Ee-lntgJ_JlK2w"/>
  <UMLLabProfile:Generics xmi:id="_ohBPsKk6Ee-lntgJ_JlK2w" genericsValue="InstructionParameters" base_Element="_ohAoo6k6Ee-lntgJ_JlK2w"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ohBPsak6Ee-lntgJ_JlK2w" base_Element="_ohAoo6k6Ee-lntgJ_JlK2w"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ohBPs6k6Ee-lntgJ_JlK2w" base_Element="_ohBPsqk6Ee-lntgJ_JlK2w"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ohCd0Kk6Ee-lntgJ_JlK2w" base_Element="_ohB2wKk6Ee-lntgJ_JlK2w"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ohCd0qk6Ee-lntgJ_JlK2w" base_Element="_ohCd0ak6Ee-lntgJ_JlK2w"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ohDE4Kk6Ee-lntgJ_JlK2w" base_Element="_ohCd06k6Ee-lntgJ_JlK2w"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ohDr8Kk6Ee-lntgJ_JlK2w" base_Element="_ohDE4ak6Ee-lntgJ_JlK2w"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ohDr8qk6Ee-lntgJ_JlK2w" base_Element="_ohDr8ak6Ee-lntgJ_JlK2w"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ohETAKk6Ee-lntgJ_JlK2w" base_Element="_ohDr86k6Ee-lntgJ_JlK2w">
    <associatedElement xmi:type="uml:Operation" xmi:id="_ohETAak6Ee-lntgJ_JlK2w" name="getNumChannels" method="_oimkE6k6Ee-lntgJ_JlK2w">
      <ownedParameter xmi:id="_ohETAqk6Ee-lntgJ_JlK2w" direction="return">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
      </ownedParameter>
    </associatedElement>
  </UMLLabProfile:LegacyStyledElement>
  <UMLLabProfile:Annotations xmi:id="_ohE6EKk6Ee-lntgJ_JlK2w" base_Element="_ohETAak6Ee-lntgJ_JlK2w">
    <annotations xmi:id="_ohE6Eak6Ee-lntgJ_JlK2w" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ohFhIKk6Ee-lntgJ_JlK2w" base_Element="_ohE6Eqk6Ee-lntgJ_JlK2w"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ohFhI6k6Ee-lntgJ_JlK2w" base_Element="_ohFhIak6Ee-lntgJ_JlK2w"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ohGvQ6k6Ee-lntgJ_JlK2w" base_Element="_ohGvQqk6Ee-lntgJ_JlK2w"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ohGvRak6Ee-lntgJ_JlK2w" base_Element="_ohGvRKk6Ee-lntgJ_JlK2w"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ohHWUKk6Ee-lntgJ_JlK2w" base_Element="_ohGvRqk6Ee-lntgJ_JlK2w"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ohHWU6k6Ee-lntgJ_JlK2w" base_Element="_ohHWUqk6Ee-lntgJ_JlK2w"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ohHWVak6Ee-lntgJ_JlK2w" base_Element="_ohHWVKk6Ee-lntgJ_JlK2w"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ohJLhak6Ee-lntgJ_JlK2w" base_Element="_ohJLg6k6Ee-lntgJ_JlK2w"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ohJyk6k6Ee-lntgJ_JlK2w" base_Element="_ohJykak6Ee-lntgJ_JlK2w"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ohKZoqk6Ee-lntgJ_JlK2w" base_Element="_ohKZoak6Ee-lntgJ_JlK2w"/>
  <UMLLabProfile:Generics xmi:id="_ohLAsKk6Ee-lntgJ_JlK2w" genericsValue="String" base_Element="_ohKZo6k6Ee-lntgJ_JlK2w"/>
  <UMLLabProfile:Generics xmi:id="_ohLnwKk6Ee-lntgJ_JlK2w" genericsValue="String" base_Element="_ohLAsqk6Ee-lntgJ_JlK2w"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ohOEAKk6Ee-lntgJ_JlK2w" base_Element="_ohNc8Kk6Ee-lntgJ_JlK2w"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ohOEAqk6Ee-lntgJ_JlK2w" base_Element="_ohOEAak6Ee-lntgJ_JlK2w"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ohOrEak6Ee-lntgJ_JlK2w" base_Element="_ohOrEKk6Ee-lntgJ_JlK2w"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ohOrE6k6Ee-lntgJ_JlK2w" base_Element="_ohOrEqk6Ee-lntgJ_JlK2w"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ohP5Mak6Ee-lntgJ_JlK2w" base_Element="_ohP5MKk6Ee-lntgJ_JlK2w"/>
  <uml:OpaqueBehavior xmi:id="_oimkE6k6Ee-lntgJ_JlK2w" name="getNumChannels" specification="_ohETAak6Ee-lntgJ_JlK2w">
    <ownedParameter xmi:id="_oimkFKk6Ee-lntgJ_JlK2w" direction="return">
      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
    </ownedParameter>
    <language>java</language>
    <body>return numChannels;&#xD;
  </body>
  </uml:OpaqueBehavior>
  <UMLLabProfile:Reference xmi:id="_oj2hQKk6Ee-lntgJ_JlK2w" base_Element="_oj16MKk6Ee-lntgJ_JlK2w"/>
  <UMLLabProfile:Reference xmi:id="_oj3IUqk6Ee-lntgJ_JlK2w" base_Element="_oj3IUKk6Ee-lntgJ_JlK2w"/>
  <UMLLabProfile:Reference xmi:id="_oj4WcKk6Ee-lntgJ_JlK2w" base_Element="_oj3vYKk6Ee-lntgJ_JlK2w"/>
  <UMLLabProfile:Reference xmi:id="_oj5kkKk6Ee-lntgJ_JlK2w" base_Element="_oj4Wcak6Ee-lntgJ_JlK2w"/>
  <UMLLabProfile:Reference xmi:id="_oj6ysKk6Ee-lntgJ_JlK2w" base_Element="_oj6LoKk6Ee-lntgJ_JlK2w"/>
  <UMLLabProfile:Reference xmi:id="_oj7Zwqk6Ee-lntgJ_JlK2w" base_Element="_oj7ZwKk6Ee-lntgJ_JlK2w"/>
  <UMLLabProfile:Reference xmi:id="_oj8A0qk6Ee-lntgJ_JlK2w" base_Element="_oj8A0Kk6Ee-lntgJ_JlK2w"/>
  <UMLLabProfile:Reference xmi:id="_oj8n4Kk6Ee-lntgJ_JlK2w" base_Element="_oj8A06k6Ee-lntgJ_JlK2w"/>
  <UMLLabProfile:Reference xmi:id="_oj9O8Kk6Ee-lntgJ_JlK2w" base_Element="_oj8n4ak6Ee-lntgJ_JlK2w"/>
  <UMLLabProfile:Reference xmi:id="_oj9O86k6Ee-lntgJ_JlK2w" base_Element="_oj9O8ak6Ee-lntgJ_JlK2w"/>
  <UMLLabProfile:Reference xmi:id="_oj92AKk6Ee-lntgJ_JlK2w" base_Element="_oj9O9Kk6Ee-lntgJ_JlK2w"/>
  <UMLLabProfile:Reference xmi:id="_oj92A6k6Ee-lntgJ_JlK2w" base_Element="_oj92Aak6Ee-lntgJ_JlK2w"/>
  <UMLLabProfile:Reference xmi:id="_oj-dEKk6Ee-lntgJ_JlK2w" base_Element="_oj92BKk6Ee-lntgJ_JlK2w"/>
  <UMLLabProfile:Reference xmi:id="_oj-dE6k6Ee-lntgJ_JlK2w" base_Element="_oj-dEak6Ee-lntgJ_JlK2w"/>
  <UMLLabProfile:Reference xmi:id="_oj_EIqk6Ee-lntgJ_JlK2w" base_Element="_oj_EIKk6Ee-lntgJ_JlK2w"/>
  <UMLLabProfile:Reference xmi:id="_oj_rMKk6Ee-lntgJ_JlK2w" base_Element="_oj_EI6k6Ee-lntgJ_JlK2w"/>
  <UMLLabProfile:Reference xmi:id="_oj_rM6k6Ee-lntgJ_JlK2w" base_Element="_oj_rMak6Ee-lntgJ_JlK2w"/>
  <UMLLabProfile:Reference xmi:id="_okASQKk6Ee-lntgJ_JlK2w" base_Element="_oj_rNKk6Ee-lntgJ_JlK2w"/>
  <UMLLabProfile:Reference xmi:id="_okASQ6k6Ee-lntgJ_JlK2w" base_Element="_okASQak6Ee-lntgJ_JlK2w"/>
  <UMLLabProfile:Reference xmi:id="_okA5UKk6Ee-lntgJ_JlK2w" base_Element="_okASRKk6Ee-lntgJ_JlK2w"/>
  <UMLLabProfile:Reference xmi:id="_okA5U6k6Ee-lntgJ_JlK2w" base_Element="_okA5Uak6Ee-lntgJ_JlK2w"/>
  <UMLLabProfile:Reference xmi:id="_okBgYKk6Ee-lntgJ_JlK2w" base_Element="_okA5VKk6Ee-lntgJ_JlK2w"/>
  <UMLLabProfile:Reference xmi:id="_okBgY6k6Ee-lntgJ_JlK2w" base_Element="_okBgYak6Ee-lntgJ_JlK2w"/>
  <UMLLabProfile:Reference xmi:id="_okCHcKk6Ee-lntgJ_JlK2w" base_Element="_okBgZKk6Ee-lntgJ_JlK2w"/>
  <UMLLabProfile:Reference xmi:id="_okCHc6k6Ee-lntgJ_JlK2w" base_Element="_okCHcak6Ee-lntgJ_JlK2w"/>
  <UMLLabProfile:Reference xmi:id="_okCugKk6Ee-lntgJ_JlK2w" base_Element="_okCHdKk6Ee-lntgJ_JlK2w"/>
  <UMLLabProfile:Reference xmi:id="_okDVkKk6Ee-lntgJ_JlK2w" base_Element="_okCugak6Ee-lntgJ_JlK2w"/>
  <UMLLabProfile:Reference xmi:id="_okD8oKk6Ee-lntgJ_JlK2w" base_Element="_okDVkak6Ee-lntgJ_JlK2w"/>
  <UMLLabProfile:Reference xmi:id="_okFKwKk6Ee-lntgJ_JlK2w" base_Element="_okD8oak6Ee-lntgJ_JlK2w"/>
  <UMLLabProfile:Reference xmi:id="_okFx0Kk6Ee-lntgJ_JlK2w" base_Element="_okFKwak6Ee-lntgJ_JlK2w"/>
  <UMLLabProfile:Reference xmi:id="_okGY4Kk6Ee-lntgJ_JlK2w" base_Element="_okFx0ak6Ee-lntgJ_JlK2w"/>
  <UMLLabProfile:Reference xmi:id="_okG_8Kk6Ee-lntgJ_JlK2w" base_Element="_okGY4ak6Ee-lntgJ_JlK2w"/>
  <UMLLabProfile:Reference xmi:id="_okHnAKk6Ee-lntgJ_JlK2w" base_Element="_okG_8ak6Ee-lntgJ_JlK2w"/>
  <UMLLabProfile:Reference xmi:id="_okIOEKk6Ee-lntgJ_JlK2w" base_Element="_okHnAak6Ee-lntgJ_JlK2w"/>
  <UMLLabProfile:Reference xmi:id="_okIOE6k6Ee-lntgJ_JlK2w" base_Element="_okIOEak6Ee-lntgJ_JlK2w"/>
  <UMLLabProfile:Reference xmi:id="_okI1Iqk6Ee-lntgJ_JlK2w" base_Element="_okI1IKk6Ee-lntgJ_JlK2w"/>
  <UMLLabProfile:Reference xmi:id="_okJcMKk6Ee-lntgJ_JlK2w" base_Element="_okI1I6k6Ee-lntgJ_JlK2w"/>
  <UMLLabProfile:Reference xmi:id="_okKDQKk6Ee-lntgJ_JlK2w" base_Element="_okJcMak6Ee-lntgJ_JlK2w"/>
  <UMLLabProfile:Reference xmi:id="_okKqUKk6Ee-lntgJ_JlK2w" base_Element="_okKDQak6Ee-lntgJ_JlK2w"/>
  <UMLLabProfile:Reference xmi:id="_okLRYKk6Ee-lntgJ_JlK2w" base_Element="_okKqUak6Ee-lntgJ_JlK2w"/>
  <UMLLabProfile:Reference xmi:id="_okLRY6k6Ee-lntgJ_JlK2w" base_Element="_okLRYak6Ee-lntgJ_JlK2w"/>
  <UMLLabProfile:Reference xmi:id="_okL4cqk6Ee-lntgJ_JlK2w" base_Element="_okL4cKk6Ee-lntgJ_JlK2w"/>
  <UMLLabProfile:Reference xmi:id="_okMfgKk6Ee-lntgJ_JlK2w" base_Element="_okL4c6k6Ee-lntgJ_JlK2w"/>
  <UMLLabProfile:Reference xmi:id="_okNGkqk6Ee-lntgJ_JlK2w" base_Element="_okNGkKk6Ee-lntgJ_JlK2w"/>
  <UMLLabProfile:Reference xmi:id="_okNtoqk6Ee-lntgJ_JlK2w" base_Element="_okNtoKk6Ee-lntgJ_JlK2w"/>
  <UMLLabProfile:Reference xmi:id="_okOUsKk6Ee-lntgJ_JlK2w" base_Element="_okNto6k6Ee-lntgJ_JlK2w"/>
  <UMLLabProfile:Reference xmi:id="_okO7wKk6Ee-lntgJ_JlK2w" base_Element="_okOUsak6Ee-lntgJ_JlK2w"/>
  <UMLLabProfile:Reference xmi:id="_okO7w6k6Ee-lntgJ_JlK2w" base_Element="_okO7wak6Ee-lntgJ_JlK2w"/>
  <UMLLabProfile:Reference xmi:id="_okPi0Kk6Ee-lntgJ_JlK2w" base_Element="_okO7xKk6Ee-lntgJ_JlK2w"/>
  <UMLLabProfile:Reference xmi:id="_okQJ4Kk6Ee-lntgJ_JlK2w" base_Element="_okPi0ak6Ee-lntgJ_JlK2w"/>
  <UMLLabProfile:Reference xmi:id="_okQJ46k6Ee-lntgJ_JlK2w" base_Element="_okQJ4ak6Ee-lntgJ_JlK2w"/>
  <UMLLabProfile:Reference xmi:id="_okQw8qk6Ee-lntgJ_JlK2w" base_Element="_okQw8Kk6Ee-lntgJ_JlK2w"/>
  <UMLLabProfile:Reference xmi:id="_okRYAKk6Ee-lntgJ_JlK2w" base_Element="_okQw86k6Ee-lntgJ_JlK2w"/>
  <UMLLabProfile:Reference xmi:id="_okR_EKk6Ee-lntgJ_JlK2w" base_Element="_okRYAak6Ee-lntgJ_JlK2w"/>
  <UMLLabProfile:Reference xmi:id="_okSmIKk6Ee-lntgJ_JlK2w" base_Element="_okR_Eak6Ee-lntgJ_JlK2w"/>
  <UMLLabProfile:Reference xmi:id="_okSmI6k6Ee-lntgJ_JlK2w" base_Element="_okSmIak6Ee-lntgJ_JlK2w"/>
  <UMLLabProfile:Reference xmi:id="_okTNMqk6Ee-lntgJ_JlK2w" base_Element="_okTNMKk6Ee-lntgJ_JlK2w"/>
  <UMLLabProfile:Reference xmi:id="_okT0Qqk6Ee-lntgJ_JlK2w" base_Element="_okT0QKk6Ee-lntgJ_JlK2w"/>
  <UMLLabProfile:Reference xmi:id="_okUbUKk6Ee-lntgJ_JlK2w" base_Element="_okT0Q6k6Ee-lntgJ_JlK2w"/>
  <UMLLabProfile:Reference xmi:id="_okVCYKk6Ee-lntgJ_JlK2w" base_Element="_okUbUak6Ee-lntgJ_JlK2w"/>
  <UMLLabProfile:Reference xmi:id="_okVCY6k6Ee-lntgJ_JlK2w" base_Element="_okVCYak6Ee-lntgJ_JlK2w"/>
  <UMLLabProfile:Reference xmi:id="_okVpcqk6Ee-lntgJ_JlK2w" base_Element="_okVpcKk6Ee-lntgJ_JlK2w"/>
  <UMLLabProfile:Reference xmi:id="_okWQgqk6Ee-lntgJ_JlK2w" base_Element="_okWQgKk6Ee-lntgJ_JlK2w"/>
  <UMLLabProfile:Reference xmi:id="_okW3kKk6Ee-lntgJ_JlK2w" base_Element="_okWQg6k6Ee-lntgJ_JlK2w"/>
  <UMLLabProfile:Reference xmi:id="_okXeoKk6Ee-lntgJ_JlK2w" base_Element="_okW3kak6Ee-lntgJ_JlK2w"/>
  <UMLLabProfile:Reference xmi:id="_okYFsKk6Ee-lntgJ_JlK2w" base_Element="_okXeoak6Ee-lntgJ_JlK2w"/>
  <UMLLabProfile:Reference xmi:id="_okYswKk6Ee-lntgJ_JlK2w" base_Element="_okYFsak6Ee-lntgJ_JlK2w"/>
  <UMLLabProfile:Reference xmi:id="_okYsw6k6Ee-lntgJ_JlK2w" base_Element="_okYswak6Ee-lntgJ_JlK2w"/>
  <UMLLabProfile:Reference xmi:id="_okZT0qk6Ee-lntgJ_JlK2w" base_Element="_okZT0Kk6Ee-lntgJ_JlK2w"/>
  <UMLLabProfile:Reference xmi:id="_okZ64Kk6Ee-lntgJ_JlK2w" base_Element="_okZT06k6Ee-lntgJ_JlK2w"/>
  <UMLLabProfile:Reference xmi:id="_okah8Kk6Ee-lntgJ_JlK2w" base_Element="_okZ64ak6Ee-lntgJ_JlK2w"/>
  <UMLLabProfile:Reference xmi:id="_okbJAKk6Ee-lntgJ_JlK2w" base_Element="_okah8ak6Ee-lntgJ_JlK2w"/>
  <UMLLabProfile:Reference xmi:id="_okbJA6k6Ee-lntgJ_JlK2w" base_Element="_okbJAak6Ee-lntgJ_JlK2w"/>
  <UMLLabProfile:Reference xmi:id="_okcXIKk6Ee-lntgJ_JlK2w" base_Element="_okbwEKk6Ee-lntgJ_JlK2w"/>
  <UMLLabProfile:Reference xmi:id="_okcXI6k6Ee-lntgJ_JlK2w" base_Element="_okcXIak6Ee-lntgJ_JlK2w"/>
  <UMLLabProfile:Reference xmi:id="_okc-Mqk6Ee-lntgJ_JlK2w" base_Element="_okc-MKk6Ee-lntgJ_JlK2w"/>
  <UMLLabProfile:Reference xmi:id="_okdlQqk6Ee-lntgJ_JlK2w" base_Element="_okdlQKk6Ee-lntgJ_JlK2w"/>
  <UMLLabProfile:Patch xmi:id="_p84JsKk6Ee-lntgJ_JlK2w" base_Element="_nz2AoKk6Ee-lntgJ_JlK2w" patchText="@@ -351,26 +351,24 @@&#xA; um EdgeState&#xA;-()&#xA;  %7B%0D%0A%09%09RELEAS&#xA;" conflicting="false"/>
  <UMLLabProfile:Patch xmi:id="_p87NAKk6Ee-lntgJ_JlK2w" base_Element="_n1Gk4Kk6Ee-lntgJ_JlK2w" patchText="@@ -254,22 +254,25 @@&#xA; MISS%22;%0D%0A&#xA;-public&#xA;+  private&#xA;  static &#xA;" conflicting="false"/>
  <UMLLabProfile:Patch xmi:id="_p89CMKk6Ee-lntgJ_JlK2w" base_Element="_n5sJ8Kk6Ee-lntgJ_JlK2w" patchText="@@ -113,18 +113,16 @@&#xA; eChoices&#xA;-()&#xA;  %7B%0D%0A%09   &#xA;" conflicting="false"/>
  <UMLLabProfile:Patch xmi:id="_p8-QUKk6Ee-lntgJ_JlK2w" base_Element="_n6FLgKk6Ee-lntgJ_JlK2w" patchText="@@ -145,26 +145,24 @@&#xA; ystemChoices&#xA;-()&#xA;  %7B%0D%0A    SOUR&#xA;@@ -284,18 +284,16 @@&#xA; dChoices&#xA;-()&#xA;  %7B%0D%0A    &#xA;" conflicting="false"/>
  <UMLLabProfile:Patch xmi:id="_p9B6sKk6Ee-lntgJ_JlK2w" base_Element="_n6xIAKk6Ee-lntgJ_JlK2w" patchText="@@ -4237,22 +4237,25 @@&#xA; f, ra)%0D%0A&#xA;-public&#xA;+  private&#xA;  static &#xA;" conflicting="false"/>
</xmi:XMI>
